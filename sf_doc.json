{"Libraries":{"coroutine":{"methods":{"status":{"returns":["Either \"suspended\", \"running\", \"normal\" or \"dead\""],"realm":"shared","params":[{"name":"thread","description":"The coroutine"}],"class":"function","name":"status","description":" Returns the status of the coroutine."},"yield":{"returns":["Any values passed to the coroutine"],"realm":"shared","params":[{"name":"optional","description":"parameters that will be returned to the main thread"}],"class":"function","name":"yield","description":" Suspends the currently running coroutine. May not be called outside a coroutine."},"running":{"returns":["Currently running coroutine"],"realm":"shared","class":"function","name":"running","description":" Returns the coroutine that is currently running."},"wrap":{"returns":["A function that, when called, resumes the created coroutine. Any parameters to that function will be passed to the coroutine."],"realm":"shared","params":[{"name":"func","description":"Function of the coroutine"}],"class":"function","name":"wrap","description":" Creates a new coroutine."},"wait":{"realm":"shared","params":[{"name":"time","description":"Time in seconds to suspend the coroutine"}],"class":"function","name":"wait","description":" Suspends the coroutine for a number of seconds. Note that the coroutine will not resume automatically, but any attempts to resume the coroutine while it is waiting will not resume the coroutine and act as if the coroutine suspended itself immediately."},"create":{"returns":["coroutine"],"realm":"shared","params":[{"name":"func","description":"Function of the coroutine"}],"class":"function","name":"create","description":" Creates a new coroutine."},"resume":{"returns":["Any values the coroutine is returning to the main thread"],"realm":"shared","params":[{"name":"thread","description":"coroutine to resume"},{"name":"optional","description":"parameters that will be passed to the coroutine"}],"class":"function","name":"resume","description":" Resumes a suspended coroutine. Note that, in contrast to Lua's native coroutine.resume function, it will not run in protected mode and can throw an error."}},"fields":[],"libtbl":["coroutine_library"],"realm":"shared","tables":[],"class":"library","name":"coroutine","description":" Coroutine library"},"bass":{"methods":{"loadURL":{"realm":"client","params":[{"name":"path","description":"URL path to play from."},{"name":"flags","description":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},{"name":"callback","description":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name."}],"class":"function","name":"loadURL","description":" Loads a sound channel from an URL."},"loadFile":{"realm":"client","params":[{"name":"path","description":"File path to play from."},{"name":"flags","description":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},{"name":"callback","description":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name."}],"class":"function","name":"loadFile","description":" Loads a sound channel from a file."},"soundsLeft":{"returns":["The number of sounds left"],"realm":"client","class":"function","name":"soundsLeft","description":" Returns the number of sounds left that can be created"}},"fields":[],"libtbl":["bass_library"],"realm":"client","tables":[],"class":"library","name":"bass","description":" `bass` library is intended to be used only on client side. It's good for streaming local and remote sound files and playing them directly in player's \"2D\" context."},"net":{"methods":{"readVector":{"returns":["The vector that was read"],"realm":"shared","class":"function","name":"readVector","description":" Reads a vector from the net message"},"writeUInt":{"realm":"shared","params":[{"name":"t","description":"The integer to be written"},{"name":"n","description":"The amount of bits the integer consists of. Should not be greater than 32"}],"class":"function","name":"writeUInt","description":" Writes an unsigned integer to the net message"},"send":{"realm":"shared","params":[{"name":"target","description":"Optional target location to send the net message."},{"name":"unreliable","description":"Optional choose whether it's more important for the message to actually reach its destination (false) or reach it as fast as possible (true)."}],"class":"function","name":"send","description":" Send a net message from client->server, or server->client."},"readInt":{"returns":["The integer that was read"],"realm":"shared","params":[{"name":"n","description":"The amount of bits to read"}],"class":"function","name":"readInt","description":" Reads an integer from the net message"},"readString":{"returns":["The string that was read"],"realm":"shared","class":"function","name":"readString","description":" Reads a string from the net message"},"readMatrix":{"returns":["The matrix that was read"],"realm":"shared","class":"function","name":"readMatrix","description":" Reads a matrix from the net message"},"writeDouble":{"realm":"shared","params":[{"name":"t","description":"The double to be written"}],"class":"function","name":"writeDouble","description":" Writes a double to the net message"},"readTable":{"returns":["The object"],"realm":"shared","class":"function","name":"readTable","description":" Reads an object from a net message automatically typing it\n Will throw an error if invalid type is read. Make sure to pcall it"},"readBool":{"returns":["The boolean that was read."],"realm":"shared","class":"function","name":"readBool","description":" Reads a boolean from the net message"},"writeData":{"realm":"shared","params":[{"name":"t","description":"The string to be written"},{"name":"n","description":"How much of the string to write"}],"class":"function","name":"writeData","description":" Writes string containing null characters to the net message"},"readUInt":{"returns":["The unsigned integer that was read"],"realm":"shared","params":[{"name":"n","description":"The amount of bits to read"}],"class":"function","name":"readUInt","description":" Reads an unsigned integer from the net message"},"readData":{"returns":["The string that was read"],"realm":"shared","params":[{"name":"n","description":"How many characters are in the data"}],"class":"function","name":"readData","description":" Reads a string from the net message"},"writeTable":{"realm":"shared","params":[{"name":"v","description":"The object to write"}],"class":"function","name":"writeTable","description":" Writes a table to a net message automatically typing it."},"getStreamProgress":{"returns":["The progress ratio 0-1"],"realm":"shared","class":"function","name":"getStreamProgress","description":" Returns the progress of a running readStream"},"readDouble":{"returns":["The double that was read"],"realm":"shared","class":"function","name":"readDouble","description":" Reads a double from the net message"},"getBitsLeft":{"returns":["number of bits that can be sent"],"realm":"shared","class":"function","name":"getBitsLeft","description":" Returns available bandwidth in bits"},"writeString":{"realm":"shared","params":[{"name":"t","description":"The string to be written"}],"class":"function","name":"writeString","description":" Writes a string to the net message. Null characters will terminate the string."},"readBit":{"returns":["The bit that was read. (0 for false, 1 for true)"],"realm":"shared","class":"function","name":"readBit","description":" Reads a bit from the net message"},"writeEntity":{"realm":"shared","params":[{"name":"t","description":"The entity to be written"}],"class":"function","name":"writeEntity","description":" Writes an entity to the net message"},"writeInt":{"realm":"shared","params":[{"name":"t","description":"The integer to be written"},{"name":"n","description":"The amount of bits the integer consists of"}],"class":"function","name":"writeInt","description":" Writes an integer to the net message"},"writeFloat":{"realm":"shared","params":[{"name":"t","description":"The float to be written"}],"class":"function","name":"writeFloat","description":" Writes a float to the net message"},"writeVector":{"realm":"shared","params":[{"name":"t","description":"The vector to be written"}],"class":"function","name":"writeVector","description":" Writes an vector to the net message. Has significantly lower precision than writeFloat"},"readType":{"returns":["The object"],"realm":"shared","class":"function","name":"readType","description":" Reads an object from a net message automatically typing it\n Will throw an error if invalid type is read. Make sure to pcall it"},"start":{"realm":"shared","params":[{"name":"name","description":"The message name"}],"class":"function","name":"start","description":" Starts the net message"},"readAngle":{"returns":["The angle that was read"],"realm":"shared","class":"function","name":"readAngle","description":" Reads an angle from the net message"},"cancelStream":{"description":" Cancels a currently running readStream","class":"function","name":"cancelStream","realm":"shared"},"readFloat":{"returns":["The float that was read"],"realm":"shared","class":"function","name":"readFloat","description":" Reads a float from the net message"},"getBytesLeft":{"returns":["number of bytes that can be sent"],"realm":"shared","class":"function","name":"getBytesLeft","description":" Returns available bandwidth in bytes"},"receive":{"realm":"shared","params":[{"name":"name","description":"The name of the net message"},{"name":"func","description":"The callback or nil to remove callback. (len - length of the net message, ply - player that sent it or nil if clientside)"}],"class":"function","name":"receive","description":" Like glua net.Receive, adds a callback that is called when a net message with the matching name is received. If this happens, the net hook won't be called."},"readEntity":{"returns":["The entity that was read"],"realm":"shared","params":[{"name":"callback","description":"(Client only) optional callback to be ran whenever the entity becomes valid; returns nothing if this is used. The callback passes the entity if it succeeds or nil if it fails."}],"class":"function","name":"readEntity","description":" Reads a entity from the net message"},"readColor":{"returns":["The color that was read"],"realm":"shared","class":"function","name":"readColor","description":" Reads a color from the net message"},"writeAngle":{"realm":"shared","params":[{"name":"t","description":"The angle to be written"}],"class":"function","name":"writeAngle","description":" Writes an angle to the net message"},"writeStream":{"realm":"shared","params":[{"name":"str","description":"The string to be written"},{"name":"compress","description":"Compress the data. True by default"}],"class":"function","name":"writeStream","description":" Streams a large 20MB string."},"writeColor":{"realm":"shared","params":[{"name":"t","description":"The color to be written"}],"class":"function","name":"writeColor","description":" Writes an color to the net message"},"readStream":{"realm":"shared","params":[{"name":"cb","description":"Callback to run when the stream is finished. The first parameter in the callback is the data. Will be nil if transfer fails or is cancelled"}],"class":"function","name":"readStream","description":" Reads a large string stream from the net message."},"writeBit":{"realm":"shared","params":[{"name":"t","description":"The bit to be written. (0 for false, 1 (or anything) for true)"}],"class":"function","name":"writeBit","description":" Writes a bit to the net message"},"isStreaming":{"returns":["Boolean"],"realm":"shared","class":"function","name":"isStreaming","description":" Returns whether or not the library is currently reading data from a stream"},"writeType":{"realm":"shared","params":[{"name":"v","description":"The object to write"}],"class":"function","name":"writeType","description":" Writes an object to a net message automatically typing it"},"writeBool":{"realm":"shared","params":[{"name":"t","description":"The bit to be written. (boolean)"}],"class":"function","name":"writeBool","description":" Writes a bool to the net message"},"writeMatrix":{"realm":"shared","params":[{"name":"t","description":"The matrix to be written"}],"class":"function","name":"writeMatrix","description":" Writes an matrix to the net message"}},"fields":[],"libtbl":["net_library"],"realm":"shared","tables":[],"class":"library","name":"net","description":" Net message library. Used for sending data from the server to the client and back"},"material":{"methods":{"getFloat":{"returns":["The float value or nil if it doesn't exist"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"},{"name":"key","description":"The key to get the float from"}],"class":"function","name":"getFloat","description":" Returns a float keyvalue of a material"},"createFromImage":{"realm":"client","params":[{"name":"path","description":"The path to the image file"},{"name":"params","description":"The shader parameters to apply to the material. See https://wiki.facepunch.com/gmod/Material_Parameters"}],"class":"function","name":"createFromImage","description":" Creates a .jpg or .png material from file\n Can't be modified"},"create":{"realm":"client","params":[{"name":"shader","description":"The shader of the material. Must be one of"}],"class":"function","name":"create","description":" Creates a new blank material\n UnlitGeneric\n VertexLitGeneric\n Refract_DX90\n Water_DX90\n Sky_DX9\n gmodscreenspace\n Modulate_DX9"},"getMatrix":{"returns":["The matrix value or nil if it doesn't exist"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"},{"name":"key","description":"The key to get the matrix from"}],"class":"function","name":"getMatrix","description":" Returns a matrix keyvalue of a material"},"getVectorLinear":{"returns":["The vector value or nil if it doesn't exist"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"},{"name":"key","description":"The key to get the vector from"}],"class":"function","name":"getVectorLinear","description":" Returns a linear color-corrected vector keyvalue of a material"},"getKeyValues":{"returns":["The table of keyvalues"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"}],"class":"function","name":"getKeyValues","description":" Returns a table of keyvalues from a material"},"getColor":{"returns":["The color value"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"},{"name":"x","description":"The x coordinate of the pixel"},{"name":"y","description":"The y coordinate of the pixel"}],"class":"function","name":"getColor","description":" Returns a color pixel value of the $basetexture of a .png or .jpg material."},"getShader":{"returns":["The shader name of the material"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"}],"class":"function","name":"getShader","description":" Returns the shader name of a material"},"getInt":{"returns":["The int value or nil if it doesn't exist"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"},{"name":"key","description":"The key to get the int from"}],"class":"function","name":"getInt","description":" Returns an int keyvalue of a material"},"load":{"returns":["The material object. Can't be modified."],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"}],"class":"function","name":"load","description":" Loads a .vmt material or existing material. Throws an error if the material fails to load\n Existing created materials can be loaded with ! prepended to the name\n Can't be modified"},"getTexture":{"returns":["The texture's name"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"},{"name":"texture","description":"The texture key to get"}],"class":"function","name":"getTexture","description":" Gets a texture from a material"},"getString":{"returns":["The string value or nil if it doesn't exist"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"},{"name":"key","description":"The key to get the string from"}],"class":"function","name":"getString","description":" Returns a string keyvalue"},"getVector":{"returns":["The string id of the texture"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"},{"name":"key","description":"The key to get the vector from"}],"class":"function","name":"getVector","description":" Returns a vector keyvalue of a material"},"getName":{"returns":["The name of a material. If this material is user created, add ! to the beginning of this to use it with entity.setMaterial"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"}],"class":"function","name":"getName","description":" Returns a material's engine name"},"getWidth":{"returns":["The basetexture's width"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"}],"class":"function","name":"getWidth","description":" Returns the width of the member texture set for $basetexture of a material"},"getHeight":{"returns":["The basetexture's height"],"realm":"client","params":[{"name":"path","description":"The path of the material (don't include .vmt in the path)"}],"class":"function","name":"getHeight","description":" Returns the height of the member texture set for $basetexture of a material"}},"fields":[],"libtbl":["material_library"],"realm":"client","tables":[],"class":"library","name":"material","description":" `material` library is allows creating material objects which are used for controlling shaders in rendering."},"team":{"methods":{"getPlayers":{"returns":["Table of players"],"realm":"shared","params":[{"name":"ind","description":"Index of the team"}],"class":"function","name":"getPlayers","description":" Returns the table of players on a team"},"getScore":{"returns":["Number score of the team"],"realm":"shared","params":[{"name":"ind","description":"Index of the team"}],"class":"function","name":"getScore","description":" Returns the score of a team"},"getNumPlayers":{"returns":["number of players"],"realm":"shared","params":[{"name":"ind","description":"Index of the team"}],"class":"function","name":"getNumPlayers","description":" Returns number of players on a team"},"getName":{"returns":["String name of the team"],"realm":"shared","params":[{"name":"ind","description":"Index of the team"}],"class":"function","name":"getName","description":" Returns the name of a team"},"getJoinable":{"returns":["boolean"],"realm":"shared","params":[{"name":"ind","description":"Index of the team"}],"class":"function","name":"getJoinable","description":" Returns whether or not a team can be joined"},"exists":{"returns":["boolean"],"realm":"shared","params":[{"name":"ind","description":"Index of the team"}],"class":"function","name":"exists","description":" Returns whether or not the team exists"},"getNumDeaths":{"returns":["number of deaths"],"realm":"shared","params":[{"name":"ind","description":"Index of the team"}],"class":"function","name":"getNumDeaths","description":" Returns number of deaths of all players on a team"},"getAllTeams":{"returns":["table containing team information"],"realm":"shared","class":"function","name":"getAllTeams","description":" Returns a table containing team information"},"getNumFrags":{"returns":["number of frags"],"realm":"shared","params":[{"name":"ind","description":"Index of the team"}],"class":"function","name":"getNumFrags","description":" Returns number of frags of all players on a team"},"bestAutoJoinTeam":{"returns":["index of the best team to join"],"realm":"shared","class":"function","name":"bestAutoJoinTeam","description":" Returns team with least players"},"getColor":{"returns":["Color of the team"],"realm":"shared","params":[{"name":"ind","description":"Index of the team"}],"class":"function","name":"getColor","description":" Returns the color of a team"}},"fields":[],"libtbl":["team_library"],"realm":"shared","tables":[],"class":"library","name":"team","description":" Library for retreiving information about teams"},"http":{"methods":{"canRequest":{"description":" Checks if a new http request can be started","class":"function","name":"canRequest","realm":"shared"},"post":{"realm":"shared","params":[{"name":"url","description":"http target url"},{"name":"payload","description":"optional POST payload to be sent, can be both table and string. When table is used, the request body is encoded as application/x-www-form-urlencoded"},{"name":"callbackSuccess","description":"optional function to be called on request success, taking the arguments body (string), length (string), headers (table) and code (number)"},{"name":"callbackFail","description":"optional function to be called on request fail, taking the failing reason as an argument"},{"name":"headers","description":"optional POST headers to be sent"}],"class":"function","name":"post","description":" Runs a new http POST request"},"base64Encode":{"returns":["The converted data"],"realm":"shared","params":[{"name":"data","description":"The data to convert"}],"class":"function","name":"base64Encode","description":" Converts data into base64 format or nil if the string is 0 length"},"urlEncode":{"returns":["The converted data"],"realm":"shared","params":[{"name":"data","description":"The data to convert"}],"class":"function","name":"urlEncode","description":" Encodes illegal url characters to be legal"},"base64Decode":{"returns":["The converted data"],"realm":"shared","params":[{"name":"data","description":"The data to convert"}],"class":"function","name":"base64Decode","description":" Converts data from base64 format"},"get":{"realm":"shared","params":[{"name":"url","description":"http target url"},{"name":"callbackSuccess","description":"the function to be called on request success, taking the arguments body (string), length (number), headers (table) and code (number)"},{"name":"callbackFail","description":"the function to be called on request fail, taking the failing reason as an argument"},{"name":"headers","description":"GET headers to be sent"}],"class":"function","name":"get","description":" Runs a new http GET request"}},"fields":[],"libtbl":["http_library"],"realm":"shared","tables":[],"class":"library","name":"http","description":" Http library. Requests content from urls."},"file":{"methods":{"exists":{"returns":["True if exists, false if not, nil if error"],"realm":"client","params":[{"name":"path","description":"Filepath relative to data/sf_filedata/."}],"class":"function","name":"exists","description":" Checks if a file exists"},"find":{"returns":["Table of file names","Table of directory names"],"realm":"client","params":[{"name":"path","description":"The folder to enumerate, relative to data/sf_filedata/."},{"name":"sorting","description":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"}],"class":"function","name":"find","description":" Enumerates a directory"},"write":{"returns":["True if OK, nil if error"],"realm":"client","params":[{"name":"path","description":"Filepath relative to data/sf_filedata/."},{"name":"data","description":"The data to write"}],"class":"function","name":"write","description":" Writes to a file"},"append":{"realm":"client","params":[{"name":"path","description":"Filepath relative to data/sf_filedata/."},{"name":"data","description":"String that will be appended to the file."}],"class":"function","name":"append","description":" Appends a string to the end of a file"},"read":{"returns":["Contents, or nil if error"],"realm":"client","params":[{"name":"path","description":"Filepath relative to data/sf_filedata/."}],"class":"function","name":"read","description":" Reads a file from path"},"findInGame":{"returns":["Table of file names","Table of directory names"],"realm":"client","params":[{"name":"path","description":"The folder to enumerate, relative to garrysmod."},{"name":"sorting","description":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"}],"class":"function","name":"findInGame","description":" Enumerates a directory relative to gmod"},"open":{"returns":["File object or nil if it failed"],"realm":"client","params":[{"name":"path","description":"Filepath relative to data/sf_filedata/."},{"name":"mode","description":"The file mode to use. See lua manual for explaination"}],"class":"function","name":"open","description":" Opens and returns a file"},"delete":{"returns":["True if successful, nil if it wasn't found"],"realm":"client","params":[{"name":"path","description":"Filepath relative to data/sf_filedata/."}],"class":"function","name":"delete","description":" Deletes a file"},"createDir":{"realm":"client","params":[{"name":"path","description":"Filepath relative to data/sf_filedata/."}],"class":"function","name":"createDir","description":" Creates a directory"}},"fields":[],"libtbl":["file_library"],"realm":"client","tables":[],"class":"library","name":"file","description":" File functions. Allows modification of files."},"constraint":{"methods":{"rope":{"realm":"server","params":[{"name":"index","description":"Index of the rope constraint"},{"name":"e1","description":"The first entity"},{"name":"e2","description":"The second entity"},{"name":"bone1","description":"Number bone of the first entity"},{"name":"bone2","description":"Number bone of the second entity"},{"name":"v1","description":"Position on the first entity, in its local space coordinates"},{"name":"v2","description":"Position on the second entity, in its local space coordinates"},{"name":"length","description":"Length of the created rope"},{"name":"addlength","description":"Amount to add to the base length of the rope. Default = 0"},{"name":"force_lim","description":"Amount of force until it breaks, 0 = Unbreakable"},{"name":"width","description":"Width of the rope"},{"name":"material","description":"Material of the rope"},{"name":"rigid","description":"Whether the rope is rigid"}],"class":"function","name":"rope","description":" Creates a rope between two entities"},"ballsocket":{"realm":"server","params":[{"name":"e1","description":"The first entity"},{"name":"e2","description":"The second entity"},{"name":"bone1","description":"Number bone of the first entity"},{"name":"bone2","description":"Number bone of the second entity"},{"name":"pos","description":"Position of the joint, relative to the second entity"},{"name":"force_lim","description":"Amount of force until it breaks, 0 = Unbreakable"},{"name":"torque_lim","description":"Amount of torque until it breaks, 0 = Unbreakable"},{"name":"nocollide","description":"Bool whether or not to nocollide the two entities"}],"class":"function","name":"ballsocket","description":" Ballsocket two entities together. For more options, see constraint.ballsocketadv"},"setRopeLength":{"realm":"server","params":[{"name":"index","description":"Index of the rope constraint"},{"name":"e","description":"Entity that has the constraint"},{"name":"length","description":"New length of the constraint"}],"class":"function","name":"setRopeLength","description":" Sets the length of a rope attached to the entity"},"constraintsLeft":{"returns":["number of constraints able to be spawned"],"realm":"server","class":"function","name":"constraintsLeft","description":" Checks how many constraints can be spawned"},"setElasticLength":{"realm":"server","params":[{"name":"index","description":"Index of the elastic constraint"},{"name":"e","description":"Entity that has the constraint"},{"name":"length","description":"New length of the constraint"}],"class":"function","name":"setElasticLength","description":" Sets the length of an elastic attached to the entity"},"slider":{"realm":"server","params":[{"name":"e1","description":"The first entity"},{"name":"e2","description":"The second entity"},{"name":"bone1","description":"Number bone of the first entity"},{"name":"bone2","description":"Number bone of the second entity"},{"name":"v1","description":"Position on the first entity, in its local space coordinates"},{"name":"v2","description":"Position on the second entity, in its local space coordinates"},{"name":"width","description":"Width of the slider "}],"class":"function","name":"slider","description":" Sliders two entities"},"setConstraintClean":{"realm":"server","params":[{"name":"on","description":"Boolean whether the constraints should be cleaned or not"}],"class":"function","name":"setConstraintClean","description":" Sets whether the chip should remove created constraints when the chip is removed"},"ballsocketadv":{"realm":"server","params":[{"name":"e1","description":"The first entity"},{"name":"e2","description":"The second entity"},{"name":"bone1","description":"Number bone of the first entity"},{"name":"bone2","description":"Number bone of the second entity"},{"name":"v1","description":"Position on the first entity, in its local space coordinates"},{"name":"v2","description":"Position on the second entity, in its local space coordinates"},{"name":"force_lim","description":"Amount of force until it breaks, 0 = Unbreakable"},{"name":"torque_lim","description":"Amount of torque until it breaks, 0 = Unbreakable"},{"name":"minv","description":"Vector defining minimum rotation angle based on world axes"},{"name":"maxv","description":"Vector defining maximum rotation angle based on world axes"},{"name":"frictionv","description":"Vector defining rotational friction, local to the constraint"},{"name":"rotateonly","description":"If True, ballsocket will only affect the rotation allowing for free movement, otherwise it will limit both - rotation and movement"},{"name":"nocollide","description":"Bool whether or not to nocollide the two entities"}],"class":"function","name":"ballsocketadv","description":" Ballsocket two entities together with more options"},"breakAll":{"realm":"server","params":[{"name":"e","description":"Entity to remove the constraints from"}],"class":"function","name":"breakAll","description":" Breaks all constraints on an entity"},"breakType":{"realm":"server","params":[{"name":"e","description":"Entity to be affected"},{"name":"typename","description":"Name of the constraint type, ie. Weld, Elastic, NoCollide, etc."}],"class":"function","name":"breakType","description":" Breaks all constraints of a certain type on an entity"},"weld":{"realm":"server","params":[{"name":"e1","description":"The first entity"},{"name":"e2","description":"The second entity"},{"name":"bone1","description":"Number bone of the first entity"},{"name":"bone2","description":"Number bone of the second entity"},{"name":"force_lim","description":"Max force the weld can take before breaking"},{"name":"nocollide","description":"Bool whether or not to nocollide the two entities"}],"class":"function","name":"weld","description":" Welds two entities"},"nocollide":{"realm":"server","params":[{"name":"e1","description":"The first entity"},{"name":"e2","description":"The second entity"},{"name":"bone1","description":"Number bone of the first entity"},{"name":"bone2","description":"Number bone of the second entity"}],"class":"function","name":"nocollide","description":" Nocollides two entities"},"getTable":{"returns":["Table of entity constraints"],"realm":"server","params":[{"name":"ent","description":"The entity"}],"class":"function","name":"getTable","description":" Returns the table of constraints on an entity"},"axis":{"realm":"server","params":[{"name":"e1","description":"The first entity"},{"name":"e2","description":"The second entity"},{"name":"bone1","description":"Number bone of the first entity"},{"name":"bone2","description":"Number bone of the second entity"},{"name":"v1","description":"Position to center the axis, local to e1's space coordinates"},{"name":"v2","description":"The second position defining the axis, local to e2's space coordinates. The laxis may be specified instead which is local to e1's space coordinates"},{"name":"force_lim","description":"Amount of force until it breaks, 0 = Unbreakable"},{"name":"torque_lim","description":"Amount of torque until it breaks, 0 = Unbreakable"},{"name":"friction","description":"Friction of the constraint"},{"name":"nocollide","description":"Bool whether or not to nocollide the two entities"},{"name":"laxis","description":"Optional second position of the constraint, same as v2 but local to e1"}],"class":"function","name":"axis","description":" Axis two entities. v1 in e1's coordinates and v2 in e2's coodinates (or laxis in e1's coordinates again) define the axis"},"elastic":{"realm":"server","params":[{"name":"index","description":"Index of the elastic constraint"},{"name":"e1","description":"The first entity"},{"name":"e2","description":"The second entity"},{"name":"bone1","description":"Number bone of the first entity"},{"name":"bone2","description":"Number bone of the second entity"},{"name":"v1","description":"Position on the first entity, in its local space coordinates"},{"name":"v2","description":"Position on the second entity, in its local space coordinates"},{"name":"const","description":"Constant of the constraint. Default = 1000"},{"name":"damp","description":"Damping of the constraint. Default = 100"},{"name":"rdamp","description":"Rotational damping of the constraint. Default = 0"},{"name":"width","description":"Width of the created constraint"},{"name":"strech","description":"True to mark as strech-only"}],"class":"function","name":"elastic","description":" Elastic constraint between two entities"}},"fields":[],"libtbl":["constraint_library"],"realm":"server","tables":[],"class":"library","name":"constraint","description":" Library for creating and manipulating constraints."},"game":{"methods":{"isDedicated":{"returns":["boolean True if the game is a dedicated server"],"realm":"shared","class":"function","name":"isDedicated","description":" Returns whether or not the server is a dedicated server"},"isLan":{"returns":["boolean True if the game is a lan game"],"realm":"shared","class":"function","name":"isLan","description":" Returns true if the server is on a LAN"},"getMap":{"returns":["string The name of the current map"],"realm":"shared","class":"function","name":"getMap","description":" Returns the map name"},"getSunInfo":{"returns":["vector The direction of the sun","number How obstructed the sun is 0 to 1."],"realm":"client","class":"function","name":"getSunInfo","description":" Returns the direction and how obstructed the map's sun is"},"isSinglePlayer":{"returns":["boolean True if the game is singleplayer"],"realm":"shared","class":"function","name":"isSinglePlayer","description":" Returns whether or not the current game is single player"},"getHostname":{"returns":["string The hostname of the server"],"realm":"shared","class":"function","name":"getHostname","description":" Returns The hostname"},"getMaxPlayers":{"returns":["number The max players allowed by the server"],"realm":"shared","class":"function","name":"getMaxPlayers","description":" Returns the maximum player limit"},"isMounted":{"returns":["True if the game is mounted"],"realm":"shared","params":[{"name":"str","description":"String identifier of the game, eg. 'cstrike'"}],"class":"function","name":"isMounted","description":" Checks whether the specified game is mounted"},"hasFocus":{"returns":["boolean True if the game is focused"],"realm":"client","class":"function","name":"hasFocus","description":" Returns if the game has focus or not, i.e. will return false if the game is minimized"}},"fields":[],"libtbl":["game_library"],"realm":"shared","tables":[],"class":"library","name":"game","description":" Game functions"},"xinput":{"methods":{"setRumble":{"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"},{"name":"softPercent","description":"A number between 0.0-1.0 for how much the soft rumble motor should vibrate."},{"name":"hardPercent","description":"A number between 0.0-1.0 for how much the hard rumble motor should vibrate."}],"class":"function","name":"setRumble","description":" Sets the rumble on the controller."},"getTrigger":{"returns":["0-255 inclusive"],"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"},{"name":"trigger","description":"Which trigger to use. 0 is left"}],"class":"function","name":"getTrigger","description":" Gets the current position of the trigger on the controller."},"getStick":{"returns":["Two numbers for the X and Y coordinates, respectively, each being between -32768 - 32767 inclusive"],"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"},{"name":"stick","description":"Which stick to use. 0 is left"}],"class":"function","name":"getStick","description":" Gets the current coordinates of the stick on the controller."},"getBatteryLevel":{"returns":["If successful: a number between 0.0-1.0 inclusive. If unsuccessful: false, and a string error message"],"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"}],"class":"function","name":"getBatteryLevel","description":" Attempts to check the battery level of the controller."},"getState":{"returns":["Table containing all input data of the controller, or false if the controller is not connected. The table uses this struct: https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad"],"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"}],"class":"function","name":"getState","description":" Gets the state of the controller."},"getButton":{"returns":["bool"],"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"},{"name":"button","description":"The button to check for. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_"}],"class":"function","name":"getButton","description":" Gets whether the button on the controller is currently pushed down."},"getControllers":{"returns":["A table where each key is the ID of the controller that is connected. Disconnected controllers are not placed in the table."],"realm":"client","class":"function","name":"getControllers","description":" Gets all of the connected controllers."}},"fields":[],"libtbl":["xinput_library"],"realm":"client","tables":[],"class":"library","name":"xinput","description":" A simpler, hook-based, and more-powerful controller input library. Inputs are not lost between rendered frames, and there is support for rumble. Note: the client must have the XInput lua binary module installed in order to access this library. See more at https://github.com/mitterdoo/garrysmod-xinput"},"vr":{"methods":{"getHMDAng":{"returns":["angle angles"],"realm":"shared","params":[{"name":"target","description":"player to get the HMD angles from"}],"class":"function","name":"getHMDAng","description":" returns the HMD angles"},"isPlayerInVR":{"returns":["boolean true if player is in VR"],"realm":"shared","params":[{"name":"target","description":"player to check"}],"class":"function","name":"isPlayerInVR","description":" Checks wether the player is in VR"},"getHMDVelocities":{"returns":["vector velocity","vector angular velocity"],"realm":"client","class":"function","name":"getHMDVelocities","description":" returns the HMD velocities, position and angular"},"getOrigin":{"returns":["vector position","angle angles"],"realm":"client","class":"function","name":"getOrigin","description":" returns the playspace position and angles"},"getHMDPos":{"returns":["vector position"],"realm":"shared","params":[{"name":"target","description":"player to get the HMD position from"}],"class":"function","name":"getHMDPos","description":" returns the HMD position"},"getHMDVelocity":{"returns":["vector velocity"],"realm":"client","class":"function","name":"getHMDVelocity","description":" returns the HMD velocity"},"getRightEyePos":{"returns":["vector position"],"realm":"client","class":"function","name":"getRightEyePos","description":" returns position of the right eye"},"getHMDPose":{"returns":["vector position ","angle angles"],"realm":"shared","params":[{"name":"target","description":"player to get the HMD pose from"}],"class":"function","name":"getHMDPose","description":" returns the HMD pose"},"getLeftEyePos":{"returns":["vector position"],"realm":"client","class":"function","name":"getLeftEyePos","description":" returns position of the left eye"},"getEyePos":{"returns":["vector position"],"realm":"client","class":"function","name":"getEyePos","description":" returns position of the eye that is currently being used for rendering."},"getLeftHandPos":{"returns":["vector position"],"realm":"shared","params":[{"name":"target","description":"player to get the left hand position from"}],"class":"function","name":"getLeftHandPos","description":" returns the left hand position"},"getOriginPos":{"returns":["vector position"],"realm":"client","class":"function","name":"getOriginPos","description":" returns the playspace position"},"getLeftHandVelocities":{"returns":["vector velocity","vector angular velocity"],"realm":"client","class":"function","name":"getLeftHandVelocities","description":" returns the left hand velocities, position and angular"},"getRightHandAng":{"returns":["angle angles"],"realm":"shared","params":[{"name":"target","description":"player to get the right hand angles from"}],"class":"function","name":"getRightHandAng","description":" returns the left hand angles"},"getLeftHandAng":{"returns":["angle angles"],"realm":"shared","params":[{"name":"target","description":"player to get the left hand angles from"}],"class":"function","name":"getLeftHandAng","description":" returns the left hand angles"},"usingEmptyHands":{"returns":["boolean true if player is using empty hands"],"realm":"shared","params":[{"name":"target","description":"player to check"}],"class":"function","name":"usingEmptyHands","description":" Checks wether the player is using empty hands"},"getRightHandAngularVelocity":{"returns":["vector angular velocity"],"realm":"client","class":"function","name":"getRightHandAngularVelocity","description":" returns the right hand angular velocity"},"getLeftHandPose":{"returns":["vector position ","angle angles"],"realm":"shared","params":[{"name":"target","description":"player to get the left hand pose from"}],"class":"function","name":"getLeftHandPose","description":" returns the left hand pose"},"getRightHandVelocity":{"returns":["vector velocity"],"realm":"client","class":"function","name":"getRightHandVelocity","description":" returns the right hand velocity"},"getRightHandPose":{"returns":["vector position ","angle angles"],"realm":"shared","params":[{"name":"target","description":"player to get the right hand pose from"}],"class":"function","name":"getRightHandPose","description":" returns the left hand pose"},"getRightHandVelocities":{"returns":["vector velocity","vector angular velocity"],"realm":"client","class":"function","name":"getRightHandVelocities","description":" returns the right hand velocities, position and angular"},"getLeftHandAngularVelocity":{"returns":["vector angular velocity"],"realm":"client","class":"function","name":"getLeftHandAngularVelocity","description":" returns the left hand angular velocity"},"getInput":{"returns":["boolean, vector or number of input"],"realm":"client","params":[{"name":"actionname","description":"to check control of, check VR enums"}],"class":"function","name":"getInput","description":" returns the a controller's input state, may return boolean, number or vector."},"getRightHandPos":{"returns":["vector position"],"realm":"shared","params":[{"name":"target","description":"player to get the right hand position from"}],"class":"function","name":"getRightHandPos","description":" returns the right hand position"},"getHMDAngularVelocity":{"returns":["vector angular velocity"],"realm":"client","class":"function","name":"getHMDAngularVelocity","description":" returns the HMD angular velocity"},"getLeftHandVelocity":{"returns":["vector velocity"],"realm":"client","class":"function","name":"getLeftHandVelocity","description":" returns the left hand velocity"},"getOriginAng":{"returns":["angle angles"],"realm":"client","class":"function","name":"getOriginAng","description":" returns the playspace angles"}},"fields":[],"libtbl":["vr_library"],"realm":"shared","tables":{"VR":{"fields":[{"name":"BOOLEAN_PRIMARYFIRE","description":""},{"name":"VECTOR1_PRIMARYFIRE","description":""},{"name":"BOOLEAN_SECONDARYFIRE","description":""},{"name":"BOOLEAN_CHANGEWEAPON","description":""},{"name":"BOOLEAN_USE","description":""},{"name":"BOOLEAN_SPAWNMENU","description":""},{"name":"VECTOR2_WALKDIRECTION","description":""},{"name":"BOOLEAN_WALK","description":""},{"name":"BOOLEAN_FLASHLIGHT","description":""},{"name":"BOOLEAN_TURNLEFT","description":""},{"name":"BOOLEAN_TURNRIGHT","description":""},{"name":"VECTOR2_SMOOTHTURN","description":""},{"name":"BOOLEAN_CHAT","description":""},{"name":"BOOLEAN_RELOAD","description":""},{"name":"BOOLEAN_JUMP","description":""},{"name":"BOOLEAN_LEFT_PICKUP","description":""},{"name":"BOOLEAN_RIGHT_PICKUP","description":""},{"name":"BOOLEAN_UNDO","description":""},{"name":"BOOLEAN_SPRINT","description":""},{"name":"VECTOR1_FORWARD","description":""},{"name":"VECTOR1_REVERSE","description":""},{"name":"BOOLEAN_TURBO","description":""},{"name":"VECTOR2_STEER","description":""},{"name":"BOOLEAN_HANDBRAKE","description":""},{"name":"BOOLEAN_EXIT","description":""},{"name":"BOOLEAN_TURRET","description":""}],"realm":"client","class":"table","name":"VR","description":" VRmod library enums"}},"class":"library","name":"vr","description":" VRMod Library \n Addon and module: https://steamcommunity.com/sharedfiles/filedetails/?id=1678408548\n Follow install instructions on the addon's page."},"trace":{"methods":{"intersectRayWithPlane":{"returns":["Hit position or nil if not hit"],"realm":"shared","params":[{"name":"rayStart","description":"The origin of the ray"},{"name":"rayDelta","description":"The direction and length of the ray"},{"name":"planeOrigin","description":"The origin of the plane"},{"name":"planeNormal","description":"The normal of the plane"}],"class":"function","name":"intersectRayWithPlane","description":" Does a ray plane intersection returning the position hit or nil if not hit"},"traceHull":{"returns":["Result of the trace https://wiki.facepunch.com/gmod/Structures/TraceResult"],"realm":"shared","params":[{"name":"start","description":"Start position"},{"name":"endpos","description":"End position"},{"name":"minbox","description":"Lower box corner"},{"name":"maxbox","description":"Upper box corner"},{"name":"filter","description":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit"},{"name":"mask","description":"Trace mask"},{"name":"colgroup","description":"The collision group of the trace"},{"name":"ignworld","description":"Whether the trace should ignore world"}],"class":"function","name":"traceHull","description":" Does a swept-AABB trace"},"trace":{"returns":["Result of the trace https://wiki.facepunch.com/gmod/Structures/TraceResult"],"realm":"shared","params":[{"name":"start","description":"Start position"},{"name":"endpos","description":"End position"},{"name":"filter","description":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit"},{"name":"mask","description":"Trace mask"},{"name":"colgroup","description":"The collision group of the trace"},{"name":"ignworld","description":"Whether the trace should ignore world"}],"class":"function","name":"trace","description":" Does a line trace"},"intersectRayWithOBB":{"returns":["Hit position or nil if not hit","Hit normal or nil if not hit","Hit fraction or nil if not hit"],"realm":"shared","params":[{"name":"rayStart","description":"The origin of the ray"},{"name":"rayDelta","description":"The direction and length of the ray"},{"name":"boxOrigin","description":"The origin of the box"},{"name":"boxAngles","description":"The box's angles"},{"name":"boxMins","description":"The box min bounding vector"},{"name":"boxMaxs","description":"The box max bounding vector"}],"class":"function","name":"intersectRayWithOBB","description":" Does a ray box intersection returning the position hit, normal, and trace fraction, or nil if not hit."},"pointContents":{"returns":["Contents bitflag, see the CONTENTS enums"],"realm":"shared","params":[{"name":"position","description":"The position to get the CONTENTS of"}],"class":"function","name":"pointContents","description":" Returns the contents of the position specified."},"decal":{"realm":"shared","params":[{"name":"name","description":"The decal name, see https://wiki.facepunch.com/gmod/util.Decal"},{"name":"start","description":"Start position"},{"name":"endpos","description":"End position"},{"name":"filter","description":"(Optional) Entity/array of entities to filter"}],"class":"function","name":"decal","description":" Does a line trace and applies a decal to wherever is hit"}},"fields":[],"libtbl":["trace_library"],"realm":"shared","tables":[],"class":"library","name":"trace","description":" Provides functions for doing line/AABB traces"},"prop":{"methods":{"spawnRate":{"returns":["Number of props per second the user can spawn"],"realm":"server","class":"function","name":"spawnRate","description":" Returns how many props per second the user can spawn"},"setPropUndo":{"realm":"server","params":[{"name":"on","description":"Boolean whether the props should be undo-able"}],"class":"function","name":"setPropUndo","description":" Sets whether the props should be undo-able"},"createSent":{"returns":["The sent object"],"realm":"server","params":[{"name":"pos","description":"Position of created sent"},{"name":"ang","description":"Angle of created sent"},{"name":"class","description":"Class of created sent"},{"name":"frozen","description":"True to spawn frozen"},{"name":"data","description":"Optional table, additional entity data to be supplied to certain SENTs. See prop.SENT_Data_Structures table in Docs for list of SENTs"}],"class":"function","name":"createSent","description":" Creates a sent."},"create":{"returns":["The prop object"],"realm":"server","params":[{"name":"pos","description":"Initial entity position"},{"name":"ang","description":"Initial entity angles"},{"name":"model","description":"Model path"},{"name":"frozen","description":"True to spawn the entity in a frozen state. Default = False"}],"class":"function","name":"create","description":" Creates a prop"},"createComponent":{"returns":["Component entity"],"realm":"server","params":[{"name":"pos","description":"Position of created component"},{"name":"ang","description":"Angle of created component"},{"name":"class","description":"Class of created component"},{"name":"model","description":"Model of created component"},{"name":"frozen","description":"True to spawn frozen"}],"class":"function","name":"createComponent","description":" Creates starfall component.\\n Allowed components:\\n starfall_hud\\n starfall_screen"},"propsLeft":{"returns":["number of props able to be spawned"],"realm":"server","class":"function","name":"propsLeft","description":" Checks how many props can be spawned"},"createCustom":{"returns":["The prop object"],"realm":"server","params":[{"name":"pos","description":"The position to spawn the prop"},{"name":"ang","description":"The angles to spawn the prop"},{"name":"vertices","description":"The table of tables of vectices that make up the physics mesh {{v1,v2,...},{v1,v2,...},...}"},{"name":"frozen","description":"Whether the prop starts frozen"}],"class":"function","name":"createCustom","description":" Creates a custom prop."},"setPropClean":{"realm":"server","params":[{"name":"on","description":"Boolean whether the props should be cleaned or not"}],"class":"function","name":"setPropClean","description":" Sets whether the chip should remove created props when the chip is removed"},"canSpawn":{"returns":["True if user can spawn props, False if not."],"realm":"server","class":"function","name":"canSpawn","description":" Checks if a user can spawn anymore props."},"getSpawnableSents":{"returns":["The table"],"realm":"server","params":[{"name":"categorized","description":"True to get an categorized list"}],"class":"function","name":"getSpawnableSents","description":" Get a list of all spawnable sents."},"createRagdoll":{"returns":["The ragdoll entity"],"realm":"server","params":[{"name":"model","description":"Model path"},{"name":"frozen","description":"True to spawn the entity in a frozen state. Default = False"}],"class":"function","name":"createRagdoll","description":" Creates a ragdoll"}},"fields":[],"libtbl":["props_library"],"realm":"server","tables":{"SENT_Data_Structures":{"description":" \n > gmod_balloon\n number b = 255\n number force\n number g = 255\n string Model = \"models/maxofs2d/balloon_classic.mdl\"\n number r = 255\n \n > gmod_button\n string description = \"\"\n number key\n string Model = \"models/maxofs2d/button_05.mdl\"\n boolean toggle = true\n \n > gmod_cameraprop\n number controlkey\n boolean locked = false\n string Model = \"models/dav0r/camera.mdl\"\n boolean toggle = true\n \n > gmod_dynamite\n number Damage = 200\n number delay = 0\n number key\n string Model = \"models/dav0r/tnt/tnt.mdl\"\n boolean remove = false\n \n > gmod_emitter\n number delay = 0\n string effect\n number key\n string Model = \"models/props_lab/tpplug.mdl\"\n number scale = 1\n boolean starton = false\n boolean toggle = true\n \n > gmod_hoverball\n number key_d = -1\n number key_u = -1\n string Model = \"models/dav0r/hoverball.mdl\"\n number resistance = 0\n number speed = 1\n number strength = 1\n \n > gmod_lamp\n number b = 255\n number brightness = 4\n number distance = 1024\n number fov = 90\n number g = 255\n number KeyDown = -1\n string Model = \"models/lamps/torch.mdl\"\n boolean on = false\n number r = 255\n string Texture = \"effects/flashlight001\"\n boolean toggle = true\n \n > gmod_light\n number Brightness = 2\n number KeyDown = -1\n number lightb = 255\n number lightg = 255\n number lightr = 255\n string Model = \"models/maxofs2d/light_tubular.mdl\"\n boolean on = false\n number Size = 256\n boolean toggle = true\n \n > gmod_thruster\n boolean damageable = false\n string effect = \"fire\"\n number force = 1500\n number key = -1\n number key_bck = -1\n string Model = \"models/props_phx2/garbage_metalcan001a.mdl\"\n string soundname = \"PhysicsCannister.ThrusterLoop\"\n boolean toggle = false\n \n > gmod_wire_addressbus\n number Mem1st = 0\n number Mem1sz = 0\n number Mem2st = 0\n number Mem2sz = 0\n number Mem3st = 0\n number Mem3sz = 0\n number Mem4st = 0\n number Mem4sz = 0\n string Model = \"models/jaanus/wiretool/wiretool_gate.mdl\"\n \n > gmod_wire_adv_emarker\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n \n > gmod_wire_adv_input\n number keyless = 1\n number keymore = 3\n string Model = \"models/beer/wiremod/numpad.mdl\"\n number speed = 1\n boolean toggle = false\n number value_max = 10\n number value_min = 0\n number value_start = 5\n \n > gmod_wire_button\n string description = \"\"\n boolean entityout = false\n string Model = \"models/props_c17/clock01.mdl\"\n boolean toggle = false\n number value_off = 0\n number value_on = 1\n \n > gmod_wire_cameracontroller\n boolean AllowZoom = false\n boolean AutoMove = false\n boolean AutoUnclip = false\n boolean AutoUnclip_IgnoreWater = false\n boolean DrawParent = true\n boolean DrawPlayer = true\n boolean FreeMove = false\n boolean LocalMove = false\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n boolean ParentLocal = false\n \n > gmod_wire_cd_disk\n number IRadius = 10\n string Model = \"models/venompapa/wirecd_medium.mdl\"\n number Precision = 4\n number Skin = 0\n \n > gmod_wire_cd_ray\n boolean DefaultZero = false\n string Model = \"models/jaanus/wiretool/wiretool_beamcaster.mdl\"\n number Range = 64\n \n > gmod_wire_clutch\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n \n > gmod_wire_colorer\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n boolean outColor = false\n number Range = 2000\n \n > gmod_wire_consolescreen\n string Model = \"models/props_lab/monitor01b.mdl\"\n \n > gmod_wire_damage_detector\n boolean includeconstrained = false\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n \n > gmod_wire_data_satellitedish\n string Model = \"models/props_wasteland/prison_lamp001c.mdl\"\n \n > gmod_wire_data_store\n string Model = \"models/jaanus/wiretool/wiretool_range.mdl\"\n \n > gmod_wire_data_transferer\n boolean DefaultZero = false\n boolean IgnoreZero = false\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n number Range = 25000\n \n > gmod_wire_dataport\n string Model = \"models/jaanus/wiretool/wiretool_gate.mdl\"\n \n > gmod_wire_datarate\n string Model = \"models/jaanus/wiretool/wiretool_gate.mdl\"\n \n > gmod_wire_datasocket\n number AttachRange = 5\n string Model = \"models/hammy/pci_slot.mdl\"\n number WeldForce = 5000\n \n > gmod_wire_detonator\n number damage = 1\n string Model = \"models/props_combine/breenclock.mdl\"\n \n > gmod_wire_dhdd\n string Model\n \n > gmod_wire_digitalscreen\n string Model = \"models/props_lab/monitor01b.mdl\"\n number ScreenHeight = 32\n number ScreenWidth = 32\n \n > gmod_wire_dual_input\n number keygroup = 7\n number keygroup2 = 4\n string Model = \"models/beer/wiremod/numpad.mdl\"\n boolean toggle = false\n number value_off = 0\n number value_on = 1\n number value_on2 = -1\n \n > gmod_wire_dynamic_button\n string description = \"\"\n boolean entityout = false\n string material_off = \"bull/dynamic_button_0\"\n string material_on = \"bull/dynamic_button_1\"\n string Model = \"models/bull/ranger.mdl\"\n number off_b = 255\n number off_g = 255\n number off_r = 255\n number on_b = 255\n number on_g = 255\n number on_r = 255\n boolean toggle = false\n number value_off = 0\n number value_on = 1\n \n > gmod_wire_egp\n string Model = \"models/kobilica/wiremonitorbig.mdl\"\n \n > gmod_wire_egp_emitter\n string Model = \"models/bull/dynamicbutton.mdl\"\n \n > gmod_wire_egp_hud\n string Model = \"models/bull/dynamicbutton.mdl\"\n \n > gmod_wire_emarker\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n \n > gmod_wire_exit_point\n string Model = \"models/jaanus/wiretool/wiretool_range.mdl\"\n \n > gmod_wire_explosive\n boolean affectother = false\n boolean bulletproof = false\n boolean coloreffect = true\n number damage = 200\n number delayreloadtime = 0\n number delaytime = 0\n boolean explodeatzero = true\n boolean explosionproof = false\n boolean fallproof = false\n boolean fireeffect = true\n boolean invisibleatzero = false\n number key = 1\n number maxhealth = 100\n string Model = \"models/props_c17/oildrum001_explosive.mdl\"\n boolean notaffected = false\n number radius = 300\n boolean removeafter = false\n boolean resetatexplode = true\n \n > gmod_wire_expression2\n string _name = \"Generic\"\n string _original = \"print(\"Hello World!\")\"\n table inc_files = {}\n string Model = \"models/beer/wiremod/gate_e2.mdl\"\n \n > gmod_wire_extbus\n string Model = \"models/jaanus/wiretool/wiretool_gate.mdl\"\n \n > gmod_wire_eyepod\n number ClampX = 0\n number ClampXMax = 0\n number ClampXMin = 0\n number ClampY = 0\n number ClampYMax = 0\n number ClampYMin = 0\n number DefaultToZero = 1\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n number ShowRateOfChange = 1\n \n > gmod_wire_forcer\n number Force = 1\n number Length = 100\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n boolean Reaction = false\n boolean ShowBeam = true\n \n > gmod_wire_freezer\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n \n > gmod_wire_friendslist\n string Model = \"models/kobilica/value.mdl\"\n boolean save_on_entity = false\n \n > gmod_wire_fx_emitter\n number delay = 0.07\n string effect = \"sparks\"\n string Model = \"models/props_lab/tpplug.mdl\"\n \n > gmod_wire_gate\n string action = \"+\"\n string Model = \"models/jaanus/wiretool/wiretool_gate.mdl\"\n \n > gmod_wire_gimbal\n string Model = \"models/props_c17/canister01a.mdl\"\n \n > gmod_wire_gps\n string Model = \"models/beer/wiremod/gps.mdl\"\n \n > gmod_wire_gpulib_controller\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n \n > gmod_wire_grabber\n boolean Gravity = true\n string Model = \"models/jaanus/wiretool/wiretool_range.mdl\"\n number Range = 100\n \n > gmod_wire_graphics_tablet\n boolean draw_background = true\n boolean gmode = false\n string Model = \"models/kobilica/wiremonitorbig.mdl\"\n \n > gmod_wire_gyroscope\n string Model = \"models/bull/various/gyroscope.mdl\"\n boolean out180 = false\n \n > gmod_wire_hdd\n number DriveCap = 128\n number DriveID = 0\n string Model = \"models/jaanus/wiretool/wiretool_gate.mdl\"\n \n > gmod_wire_holoemitter\n string Model = \"models/jaanus/wiretool/wiretool_range.mdl\"\n \n > gmod_wire_hologrid\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n boolean usegps = false\n \n > gmod_wire_hoverball\n string Model = \"models/dav0r/hoverball.mdl\"\n number resistance = 0\n number speed = 1\n boolean starton = true\n number strength = 1\n \n > gmod_wire_hudindicator\n number a = 0\n number aa = 255\n number ab = 0\n number ag = 0\n boolean allowhook = true\n number ar = 255\n number b = 1\n number ba = 255\n number bb = 0\n number bg = 255\n number br = 0\n number fullcircleangle = 0\n boolean hudaddname = false\n string huddesc = \"\"\n number hudshowvalue = 0\n number hudstyle = 0\n string material = \"models/debug/debugwhite\"\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n boolean showinhud = false\n \n > gmod_wire_hydraulic\n number Bone1 = 0\n number Bone2 = 0\n Entity Ent1\n Entity Ent2\n number fixed = 0\n Vector LPos1 = Vector(0, 0, 0)\n Vector LPos2 = Vector(0, 0, 0)\n string material = \"cable/rope\"\n string Model = \"models/beer/wiremod/hydraulic.mdl\"\n number speed = 16\n boolean stretchonly = false\n number width = 3\n \n > gmod_wire_igniter\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n number Range = 2048\n boolean TargetPlayers = false\n \n > gmod_wire_indicator\n number a = 0\n number aa = 255\n number ab = 0\n number ag = 0\n number ar = 255\n number b = 1\n number ba = 255\n number bb = 0\n number bg = 255\n number br = 0\n string Model = \"models/segment.mdl\"\n \n > gmod_wire_input\n number keygroup = 7\n string Model = \"models/beer/wiremod/numpad.mdl\"\n boolean toggle = false\n number value_off = 0\n number value_on = 1\n \n > gmod_wire_keyboard\n boolean AutoBuffer = true\n boolean EnterKeyAscii = true\n string Model = \"models/jaanus/wiretool/wiretool_input.mdl\"\n boolean Synchronous = true\n \n > gmod_wire_keypad\n string Model = \"models/props_lab/keypad.mdl\"\n string Password\n boolean Secure\n \n > gmod_wire_lamp\n number b = 255\n number Brightness = 8\n number Dist = 1024\n number FOV = 90\n number g = 255\n string Model = \"models/lamps/torch.mdl\"\n boolean on = false\n number r = 255\n string Texture = \"effects/flashlight001\"\n \n > gmod_wire_las_receiver\n string Model = \"models/jaanus/wiretool/wiretool_range.mdl\"\n \n > gmod_wire_latch\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n \n > gmod_wire_lever\n number Max = 1\n number Min = 0\n \n > gmod_wire_light\n number B = 255\n number brightness = 2\n boolean directional = false\n number G = 255\n boolean glow = false\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n number R = 255\n boolean radiant = false\n number size = 256\n \n > gmod_wire_locator\n string Model = \"models/props_lab/powerbox02d.mdl\"\n \n > gmod_wire_motor\n number Bone1 = 0\n number Bone2 = 0\n Entity Ent1\n Entity Ent2\n number forcelimit = 0\n number friction = 1\n Vector LPos1 = Vector(0, 0, 0)\n Vector LPos2 = Vector(0, 0, 0)\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n number torque = 500\n \n > gmod_wire_nailer\n number Flim = 0\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n number Range = 100\n boolean ShowBeam = true\n \n > gmod_wire_numpad\n string Model = \"models/beer/wiremod/numpad.mdl\"\n boolean toggle = false\n number value_off = 0\n number value_on = 0\n \n > gmod_wire_oscilloscope\n string Model = \"models/props_lab/monitor01b.mdl\"\n \n > gmod_wire_output\n number key = 1\n string Model = \"models/beer/wiremod/numpad.mdl\"\n \n > gmod_wire_pixel\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n \n > gmod_wire_pod\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n \n > gmod_wire_radio\n string Channel = \"1\"\n string Model = \"models/props_lab/binderblue.mdl\"\n boolean Secure = false\n number values = 4\n \n > gmod_wire_ranger\n boolean default_zero = true\n boolean hires = false\n boolean ignore_world = false\n string Model = \"models/jaanus/wiretool/wiretool_range.mdl\"\n boolean out_ang = false\n boolean out_col = false\n boolean out_dist = true\n boolean out_eid = false\n boolean out_hnrm = false\n boolean out_pos = false\n boolean out_sid = false\n boolean out_uid = false\n boolean out_val = false\n boolean out_vel = false\n number range = 1500\n boolean show_beam = true\n boolean trace_water = false\n \n > gmod_wire_relay\n number keygroup1 = 1\n number keygroup2 = 2\n number keygroup3 = 3\n number keygroup4 = 4\n number keygroup5 = 5\n number keygroupoff = 0\n string Model = \"models/kobilica/relay.mdl\"\n boolean nokey = false\n number normclose = 0\n number poles = 1\n number throws = 2\n boolean toggle = true\n \n > gmod_wire_screen\n boolean Floor = false\n boolean FormatNumber = false\n boolean FormatTime = false\n boolean LeftAlign = false\n string Model = \"models/props_lab/monitor01b.mdl\"\n boolean SingleBigFont = true\n boolean SingleValue = false\n string TextA = \"Value A\"\n string TextB = \"Value B\"\n \n > gmod_wire_sensor\n boolean direction_normalized = false\n boolean direction_vector = false\n boolean gpscord = false\n string Model\n boolean outbrng = false\n boolean outdist = true\n boolean target_velocity = false\n boolean velocity_normalized = false\n boolean xyz_mode = false\n \n > gmod_wire_simple_explosive\n number damage = 200\n number key = 1\n string Model = \"models/props_c17/oildrum001_explosive.mdl\"\n number radius = 300\n boolean removeafter = false\n \n > gmod_wire_socket\n boolean ArrayInput = false\n number AttachRange = 5\n string Model = \"models/props_lab/tpplugholder_single.mdl\"\n number WeldForce = 5000\n \n > gmod_wire_soundemitter\n string Model = \"models/cheeze/wires/speaker.mdl\"\n string sound = \"synth/square.wav\"\n \n > gmod_wire_spawner\n number a = 255\n number b = 255\n number delay = 0\n number g = 255\n string mat = \"\"\n string Model\n number r = 255\n number skin = 0\n number spawn_effect = 0\n number undo_delay = 0\n \n > gmod_wire_speedometer\n boolean AngVel = false\n string Model\n boolean z_only = false\n \n > gmod_wire_target_finder\n boolean beacons = false\n boolean casesen = false\n boolean checkbuddylist = false\n boolean colorcheck = false\n boolean colortarget = false\n string entity = \"\"\n boolean hoverballs = false\n number maxbogeys = 1\n number maxtargets = 1\n number minrange = 1\n string Model = \"models/beer/wiremod/targetfinder.mdl\"\n boolean notargetowner = false\n boolean notownersstuff = false\n string npcname = \"\"\n boolean npcs = true\n boolean onbuddylist = false\n boolean painttarget = true\n number pcolA = 255\n number pcolB = 255\n number pcolG = 255\n number pcolR = 255\n string playername = \"\"\n boolean players = false\n string propmodel = \"\"\n boolean props = false\n number range = 1000\n boolean rpgs = false\n string steamname = \"\"\n boolean thrusters = false\n boolean vehicles = false\n \n > gmod_wire_teleporter\n string Model = \"models/props_c17/utilityconducter001.mdl\"\n boolean UseEffects = true\n boolean UseSounds = true\n \n > gmod_wire_textentry\n string Model = \"models/beer/wiremod/keyboard.mdl\"\n \n > gmod_wire_textreceiver\n boolean CaseInsensitive = true\n table Matches\n string Model = \"models/jaanus/wiretool/wiretool_range.mdl\"\n boolean UseLuaPatterns = false\n \n > gmod_wire_textscreen\n Color bgcolor = Color(0, 0, 0)\n number chrPerLine = 6\n Color fgcolor = Color(255, 255, 255)\n string Model = \"models/kobilica/wiremonitorbig.mdl\"\n string text = \"\"\n number textJust = 1\n string tfont = \"Arial\"\n number valign = 0\n \n > gmod_wire_thruster\n boolean bidir = true\n number force = 1500\n number force_max = 10000\n number force_min = 0\n string Model = \"models/props_c17/lampShade001a.mdl\"\n boolean owater = true\n string oweffect = \"fire\"\n string soundname = \"\"\n boolean uwater = true\n string uweffect = \"same\"\n \n > gmod_wire_trail\n Color Color = Color(255, 255, 255)\n number EndSize = 0\n number Length = 5\n string Material = \"trails/lol\"\n number StartSize = 32\n \n > gmod_wire_trigger\n number filter = 0\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n number offsetx = 0\n number offsety = 0\n number offsetz = 0\n boolean owneronly = false\n number sizex = 64\n number sizey = 64\n number sizez = 64\n \n > gmod_wire_turret\n number damage = 10\n number delay = 0.05\n number force = 1\n string Model = \"models/weapons/w_smg1.mdl\"\n number numbullets = 1\n string sound = \"0\"\n number spread = 0\n string tracer = \"Tracer\"\n number tracernum = 1\n \n > gmod_wire_twoway_radio\n string Model = \"models/props_lab/binderblue.mdl\"\n \n > gmod_wire_user\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n number Range = 200\n \n > gmod_wire_value\n string Model = \"models/kobilica/value.mdl\"\n table value\n \n > gmod_wire_vectorthruster\n boolean angleinputs = false\n boolean bidir = true\n number force = 1500\n number force_max = 10000\n number force_min = 0\n boolean lengthismul = false\n number mode = 0\n string Model = \"models/jaanus/wiretool/wiretool_speed.mdl\"\n boolean owater = true\n string oweffect = \"fire\"\n string soundname = \"\"\n boolean uwater = true\n string uweffect = \"same\"\n \n > gmod_wire_vehicle\n string Model = \"models/jaanus/wiretool/wiretool_siren.mdl\"\n \n > gmod_wire_watersensor\n string Model = \"models/beer/wiremod/watersensor.mdl\"\n \n > gmod_wire_waypoint\n string Model = \"models/props_lab/powerbox02d.mdl\"\n number range = 150\n \n > gmod_wire_weight\n string Model = \"models/props_interiors/pot01a.mdl\"\n \n > gmod_wire_wheel\n Entity Base\n number BaseTorque = 3000\n number bck = -1\n number Bone = 0\n number forcelimit = 0\n number friction = 1\n number fwd = 1\n Vector LAxis = Vector(0, 1, 0)\n Vector LPos = Vector(0, 0, 0)\n string Model = \"models/props_vehicles/carparts_wheel01a.mdl\"\n number stop = 0\n ","class":"table","name":"SENT_Data_Structures","realm":"server"}},"class":"library","name":"prop","description":" Library for creating and manipulating physics-less models AKA \"Props\"."},"von":{"methods":{"serialize":{"returns":["String"],"realm":"shared","params":[{"name":"tbl","description":"Table to serialize"}],"class":"function","name":"serialize","description":" Serialize a table"},"deserialize":{"returns":["Table"],"realm":"shared","params":[{"name":"str","description":"String to deserialize"}],"class":"function","name":"deserialize","description":" Deserialize a string"}},"fields":[],"libtbl":["von_library"],"realm":"shared","tables":[],"class":"library","name":"von","description":" vON Library"},"find":{"methods":{"byName":{"returns":["An array of found entities"],"realm":"shared","params":[{"name":"name","description":"The targetname"},{"name":"filter","description":"Optional function to filter results"}],"class":"function","name":"byName","description":" Finds entities by their targetname"},"inSphere":{"returns":["An array of found entities"],"realm":"shared","params":[{"name":"center","description":"Center of the sphere"},{"name":"radius","description":"Sphere radius"},{"name":"filter","description":"Optional function to filter results"}],"class":"function","name":"inSphere","description":" Finds entities in a sphere"},"inRay":{"returns":["An array of found entities"],"realm":"shared","params":[{"name":"startpos","description":"The ray start"},{"name":"endpos","description":"The ray end"},{"name":"mins","description":"If not null, will define a lower bound of the ray's hull"},{"name":"maxs","description":"If not null, will define a upper bound of the ray's hull"},{"name":"filter","description":"Optional function to filter results"}],"class":"function","name":"inRay","description":" Finds entities in a ray"},"inCone":{"returns":["An array of found entities"],"realm":"shared","params":[{"name":"pos","description":"The cone vertex position"},{"name":"dir","description":"The direction to project the cone"},{"name":"distance","description":"The length to project the cone"},{"name":"radius","description":"The cosine of angle of the cone. 1 makes a 0° cone, 0.707 makes approximately 90°, 0 makes 180°, and so on."},{"name":"filter","description":"Optional function to filter results"}],"class":"function","name":"inCone","description":" Finds entities in a cone"},"inPVS":{"returns":["An array of found entities"],"realm":"server","params":[{"name":"pos","description":"Vector view point"},{"name":"filter","description":"Optional function to filter results"}],"class":"function","name":"inPVS","description":" Finds entities that are in the PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},"inBox":{"returns":["An array of found entities"],"realm":"shared","params":[{"name":"min","description":"Bottom corner"},{"name":"max","description":"Top corner"},{"name":"filter","description":"Optional function to filter results"}],"class":"function","name":"inBox","description":" Finds entities in a box"},"sortByClosest":{"returns":["A table of the closest entities"],"realm":"shared","params":[{"name":"ents","description":"The array of entities"},{"name":"pos","description":"The position"},{"name":"furthest","description":"Whether to have the further entities first"}],"class":"function","name":"sortByClosest","description":" Returns a sorted array of entities by how close they are to a point"},"closest":{"returns":["The closest entity"],"realm":"shared","params":[{"name":"ents","description":"The array of entities"},{"name":"pos","description":"The position"}],"class":"function","name":"closest","description":" Finds the closest entity to a point"},"all":{"returns":["An array of found entities"],"realm":"shared","params":[{"name":"filter","description":"Optional function to filter results"}],"class":"function","name":"all","description":" Finds all entitites"},"byClass":{"returns":["An array of found entities"],"realm":"shared","params":[{"name":"class","description":"The class name"},{"name":"filter","description":"Optional function to filter results"}],"class":"function","name":"byClass","description":" Finds entities by class name"},"byModel":{"returns":["An array of found entities"],"realm":"shared","params":[{"name":"model","description":"The model file"},{"name":"filter","description":"Optional function to filter results"}],"class":"function","name":"byModel","description":" Finds entities by model"},"allPlayers":{"returns":["An array of found entities"],"realm":"shared","params":[{"name":"filter","description":"Optional function to filter results"}],"class":"function","name":"allPlayers","description":" Finds all players (including bots)"},"playersByName":{"returns":["Table of found players"],"realm":"shared","params":[{"name":"name","description":"Name to search for"},{"name":"casesensitive","description":"Boolean should the match be case sensitive?"},{"name":"exact","description":"Boolean should the name match exactly"}],"class":"function","name":"playersByName","description":" Finds the first player with the given name"}},"fields":[],"libtbl":["find_library"],"realm":"shared","tables":[],"class":"library","name":"find","description":" Find library. Finds entities in various shapes."},"fastlz":{"methods":{"compress":{"returns":["FastLZ compressed string"],"realm":"shared","params":[{"name":"s","description":"String to compress"}],"class":"function","name":"compress","description":" Compress string using FastLZ"},"decompress":{"returns":["Decompressed string"],"realm":"shared","params":[{"name":"s","description":"FastLZ compressed string to decode"}],"class":"function","name":"decompress","description":" Decompress using FastLZ"}},"fields":[],"libtbl":["fastlz_library"],"realm":"shared","tables":[],"class":"library","name":"fastlz","description":" FastLZ library"},"convar":{"methods":{"exists":{"returns":["True if exists"],"realm":"client","params":[{"name":"name","description":"Name of the ConVar"}],"class":"function","name":"exists","description":" Check if the given ConVar exists"},"hasFlag":{"returns":["True if has the flag"],"realm":"client","params":[{"name":"name","description":"Name of the ConVar"}],"class":"function","name":"hasFlag","description":" Returns true if a given FCVAR flag is set for this ConVar.\n https://wiki.facepunch.com/gmod/Enums/FCVAR"},"getInt":{"returns":["The integer value or 0 if converting fails"],"realm":"client","params":[{"name":"name","description":"Name of the ConVar"}],"class":"function","name":"getInt","description":" Returns value of the ConVar as a whole number.\n Floats values will be floored."},"getMax":{"returns":["The maximum value or nil if not specified"],"realm":"client","params":[{"name":"name","description":"Name of the ConVar"}],"class":"function","name":"getMax","description":" Returns the maximum value of the convar"},"getString":{"returns":["Value as a string"],"realm":"client","params":[{"name":"name","description":"Name of the ConVar"}],"class":"function","name":"getString","description":" Returns value of the ConVar as a string."},"getFlags":{"returns":["Number consisting of flag values"],"realm":"client","params":[{"name":"name","description":"Name of the ConVar"}],"class":"function","name":"getFlags","description":" Returns FCVAR flags of the given ConVar.\n https://wiki.facepunch.com/gmod/Enums/FCVAR"},"getMin":{"returns":["The minimum value or nil if not specified"],"realm":"client","params":[{"name":"name","description":"Name of the ConVar"}],"class":"function","name":"getMin","description":" Returns the minimum value of the convar"},"getDefault":{"returns":["Default value as a string"],"realm":"client","params":[{"name":"name","description":"Name of the ConVar"}],"class":"function","name":"getDefault","description":" Returns default value of the ConVar"},"getFloat":{"returns":["The float value or 0 if converting fails"],"realm":"client","params":[{"name":"name","description":"Name of the ConVar"}],"class":"function","name":"getFloat","description":" Returns value of the ConVar as a floating-point number."},"getBool":{"returns":["The boolean value"],"realm":"client","params":[{"name":"name","description":"Name of the ConVar"}],"class":"function","name":"getBool","description":" Returns value of the ConVar as a boolean.\n True for numeric ConVars with the value of 1, false otherwise."}},"fields":[],"libtbl":["convar_library"],"realm":"client","tables":[],"class":"library","name":"convar","description":" ConVar library https://wiki.facepunch.com/gmod/ConVar"},"table":{"methods":{"merge":{"returns":["Destination table"],"realm":"shared","params":[{"name":"dest","description":"The table you want the source table to merge with"},{"name":"source","description":"The table you want to merge with the destination table"}],"class":"function","name":"merge","description":" Merges the contents of the second table with the content in the first one."},"collapseKeyValue":{"returns":["Output table"],"realm":"shared","params":[{"name":"tbl","description":"The input table"}],"class":"function","name":"collapseKeyValue","description":" Collapses a table with keyvalue structure"},"isSequential":{"returns":["True if sequential"],"realm":"shared","params":[{"name":"tbl","description":"Table to check"}],"class":"function","name":"isSequential","description":" Returns whether or not the table's keys are sequential."},"sortDesc":{"returns":["Sorted table"],"realm":"shared","params":[{"name":"tbl","description":"The table to sort in descending order"}],"class":"function","name":"sortDesc","description":" Sorts a table in reverse order from table.sort"},"lowerKeyNames":{"returns":["New converted table"],"realm":"shared","params":[{"name":"tbl","description":"Table to convert"}],"class":"function","name":"lowerKeyNames","description":" Returns a copy of the input table with all string keys converted to be lowercase recursively."},"keysFromValue":{"returns":["Table of keys"],"realm":"shared","params":[{"name":"tbl","description":"Table to search"},{"name":"val","description":"Value to search for"}],"class":"function","name":"keysFromValue","description":" Returns a table of keys containing the supplied value."},"sortByMember":{"realm":"shared","params":[{"name":"tbl","description":"Table to sort"},{"name":"member","description":"The key used to identify the member"},{"name":"ascending","description":"Optional, should be ascending? Defaults to false"}],"class":"function","name":"sortByMember","description":" Sorts a table by a named member."},"copy":{"returns":["A deep copy of the original table"],"realm":"shared","params":[{"name":"tbl","description":"The table to be copied"}],"class":"function","name":"copy","description":" Creates a deep copy and returns that copy. This function does NOT copy userdata, such as Vectors and Angles!"},"forceInsert":{"returns":["The supplied or created table"],"realm":"shared","params":[{"name":"tbl","description":"Table to insert value in to. If not supplied, will create a table"},{"name":"val","description":"Value to insert"}],"class":"function","name":"forceInsert","description":" Inserts a value in to the given table even if the table is non-existent"},"findNext":{"returns":["Found element"],"realm":"shared","params":[{"name":"tbl","description":"Table to search"},{"name":"val","description":"Any value to return element after"}],"class":"function","name":"findNext","description":" Returns the value positioned after the supplied value in a table. If it isn't found then the first element in the table is returned.\n (DEPRECATED! Iterate the table using ipairs or increment from the previous index using next(). Non-numerically indexed tables are not ordered)"},"findPrev":{"returns":["Found element"],"realm":"shared","params":[{"name":"tbl","description":"Table to search"},{"name":"val","description":"Value to return element before"}],"class":"function","name":"findPrev","description":" Returns the value positioned before the supplied value in a table. If it isn't found then the last element in the table is returned.\n (DEPRECATED! Iterate the table using ipairs, storing the previous value and checking for the target). Non-numerically indexed tables are not ordered)"},"getLastValue":{"returns":["Last Value"],"realm":"shared","params":[{"name":"tbl","description":"The table to get value of"}],"class":"function","name":"getLastValue","description":" Returns the last value found in the given table. (DEPRECATED! Use the # operator instead)\n Non-numerically indexed tables are not ordered and do not have a last key"},"forEach":{"realm":"shared","params":[{"name":"tbl","description":"The table to iterate over"},{"name":"func","description":"The function to run for each key and value"}],"class":"function","name":"forEach","description":" Iterates for each key-value pair in the table, calling the function with the key and value of the pair. If the function returns anything, the loop is broken.\n (DEPRECATED! You should use pairs() instead)"},"reverse":{"returns":["A reversed copy of the table"],"realm":"shared","params":[{"name":"tbl","description":"Table to reverse"}],"class":"function","name":"reverse","description":" Returns a reversed copy of a sequential table. Any non-sequential and non-numeric keyvalue pairs will not be copied"},"empty":{"realm":"shared","params":[{"name":"tbl","description":"The table to empty"}],"class":"function","name":"empty","description":" Removes all values from a table"},"random":{"returns":["A random value from the table","The key associated with the random value"],"realm":"shared","params":[{"name":"tbl","description":"The table to choose from"}],"class":"function","name":"random","description":" Returns a random value from the supplied table."},"toString":{"realm":"shared","params":[{"name":"tbl","description":"The table to iterate over"},{"name":"displayName","description":"Optional name for the table"},{"name":"niceFormatting","description":"Optional, adds new lines and tabs to the string. Defaults to false"}],"class":"function","name":"toString","description":" Converts a table into a string"},"maxn":{"returns":["The highest numerical key"],"realm":"shared","params":[{"name":"tbl","description":"The table to search"}],"class":"function","name":"maxn","description":" Returns the highest numerical key."},"hasValue":{"returns":["Returns true if the table has that value, false otherwise"],"realm":"shared","params":[{"name":"tbl","description":"Table to check"},{"name":"val","description":"Value to search for"}],"class":"function","name":"hasValue","description":" Checks if a table has a value. This function is very inefficient for large tables (O(n))."},"inherit":{"returns":["The target table"],"realm":"shared","params":[{"name":"target","description":"Table to copy data to"},{"name":"base","description":"Table to copy data from"}],"class":"function","name":"inherit","description":" Copies any missing data from base to target, and sets the target's BaseClass member to the base table's pointer."},"foreachi":{"realm":"shared","params":[{"name":"tbl","description":"The table to iterate over"},{"name":"func","description":"The function to run for each index"}],"class":"function","name":"foreachi","description":" Iterates for each numeric index in the table in order (DEPRECATED! You should use ipairs() instead)"},"getKeys":{"returns":["Table of keys"],"realm":"shared","params":[{"name":"tbl","description":"The table to get keys of"}],"class":"function","name":"getKeys","description":" Returns all keys of a table"},"add":{"returns":["The target table"],"realm":"shared","params":[{"name":"target","description":"The table to insert the new values into"},{"name":"source","description":"The table to retrieve the values from"}],"class":"function","name":"add","description":" Adds the contents from one table into another. The target table will be modified."},"insert":{"realm":"shared","params":[{"name":"tbl","description":"The table to insert the variable into"},{"name":"pos","description":"The position in the table to insert the variable. If the third argument is not provided, this argument becomes the value to insert at the end of given table"},{"name":"val","description":"The variable to insert into the table"}],"class":"function","name":"insert","description":" Inserts a value into a table at the end of the table or at the given position."},"sort":{"realm":"shared","params":[{"name":"tbl","description":"The table to sort"},{"name":"If","description":"specified, the function will be called with 2 parameters each. Return true in this function if you want the first parameter to come first in the sorted array"}],"class":"function","name":"sort","description":" Sorts a table either ascending or by the given sort function"},"getWinningKey":{"returns":["Winning key"],"realm":"shared","params":[{"name":"tbl","description":"The table to search in"}],"class":"function","name":"getWinningKey","description":" Returns a key of the supplied table with the highest number value."},"sortByKey":{"realm":"shared","params":[{"name":"tbl","description":"Table to sort. All values of this table must be of same type"},{"name":"descending","description":"Optional, should the order be descending? Defaults to false"}],"class":"function","name":"sortByKey","description":" Returns a list of keys sorted based on values of those keys."},"removeByValue":{"returns":["The key at which the value was found, or false if the value was not found"],"realm":"shared","params":[{"name":"tbl","description":"The table that will be searched"},{"name":"val","description":"The value to find within the table"}],"class":"function","name":"removeByValue","description":" Removes the first instance of a given value from the specified table with table.remove, then returns the key that the value was found at"},"getLastKey":{"returns":["Last key"],"realm":"shared","params":[{"name":"tbl","description":"The table to get key of"}],"class":"function","name":"getLastKey","description":" Returns the last key found in the given table. (DEPRECATED! Use the # operator instead)\n Non-numerically indexed tables are not ordered and do not have a last key"},"getFirstKey":{"returns":["First key"],"realm":"shared","params":[{"name":"tbl","description":"Table to retrieve key from"}],"class":"function","name":"getFirstKey","description":" Returns first key of the table (DEPRECATED! It may be changed or removed in a future update. Instead, expect the first key to be 1)\n Non-numerically indexed tables are not ordered and do not have a first key."},"getFirstValue":{"realm":"shared","params":[{"name":"tbl","description":"Table to retrieve value from"}],"class":"function","name":"getFirstValue","description":" Returns first value found in the table. (DEPRECATED! It may be changed or removed in a future update. Instead, index the table with a key of 1)\n Non-numerically indexed tables are not ordered and do not have a first key."},"getn":{"returns":["Sequential length"],"realm":"shared","params":[{"name":"tbl","description":"The table to check"}],"class":"function","name":"getn","description":" Returns the length of the table. (DEPRECATED! Use the # operator instead)"},"remove":{"returns":["The value that was removed"],"realm":"shared","params":[{"name":"tbl","description":"The table to remove the value from"},{"name":"index","description":"Optional index of the value to remove. Defaults to #tbl"}],"class":"function","name":"remove","description":" Removes a value from a table and shifts any other values down to fill the gap."},"clearKeys":{"returns":["Table with integer keys"],"realm":"shared","params":[{"name":"tbl","description":"The original table to modify"},{"name":"saveKeys","description":"Optional save the keys within each member table. This will insert a new field __key into each value, and should not be used if the table contains non-table values. Defaults to false"}],"class":"function","name":"clearKeys","description":" Changes all keys to sequential integers. This creates a new table object and does not affect the original."},"copyFromTo":{"realm":"shared","params":[{"name":"source","description":"The table to copy from"},{"name":"target","description":"The table to write to"}],"class":"function","name":"copyFromTo","description":" Empties the target table, and merges all values from the source table into it."},"count":{"returns":["The number of keyvalue pairs"],"realm":"shared","params":[{"name":"tbl","description":"The table to count the keys of"}],"class":"function","name":"count","description":" Counts the amount of keys in a table. This should only be used when a table is not numerically and sequentially indexed, for those table consider # operator"},"concat":{"returns":["Concatenated string"],"realm":"shared","params":[{"name":"tbl","description":"The table to concatenate"},{"name":"concatenator","description":"A seperator to insert between each string"},{"name":"startPos","description":"Optional key to start at. Defaults to 1"},{"name":"endPos","description":"Optional key to end at. Defaults to #tbl"}],"class":"function","name":"concat","description":" Concatenates the contents of a table to a string."},"keyFromValue":{"returns":["Found key"],"realm":"shared","params":[{"name":"tbl","description":"Table to search"},{"name":"val","description":"Value to search for"}],"class":"function","name":"keyFromValue","description":" Returns the first key found to be containing the supplied value."}},"fields":[],"libtbl":["table_library"],"realm":"shared","tables":[],"class":"library","name":"table","description":" Lua table library https://wiki.garrysmod.com/page/Category:table"},"sounds":{"methods":{"soundsLeft":{"returns":["The number of sounds left"],"realm":"shared","class":"function","name":"soundsLeft","description":" Returns the number of sounds left that can be created"},"create":{"returns":["Sound Object"],"realm":"shared","params":[{"name":"ent","description":"Entity to attach sound to."},{"name":"path","description":"Filepath to the sound file."},{"name":"nofilter","description":"(Optional) Boolean Make the sound play for everyone regardless of range or location. Only affects Server-side sounds."}],"class":"function","name":"create","description":" Creates a sound and attaches it to an entity"},"canCreate":{"returns":["If it is possible to make a sound"],"realm":"shared","class":"function","name":"canCreate","description":" Returns if a sound is able to be created"}},"fields":[],"libtbl":["sounds_library"],"realm":"shared","tables":[],"class":"library","name":"sounds","description":" Sounds library."},"mesh":{"methods":{"createEmpty":{"returns":["Mesh object"],"realm":"client","class":"function","name":"createEmpty","description":" Creates a mesh without any vertex data."},"parseObj":{"returns":["Table of Mesh tables. The keys correspond to the objs object names, and the values are tables of vertices that can be passed to mesh.createFromTable","Table of Mesh data. {positions = positionData, normals = normalData, texturecoords = texturecoordData, faces = faceData}"],"realm":"shared","params":[{"name":"obj","description":"The obj data"},{"name":"threaded","description":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit"},{"name":"triangulate","description":"Whether to triangulate the faces"}],"class":"function","name":"parseObj","description":" Parses obj data into a table of vertices, normals, texture coordinates, colors, and tangents"},"writeNormal":{"realm":"client","params":[{"name":"normal","description":"Vector"}],"class":"function","name":"writeNormal","description":" Sets the vertex normal"},"writeUV":{"realm":"client","params":[{"name":"stage","description":"Number, stage of the texture coordinate"},{"name":"u","description":"Number, u coordinate"},{"name":"v","description":"Number, v coordinate"}],"class":"function","name":"writeUV","description":" Sets the vertex texture coordinates"},"getModelMeshes":{"returns":["A table of tables with the following format:  string material - The material of the specific mesh table triangles - A table of MeshVertex structures ready to be fed into IMesh:BuildFromTriangles table verticies - A table of MeshVertex structures representing all the vertexes of the mesh. This table is used internally to generate the \"triangles\" table. Each MeshVertex structure returned also has an extra table of tables field called \"weights\" with the following data:  number boneID - The bone this vertex is attached to number weight - How \"strong\" this vertex is attached to the bone. A vertex can be attached to multiple bones at once."],"realm":"client","params":[{"name":"model","description":"The full path to a model to get the visual meshes of."},{"name":"lod","description":"The lod of the model to use."},{"name":"bodygroupMask","description":"The bodygroupMask of the model to use."}],"class":"function","name":"getModelMeshes","description":" Returns a table of visual meshes of given model or nil if the model is invalid"},"trianglesLeft":{"returns":["Number of triangles that can be created"],"realm":"client","class":"function","name":"trianglesLeft","description":" Returns how many triangles can be created"},"writeColor":{"realm":"client","params":[{"name":"r","description":"Number, red value"},{"name":"g","description":"Number, green value"},{"name":"b","description":"Number, blue value"},{"name":"a","description":"Number, alpha value"}],"class":"function","name":"writeColor","description":" Sets the vertex color by RGBA values"},"writePosition":{"realm":"client","params":[{"name":"position","description":"Vector"}],"class":"function","name":"writePosition","description":" Sets the vertex position"},"trianglesLeftRender":{"returns":["Number of triangles that can be rendered"],"realm":"client","class":"function","name":"trianglesLeftRender","description":" Returns how many triangles can be rendered"},"createFromObj":{"returns":["Table of Mesh objects. The keys correspond to the objs object names"],"realm":"client","params":[{"name":"obj","description":"The obj file data"},{"name":"threaded","description":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit"},{"name":"triangulate","description":"Whether to triangulate faces. (Consumes more CPU)"}],"class":"function","name":"createFromObj","description":" Creates a mesh from an obj file. Only supports triangular meshes with normals and texture coordinates."},"generateNormals":{"realm":"shared","params":[{"name":"vertices","description":"The table of vertices"},{"name":"inverted","description":"Optional bool, invert the normal"},{"name":"smooth_limit","description":"Optional number, smooths the normal based on the limit in radians"}],"class":"function","name":"generateNormals","description":" Generates normal vectors for the provided vertices table"},"advanceVertex":{"description":" Pushes the vertex data onto the render stack","class":"function","name":"advanceVertex","realm":"client"},"writeQuadEasy":{"realm":"client","params":[{"name":"position","description":"Vector"},{"name":"normal","description":"Vector"},{"name":"w","description":"Number"},{"name":"h","description":"Number"}],"class":"function","name":"writeQuadEasy","description":" Draws a quad using a position, normal and size"},"generateTangents":{"realm":"shared","params":[{"name":"vertices","description":"The table of vertices"}],"class":"function","name":"generateTangents","description":" Generates the tangents for the provided vertices table"},"writeQuad":{"realm":"client","params":[{"name":"v1","description":"Vector, vertex1 position"},{"name":"v2","description":"Vector, vertex2 position"},{"name":"v3","description":"Vector, vertex3 position"},{"name":"v4","description":"Vector, vertex4 position"}],"class":"function","name":"writeQuad","description":" Draws a quad using 4 vertices"},"generateUV":{"realm":"shared","params":[{"name":"vertices","description":"The table of vertices"},{"name":"scale","description":"The scale of the uvs"}],"class":"function","name":"generateUV","description":" Generates the uv for the provided vertices table"},"createFromTable":{"returns":["Mesh object"],"realm":"client","params":[{"name":"verteces","description":"Table containing vertex data. http://wiki.facepunch.com/gmod/Structures/MeshVertex"},{"name":"threaded","description":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit. The thread will yield with number of vertices remaining to be processed. After 0 is yielded, the final expensive phase starts."}],"class":"function","name":"createFromTable","description":" Creates a mesh from vertex data."},"generate":{"realm":"client","params":[{"name":"mesh_obj","description":"Optional Mesh object, mesh to build. (default: nil)"},{"name":"prim_type","description":"Int, primitive type, see MATERIAL"},{"name":"prim_count","description":"Int, the amount of primitives"},{"name":"func","description":"The function provided that will generate the mesh vertices"}],"class":"function","name":"generate","description":" Generates mesh data. If an Mesh object is passed, it will populate that mesh with the data. Otherwise, it will render directly to renderer."},"writeUserData":{"realm":"client","params":[{"name":"x","description":"Number"},{"name":"y","description":"Number"},{"name":"z","description":"Number"},{"name":"handedness","description":"Number"}],"class":"function","name":"writeUserData","description":" Sets the vertex tangent user data"}},"fields":[],"libtbl":["mesh_library"],"realm":"shared","tables":[],"class":"library","name":"mesh","description":" Mesh library."},"bit":{"methods":{"stringstream":{"realm":"shared","params":[{"name":"stream","description":"A string to set the initial buffer to (default \"\")"},{"name":"i","description":"The initial buffer pointer (default 1)"},{"name":"endian","description":"The endianness of number types. \"big\" or \"little\" (default \"little\")"}],"class":"function","name":"stringstream","description":" Creates a StringStream object"},"rol":{"description":"","class":"function","name":"rol","realm":"shared"},"bor":{"description":"","class":"function","name":"bor","realm":"shared"},"arshift":{"description":"","class":"function","name":"arshift","realm":"shared"},"bswap":{"description":"","class":"function","name":"bswap","realm":"shared"},"bnot":{"description":"","class":"function","name":"bnot","realm":"shared"},"rshift":{"description":"","class":"function","name":"rshift","realm":"shared"},"ror":{"description":"","class":"function","name":"ror","realm":"shared"},"bxor":{"description":"","class":"function","name":"bxor","realm":"shared"},"tobit":{"description":"","class":"function","name":"tobit","realm":"shared"},"lshift":{"description":"","class":"function","name":"lshift","realm":"shared"},"tohex":{"description":"","class":"function","name":"tohex","realm":"shared"},"band":{"description":"","class":"function","name":"band","realm":"shared"}},"fields":[],"libtbl":["bit_library"],"realm":"shared","tables":[],"class":"library","name":"bit","description":" Bit library http://wiki.facepunch.com/gmod/Category:bit"},"input":{"methods":{"isControlLocked":{"returns":["Whether the player's control is locked"],"realm":"client","class":"function","name":"isControlLocked","description":" Gets whether the player's control is currenty locked"},"isKeyDown":{"returns":["True if the key is down"],"realm":"client","params":[{"name":"key","description":"The key id, see input"}],"class":"function","name":"isKeyDown","description":" Gets whether a key is down"},"enableCursor":{"realm":"client","params":[{"name":"enabled","description":"Whether or not the cursor should be enabled"}],"class":"function","name":"enableCursor","description":" Sets the state of the mouse cursor"},"getCursorVisible":{"returns":["The cursor's visibility"],"realm":"client","class":"function","name":"getCursorVisible","description":" Gets whether the cursor is visible on the screen"},"lockControls":{"realm":"client","params":[{"name":"enabled","description":"Whether to lock or unlock the controls"}],"class":"function","name":"lockControls","description":" Locks game controls for typing purposes. Alt will unlock the controls. Has a 10 second cooldown."},"screenToVector":{"returns":["Aim vector"],"realm":"client","params":[{"name":"x","description":"X coordinate on the screen"},{"name":"y","description":"Y coordinate on the screen"}],"class":"function","name":"screenToVector","description":"Translates position on player's screen to aim vector"},"getKeyName":{"returns":["The name of the key"],"realm":"client","params":[{"name":"key","description":"The key id, see input"}],"class":"function","name":"getKeyName","description":" Gets the name of a key from the id"},"isShiftDown":{"returns":["True if the shift key is down"],"realm":"client","class":"function","name":"isShiftDown","description":" Gets whether the shift key is down"},"getCursorPos":{"returns":["The x position of the mouse","The y position of the mouse"],"realm":"client","class":"function","name":"getCursorPos","description":" Gets the position of the mouse"},"canLockControls":{"returns":["Whether the player's control can be locked"],"realm":"client","class":"function","name":"canLockControls","description":" Gets whether the player's control can be locked"},"isMouseDown":{"returns":["True if the key is down"],"realm":"client","params":[{"name":"key","description":"The mouse button id, see input"}],"class":"function","name":"isMouseDown","description":" Gets whether a mouse button is down"},"selectWeapon":{"realm":"client","params":[{"name":"weapon","description":"The weapon entity to select"}],"class":"function","name":"selectWeapon","description":" Makes the local player select a weapon"},"isControlDown":{"returns":["True if the control key is down"],"realm":"client","class":"function","name":"isControlDown","description":" Gets whether the control key is down"},"lookupBinding":{"returns":["The id of the first key bound","The name of the first key bound"],"realm":"client","params":[{"name":"binding","description":"The name of the bind"}],"class":"function","name":"lookupBinding","description":" Gets the first key that is bound to the command passed"}},"fields":[],"libtbl":["input_library"],"realm":"shared","tables":[],"class":"library","name":"input","description":" Input library."},"effect":{"methods":{"particleEmittersLeft":{"returns":["number"],"realm":"client","class":"function","name":"particleEmittersLeft","description":" Returns number of particle emitters left able to be created"},"create":{"returns":["Effect Object"],"realm":"shared","class":"function","name":"create","description":" Creates an effect data structure"},"effectsLeft":{"returns":["number of effects able to be created"],"realm":"shared","class":"function","name":"effectsLeft","description":" Returns number of effects able to be created"}},"fields":[],"libtbl":["effect_library"],"realm":"shared","tables":[],"class":"library","name":"effect","description":" Effects library."},"notification":{"methods":{"addProgress":{"realm":"client","params":[{"name":"id","description":"String index of the notification"},{"name":"text","description":"The text to display"}],"class":"function","name":"addProgress","description":" Displays a notification with an animated progress bar, will persist unless killed or chip is removed."},"kill":{"realm":"client","params":[{"name":"id","description":"String index of the notification to kill"}],"class":"function","name":"kill","description":" Removes the notification with the given index after 0.8 seconds"},"addLegacy":{"realm":"client","params":[{"name":"text","description":"The text to display"},{"name":"type","description":"Determines the notification method."},{"name":"length","description":"Time in seconds to display the notification (Max length of 30)"}],"class":"function","name":"addLegacy","description":" Displays a standard notification.\nNOTIFY.GENERIC\nNOTIFY.ERROR\nNOTIFY.UNDO\nNOTIFY.HINT\nNOTIFY.CLEANUP"}},"fields":[],"libtbl":["notification_library"],"realm":"client","tables":[],"class":"library","name":"notification","description":" Notification library. Allows the user to display hints on the bottom right of their screen"},"socket":{"methods":[],"fields":[],"libtbl":["socket_library"],"realm":"client","tables":[],"class":"library","name":"socket","description":" Socket library. Only usable by owner of starfall.\n Beware \"Blocking\" functions; they will freeze the game. See http://w3.impa.br/~diego/software/luasocket/socket.html\n Install the gmcl_socket.core_*.dll binary file to lua/bin and create a 'gm_socket_whitelist.txt' file in steamapps/common\n Each line in the whitelist will allow luasocket to access the specified domain and port. They are formatted as 'domain:port' e.g. 'garrysmod.com:80', '*.com:80' '95.123.12.22:27015'"},"hook":{"methods":{"run":{"realm":"shared","params":[{"name":"hookname","description":"The hook name"},{"name":"arguments","description":""}],"class":"function","name":"run","description":" Run a hook"},"add":{"realm":"shared","params":[{"name":"hookname","description":"Name of the event"},{"name":"name","description":"Unique identifier"},{"name":"func","description":"Function to run"}],"class":"function","name":"add","description":" Sets a hook function"},"remove":{"realm":"shared","params":[{"name":"hookname","description":"The hook name"},{"name":"name","description":"The unique name for this hook"}],"class":"function","name":"remove","description":" Remove a hook"},"runRemote":{"returns":["tbl A list of the resultset of each called hook"],"realm":"shared","params":[{"name":"recipient","description":"Starfall entity to call the hook on. Nil to run on every starfall entity"},{"name":"Payload","description":". These parameters will be used to call the hook functions"}],"class":"function","name":"runRemote","description":" Run a hook remotely.\n This will call the hook \"remote\" on either a specified entity or all instances on the server/client"}},"fields":[],"libtbl":["hook_library"],"realm":"shared","tables":[],"class":"library","name":"hook","description":" Deals with hooks"},"sql":{"methods":{"query":{"returns":["Query results as a table, nil if the query returned no data."],"realm":"client","params":[{"name":"query","description":"The query to execute."}],"class":"function","name":"query","description":" Performs a query on the local SQLite database."},"SQLStr":{"returns":["The escaped input."],"realm":"client","params":[{"name":"str","description":"The string to be escaped."},{"name":"bNoQuotes","description":"Set this as true, and the function will not wrap the input string in apostrophes."}],"class":"function","name":"SQLStr","description":" Escapes dangerous characters and symbols from user input used in an SQLite SQL Query."},"tableExists":{"returns":["False if the table does not exist, true if it does."],"realm":"client","params":[{"name":"tabname","description":"The table to check for."}],"class":"function","name":"tableExists","description":" Checks if a table exists within the local SQLite database."},"tableRemove":{"returns":["True if the table was successfully removed, false if not."],"realm":"client","params":[{"name":"tabname","description":"The table to remove."}],"class":"function","name":"tableRemove","description":" Removes a table within the local SQLite database."}},"fields":[],"libtbl":["sql_library"],"realm":"client","tables":[],"class":"library","name":"sql","description":" SQL library."},"light":{"methods":{"create":{"returns":["Dynamic light"],"realm":"client","params":[{"name":"pos","description":"The position of the light"},{"name":"size","description":"The size of the light. Must be lower than sf_light_maxsize"},{"name":"brightness","description":"The brightness of the light"},{"name":"color","description":"The color of the light"}],"class":"function","name":"create","description":" Creates a dynamic light (make sure to draw it)"}},"fields":[],"libtbl":["light_library"],"realm":"client","tables":[],"class":"library","name":"light","description":" Light library."},"joystick":{"methods":{"numJoysticks":{"returns":["Number of joysticks"],"realm":"client","class":"function","name":"numJoysticks","description":" Gets the number of detected joysticks."},"numButtons":{"returns":["Number of buttons"],"realm":"client","params":[{"name":"enum","description":"Joystick number. Starts at 0"}],"class":"function","name":"numButtons","description":" Gets the number of detected buttons on a joystick"},"numPovs":{"returns":["Number of povs"],"realm":"client","params":[{"name":"enum","description":"Joystick number. Starts at 0"}],"class":"function","name":"numPovs","description":" Gets the number of detected povs on a joystick"},"numAxes":{"returns":["Number of axes"],"realm":"client","params":[{"name":"enum","description":"Joystick number. Starts at 0"}],"class":"function","name":"numAxes","description":" Gets the number of detected axes on a joystick"},"getAxis":{"returns":["0 - 65535 where 32767 is the middle."],"realm":"client","params":[{"name":"enum","description":"Joystick number. Starts at 0"},{"name":"axis","description":"Joystick axis number. Ranges from 0 to 7."}],"class":"function","name":"getAxis","description":" Gets the axis data value."},"getButton":{"returns":["0 or 1"],"realm":"client","params":[{"name":"enum","description":"Joystick number. Starts at 0"},{"name":"button","description":"Joystick button number. Starts at 0"}],"class":"function","name":"getButton","description":" Returns if the button is pushed or not"},"getName":{"returns":["Name of the device"],"realm":"client","params":[{"name":"enum","description":"Joystick number. Starts at 0"}],"class":"function","name":"getName","description":" Gets the hardware name of the joystick"},"getPov":{"returns":["0 - 65535 where 32767 is the middle."],"realm":"client","params":[{"name":"enum","description":"Joystick number. Starts at 0"},{"name":"pov","description":"Joystick pov number. Ranges from 0 to 7."}],"class":"function","name":"getPov","description":" Gets the pov data value."}},"fields":[],"libtbl":["joystick_library"],"realm":"client","tables":[],"class":"library","name":"joystick","description":" Joystick library."},"particleEffect":{"methods":{"attach":{"returns":["ParticleEffect type."],"realm":"client","params":[{"name":"entity","description":"Entity to attach to"},{"name":"name","description":"Name of the particle effect"},{"name":"pattach","description":"PATTACH enum"},{"name":"options","description":"Table of options"}],"class":"function","name":"attach","description":" Attaches a particleEffect to an entity."}},"fields":[],"libtbl":["particleef_library"],"realm":"client","tables":[],"class":"library","name":"particleEffect","description":" ParticleEffect library."},"timer":{"methods":{"exists":{"returns":["bool if the timer exists"],"realm":"shared","params":[{"name":"name","description":"The timer name"}],"class":"function","name":"exists","description":" Checks if a timer exists"},"toggle":{"returns":["status of the timer."],"realm":"shared","params":[{"name":"name","description":"The timer name"}],"class":"function","name":"toggle","description":" Runs either timer.pause or timer.unpause based on the timer's current status."},"create":{"realm":"shared","params":[{"name":"name","description":"The timer name"},{"name":"delay","description":"The time, in seconds, to set the timer to."},{"name":"reps","description":"The repititions of the timer. 0 = infinte"},{"name":"func","description":"The function to call when the timer is fired"}],"class":"function","name":"create","description":" Creates (and starts) a timer"},"getTimersLeft":{"returns":["Number of available timers"],"realm":"shared","class":"function","name":"getTimersLeft","description":" Returns number of available timers"},"start":{"returns":["true if the timer exists, false if it doesn't."],"realm":"shared","params":[{"name":"name","description":"The timer name"}],"class":"function","name":"start","description":" Starts a timer"},"timeleft":{"returns":["The amount of time left (in seconds). If the timer is paused, the amount will be negative. Nil if timer doesnt exist"],"realm":"shared","params":[{"name":"name","description":"The timer name"}],"class":"function","name":"timeleft","description":" Returns amount of time left (in seconds) before the timer executes its function."},"frametime":{"description":" Returns time between frames on client and ticks on server. Same thing as G.FrameTime in GLua","class":"function","name":"frametime","realm":"shared"},"adjust":{"returns":["true if succeeded"],"realm":"shared","params":[{"name":"name","description":"The timer name"},{"name":"delay","description":"The time, in seconds, to set the timer to."},{"name":"reps","description":"(Optional) The repititions of the timer. 0 = infinte, nil = 1"},{"name":"func","description":"(Optional) The function to call when the timer is fired"}],"class":"function","name":"adjust","description":" Adjusts a timer"},"pause":{"returns":["false if the timer didn't exist or was already paused, true otherwise."],"realm":"shared","params":[{"name":"name","description":"The timer name"}],"class":"function","name":"pause","description":" Pauses a timer"},"systime":{"description":" Returns a highly accurate time in seconds since the start up, ideal for benchmarking.","class":"function","name":"systime","realm":"shared"},"repsleft":{"returns":["The amount of executions left. Nil if timer doesnt exist"],"realm":"shared","params":[{"name":"name","description":"The timer name"}],"class":"function","name":"repsleft","description":" Returns amount of repetitions/executions left before the timer destroys itself."},"remove":{"realm":"shared","params":[{"name":"name","description":"The timer name"}],"class":"function","name":"remove","description":" Stops and removes the timer."},"realtime":{"description":" Returns the uptime of the game/server in seconds (to at least 4 decimal places)","class":"function","name":"realtime","realm":"shared"},"stop":{"returns":["false if the timer didn't exist or was already stopped, true otherwise."],"realm":"shared","params":[{"name":"name","description":"The timer name"}],"class":"function","name":"stop","description":" Stops a timer"},"curtime":{"description":" Returns the uptime of the server in seconds (to at least 4 decimal places)","class":"function","name":"curtime","realm":"shared"},"simple":{"realm":"shared","params":[{"name":"delay","description":"the time, in second, to set the timer to"},{"name":"func","description":"the function to call when the timer is fired"}],"class":"function","name":"simple","description":" Creates a simple timer, has no name, can't be stopped, paused, or destroyed."},"unpause":{"returns":["false if the timer didn't exist or was already running, true otherwise."],"realm":"shared","params":[{"name":"name","description":"The timer name"}],"class":"function","name":"unpause","description":" Unpauses a timer"}},"fields":[],"libtbl":["timer_library"],"realm":"shared","tables":[],"class":"library","name":"timer","description":" Deals with time and timers."},"holograms":{"methods":{"removeAll":{"description":" Removes all holograms created by the calling chip","class":"function","name":"removeAll","realm":"shared"},"canSpawn":{"returns":["True if user can spawn holograms, False if not."],"realm":"shared","class":"function","name":"canSpawn","description":" Checks if a user can spawn anymore holograms."},"create":{"returns":["The hologram object"],"realm":"shared","params":[{"name":"pos","description":"The position to create the hologram"},{"name":"ang","description":"The angle to create the hologram"},{"name":"model","description":"The model to give the hologram"},{"name":"scale","description":"(Optional) The scale to give the hologram"}],"class":"function","name":"create","description":" Creates a hologram."},"hologramsLeft":{"returns":["number of holograms able to be spawned"],"realm":"shared","class":"function","name":"hologramsLeft","description":" Checks how many holograms can be spawned"}},"fields":[],"libtbl":["holograms_library"],"realm":"shared","tables":[],"class":"library","name":"holograms","description":" Library for creating and manipulating physics-less models AKA \"Holograms\"."},"os":{"methods":{"date":{"returns":["If format is equal to '*t' or '!*t' then it will return a table with DateData structure, otherwise a string"],"realm":"shared","params":[{"name":"format","description":"The format string. If starts with an '!', it will use UTC timezone rather than the local timezone"},{"name":"time","description":"Time to use for the format"}],"class":"function","name":"date","description":" Returns the date/time as a formatted string or in a table.\n See https://wiki.facepunch.com/gmod/Structures/DateData for the table structure"},"time":{"returns":["Seconds passed since Unix epoch"],"realm":"shared","params":[{"name":"dateData","description":"Optional table to generate the time from. This table's data is interpreted as being in the local timezone"}],"class":"function","name":"time","description":" Returns the system time in seconds past the unix epoch.\n If a table is supplied, the function attempts to build a system time with the specified table members"},"clock":{"returns":["The runtime"],"realm":"shared","class":"function","name":"clock","description":" Returns the approximate cpu time the application ran.\n This function has different precision on Linux (1/100)."},"difftime":{"returns":["Time difference"],"realm":"shared","params":[{"name":"timeA","description":"The first value"},{"name":"timeB","description":"The value to subtract"}],"class":"function","name":"difftime","description":" Subtracts the second of the first value and rounds the result"}},"fields":[],"libtbl":["os_library"],"realm":"shared","tables":[],"class":"library","name":"os","description":" Lua os library https://wiki.garrysmod.com/page/Category:os"},"json":{"methods":{"decode":{"returns":["Table representing the JSON object"],"realm":"shared","params":[{"name":"s","description":"String to decode"}],"class":"function","name":"decode","description":" Convert JSON string to table"},"encode":{"returns":["JSON encoded string representation of the table"],"realm":"shared","params":[{"name":"tbl","description":"Table to encode"},{"name":"prettyPrint","description":"Optional. If true, formats and indents the resulting JSON"}],"class":"function","name":"encode","description":" Convert table to JSON string"}},"fields":[],"libtbl":["json_library"],"realm":"shared","tables":[],"class":"library","name":"json","description":" JSON library"},"math":{"methods":{"ceil":{"returns":["Rounded number"],"realm":"shared","params":[{"name":"n","description":"Number to be rounded"}],"class":"function","name":"ceil","description":" Rounds a number up."},"tan":{"returns":["The tangent of the given angle"],"realm":"shared","params":[{"name":"ang","description":"Angle in radians"}],"class":"function","name":"tan","description":" Calculates the tangent of the given angle."},"log10":{"returns":["Logarithm of x to the base 10"],"realm":"shared","params":[{"name":"x","description":"The value to get the base from exponent from"}],"class":"function","name":"log10","description":" Returns the base-10 logarithm of x. This is usually more accurate than math.log(x, 10)."},"sign":{"returns":["-1 if negative, 1 if positive, 0 if 0"],"realm":"shared","params":[{"name":"x","description":"The number to get the sign of"}],"class":"function","name":"sign","description":" Calculates the sign of a number"},"sinh":{"returns":["The hyperbolic sine of the given angle"],"realm":"shared","params":[{"name":"ang","description":"Angle in radians"}],"class":"function","name":"sinh","description":" Calculates the hyperbolic sine of the given angle."},"dist":{"returns":["Distance between the two points"],"realm":"shared","params":[{"name":"x1","description":"X position of first point"},{"name":"y1","description":"Y position of first point"},{"name":"x2","description":"X position of second point"},{"name":"y2","description":"Y position of second point"}],"class":"function","name":"dist","description":" Calculates the difference between two points in 2D space (DEPRECATED! You should use math.distance instead)"},"approach":{"returns":["New current value, closer to the target than it was previously"],"realm":"shared","params":[{"name":"current","description":"The value we're currently at"},{"name":"target","description":"The target value. This function will never overshoot this value"},{"name":"change","description":"The amount that the current value is allowed to change by to approach the target (positive or negative)"}],"class":"function","name":"approach","description":" Gradually approaches the target value by the specified amount."},"distance":{"returns":["Distance between the two points"],"realm":"shared","params":[{"name":"x1","description":"X position of first point"},{"name":"y1","description":"Y position of first point"},{"name":"x2","description":"X position of second point"},{"name":"y2","description":"Y position of second point"}],"class":"function","name":"distance","description":" Calculates the difference between two points in 2D space"},"truncate":{"returns":["Rounded number"],"realm":"shared","params":[{"name":"val","description":"The number to truncate"},{"name":"digits","description":"The amount of digits to keep after the point"}],"class":"function","name":"truncate","description":" Rounds towards zero"},"deg":{"returns":["Angle in degrees"],"realm":"shared","params":[{"name":"rad","description":"Angle in radians to be converted"}],"class":"function","name":"deg","description":" Converts radians to degrees"},"intToBin":{"returns":["Binary number string. The length of this will always be a multiple of 3"],"realm":"shared","params":[{"name":"int","description":"Number to be converted"}],"class":"function","name":"intToBin","description":" Converts an integer to a binary (base-2) string."},"atan2":{"returns":["Angle of the line from (0, 0) to (x, y) in radians, in the range -pi to pi"],"realm":"shared","params":[{"name":"y","description":"The Y coordinate"},{"name":"x","description":"The X coordinate"}],"class":"function","name":"atan2","description":" Functions like math.atan(y / x), except it also takes into account the quadrant of the angle and so doesn't have a limited range of output."},"min":{"returns":["The smallest number"],"realm":"shared","params":[{"name":"Any","description":"amount of number values"}],"class":"function","name":"min","description":" Picks the smallest value of all provided arguments."},"frexp":{"returns":["Multiplier between 0.5 and 1","Exponent integer"],"realm":"shared","params":[{"name":"x","description":"The value to get the normalized fraction and the exponent from"}],"class":"function","name":"frexp","description":" Used to split the number value into a normalized fraction and an exponent"},"slerpQuaternion":{"returns":["Interpolated quaternion"],"realm":"shared","params":[{"name":"quat1","description":"Quaternion to start with"},{"name":"quat2","description":"Quaternion to end with"},{"name":"t","description":"Ratio, 0 = quat1; 1 = quat2"}],"class":"function","name":"slerpQuaternion","description":" Performs spherical linear interpolation between two quaternions"},"exp":{"returns":["e to the specific power"],"realm":"shared","params":[{"name":"x","description":"The exponent of the function"}],"class":"function","name":"exp","description":" Returns the x power of the Euler constant."},"random":{"returns":["Random value"],"realm":"shared","params":[{"name":"m","description":"Optional integer value. If n is not provided - upper limit; if n is provided - lower limit"},{"name":"n","description":"Optional integer value. Upper value"}],"class":"function","name":"random","description":" When called without arguments, returns a uniform pseudo-random real number in the range 0 to 1 which includes 0 but excludes 1.\n When called with an integer number m, returns a uniform pseudo-random integer in the range 1 to m inclusive.\n When called with two integer numbers m and n, returns a uniform pseudo-random integer in the range m to n inclusive."},"lerpVector":{"returns":["The interpolated vector"],"realm":"shared","params":[{"name":"ratio","description":"Ratio of progress through values"},{"name":"from","description":"Vector to begin from"},{"name":"to","description":"Vector to end at"}],"class":"function","name":"lerpVector","description":" Calculates point between first and second vector using given fraction and linear interpolation."},"rad":{"returns":["Angle in radians"],"realm":"shared","params":[{"name":"deg","description":"Angle in degrees"}],"class":"function","name":"rad","description":" Converts an angle from degrees to radians."},"nlerpQuaternion":{"returns":["Interpolated quaternion"],"realm":"shared","params":[{"name":"quat1","description":"Quaternion to start with"},{"name":"quat2","description":"Quaternion to end with"},{"name":"t","description":"Ratio, 0 = quat1; 1 = quat2"}],"class":"function","name":"nlerpQuaternion","description":" Performs normalized linear interpolation between two quaternions"},"lerpAngle":{"returns":["The interpolated angle"],"realm":"shared","params":[{"name":"ratio","description":"Ratio of progress through values"},{"name":"from","description":"Angle to begin from"},{"name":"to","description":"Angle to end at"}],"class":"function","name":"lerpAngle","description":" Calculates point between first and second angle using given fraction and linear interpolation."},"lerp":{"returns":["The result of the linear interpolation, (1 - t) * from + t * to"],"realm":"shared","params":[{"name":"t","description":"The fraction for finding the result. This number is clamped between 0 and 1"},{"name":"from","description":"The starting number. The result will be equal to this if value t is 0"},{"name":"to","description":"The ending number. The result will be equal to this if value t is 1"}],"class":"function","name":"lerp","description":" Performs a linear interpolation from the start number to the end number."},"timeFraction":{"returns":["The time fraction"],"realm":"shared","params":[{"name":"start","description":"Start time in seconds"},{"name":"end","description":"End time in seconds"},{"name":"current","description":"Current time in seconds"}],"class":"function","name":"timeFraction","description":" Calculates the fraction of where the current time is relative to the start and end times."},"log":{"returns":["Logarithm of x to the given base"],"realm":"shared","params":[{"name":"x","description":"The value to get the base from exponent from"},{"name":"base","description":"Optional logarithmic base"}],"class":"function","name":"log","description":" With one argument, returns the natural logarithm of x (to base e).\n With two arguments, return the logarithm of x to the given base, calculated as log(x) / log(base)."},"angleDifference":{"returns":["The difference between the angles between -180 and 180"],"realm":"shared","params":[{"name":"a","description":"The first angle"},{"name":"b","description":"The second angle"}],"class":"function","name":"angleDifference","description":" Calculates the difference between two angles."},"cos":{"returns":["Cosine of the angle"],"realm":"shared","params":[{"name":"angle","description":"Angle in radians"}],"class":"function","name":"cos","description":" Calculates cosine of the given angle."},"clamp":{"returns":["Clamped number"],"realm":"shared","params":[{"name":"current","description":"Input number"},{"name":"min","description":"Minimum value"},{"name":"max","description":"Maximum value"}],"class":"function","name":"clamp","description":" Clamps a number between a minimum and maximum value."},"bSplinePoint":{"returns":["Point on Bezier curve, related to tDiff"],"realm":"shared","params":[{"name":"tDiff","description":"From 0 to tMax, where alongside the spline the point will be"},{"name":"tPoints","description":"A table of Vectors. The amount cannot be less than 4"},{"name":"tMax","description":"Dictates maximum value for tDiff"}],"class":"function","name":"bSplinePoint","description":" Calculates B-Spline point."},"mod":{"returns":["The calculated modulus"],"realm":"shared","params":[{"name":"base","description":"The base value"},{"name":"mod","description":"The modulator"}],"class":"function","name":"mod","description":" Returns the modulus of the specified values. (DEPRECATED! You should use the % operator instead)"},"tanh":{"returns":["The hyperbolic tangent of the given angle"],"realm":"shared","params":[{"name":"ang","description":"Angle in radians"}],"class":"function","name":"tanh","description":" Calculates hyperbolic tangent of the given angle."},"binToInt":{"returns":["Base 10 number"],"realm":"shared","params":[{"name":"sting","description":"Binary string to convert"}],"class":"function","name":"binToInt","description":" Converts a binary string into a number."},"sin":{"returns":["Sine for given angle"],"realm":"shared","params":[{"name":"ang","description":"Angle in radians"}],"class":"function","name":"sin","description":" Calculates the sine of given angle."},"round":{"realm":"shared","params":[{"name":"value","description":"The number to be rounded"},{"name":"decimals","description":"Optional decimal places to round to. Defaults to 0"}],"class":"function","name":"round","description":" Rounds the given value to the nearest whole number or to the given decimal places."},"asin":{"returns":["Angle in radians or nothing if the argument is out of range"],"realm":"shared","params":[{"name":"sin","description":"Sine value in the range of -1 to 1"}],"class":"function","name":"asin","description":" Calculates an angle in radians, in the range -pi/2 to pi/2, which has the given sine value."},"sqrt":{"returns":["Square root of the provided value"],"realm":"shared","params":[{"name":"value","description":"The value to get the square root of"}],"class":"function","name":"sqrt","description":" Calculates square root of the number."},"max":{"returns":["The largest number"],"realm":"shared","params":[{"name":"Any","description":"amount of number values"}],"class":"function","name":"max","description":" Picks the largest value of all provided arguments."},"atan":{"returns":["Angle in radians"],"realm":"shared","params":[{"name":"tan","description":"Tangent value"}],"class":"function","name":"atan","description":" Calculates an angle in radians, in the range -pi/2 to pi/2, which has the given tangent."},"approachAngle":{"returns":["Modified angle"],"realm":"shared","params":[{"name":"currentAngle","description":"The current angle to increase"},{"name":"targetAngle","description":"The angle to increase towards"},{"name":"rate","description":"The amount to approach the target angle by"}],"class":"function","name":"approachAngle","description":" Increments an angle towards another by specified rate."},"acos":{"returns":["Angle in radians or nothing if the argument is out of range"],"realm":"shared","params":[{"name":"cos","description":"Cosine value in range of -1 to 1"}],"class":"function","name":"acos","description":" Calculates an angle in radians, between 0 and pi, which has the given cos value."},"rand":{"returns":["Random float between min and max"],"realm":"shared","params":[{"name":"min","description":"The minimum value"},{"name":"max","description":"The maximum value"}],"class":"function","name":"rand","description":" Returns a random float between min and max."},"abs":{"returns":["Absolute value"],"realm":"shared","params":[{"name":"x","description":"The number to get the absolute value of"}],"class":"function","name":"abs","description":" Calculates the absolute value of a number (effectively removes any negative sign)."},"pow":{"returns":["Exponent power of base"],"realm":"shared","params":[{"name":"base","description":"The Base number"},{"name":"exp","description":"The Exponent"}],"class":"function","name":"pow","description":"Returns x raised to the power y"},"cosh":{"returns":["The hyperbolic cosine of the angle"],"realm":"shared","params":[{"name":"angle","description":"Angle in radians"}],"class":"function","name":"cosh","description":" Calculates hyperbolic cosine of the given angle."},"modf":{"returns":["The integral component","The fractional component"],"realm":"shared","params":[{"name":"base","description":"The base value"}],"class":"function","name":"modf","description":" Returns the integral and fractional component of the modulo operation."},"easeInOut":{"returns":["Eased value"],"realm":"shared","params":[{"name":"progress","description":"Fraction of the progress to ease"},{"name":"easeIn","description":"Fraction of how much easing to begin with"},{"name":"easeOut","description":"Fraction of how much easing to end with"}],"class":"function","name":"easeInOut","description":" Calculates the progress of a value fraction, taking in to account given easing fractions."},"floor":{"returns":["Rounded number"],"realm":"shared","params":[{"name":"n","description":"Number to be rounded"}],"class":"function","name":"floor","description":" Rounds a number down."},"calcBSplineN":{"returns":["Number value"],"realm":"shared","params":[{"name":"i","description":"Number"},{"name":"k","description":"Number"},{"name":"t","description":"Number"},{"name":"tinc","description":"Number"}],"class":"function","name":"calcBSplineN","description":" Basic code for Bezier-Spline algorithm."},"normalizeAngle":{"returns":["The normalized angle"],"realm":"shared","params":[{"name":"ang","description":"The angle in degrees"}],"class":"function","name":"normalizeAngle","description":" Normalizes angle, so it returns value between -180 and 180."},"fmod":{"returns":["The calculated modulus"],"realm":"shared","params":[{"name":"base","description":"The base value"},{"name":"mod","description":"The modulator"}],"class":"function","name":"fmod","description":" Calculates the modulus of the specified values."},"remap":{"returns":["The number in the new range"],"realm":"shared","params":[{"name":"value","description":"The number value"},{"name":"inMin","description":"The minimum of the initial range"},{"name":"inMax","description":"The maximum of the initial range"},{"name":"outMin","description":"The minimum of new range"},{"name":"outMax","description":"The maximum of new range"}],"class":"function","name":"remap","description":" Remaps the value from one range to another."},"ldexp":{"returns":["Floating point reperesentation"],"realm":"shared","params":[{"name":"normalizedFraction","description":"The value to get the normalized fraction and the exponent from"},{"name":"exponent","description":"The value to get the normalized fraction and the exponent from"}],"class":"function","name":"ldexp","description":" Takes a normalised number and returns the floating point representation."}},"tables":[],"fields":[],"realm":"shared","libtbl":["math_library"],"class":"library","name":"math","description":" Lua math library https://wiki.garrysmod.com/page/Category:math"},"string":{"methods":{"getPathFromFilename":{"returns":["The path"],"realm":"shared","params":[{"name":"str","description":"File-path to get the file extensions from"}],"class":"function","name":"getPathFromFilename","description":" Returns the path only from a file's path, excluding the file itself."},"format":{"returns":["The formatted string"],"realm":"shared","params":[{"name":"str","description":"The string to be formatted"},{"name":"Vararg","description":"values to be formatted into the string"}],"class":"function","name":"format","description":" Formats the specified values into the string given. http://www.cplusplus.com/reference/cstdio/printf/"},"len":{"returns":["Length of the string"],"realm":"shared","params":[{"name":"str","description":"The string to find the length of"}],"class":"function","name":"len","description":" Counts the number of characters in the string. This is equivalent to using the # operator."},"comma":{"returns":["String with commas inserted"],"realm":"shared","params":[{"name":"num","description":"The number to be separated by commas"}],"class":"function","name":"comma","description":" Inserts commas for every third digit."},"javascriptSafe":{"returns":["The safe string"],"realm":"shared","params":[{"name":"str","description":"The string that should be escaped"}],"class":"function","name":"javascriptSafe","description":" Escapes special characters for JavaScript in a string, making the string safe for inclusion in to JavaScript strings."},"gsub":{"returns":["String with replaced parts","Replacements count"],"realm":"shared","params":[{"name":"str","description":"String which should be modified."},{"name":"pattern","description":"The pattern that defines what should be matched and eventually be replaced."},{"name":"replacement","description":"If string: matched sequence will be replaced with it; If table: matched sequence will be used as key; If function: matches will be passed as parameters to the function (return to replace)"},{"name":"Optional","description":"maximum number of replacements to be made"}],"class":"function","name":"gsub","description":" This functions main purpose is to replace certain character sequences in a string using Patterns."},"replace":{"returns":["String with parts replaced"],"realm":"shared","params":[{"name":"str","description":"The string we are seeking to replace an occurrence(s)"},{"name":"find","description":"What we are seeking to replace"},{"name":"replace","description":"What to replace find with"}],"class":"function","name":"replace","description":" Replaces all occurrences of the supplied second string."},"formattedTime":{"returns":["Formatted string or a table"],"realm":"shared","params":[{"name":"time","description":"The time in seconds to format"},{"name":"format","description":"An optional formatting to use. If no format it specified, a table will be returned instead"}],"class":"function","name":"formattedTime","description":" Returns the time as a formatted string or table. http://www.cplusplus.com/reference/cstdio/printf/\n If format is not specified, the table will contain the following keys: ms (miliseconds); s (seconds); m (minutes); h (hours)."},"char":{"returns":["String built from given bytes"],"realm":"shared","params":[{"name":"The","description":"bytes to create the string from"}],"class":"function","name":"char","description":" Takes the given numerical bytes and converts them to a string."},"setChar":{"returns":["Modified string"],"realm":"shared","params":[{"name":"str","description":"The input string"},{"name":"index","description":"The character index, 1 is the first from left"},{"name":"replacement","description":"String to replace with"}],"class":"function","name":"setChar","description":" Sets the character at the specific index of the string."},"split":{"returns":["Table with the separated strings in numerical sequential order "],"realm":"shared","params":[{"name":"str","description":"String to split"},{"name":"separator","description":"Character(s) to split with"}],"class":"function","name":"split","description":" Splits the string into a table of strings, separated by the second argument"},"utf8len":{"returns":["The number of UTF-8 characters in the string. If there are invalid bytes, this will be false","The position of the first invalid byte. If there were no invalid bytes, this will be nil"],"realm":"shared","params":[{"name":"str","description":"The string to calculate the length of"},{"name":"startPos","description":"The starting position to get the length from"},{"name":"endPos","description":"The ending position to get the length from"}],"class":"function","name":"utf8len","description":" Returns the number of UTF-8 sequences in the given string between positions startPos and endPos (both inclusive).\n If it finds any invalid UTF-8 byte sequence, returns false as well as the position of the first invalid byte."},"getFileFromFilename":{"returns":["The filename along with it's extension"],"realm":"shared","params":[{"name":"str","description":"File-path to get the file extensions from"}],"class":"function","name":"getFileFromFilename","description":" Returns file name and extension."},"rep":{"returns":["String result"],"realm":"shared","params":[{"name":"str","description":"The string to repeat"},{"name":"rep","description":"Number of times to repeat the string"},{"name":"sep","description":"(Optional) seperator string between each repeated string"}],"class":"function","name":"rep","description":" Repeats the given string n times"},"utf8force":{"returns":["The UTF-8 string"],"realm":"shared","params":[{"name":"str","description":"The string that will become a valid UTF-8 string"}],"class":"function","name":"utf8force","description":" Forces a string to contain only valid UTF-8 data. Invalid sequences are replaced with U+FFFD (the Unicode replacement character)."},"gmatch":{"returns":["The iterator function that can be used in a for-in loop"],"realm":"shared","params":[{"name":"data","description":"The string to search in"},{"name":"pattern","description":"The pattern to search for"}],"class":"function","name":"gmatch","description":" Using Patterns, returns an iterator which will return either one value if no capture groups are defined, or any capture group matches."},"reverse":{"returns":["Reversed string"],"realm":"shared","params":[{"name":"str","description":"String to be reversed"}],"class":"function","name":"reverse","description":" Reverses a string."},"implode":{"returns":["Imploded string"],"realm":"shared","params":[{"name":"separator","description":"The separator to insert between each piece"},{"name":"pieces","description":"The table of pieces to concatenate. The keys for these must be numeric and sequential"}],"class":"function","name":"implode","description":" Joins the values of a table together to form a string. (DEPRECATED! You should use table.concat instead)"},"gfind":{"returns":["The iterator function that can be used in a for-in loop"],"realm":"shared","params":[{"name":"data","description":"The string to search in"},{"name":"pattern","description":"The pattern to search for"}],"class":"function","name":"gfind","description":" Returns an iterator function that is called for every complete match of the pattern, all sub matches will be passed as to the loop. (DEPRECATED! You should use string.gmatch instead)"},"right":{"returns":["String containing a specified number of characters from the right side of a string"],"realm":"shared","params":[{"name":"str","description":"The string to extract from"},{"name":"num","description":"Amount of chars relative to the end (starting from 1)"}],"class":"function","name":"right","description":" Returns the last n-th characters of the string."},"fromColor":{"returns":["String with the color RGBA values separated by spaces"],"realm":"shared","params":[{"name":"color","description":"The color to put in the string"}],"class":"function","name":"fromColor","description":" Converts color to a string."},"utf8offset":{"returns":["Starting byte-index of the given position"],"realm":"shared","params":[{"name":"str","description":"The string that you will get the byte position from"},{"name":"n","description":"The position to get the beginning byte position from"},{"name":"startPos","description":"The offset for n. Defaults to 1 if n >= 0, otherwise -1"}],"class":"function","name":"utf8offset","description":" Returns the byte-index of the n'th UTF-8-character after the given startPos (nil if none).\n startPos defaults to 1 when n is positive and -1 when n is negative. If n is zero,\n this function instead returns the byte-index of the UTF-8-character startPos lies within."},"utf8codes":{"returns":["The iterator (to be used in a for loop)"],"realm":"shared","params":[{"name":"str","description":"The string that you will get the codes from"}],"class":"function","name":"utf8codes","description":" Returns an iterator (like string.gmatch) which returns both the position and codepoint of each utf8 character in the string.\n It raises an error if it meets any invalid byte sequence."},"utf8codepoint":{"returns":["The codepoint number(s)"],"realm":"shared","params":[{"name":"str","description":"The string that you will get the code(s) from"},{"name":"startPos","description":"The starting byte of the string to get the codepoint of"},{"name":"endPos","description":"The ending byte of the string to get the codepoint of"}],"class":"function","name":"utf8codepoint","description":" Returns the codepoints (as numbers) from all characters in the given string that start between byte position startPos and endPos.\n It raises an error if it meets any invalid byte sequence."},"utf8char":{"returns":["UTF-8 string generated from given arguments"],"realm":"shared","params":[{"name":"Unicode","description":"code points to be converted in to a UTF-8 string"}],"class":"function","name":"utf8char","description":" Receives zero or more integers, converts each one to its corresponding UTF-8 byte sequence\n and returns a string with the concatenation of all these sequences"},"toMinutesSeconds":{"returns":["Given time in \"MM:SS\" format"],"realm":"shared","params":[{"name":"time","description":"Time in seconds"}],"class":"function","name":"toMinutesSeconds","description":" Converts time to minutes and seconds string."},"normalizePath":{"returns":["Path with all .. replaced"],"realm":"shared","params":[{"name":"str","description":"Path"}],"class":"function","name":"normalizePath","description":" Returns a path with all .. accounted for"},"niceTime":{"returns":["A nicely formatted time string"],"realm":"shared","params":[{"name":"time","description":"The number to format, in seconds"}],"class":"function","name":"niceTime","description":" Formats the supplied number (in seconds) to the highest possible time unit"},"upper":{"returns":["String with all letters upper case"],"realm":"shared","params":[{"name":"str","description":"The string to convert"}],"class":"function","name":"upper","description":" Changes any lower-case letters in a string to upper-case letters."},"sub":{"realm":"shared","params":[{"name":"str","description":"The string you'll take a sub-string out of"},{"name":"startPos","description":"The position of the first character that will be included in the sub-string"},{"name":"endPos","description":"The position of the last character to be included in the sub-string. It can be negative to count from the end"}],"class":"function","name":"sub","description":"Returns a sub-string, starting from the character at position startPos of the string (inclusive)\n and optionally ending at the character at position endPos of the string (also inclusive).\n If EndPos is not given, the rest of the string is returned."},"getChar":{"returns":["The selected character"],"realm":"shared","params":[{"name":"str","description":"The string that you will be searching with the supplied index"},{"name":"index","description":"The index's value of the string to be returned"}],"class":"function","name":"getChar","description":" Returns char value from the specified index in the supplied string. (DEPRECATED! You should use string.sub instead)"},"trimRight":{"returns":["Trimmed string"],"realm":"shared","params":[{"name":"str","description":"The string to trim"},{"name":"char","description":"Optional character to be trimmed. Defaults to space character"}],"class":"function","name":"trimRight","description":" Removes trailing spaces/characters from a string."},"trimLeft":{"returns":["Trimmed string"],"realm":"shared","params":[{"name":"str","description":"The string to trim"},{"name":"char","description":"Optional character to be trimmed. Defaults to space character"}],"class":"function","name":"trimLeft","description":" Removes leading spaces/characters from a string"},"patternSafe":{"returns":["The sanitized string"],"realm":"shared","params":[{"name":"str","description":"The string to be sanitized"}],"class":"function","name":"patternSafe","description":" Escapes all special characters within a string, making the string safe for inclusion in a Lua pattern."},"trim":{"returns":["Trimmed string"],"realm":"shared","params":[{"name":"str","description":"The string to trim"},{"name":"char","description":"Optional character to be trimmed. Defaults to space character"}],"class":"function","name":"trim","description":" Removes leading and trailing spaces/characters of a string"},"left":{"returns":["Returns a string containing a specified number of characters from the left side of a string"],"realm":"shared","params":[{"name":"str","description":"The string to extract from"},{"name":"num","description":"Amount of chars relative to the beginning (starting from 1)"}],"class":"function","name":"left","description":" Returns everything left of supplied place of that string."},"toMinutesSecondsMilliseconds":{"returns":["Returns given time in \"MM:SS:MS\" format"],"realm":"shared","params":[{"name":"time","description":"Time in seconds"}],"class":"function","name":"toMinutesSecondsMilliseconds","description":" Converts time to minutes, seconds and miliseconds string."},"stripExtension":{"returns":["Path without the extension"],"realm":"shared","params":[{"name":"The","description":"file-path to change"}],"class":"function","name":"stripExtension","description":" Removes the extension of a path"},"toColor":{"returns":["The color object"],"realm":"shared","params":[{"name":"str","description":"The string to convert from"}],"class":"function","name":"toColor","description":" Converts string with RGBA values separated by spaces into a color."},"startWith":{"returns":["True if the first string starts with the second"],"realm":"shared","params":[{"name":"str","description":"String to be checked"},{"name":"start","description":"String to check with"}],"class":"function","name":"startWith","description":" Whether or not the first string starts with the second"},"lower":{"returns":["String with all uppercase letters replaced with their lowercase variants"],"realm":"shared","params":[{"name":"str","description":"The string to convert"}],"class":"function","name":"lower","description":" Changes any upper-case letters in a string to lower-case letters."},"find":{"returns":["Starting position of the found text, or nil if the text wasn't found","Ending position of found text, or nil if the text wasn't found","Matched text for each group if patterns are enabled and used, or nil if the text wasn't found"],"realm":"shared","params":[{"name":"haystack","description":"The string to search in"},{"name":"needle","description":"The string to find, can contain patterns if enabled"},{"name":"start","description":"The position to start the search from, negative start position will be relative to the end position"},{"name":"noPatterns","description":"Disable patterns. Defaults to false"}],"class":"function","name":"find","description":" Attempts to find the specified substring in a string, uses Patterns by default. https://wiki.facepunch.com/gmod/Patterns"},"dump":{"returns":["The bytecode"],"realm":"shared","params":[{"name":"The","description":"function to get the bytecode of"},{"name":"True","description":"to strip the debug data, false to keep it. Defaults to false"}],"class":"function","name":"dump","description":" Returns the binary bytecode of the given function."},"explode":{"returns":["Table with the separated strings in numerical sequential order"],"realm":"shared","params":[{"name":"separator","description":"The separator that will split the string"},{"name":"str","description":"The string to split up"},{"name":"patterns","description":"Set this to true if your separator is a pattern. Defaults to false"}],"class":"function","name":"explode","description":" Splits a string up wherever it finds the given separator"},"getExtensionFromFilename":{"returns":["The extension"],"realm":"shared","params":[{"name":"str","description":"File-path to get the file extensions from"}],"class":"function","name":"getExtensionFromFilename","description":" Returns extension of the file-path."},"byte":{"returns":["Vararg numerical bytes"],"realm":"shared","params":[{"name":"str","description":"The string to get the chars from"},{"name":"start","description":"The first character of the string to get the byte of"},{"name":"end","description":"The last character of the string to get the byte of"}],"class":"function","name":"byte","description":" Returns the given string's characters in their numeric ASCII representation."},"toTable":{"returns":["A sequential table where each value is a character from the given string"],"realm":"shared","params":[{"name":"str","description":"The string to turn into a table"}],"class":"function","name":"toTable","description":" Splits the string into characters and creates a sequential table of characters.\n As a result of the encoding, non-ASCII characters will be split into more than one character in the output table.\n Each character value in the output table will always be 1 byte."},"endsWith":{"returns":["True if the first string ends with the second, or the second is empty"],"realm":"shared","params":[{"name":"str","description":"The string whose end is to be checked"},{"name":"end","description":"The string to be matched with the end of the first"}],"class":"function","name":"endsWith","description":" Whether or not the second passed string matches the end of the first."},"match":{"returns":["Vararg matched string(s)"],"realm":"shared","params":[{"name":"str","description":"String which should be searched in for matches"},{"name":"pattern","description":"The pattern that defines what should be matched"},{"name":"start","description":"The start index to start the matching from, negative to start the match from a position relative to the end"}],"class":"function","name":"match","description":" Finds a Pattern in a string."},"niceSize":{"returns":["The human-readable filesize, in Bytes/KB/MB/GB (whichever is appropriate)"],"realm":"shared","params":[{"name":"size","description":"The filesize in bytes"}],"class":"function","name":"niceSize","description":" Converts a digital filesize to human-readable text."}},"fields":[],"libtbl":["string_library"],"realm":"shared","tables":[],"class":"library","name":"string","description":" Lua string library https://wiki.garrysmod.com/page/Category:string"},"physenv":{"methods":{"getAirDensity":{"returns":["number Air Density"],"realm":"shared","class":"function","name":"getAirDensity","description":" Gets the air density."},"getPerformanceSettings":{"returns":["table Performance Settings Table."],"realm":"shared","class":"function","name":"getPerformanceSettings","description":" Gets the performance settings.</br>\n See http://wiki.facepunch.com/gmod/Structures/PhysEnvPerformanceSettings for table structure."},"getGravity":{"returns":["Vector Gravity Vector ( eg Vector(0,0,-600) )"],"realm":"shared","class":"function","name":"getGravity","description":" Gets the gravity vector"}},"fields":[],"libtbl":["physenv_lib"],"realm":"shared","tables":[],"class":"library","name":"physenv","description":" Physenv functions"},"render":{"methods":{"setRenderTargetTexture":{"realm":"client","params":[{"name":"name","description":"Name of the render target to use"}],"class":"function","name":"setRenderTargetTexture","description":" Sets the active texture to the render target with the specified name.\n Nil to reset."},"getScreenEntity":{"returns":["Entity of the screen or hud being rendered"],"realm":"client","class":"function","name":"getScreenEntity","description":" Returns the entity currently being rendered to"},"setStencilCompareFunction":{"realm":"client","params":[{"name":"compareFunction","description":""}],"class":"function","name":"setStencilCompareFunction","description":" Sets the compare function of the stencil. More: https://wiki.facepunch.com/gmod/render.SetStencilCompareFunction"},"enableScissorRect":{"realm":"client","params":[{"name":"startX","description":"X start coordinate of the scissor rect."},{"name":"startY","description":"Y start coordinate of the scissor rect."},{"name":"endX","description":"X end coordinate of the scissor rect."},{"name":"endX","description":"Y end coordinate of the scissor rect."}],"class":"function","name":"enableScissorRect","description":" Enables a scissoring rect which limits the drawing area. Only works 2D contexts such as HUD or render targets."},"getAmbientLightColor":{"returns":["Vector representing color of the light"],"realm":"client","class":"function","name":"getAmbientLightColor","description":" Returns the ambient color of the map"},"setRGBA":{"realm":"client","params":[{"name":"r","description":"Number, red value"},{"name":"g","description":"Number, green value"},{"name":"b","description":"Number, blue value"},{"name":"a","description":"Number, alpha value"}],"class":"function","name":"setRGBA","description":" Sets the draw color by RGBA values"},"setFont":{"realm":"client","params":[{"name":"font","description":"The font to use"}],"class":"function","name":"setFont","description":" Sets the font\n Use a font created by render.createFont or use one of these already defined fonts:\n \\- DebugFixed\n \\- DebugFixedSmall\n \\- Default\n \\- Marlett\n \\- Trebuchet18\n \\- Trebuchet24\n \\- HudHintTextLarge\n \\- HudHintTextSmall\n \\- CenterPrintText\n \\- HudSelectionText\n \\- CloseCaption_Normal\n \\- CloseCaption_Bold\n \\- CloseCaption_BoldItalic\n \\- ChatFont\n \\- TargetID\n \\- TargetIDSmall\n \\- HL2MPTypeDeath\n \\- BudgetLabel\n \\- HudNumbers\n \\- DermaDefault\n \\- DermaDefaultBold\n \\- DermaLarge"},"clearBuffersObeyStencil":{"realm":"client","params":[{"name":"r","description":"Value of the red channel to clear the current rt with."},{"name":"g","description":"Value of the green channel to clear the current rt with."},{"name":"b","description":"Value of the blue channel to clear the current rt with."},{"name":"depth","description":"Clear the depth buffer."}],"class":"function","name":"clearBuffersObeyStencil","description":" Clears the current rendertarget for obeying the current stencil buffer conditions."},"renderViewsLeft":{"description":" Returns how many render.renderView calls can be done in the current frame.","class":"function","name":"renderViewsLeft","realm":"client"},"isInRenderView":{"description":" Returns whether render.renderView is being executed.","class":"function","name":"isInRenderView","realm":"client"},"setLightingMode":{"realm":"client","params":[{"name":"mode","description":"The lighting mode. 0 - Default, 1 - Fullbright, 2 - Increased Fullbright"}],"class":"function","name":"setLightingMode","description":" Sets the lighting mode"},"popViewMatrix":{"description":" Pops a view matrix from the matrix stack.","class":"function","name":"popViewMatrix","realm":"client"},"overrideBlend":{"realm":"client","params":[{"name":"on","description":"Whether to control the blend mode of upcoming rendering"},{"name":"srcBlend","description":"Number http://wiki.facepunch.com/gmod/Enums/BLEND"},{"name":"destBlend","description":"Number"},{"name":"blendFunc","description":"Number http://wiki.facepunch.com/gmod/Enums/BLENDFUNC"},{"name":"srcBlendAlpha","description":"Optional Number http://wiki.facepunch.com/gmod/Enums/BLEND"},{"name":"destBlendAlpha","description":"Optional Number"},{"name":"blendFuncAlpha","description":"Optional Number http://wiki.facepunch.com/gmod/Enums/BLENDFUNC"}],"class":"function","name":"overrideBlend","description":" Enables blend mode control. Read OpenGL or DirectX docs for more info"},"setFogHeight":{"description":" Sets the height below which fog will be rendered. Only works with fog mode 2","class":"function","name":"setFogHeight","realm":"client"},"drawCircle":{"realm":"client","params":[{"name":"x","description":"Center x coordinate"},{"name":"y","description":"Center y coordinate"},{"name":"r","description":"Radius"}],"class":"function","name":"drawCircle","description":" Draws a circle outline"},"drawPixelsSubrectRGBA":{"realm":"client","params":[{"name":"dstX","description":"Destination x coordinate"},{"name":"dstY","description":"Destination y coordinate"},{"name":"srcX","description":"Source x coordinate"},{"name":"srcY","description":"Source y coordinate"},{"name":"srcW","description":"Source original width"},{"name":"srcH","description":"Source original height"},{"name":"subrectW","description":"Width of subrect"},{"name":"subrectH","description":"Height of subrect"},{"name":"dataR","description":"Red channel data."},{"name":"dataG","description":"Green channel data."},{"name":"dataB","description":"Blue channel data."},{"name":"dataA","description":"Alpha channel data."}],"class":"function","name":"drawPixelsSubrectRGBA","description":" Draws region of RGBA color channel tables to current render target."},"draw3DSprite":{"realm":"client","params":[{"name":"pos","description":"Position of the sprite."},{"name":"width","description":"Width of the sprite."},{"name":"height","description":"Height of the sprite."}],"class":"function","name":"draw3DSprite","description":" Draws a sprite in 3d space."},"drawTexturedRectRotatedFast":{"realm":"client","params":[{"name":"x","description":"X coordinate of center of rect"},{"name":"y","description":"Y coordinate of center of rect"},{"name":"w","description":"Width"},{"name":"h","description":"Height"},{"name":"rot","description":"Rotation in degrees"}],"class":"function","name":"drawTexturedRectRotatedFast","description":" Draws a rotated, textured rectangle.\n Faster, but uses integer coordinates and will get clipped by user's screen resolution"},"getDefaultFont":{"returns":["Default font"],"realm":"client","class":"function","name":"getDefaultFont","description":" Gets the default font"},"setFilterMin":{"realm":"client","params":[{"name":"val","description":"The filter function to use http://wiki.facepunch.com/gmod/Enums/TEXFILTER"}],"class":"function","name":"setFilterMin","description":" Sets the texture filtering function when viewing a far texture"},"drawPixelsRGBA":{"realm":"client","params":[{"name":"w","description":"Width of image to be drawn."},{"name":"h","description":"Height of image to be drawn."},{"name":"dataR","description":"Red channel data."},{"name":"dataG","description":"Green channel data."},{"name":"dataB","description":"Blue channel data."},{"name":"dataA","description":"Alpha channel data."}],"class":"function","name":"drawPixelsRGBA","description":" Draws RGBA color channel tables to current render target."},"drawText":{"realm":"client","params":[{"name":"x","description":"X coordinate"},{"name":"y","description":"Y coordinate"},{"name":"text","description":"Text to draw"},{"name":"alignment","description":"Text alignment"}],"class":"function","name":"drawText","description":" Draws text with newlines and tabs"},"drawRoundedBox":{"realm":"client","params":[{"name":"r","description":"The corner radius"},{"name":"x","description":"Top left corner x coordinate"},{"name":"y","description":"Top left corner y coordinate"},{"name":"w","description":"Width"},{"name":"h","description":"Height"}],"class":"function","name":"drawRoundedBox","description":" Draws a rounded rectangle using the current color"},"setMaterial":{"realm":"client","params":[{"name":"mat","description":"The material object"}],"class":"function","name":"setMaterial","description":" Sets the current render material"},"enableClipping":{"returns":["Previous clipping state."],"realm":"client","params":[{"name":"state","description":"New clipping state."}],"class":"function","name":"enableClipping","description":" Sets the status of the clip renderer, returning previous state."},"drawSimpleText":{"realm":"client","params":[{"name":"x","description":"X coordinate"},{"name":"y","description":"Y coordinate"},{"name":"text","description":"Text to draw"},{"name":"xalign","description":"Text x alignment"},{"name":"yalign","description":"Text y alignment"}],"class":"function","name":"drawSimpleText","description":" Draws text more easily and quickly but no new lines or tabs."},"draw3DBox":{"realm":"client","params":[{"name":"origin","description":"Origin of the box."},{"name":"angle","description":"Orientation of the box"},{"name":"mins","description":"Start position of the box, relative to origin."},{"name":"maxs","description":"End position of the box, relative to origin."}],"class":"function","name":"draw3DBox","description":" Draws a box in 3D space"},"createMaterial":{"returns":["The material. Use with render.setMaterial to draw with it."],"realm":"client","params":[{"name":"tx","description":"Texture file path, a http url, or image data: https://en.wikipedia.org/wiki/Data_URI_scheme"},{"name":"cb","description":"An optional callback called when loading is done. Passes nil if it fails or Passes the material, url, width, height, and layout function which can be called with x, y, w, h to reposition the image in the texture."},{"name":"done","description":"An optional callback called when the image is done loading. Passes the material, url"}],"class":"function","name":"createMaterial","description":" Looks up a texture by file name and creates an UnlitGeneric material with it.\n Also supports image URLs or image data (These will create a rendertarget for the $basetexture): https://en.wikipedia.org/wiki/Data_URI_scheme\n Make sure to store the material to use it rather than calling this slow function repeatedly.\n NOTE: This no longer supports material names. Use texture names instead (Textures are .vtf, material are .vmt)"},"drawRoundedBoxEx":{"realm":"client","params":[{"name":"r","description":"The corner radius"},{"name":"x","description":"Top left corner x coordinate"},{"name":"y","description":"Top left corner y coordinate"},{"name":"w","description":"Width"},{"name":"h","description":"Height"},{"name":"tl","description":"Boolean Top left corner"},{"name":"tr","description":"Boolean Top right corner"},{"name":"bl","description":"Boolean Bottom left corner"},{"name":"br","description":"Boolean Bottom right corner"}],"class":"function","name":"drawRoundedBoxEx","description":" Draws a rounded rectangle using the current color"},"drawRectOutline":{"realm":"client","params":[{"name":"x","description":"Top left corner x integer coordinate"},{"name":"y","description":"Top left corner y integer coordinate"},{"name":"w","description":"Width"},{"name":"h","description":"Height"},{"name":"thickness","description":"Optional inset border width"}],"class":"function","name":"drawRectOutline","description":" Draws a rectangle outline using the current color."},"parseMarkup":{"returns":["The markup object. See https://wiki.facepunch.com/gmod/markup.Parse"],"realm":"client","params":[{"name":"str","description":"The markup string to parse"},{"name":"maxsize","description":"The max width of the markup (default nil)"}],"class":"function","name":"parseMarkup","description":" Constructs a markup object for quick styled text drawing."},"popCustomClipPlane":{"description":" Removes the current active clipping plane from the clip plane stack.","class":"function","name":"popCustomClipPlane","realm":"client"},"drawTexturedRectUV":{"realm":"client","params":[{"name":"x","description":"Top left corner x"},{"name":"y","description":"Top left corner y"},{"name":"w","description":"Width"},{"name":"h","description":"Height"},{"name":"startU","description":"Texture mapping at rectangle origin"},{"name":"startV","description":"Texture mapping at rectangle origin"},{"name":"endV","description":"Texture mapping at rectangle end"},{"name":"endV","description":"Texture mapping at rectangle end"}],"class":"function","name":"drawTexturedRectUV","description":" Draws a textured rectangle with UV coordinates"},"setChipOverlay":{"realm":"client","params":[{"name":"name","description":"The name of the RT to use or nil to set it back to normal"}],"class":"function","name":"setChipOverlay","description":" Sets the overlay of the chip to a user's rendertarget"},"getResolution":{"returns":["the X size of the current render context","the Y size of the current render context"],"realm":"client","class":"function","name":"getResolution","description":" Returns the render context's width and height. If a rendertarget is selected, will return 1024, 1024"},"setFogEnd":{"realm":"client","params":[{"name":"distance","description":"End distance"}],"class":"function","name":"setFogEnd","description":" Sets distance at which the fog will reach it's target density"},"traceSurfaceColor":{"returns":["The color"],"realm":"client","params":[{"name":"vec1","description":"The starting vector"},{"name":"vec2","description":"The ending vector"}],"class":"function","name":"traceSurfaceColor","description":" Does a trace and returns the color of the textel the trace hits."},"drawPixelsSubrectRGB":{"realm":"client","params":[{"name":"dstX","description":"Destination x coordinate"},{"name":"dstY","description":"Destination y coordinate"},{"name":"srcX","description":"Source x coordinate"},{"name":"srcY","description":"Source y coordinate"},{"name":"srcW","description":"Source original width"},{"name":"srcH","description":"Source original height"},{"name":"subrectW","description":"Width of subrect"},{"name":"subrectH","description":"Height of subrect"},{"name":"dataR","description":"Red channel data."},{"name":"dataG","description":"Green channel data."},{"name":"dataB","description":"Blue channel data."}],"class":"function","name":"drawPixelsSubrectRGB","description":" Draws region of RGB color channel tables to current render target."},"drawTexturedRectRotated":{"realm":"client","params":[{"name":"x","description":"X coordinate of center of rect"},{"name":"y","description":"Y coordinate of center of rect"},{"name":"w","description":"Width"},{"name":"h","description":"Height"},{"name":"rot","description":"Rotation in degrees"}],"class":"function","name":"drawTexturedRectRotated","description":" Draws a rotated, textured rectangle."},"setFogStart":{"realm":"client","params":[{"name":"distance","description":"Start distance"}],"class":"function","name":"setFogStart","description":" Sets distance at which the fog will start appearing"},"clear":{"realm":"client","params":[{"name":"clr","description":"Color type to clear with"},{"name":"depth","description":"Boolean if should clear depth"}],"class":"function","name":"clear","description":" Clears the active render target"},"setFogDensity":{"realm":"client","params":[{"name":"density","description":"Number density between 0 and 1"}],"class":"function","name":"setFogDensity","description":" Changes density of the fog"},"setFogColor":{"realm":"client","params":[{"name":"color","description":"Color (alpha won't have any effect)"}],"class":"function","name":"setFogColor","description":" Changes color of the fog"},"setStencilReferenceValue":{"realm":"client","params":[{"name":"referenceValue","description":"Reference value."}],"class":"function","name":"setStencilReferenceValue","description":" Sets the reference value which will be used for all stencil operations. This is an unsigned integer."},"draw3DLine":{"realm":"client","params":[{"name":"startPos","description":"Starting position"},{"name":"endPos","description":"Ending position"}],"class":"function","name":"draw3DLine","description":" Draws a 3D Line"},"setFogMode":{"realm":"client","params":[{"name":"mode","description":"Fog mode"}],"class":"function","name":"setFogMode","description":" Sets the fog mode. See: https://wiki.facepunch.com/gmod/Enums/MATERIAL_FOG"},"computeDynamicLighting":{"returns":["Vector representing color of the light"],"realm":"client","params":[{"name":"pos","description":"Vector position to sample from"},{"name":"normal","description":"Normal vector of the surface"}],"class":"function","name":"computeDynamicLighting","description":" Calculates the lighting caused by dynamic lights for the specified surface"},"getLightColor":{"returns":["Vector representing color of the light"],"realm":"client","params":[{"name":"pos","description":"Vector position to sample from"}],"class":"function","name":"getLightColor","description":" Gets the light exposure on the specified position"},"computeLighting":{"returns":["Vector representing color of the light"],"realm":"client","params":[{"name":"pos","description":"Vector position to sample from"},{"name":"normal","description":"Normal vector of the surface"}],"class":"function","name":"computeLighting","description":" Calculates the light color of a certain surface"},"draw3DWireframeBox":{"realm":"client","params":[{"name":"origin","description":"Origin of the box."},{"name":"angle","description":"Orientation of the box"},{"name":"mins","description":"Start position of the box, relative to origin."},{"name":"maxs","description":"End position of the box, relative to origin."}],"class":"function","name":"draw3DWireframeBox","description":" Draws a wireframe box in 3D space"},"draw3DWireframeSphere":{"realm":"client","params":[{"name":"pos","description":"Position of the sphere"},{"name":"radius","description":"Radius of the sphere"},{"name":"longitudeSteps","description":"The amount of longitude steps. The larger this number is, the smoother the sphere is"},{"name":"latitudeSteps","description":"The amount of latitude steps. The larger this number is, the smoother the sphere is"}],"class":"function","name":"draw3DWireframeSphere","description":" Draws a wireframe sphere"},"setHUDActive":{"realm":"client","params":[{"name":"active","description":"Whether hud hooks should be active. true to force on, false to force off, nil to restore default."}],"class":"function","name":"setHUDActive","description":" Sets the current instance to allow HUD drawing. Only works for owner of the chip"},"setMaterialEffectColorModify":{"realm":"client","params":[{"name":"mat","description":"The material object to use the texture of, or the name of a rendertarget to use instead."},{"name":"cmStructure","description":"A table where each key must be of \"addr\", \"addg\", \"addb\", \"brightness\", \"color\" or \"colour\", \"contrast\", \"mulr\", \"mulg\", and \"mulb\". All keys are optional."}],"class":"function","name":"setMaterialEffectColorModify","description":" Sets the current render material to the given material or the rendertarget, applying a color modification shader to the texture. Alias: render.setMaterialEffectColourModify"},"resetStencil":{"description":" Resets stencil operations to their default behavior","class":"function","name":"resetStencil","realm":"client"},"drawTexturedRect":{"realm":"client","params":[{"name":"x","description":"Top left corner x"},{"name":"y","description":"Top left corner y"},{"name":"w","description":"Width"},{"name":"h","description":"Height"}],"class":"function","name":"drawTexturedRect","description":" Draws a textured rectangle"},"setScreenDimensions":{"realm":"client","params":[{"name":"screen","description":"The custom screen to be resized"},{"name":"x","description":"The x offset of the screen"},{"name":"y","description":"The y offset of the screen"},{"name":"w","description":"The width of the screen"},{"name":"h","description":"The height of the screen"}],"class":"function","name":"setScreenDimensions","description":" Using the custom screen model, sets the screen offset and size as long as its within bounds of -1024 to 1024 units"},"getGameResolution":{"returns":["the X size of the game window","the Y size of the game window"],"realm":"client","class":"function","name":"getGameResolution","description":" Returns width and height of the game window"},"pushCustomClipPlane":{"realm":"client","params":[{"name":"normal","description":"The normal of the clipping plane."},{"name":"distance","description":"The normal of the clipping plane."}],"class":"function","name":"pushCustomClipPlane","description":" Pushes a new clipping plane of the clip plane stack."},"renderView":{"realm":"client","params":[{"name":"tbl","description":"view The view data to be used in the rendering. See http://wiki.facepunch.com/gmod/Structures/ViewData. There's an additional key drawviewer used to tell the engine whether the local player model should be rendered."}],"class":"function","name":"renderView","description":" Renders the scene with the specified viewData to the current active render target."},"isHUDActive":{"description":" Checks if a hud component is connected to the Starfall Chip","class":"function","name":"isHUDActive","realm":"client"},"setColor":{"realm":"client","params":[{"name":"clr","description":"Color type"}],"class":"function","name":"setColor","description":" Sets the draw color"},"setTextureFromScreen":{"realm":"client","params":[{"name":"ent","description":"Screen entity"}],"class":"function","name":"setTextureFromScreen","description":" Sets the texture of a screen entity"},"getScreenInfo":{"returns":["A table describing the screen."],"realm":"client","params":[{"name":"e","description":"The screen to get info from."}],"class":"function","name":"getScreenInfo","description":" Returns information about the screen, such as world offsets, dimentions, and rotation.\n Note: this does a table copy so move it out of your draw hook"},"setBackgroundColor":{"realm":"client","params":[{"name":"col","description":"Color of background"},{"name":"screen","description":"(Optional) entity of screen"}],"class":"function","name":"setBackgroundColor","description":" Sets background color of screen"},"setStencilZFailOperation":{"realm":"client","params":[{"name":"operation","description":""}],"class":"function","name":"setStencilZFailOperation","description":" Sets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails. More: http://wiki.facepunch.com/gmod/render.SetStencilZFailOperation"},"capturePixels":{"description":" Dumps the current render target and allows the pixels to be accessed by render.readPixel.","class":"function","name":"capturePixels","realm":"client"},"drawTexturedRectFast":{"realm":"client","params":[{"name":"x","description":"Top left corner x"},{"name":"y","description":"Top left corner y"},{"name":"w","description":"Width"},{"name":"h","description":"Height"}],"class":"function","name":"drawTexturedRectFast","description":" Draws a textured rectangle\n Faster, but uses integer coordinates and will get clipped by user's screen resolution"},"drawBlurEffect":{"realm":"client","params":[{"name":"blurx","description":"The amount of horizontal blur to apply."},{"name":"blury","description":"The amount of vertical blur to apply."},{"name":"passes","description":"The number of times the blur effect is applied."}],"class":"function","name":"drawBlurEffect","description":" Applies a blur effect to the active rendertarget. This must be used with a rendertarget created beforehand."},"draw3DBeam":{"realm":"client","params":[{"name":"startPos","description":"Beam start position."},{"name":"endPos","description":"Beam end position."},{"name":"width","description":"The width of the beam."},{"name":"textureStart","description":"The start coordinate of the texture used."},{"name":"textureEnd","description":"The end coordinate of the texture used."}],"class":"function","name":"draw3DBeam","description":" Draws textured beam."},"setMaterialEffectSub":{"realm":"client","params":[{"name":"mat","description":"The material object to use the texture of, or the name of a rendertarget to use instead."}],"class":"function","name":"setMaterialEffectSub","description":" Sets the current render material to the given material or the rendertarget, applying a subtractive shader when drawn."},"cursorPos":{"returns":["x position","y position"],"realm":"client","params":[{"name":"ply","description":"player to get cursor position from (default: player())"},{"name":"screen","description":"An explicit screen to get the cursor pos of (default: The current rendering screen using 'render' hook)"}],"class":"function","name":"cursorPos","description":" Gets a 2D cursor position where ply is aiming at the current rendered screen or nil if they aren't aiming at it."},"drawPixelsRGB":{"realm":"client","params":[{"name":"w","description":"Width of image to be drawn."},{"name":"h","description":"Height of image to be drawn."},{"name":"dataR","description":"Red channel data."},{"name":"dataG","description":"Green channel data."},{"name":"dataB","description":"Blue channel data."}],"class":"function","name":"drawPixelsRGB","description":" Draws RGB color channel tables to current render target."},"drawPoly":{"realm":"client","params":[{"name":"poly","description":"Table of polygon vertices. Texture coordinates are optional. {{x=x1, y=y1, u=u1, v=v1}, ... }"}],"class":"function","name":"drawPoly","description":" Draws a polygon."},"draw3DQuad":{"realm":"client","params":[{"name":"vert1","description":"First vertex."},{"name":"vert2","description":"The second vertex."},{"name":"vert3","description":"The third vertex."},{"name":"vert4","description":"The fourth vertex."}],"class":"function","name":"draw3DQuad","description":" Draws 2 connected triangles."},"setCullMode":{"realm":"client","params":[{"name":"mode","description":"Cull mode. 0 for counter clock wise, 1 for clock wise"}],"class":"function","name":"setCullMode","description":" Changes the cull mode"},"setStencilPassOperation":{"realm":"client","params":[{"name":"operation","description":""}],"class":"function","name":"setStencilPassOperation","description":" Sets the operation to be performed on the stencil buffer values if the compare function was successful. More: http://wiki.facepunch.com/gmod/render.SetStencilPassOperation"},"readPixel":{"returns":["Color object with ( r, g, b, 255 ) from the specified pixel."],"realm":"client","params":[{"name":"x","description":"Pixel x-coordinate."},{"name":"y","description":"Pixel y-coordinate."}],"class":"function","name":"readPixel","description":" Reads the color of the specified pixel."},"selectRenderTarget":{"realm":"client","params":[{"name":"name","description":"Name of the render target to use"}],"class":"function","name":"selectRenderTarget","description":" Selects the render target to draw on.\n Nil for the visible RT."},"pushMatrix":{"realm":"client","params":[{"name":"m","description":"The matrix"},{"name":"world","description":"Should the transformation be relative to the screen or world?"}],"class":"function","name":"pushMatrix","description":" Pushes a matrix onto the matrix stack."},"setMaterialEffectDownsample":{"realm":"client","params":[{"name":"mat","description":"The material object to use the texture of, or the name of a rendertarget to use instead."},{"name":"darken","description":"The amount to darken the texture by. -1 to 1 inclusive."},{"name":"multiply","description":"The amount to multiply the pixel colors by."}],"class":"function","name":"setMaterialEffectDownsample","description":" Sets the current render material to the given material or the rendertarget, darkening the texture, and scaling up color values."},"destroyRenderTarget":{"realm":"client","params":[{"name":"name","description":"Rendertarget name"}],"class":"function","name":"destroyRenderTarget","description":" Releases the rendertarget. Required if you reach the maximum rendertargets."},"createRenderTarget":{"realm":"client","params":[{"name":"name","description":"The name of the render target"}],"class":"function","name":"createRenderTarget","description":" Creates a new render target to draw onto.\n The dimensions will always be 1024x1024"},"pushViewMatrix":{"realm":"client","params":[{"name":"tbl","description":"The view matrix data. See http://wiki.facepunch.com/gmod/Structures/RenderCamData"}],"class":"function","name":"pushViewMatrix","description":" Pushes a perspective matrix onto the view matrix stack."},"drawLine":{"realm":"client","params":[{"name":"x1","description":"X start integer coordinate"},{"name":"y1","description":"Y start integer coordinate"},{"name":"x2","description":"X end interger coordinate"},{"name":"y2","description":"Y end integer coordinate"}],"class":"function","name":"drawLine","description":" Draws a line. Use 3D functions for float coordinates"},"renderTargetExists":{"realm":"client","params":[{"name":"name","description":"The name of the render target"}],"class":"function","name":"renderTargetExists","description":" Check if the specified render target exists."},"getTextSize":{"returns":["width of the text","height of the text"],"realm":"client","params":[{"name":"text","description":"Text to get the size of"}],"class":"function","name":"getTextSize","description":" Gets the size of the specified text. Don't forget to use setFont before calling this function"},"drawRect":{"realm":"client","params":[{"name":"x","description":"Top left corner x"},{"name":"y","description":"Top left corner y"},{"name":"w","description":"Width"},{"name":"h","description":"Height"}],"class":"function","name":"drawRect","description":" Draws a rectangle using the current color"},"disableScissorRect":{"description":" Disables a scissoring rect which limits the drawing area.","class":"function","name":"disableScissorRect","realm":"client"},"setMaterialEffectAdd":{"realm":"client","params":[{"name":"mat","description":"The material object to use the texture of, or the name of a rendertarget to use instead."}],"class":"function","name":"setMaterialEffectAdd","description":" Sets the current render material to the given material or the rendertarget, applying an additive shader when drawn."},"draw3DSphere":{"realm":"client","params":[{"name":"pos","description":"Position of the sphere"},{"name":"radius","description":"Radius of the sphere"},{"name":"longitudeSteps","description":"The amount of longitude steps. The larger this number is, the smoother the sphere is"},{"name":"latitudeSteps","description":"The amount of latitude steps. The larger this number is, the smoother the sphere is"}],"class":"function","name":"draw3DSphere","description":" Draws a sphere"},"drawRectFast":{"realm":"client","params":[{"name":"x","description":"Top left corner x"},{"name":"y","description":"Top left corner y"},{"name":"w","description":"Width"},{"name":"h","description":"Height"}],"class":"function","name":"drawRectFast","description":" Draws a rectangle using the current color\n Faster, but uses integer coordinates and will get clipped by user's screen resolution"},"clearDepth":{"description":" Resets the depth buffer","class":"function","name":"clearDepth","realm":"client"},"setStencilEnable":{"realm":"client","params":[{"name":"enable","description":"true to enable, false to disable"}],"class":"function","name":"setStencilEnable","description":" Sets whether stencil tests are carried out for each rendered pixel. Only pixels passing the stencil test are written to the render target."},"popMatrix":{"description":" Pops a matrix from the matrix stack.","class":"function","name":"popMatrix","realm":"client"},"setMaterialEffectBloom":{"realm":"client","params":[{"name":"mat","description":"The material object to use the texture of, or the name of a rendertarget to use instead."},{"name":"levelr","description":"Multiplier for all red pixels. 1 = unchanged"},{"name":"levelg","description":"Multiplier for all green pixels. 1 = unchanged"},{"name":"levelb","description":"Multiplier for all blue pixels. 1 = unchanged"},{"name":"colormul","description":"Multiplier for all three colors. 1 = unchanged"}],"class":"function","name":"setMaterialEffectBloom","description":" Sets the current render material to the given material or the rendertarget, applying a bloom shader to the texture."},"clearStencilBufferRectangle":{"realm":"client","params":[{"name":"originX","description":"X origin of the rectangle."},{"name":"originY","description":"Y origin of the rectangle."},{"name":"endX","description":"The end X coordinate of the rectangle."},{"name":"endY","description":"The end Y coordinate of the rectangle."},{"name":"stencilValue","description":"Value to set cleared stencil buffer to."}],"class":"function","name":"clearStencilBufferRectangle","description":" Sets the stencil value in a specified rect."},"destroyTexture":{"realm":"client","params":[{"name":"mat","description":"The material object"}],"class":"function","name":"destroyTexture","description":" Releases the texture. Required if you reach the maximum url textures."},"enableDepth":{"realm":"client","params":[{"name":"enable","description":"true to enable"}],"class":"function","name":"enableDepth","description":" Enables or disables Depth Buffer"},"setFilterMag":{"realm":"client","params":[{"name":"val","description":"The filter function to use http://wiki.facepunch.com/gmod/Enums/TEXFILTER"}],"class":"function","name":"setFilterMag","description":" Sets the texture filtering function when viewing a close texture"},"drawTexturedRectUVFast":{"realm":"client","params":[{"name":"x","description":"Top left corner x"},{"name":"y","description":"Top left corner y"},{"name":"w","description":"Width"},{"name":"h","description":"Height"},{"name":"startU","description":"Texture mapping at rectangle's origin U"},{"name":"startV","description":"Texture mapping at rectangle's origin V"},{"name":"endU","description":"Texture mapping at rectangle's end U"},{"name":"endV","description":"Texture mapping at rectangle's end V"},{"name":"UVHack","description":"If enabled, will scale the UVs to compensate for internal bug. Should be true for user created materials."}],"class":"function","name":"drawTexturedRectUVFast","description":" Draws a textured rectangle with UV coordinates\n Faster, but uses integer coordinates and will get clipped by user's screen resolution"},"clearStencil":{"description":" Resets all values in the stencil buffer to zero.","class":"function","name":"clearStencil","realm":"client"},"setStencilTestMask":{"realm":"client","params":[{"name":"mask","description":"The mask bitflag."}],"class":"function","name":"setStencilTestMask","description":" Sets the unsigned 8-bit test bitflag mask to be used for any stencil testing."},"draw3DQuadUV":{"realm":"client","params":[{"name":"vert1","description":"First vertex. {x, y, z, u, v}"},{"name":"vert2","description":"The second vertex."},{"name":"vert3","description":"The third vertex."},{"name":"vert4","description":"The fourth vertex."}],"class":"function","name":"draw3DQuadUV","description":" Draws 2 connected triangles with custom UVs."},"setStencilFailOperation":{"realm":"client","params":[{"name":"operation","description":""}],"class":"function","name":"setStencilFailOperation","description":" Sets the operation to be performed on the stencil buffer values if the compare function was not successful. More: http://wiki.facepunch.com/gmod/render.SetStencilFailOperation"},"createFont":{"realm":"client","params":[{"name":"font","description":"Base font to use"},{"name":"size","description":"Font size"},{"name":"weight","description":"Font weight (default: 400)"},{"name":"antialias","description":"Antialias font?"},{"name":"additive","description":"If true, adds brightness to pixels behind it rather than drawing over them."},{"name":"shadow","description":"Enable drop shadow?"},{"name":"outline","description":"Enable outline?"},{"name":"blur","description":"Enable blur?"},{"name":"extended","description":"Allows the font to display glyphs outside of Latin-1 range. Unicode code points above 0xFFFF are not supported. Required to use FontAwesome"}],"class":"function","name":"createFont","description":" Creates a font. Does not require rendering hook\n Base font can be one of (keep in mind that these may not exist on all clients if they are not shipped with starfall):\n \\- Akbar\n \\- Coolvetica\n \\- Roboto\n \\- Roboto Mono\n \\- FontAwesome\n \\- Courier New\n \\- Verdana\n \\- Arial\n \\- HalfLife2\n \\- hl2mp\n \\- csd\n \\- Tahoma\n \\- Trebuchet\n \\- Trebuchet MS\n \\- DejaVu Sans Mono\n \\- Lucida Console\n \\- Times New Roman"},"setStencilWriteMask":{"realm":"client","params":[{"name":"mask","description":"The mask bitflag."}],"class":"function","name":"setStencilWriteMask","description":" Sets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer."}},"fields":[],"libtbl":["render_library"],"realm":"client","tables":{"Vertex":{"fields":[{"name":"x","description":"X coordinate"},{"name":"y","description":"Y coordinate"},{"name":"u","description":"U coordinate (optional, default is 0)"},{"name":"v","description":"V coordinate (optional, default is 0)"}],"realm":"client","class":"table","name":"Vertex","description":" Vertex format"},"Screen":{"fields":[{"name":"Name","description":"Pretty name of model"},{"name":"offset","description":"Offset of screen from prop"},{"name":"RS","description":"Resolution/scale"},{"name":"RatioX","description":"Inverted Aspect ratio (height divided by width)"},{"name":"x1","description":"Corner of screen in local coordinates (relative to offset?)"},{"name":"x2","description":"Corner of screen in local coordinates (relative to offset?)"},{"name":"y1","description":"Corner of screen in local coordinates (relative to offset?)"},{"name":"y2","description":"Corner of screen in local coordinates (relative to offset?)"},{"name":"z","description":"Screen plane offset in local coordinates (relative to offset?)"},{"name":"rot","description":"Screen rotation"}],"realm":"client","class":"table","name":"Screen","description":""},"Text":{"fields":[{"name":"TEXT_ALIGN_LEFT","description":""},{"name":"TEXT_ALIGN_CENTER","description":""},{"name":"TEXT_ALIGN_RIGHT","description":""},{"name":"TEXT_ALIGN_TOP","description":""},{"name":"TEXT_ALIGN_BOTTOM","description":""}],"realm":"client","class":"table","name":"Text","description":" "}},"class":"library","name":"render","description":" Render library. Screens are 512x512 units. Most functions require\n that you be in the rendering hook to call, otherwise an error is\n thrown. +x is right, +y is down"},"wire":{"methods":{"self":{"description":" Returns the wirelink representing this entity.","class":"function","name":"self","realm":"server"},"getWirelink":{"returns":["Wirelink of the entity"],"realm":"server","params":[{"name":"ent","description":"Wire entity"}],"class":"function","name":"getWirelink","description":" Returns a wirelink to a wire entity"},"adjustInputs":{"realm":"server","params":[{"name":"names","description":"An array of input names. May be modified by the function."},{"name":"types","description":"An array of input types. Can be shortcuts. May be modified by the function."}],"class":"function","name":"adjustInputs","description":" Creates/Modifies wire inputs. All wire ports must begin with an uppercase\n letter and contain only alphabetical characters or numbers but may not begin with a number."},"create":{"realm":"server","params":[{"name":"entI","description":"Entity with input"},{"name":"entO","description":"Entity with output"},{"name":"inputname","description":"Input to be wired"},{"name":"outputname","description":"Output to be wired"},{"name":"width","description":"Width of the wire(optional)"},{"name":"color","description":"Color of the wire(optional)"},{"name":"material","description":"Material of the wire(optional), Valid materials are cable/rope, cable/cable2, cable/xbeam, cable/redlaser, cable/blue_elec, cable/physbeam, cable/hydra, arrowire/arrowire, arrowire/arrowire2"}],"class":"function","name":"create","description":" Wires two entities together"},"serverUUID":{"returns":["UUID as string"],"realm":"server","class":"function","name":"serverUUID","description":" Returns the server's UUID."},"delete":{"realm":"server","params":[{"name":"entI","description":"Entity with input"},{"name":"inputname","description":"Input to be un-wired"}],"class":"function","name":"delete","description":" Unwires an entity's input"},"getOutputs":{"returns":["Table of entity's output names","Table of entity's output types"],"realm":"server","params":[{"name":"entO","description":"Entity with output(s)"}],"class":"function","name":"getOutputs","description":" Returns a table of entity's outputs"},"adjustPorts":{"realm":"server","params":[{"name":"inputs","description":"(Optional) A key-value table with input port names as keys and types as values. e.g. {MyInput=\"number\"} or {MyInput={type=\"number\"}}. If nil, input ports won't be changed."},{"name":"outputs","description":"(Optional) A key-value table with output port names as keys and types as values. e.g. {MyOutput=\"number\"} or {MyOutput={type=\"number\"}}. If nil, output ports won't be changed."}],"class":"function","name":"adjustPorts","description":" Creates/Modifies wire inputs/outputs. All wire ports must begin with an uppercase\n letter and contain only alphabetical characters or numbers but may not begin with a number."},"getInputs":{"returns":["Table of entity's input names","Table of entity's input types"],"realm":"server","params":[{"name":"entI","description":"Entity with input(s)"}],"class":"function","name":"getInputs","description":" Returns a table of entity's inputs"},"adjustOutputs":{"realm":"server","params":[{"name":"names","description":"An array of output names. May be modified by the function."},{"name":"types","description":"An array of output types. Can be shortcuts. May be modified by the function."}],"class":"function","name":"adjustOutputs","description":" Creates/Modifies wire outputs. All wire ports must begin with an uppercase\n letter and contain only alphabetical characters or numbers but may not begin with a number."}},"fields":[],"libtbl":["wire_library"],"realm":"server","tables":{"ports":{"description":" Ports table. Reads from this table will read from the wire input\n of the same name. Writes will write to the wire output of the same name.","class":"table","name":"ports","realm":"server"}},"class":"library","name":"wire","description":" Wire library. Handles wire inputs/outputs, wirelinks, etc."},"builtins":{"methods":{"localToWorld":{"returns":["worldPos","worldAngles"],"realm":"shared","params":[{"name":"localPos","description":"The position vector that should be translated to world coordinates"},{"name":"localAng","description":"The angle that should be converted to a world angle"},{"name":"originPos","description":"The origin point of the source coordinate system, in world coordinates"},{"name":"originAngle","description":"The angles of the source coordinate system, as a world angle"}],"class":"function","name":"localToWorld","description":" Translates the specified position and angle from the specified local coordinate system"},"version":{"returns":["Starfall version"],"realm":"shared","class":"function","name":"version","description":" Gets the starfall version"},"assert":{"realm":"shared","params":[{"name":"condition","description":""},{"name":"msg","description":""}],"class":"function","name":"assert","description":" If the result of the first argument is false or nil, an error is thrown with the second argument as the message."},"tostring":{"returns":["obj as string"],"realm":"shared","params":[{"name":"obj","description":""}],"class":"function","name":"tostring","description":" Attempts to convert the value to a string."},"crc":{"returns":["The unsigned 32 bit checksum as a string"],"realm":"shared","params":[{"name":"stringToHash","description":"The string to calculate the checksum of"}],"class":"function","name":"crc","description":" Generates the CRC checksum of the specified string. (https://en.wikipedia.org/wiki/Cyclic_redundancy_check)"},"tonumber":{"returns":["obj as number"],"realm":"shared","params":[{"name":"obj","description":""}],"class":"function","name":"tonumber","description":" Attempts to convert the value to a number."},"throw":{"realm":"shared","params":[{"name":"msg","description":"Message string"},{"name":"level","description":"Which level in the stacktrace to blame. Defaults to 1"},{"name":"uncatchable","description":"Makes this exception uncatchable"}],"class":"function","name":"throw","description":" Throws an exception"},"rawget":{"returns":["The value of the index"],"realm":"shared","params":[{"name":"table","description":"The table to get the value from"},{"name":"key","description":"The index of the table"}],"class":"function","name":"rawget","description":" Gets the value of a table index without invoking a metamethod"},"ramUsed":{"returns":["The ram used in kilobytes"],"realm":"shared","class":"function","name":"ramUsed","description":" Gets the current ram usage of the gmod lua environment"},"Quaternion":{"returns":["Quaternion object"],"realm":"shared","params":[{"name":"r","description":"R (real) component"},{"name":"i","description":"I component"},{"name":"j","description":"J component"},{"name":"k","description":"K component"}],"class":"function","name":"Quaternion","description":" Creates a Quaternion"},"isFirstTimePredicted":{"returns":["Boolean"],"realm":"shared","class":"function","name":"isFirstTimePredicted","description":" Returns if this is the first time this hook was predicted."},"ipairs":{"returns":["Iterator function","Table tbl","0 as current index"],"realm":"shared","params":[{"name":"tbl","description":"Table to iterate over"}],"class":"function","name":"ipairs","description":" Returns an iterator function for a for loop, to return ordered key-value pairs from a table."},"print":{"realm":"shared","params":[{"name":"Values","description":"to print. Colors before text will set the text color"}],"class":"function","name":"print","description":" Prints a message to the player's chat."},"quotaUsed":{"returns":["Current quota used this Think"],"realm":"shared","class":"function","name":"quotaUsed","description":" Returns the current count for this Think's CPU Time.\n This value increases as more executions are done, may not be exactly as you want.\n If used on screens, will show 0 if only rendering is done. Operations must be done in the Think loop for them to be counted."},"pcall":{"returns":["If the function had no errors occur within it.","If an error occurred, this will be a string containing the error message. Otherwise, this will be the return values of the function passed in."],"realm":"shared","params":[{"name":"func","description":"Function to be executed and of which the errors should be caught of"},{"name":"arguments","description":"Arguments to call the function with."}],"class":"function","name":"pcall","description":" Lua's pcall with SF throw implementation\n Calls a function and catches an error that can be thrown while the execution of the call."},"setSoftQuota":{"realm":"shared","params":[{"name":"quota","description":"The threshold where the soft error will be thrown. Ratio of current cpu to the max cpu usage. 0.5 is 50%"}],"class":"function","name":"setSoftQuota","description":" Sets a CPU soft quota which will trigger a catchable error if the cpu goes over a certain amount."},"quotaAverage":{"returns":["Average CPU Time of the buffer."],"realm":"shared","class":"function","name":"quotaAverage","description":" Gets the Average CPU Time in the buffer"},"quotaTotalAverage":{"returns":["Total average CPU Time of all your chips."],"realm":"shared","class":"function","name":"quotaTotalAverage","description":" Returns the total average time for all chips by the player."},"isValid":{"returns":["If it is valid"],"realm":"shared","params":[{"name":"object","description":"Table to check"}],"class":"function","name":"isValid","description":" Returns if the table has an isValid function and isValid returns true."},"getScripts":{"returns":["Table of scripts used by the chip"],"realm":"shared","class":"function","name":"getScripts","description":" Returns the table of scripts used by the chip"},"rawset":{"realm":"shared","params":[{"name":"table","description":"The table to modify"},{"name":"key","description":"The index of the table"},{"name":"value","description":"The value to set the index equal to"}],"class":"function","name":"rawset","description":" Set the value of a table index without invoking a metamethod"},"Vector":{"returns":["Vector"],"realm":"shared","params":[{"name":"x","description":"- X"},{"name":"y","description":"- Y"},{"name":"z","description":"- Z"}],"class":"function","name":"Vector","description":" Creates a Vector struct."},"setUserdata":{"realm":"server","params":[{"name":"str","description":"String data"}],"class":"function","name":"setUserdata","description":" Sets the chip's userdata that the duplicator tool saves. max 1MiB; can be changed with convar sf_userdata_max"},"setClipboardText":{"realm":"client","params":[{"name":"txt","description":"Text to set to the clipboard"}],"class":"function","name":"setClipboardText","description":" Sets clipboard text. Only works on the owner of the chip."},"debugGetLocal":{"returns":["The name of the local"],"realm":"shared","params":[{"name":"funcOrStackLevel","description":"Function or stack level to get info about. Defaults to stack level 0."},{"name":"index","description":"The index of the local to get"}],"class":"function","name":"debugGetLocal","description":" GLua's debug.getlocal()\n Returns the name of a function or stack's locals"},"next":{"returns":["Key or nil","Value or nil"],"realm":"shared","params":[{"name":"tbl","description":"Table to get the next key-value pair of"},{"name":"k","description":"Previous key (can be nil)"}],"class":"function","name":"next","description":" Returns the next key and value pair in a table."},"requiredir":{"returns":["Table of return values of the scripts"],"realm":"shared","params":[{"name":"dir","description":"The directory to include. Make sure to --@includedir it"},{"name":"loadpriority","description":"Table of files that should be loaded before any others in the directory"}],"class":"function","name":"requiredir","description":" Runs an included script and caches the result.\n Works pretty much like standard Lua require()"},"quotaMax":{"returns":["Max SysTime allowed to take for execution of the chip in a Think."],"realm":"shared","class":"function","name":"quotaMax","description":" Gets the CPU Time max.\n CPU Time is stored in a buffer of N elements, if the average of this exceeds quotaMax, the chip will error."},"owner":{"returns":["Owner entity"],"realm":"shared","class":"function","name":"owner","description":" Returns whoever created the chip"},"setName":{"realm":"client","params":[{"name":"name","description":"Name"}],"class":"function","name":"setName","description":" Sets the chip's display name"},"type":{"returns":["The name of the object's type."],"realm":"shared","params":[{"name":"obj","description":"Object to get type of"}],"class":"function","name":"type","description":" Returns a string representing the name of the type of the passed object."},"eyePos":{"returns":["The local player's camera position"],"realm":"client","class":"function","name":"eyePos","description":" Returns the local player's camera position"},"Matrix":{"returns":["New VMatrix"],"realm":"shared","class":"function","name":"Matrix","description":" Returns a new VMatrix"},"permissionRequestSatisfied":{"returns":["Boolean of whether the client gave all permissions specified in last request or not."],"realm":"client","class":"function","name":"permissionRequestSatisfied","description":" Is permission request fully satisfied."},"ramAverage":{"returns":["The ram used in kilobytes"],"realm":"shared","class":"function","name":"ramAverage","description":" Gets the moving average of ram usage of the gmod lua environment"},"xpcall":{"returns":["Status of the execution; true for success, false for failure.","The returns of the first function if execution succeeded, otherwise the return values of the error callback."],"realm":"shared","params":[{"name":"func","description":"The function to call initially."},{"name":"callback","description":"The function to be called if execution of the first fails; the error message and stack trace are passed."},{"name":"Varargs","description":"to pass to the initial function."}],"class":"function","name":"xpcall","description":" Lua's xpcall with SF throw implementation, and a traceback for debugging.\n Attempts to call the first function. If the execution succeeds, this returns true followed by the returns of the function.\n If execution fails, this returns false and the second function is called with the error message, and the stack trace."},"chip":{"returns":["Starfall entity"],"realm":"shared","class":"function","name":"chip","description":" Returns the entity representing a processor that this script is running on."},"dodir":{"returns":["Table of return values of the scripts"],"realm":"shared","params":[{"name":"dir","description":"The directory to include. Make sure to --@includedir it"},{"name":"loadpriority","description":"Table of files that should be loaded before any others in the directory"}],"class":"function","name":"dodir","description":" Runs an included directory, but does not cache the result."},"Color":{"returns":["New color"],"realm":"shared","params":[{"name":"r","description":"- Red"},{"name":"g","description":"- Green"},{"name":"b","description":"- Blue"},{"name":"a","description":"- Alpha"}],"class":"function","name":"Color","description":" Creates a table struct that resembles a Color"},"setfenv":{"returns":["func with builtins_library set to tbl"],"realm":"shared","params":[{"name":"func","description":"Function to change builtins_library of"},{"name":"tbl","description":"New builtins_library"}],"class":"function","name":"setfenv","description":" Lua's setfenv\n Works like setfenv, but is restricted on functions"},"Angle":{"returns":["Angle"],"realm":"shared","params":[{"name":"p","description":"- Pitch"},{"name":"y","description":"- Yaw"},{"name":"r","description":"- Roll"}],"class":"function","name":"Angle","description":" Creates an Angle struct."},"concmd":{"realm":"shared","params":[{"name":"cmd","description":"Command to execute"}],"class":"function","name":"concmd","description":" Execute a console command"},"eyeVector":{"returns":["The local player's camera forward vector"],"realm":"client","class":"function","name":"eyeVector","description":" Returns the local player's camera forward vector"},"quotaTotalUsed":{"returns":["Total used CPU time of all your chips."],"realm":"shared","class":"function","name":"quotaTotalUsed","description":" Returns the total used time for all chips by the player."},"setupPermissionRequest":{"realm":"client","params":[{"name":"perms","description":"Table of overridable permissions' names."},{"name":"desc","description":"Description attached to request."},{"name":"showOnUse","description":"Whether request will popup when player uses chip or linked screen."}],"class":"function","name":"setupPermissionRequest","description":" Setups request for overriding permissions."},"printHud":{"realm":"shared","params":[{"name":"ply","description":"The target player. If in CLIENT, then ply is the client player and this param is omitted"},{"name":"Values","description":"to print. Colors before text will set the text color"}],"class":"function","name":"printHud","description":" Prints a message to a target player's chat as long as they're connected to a hud."},"error":{"realm":"shared","params":[{"name":"msg","description":"Message string"},{"name":"level","description":"Which level in the stacktrace to blame. Defaults to 1. 0 for no stacktrace."}],"class":"function","name":"error","description":" Throws an error. Similar to 'throw' but throws whatever you want instead of an SF Error."},"class":{"realm":"shared","params":[{"name":"name","description":"The string name of the class"},{"name":"super","description":"The (optional) parent class to inherit from"}],"class":"function","name":"class","description":" Creates a 'middleclass' class object that can be used similarly to Java/C++ classes. See https://github.com/kikito/middleclass for examples."},"worldToLocal":{"returns":["localPos","localAngles"],"realm":"shared","params":[{"name":"pos","description":"The position that should be translated from the current to the new system"},{"name":"ang","description":"The angles that should be translated from the current to the new system"},{"name":"newSystemOrigin","description":"The origin of the system to translate to"},{"name":"newSystemAngles","description":"The angles of the system to translate to"}],"class":"function","name":"worldToLocal","description":" Translates the specified position and angle into the specified coordinate system"},"dofile":{"returns":["Return value of the script"],"realm":"shared","params":[{"name":"file","description":"The file to include. Make sure to --@include it"}],"class":"function","name":"dofile","description":" Runs an included script, but does not cache the result.\n Pretty much like standard Lua dofile()"},"debugGetInfo":{"returns":["DebugInfo table"],"realm":"shared","params":[{"name":"funcOrStackLevel","description":"Function or stack level to get info about. Defaults to stack level 0."},{"name":"fields","description":"A string that specifies the information to be retrieved. Defaults to all (flnSu)."}],"class":"function","name":"debugGetInfo","description":" GLua's debug.getinfo()\n Returns a DebugInfo structure containing the passed function's info https://wiki.facepunch.com/gmod/Structures/DebugInfo"},"printTable":{"realm":"shared","params":[{"name":"tbl","description":"Table to print"}],"class":"function","name":"printTable","description":" Prints a table to player's chat"},"getmetatable":{"returns":["The metatable of tbl"],"realm":"shared","params":[{"name":"tbl","description":"Table to get metatable of"}],"class":"function","name":"getmetatable","description":" Returns the metatable of an object. Doesn't work on most internal metatables"},"ramMax":{"returns":["The max ram usage in kilobytes"],"realm":"shared","class":"function","name":"ramMax","description":" Gets the max allowed ram usage of the gmod lua environment"},"unpack":{"returns":["Elements of tbl"],"realm":"shared","params":[{"name":"tbl","description":""}],"class":"function","name":"unpack","description":" This function takes a numeric indexed table and return all the members as a vararg."},"require":{"returns":["Return value of the script"],"realm":"shared","params":[{"name":"file","description":"The file to include. Make sure to --@include it"}],"class":"function","name":"require","description":" Runs an included script and caches the result.\n Works pretty much like standard Lua require()"},"loadstring":{"returns":["Function of str"],"realm":"shared","params":[{"name":"str","description":"String to execute"}],"class":"function","name":"loadstring","description":" GLua's loadstring\n Works like loadstring, except that it executes by default in the main builtins_library"},"hasPermission":{"realm":"shared","params":[{"name":"perm","description":"The permission id to check"},{"name":"obj","description":"Optional object to pass to the permission system."}],"class":"function","name":"hasPermission","description":" Checks if the chip is capable of performing an action."},"entity":{"returns":["entity"],"realm":"shared","params":[{"name":"num","description":"Entity index"}],"class":"function","name":"entity","description":" Returns the entity with index 'num'"},"getLibraries":{"returns":["Table where each key is the library name and value is table of the library"],"realm":"shared","class":"function","name":"getLibraries","description":" Gets all libraries"},"player":{"returns":["Returns player with given UserID or if none specified then returns either the owner (server) or the local player (client)"],"realm":"shared","class":"function","name":"player","description":" Same as owner() on the server. On the client, returns the local player"},"printMessage":{"realm":"client","params":[{"name":"mtype","description":"How the message should be displayed. See http://wiki.facepunch.com/gmod/Enums/HUD"},{"name":"text","description":"The message text."}],"class":"function","name":"printMessage","description":" Prints a message to your chat, console, or the center of your screen."},"pairs":{"returns":["Iterator function","Table tbl","nil as current index"],"realm":"shared","params":[{"name":"tbl","description":"Table to iterate over"}],"class":"function","name":"pairs","description":" Returns an iterator function for a for loop that will return the values of the specified table in an arbitrary order."},"setmetatable":{"returns":["tbl with metatable set to meta"],"realm":"shared","params":[{"name":"tbl","description":"The table to set the metatable of"},{"name":"meta","description":"The metatable to use"}],"class":"function","name":"setmetatable","description":" Sets, changes or removes a table's metatable. Doesn't work on most internal metatables"},"select":{"returns":["Returns a number or vararg, depending on the select method."],"realm":"shared","params":[{"name":"parameter","description":""},{"name":"vararg","description":""}],"class":"function","name":"select","description":" Used to select single values from a vararg or get the count of values in it."},"getMethods":{"returns":["Table of the type's methods which can be edited or iterated"],"realm":"shared","params":[{"name":"sfType","description":"Name of SF type"}],"class":"function","name":"getMethods","description":" Gets an SF type's methods table"},"getUserdata":{"returns":["String data"],"realm":"server","class":"function","name":"getUserdata","description":" Gets the chip's userdata that the duplicator tool loads"},"getfenv":{"returns":["Current builtins_library"],"realm":"shared","class":"function","name":"getfenv","description":" Simple version of Lua's getfenv\n Returns the current builtins_library"},"eyeAngles":{"returns":["The local player's camera angles"],"realm":"client","class":"function","name":"eyeAngles","description":" Returns the local player's camera angles"},"try":{"realm":"shared","params":[{"name":"func","description":"Function to execute"},{"name":"catch","description":"Optional function to execute in case func fails"}],"class":"function","name":"try","description":" Try to execute a function and catch possible exceptions\n Similar to xpcall, but a bit more in-depth"}},"fields":{"SERVER":{"description":" Constant that denotes whether the code is executed on the server","class":"field","name":"SERVER","realm":"shared"},"CLIENT":{"description":" Constant that denotes whether the code is executed on the client","class":"field","name":"CLIENT","realm":"shared"}},"libtbl":["builtins_library"],"realm":"shared","tables":{"TEXT_ALIGN":{"fields":[{"name":"LEFT","description":"Align the text on the left"},{"name":"CENTER","description":"Align the text in center"},{"name":"RIGHT","description":"Align the text on the right"},{"name":"TOP","description":"Align the text on the top"},{"name":"BOTTOM","description":"Align the text on the bottom"}],"realm":"shared","class":"table","name":"TEXT_ALIGN","description":" Align enum for drawing text"},"RENDERMODE":{"fields":[{"name":"NORMAL","description":""},{"name":"TRANSCOLOR","description":""},{"name":"TRANSTEXTURE","description":""},{"name":"GLOW","description":""},{"name":"TRANSALPHA","description":""},{"name":"TRANSADD","description":""},{"name":"ENVIROMENTAL","description":""},{"name":"TRANSADDFRAMEBLEND","description":""},{"name":"TRANSALPHADD","description":""},{"name":"WORLDGLOW","description":""},{"name":"NONE","description":""}],"realm":"shared","class":"table","name":"RENDERMODE","description":" ENUMs of entity render modes to be used with Entity.setRenderMode"},"EF":{"fields":[{"name":"BONEMERGE","description":""},{"name":"BONEMERGE_FASTCULL","description":""},{"name":"BRIGHTLIGHT","description":""},{"name":"DIMLIGHT","description":""},{"name":"NOINTERP","description":""},{"name":"NOSHADOW","description":""},{"name":"NODRAW","description":""},{"name":"NORECEIVESHADOW","description":""},{"name":"ITEM_BLINK","description":""},{"name":"PARENT_ANIMATES","description":""},{"name":"FOLLOWBONE","description":""}],"realm":"shared","class":"table","name":"EF","description":" ENUMs of ef for use with hologram:addEffects hologram:removeEffects entity:isEffectActive"},"COLLISION_GROUP":{"fields":[{"name":"NONE","description":""},{"name":"DEBRIS","description":""},{"name":"DEBRIS_TRIGGER","description":""},{"name":"INTERACTIVE_DEBRIS","description":""},{"name":"INTERACTIVE","description":""},{"name":"PLAYER","description":""},{"name":"BREAKABLE_GLASS","description":""},{"name":"VEHICLE","description":""},{"name":"PLAYER_MOVEMENT","description":""},{"name":"NPC","description":""},{"name":"IN_VEHICLE","description":""},{"name":"WEAPON","description":""},{"name":"VEHICLE_CLIP","description":""},{"name":"PROJECTILE","description":""},{"name":"DOOR_BLOCKER","description":""},{"name":"PASSABLE_DOOR","description":""},{"name":"DISSOLVING","description":""},{"name":"PUSHAWAY","description":""},{"name":"NPC_ACTOR","description":""},{"name":"NPC_SCRIPTED","description":""},{"name":"WORLD","description":""}],"realm":"shared","class":"table","name":"COLLISION_GROUP","description":" ENUMs of collision groups for use with entity:setCollisionGroup"},"CONTENTS":{"fields":[{"name":"CURRENT_270","description":""},{"name":"DETAIL","description":""},{"name":"IGNORE_NODRAW_OPAQUE","description":""},{"name":"BLOCKLOS","description":""},{"name":"GRATE","description":""},{"name":"CURRENT_0","description":""},{"name":"AREAPORTAL","description":""},{"name":"DEBRIS","description":""},{"name":"MONSTERCLIP","description":""},{"name":"SLIME","description":""},{"name":"WINDOW","description":""},{"name":"LADDER","description":""},{"name":"CURRENT_180","description":""},{"name":"TRANSLUCENT","description":""},{"name":"EMPTY","description":""},{"name":"TEAM2","description":""},{"name":"CURRENT_UP","description":""},{"name":"TESTFOGVOLUME","description":""},{"name":"TEAM1","description":""},{"name":"AUX","description":""},{"name":"CURRENT_DOWN","description":""},{"name":"ORIGIN","description":""},{"name":"TEAM3","description":""},{"name":"MOVEABLE","description":""},{"name":"PLAYERCLIP","description":""},{"name":"SOLID","description":""},{"name":"TEAM4","description":""},{"name":"MONSTER","description":""},{"name":"HITBOX","description":""},{"name":"CURRENT_90","description":""},{"name":"OPAQUE","description":""},{"name":"WATER","description":""}],"realm":"shared","class":"table","name":"CONTENTS","description":" ENUMs used as masks in the trace library."},"MATERIAL_FOG":{"fields":[{"name":"NONE","description":""},{"name":"LINEAR","description":""},{"name":"LINEAR_BELOW_FOG_Z","description":""}],"realm":"shared","class":"table","name":"MATERIAL_FOG","description":" ENUMs of fog modes to use with render.setFogMode."},"NOTIFY":{"fields":[{"name":"GENERIC","description":""},{"name":"ERROR","description":""},{"name":"UNDO","description":""},{"name":"HINT","description":""},{"name":"CLEANUP","description":""}],"realm":"shared","class":"table","name":"NOTIFY","description":" Notification library enums"},"KEY":{"fields":[{"name":"FIRST","description":""},{"name":"NONE","description":""},{"name":"0","description":""},{"name":"1","description":""},{"name":"2","description":""},{"name":"3","description":""},{"name":"4","description":""},{"name":"5","description":""},{"name":"6","description":""},{"name":"7","description":""},{"name":"8","description":""},{"name":"9","description":""},{"name":"A","description":""},{"name":"B","description":""},{"name":"C","description":""},{"name":"D","description":""},{"name":"E","description":""},{"name":"F","description":""},{"name":"G","description":""},{"name":"H","description":""},{"name":"I","description":""},{"name":"J","description":""},{"name":"K","description":""},{"name":"L","description":""},{"name":"M","description":""},{"name":"N","description":""},{"name":"O","description":""},{"name":"P","description":""},{"name":"Q","description":""},{"name":"R","description":""},{"name":"S","description":""},{"name":"T","description":""},{"name":"U","description":""},{"name":"V","description":""},{"name":"W","description":""},{"name":"X","description":""},{"name":"Y","description":""},{"name":"Z","description":""},{"name":"KP_INS","description":""},{"name":"PAD_0","description":""},{"name":"KP_END","description":""},{"name":"PAD_1","description":""},{"name":"KP_DOWNARROW","description":""},{"name":"PAD_2","description":""},{"name":"KP_PGDN","description":""},{"name":"PAD_3","description":""},{"name":"KP_LEFTARROW","description":""},{"name":"PAD_4","description":""},{"name":"KP_5","description":""},{"name":"PAD_5","description":""},{"name":"KP_RIGHTARROW","description":""},{"name":"PAD_6","description":""},{"name":"KP_HOME","description":""},{"name":"PAD_7","description":""},{"name":"KP_UPARROW","description":""},{"name":"PAD_8","description":""},{"name":"KP_PGUP","description":""},{"name":"PAD_9","description":""},{"name":"PAD_DIVIDE","description":""},{"name":"KP_SLASH","description":""},{"name":"KP_MULTIPLY","description":""},{"name":"PAD_MULTIPLY","description":""},{"name":"KP_MINUS","description":""},{"name":"PAD_MINUS","description":""},{"name":"KP_PLUS","description":""},{"name":"PAD_PLUS","description":""},{"name":"KP_ENTER","description":""},{"name":"PAD_ENTER","description":""},{"name":"KP_DEL","description":""},{"name":"PAD_DECIMAL","description":""},{"name":"LBRACKET","description":""},{"name":"RBRACKET","description":""},{"name":"SEMICOLON","description":""},{"name":"APOSTROPHE","description":""},{"name":"BACKQUOTE","description":""},{"name":"COMMA","description":""},{"name":"PERIOD","description":""},{"name":"SLASH","description":""},{"name":"BACKSLASH","description":""},{"name":"MINUS","description":""},{"name":"EQUAL","description":""},{"name":"ENTER","description":""},{"name":"SPACE","description":""},{"name":"BACKSPACE","description":""},{"name":"TAB","description":""},{"name":"CAPSLOCK","description":""},{"name":"NUMLOCK","description":""},{"name":"ESCAPE","description":""},{"name":"SCROLLLOCK","description":""},{"name":"INS","description":""},{"name":"INSERT","description":""},{"name":"DEL","description":""},{"name":"DELETE","description":""},{"name":"HOME","description":""},{"name":"END","description":""},{"name":"PGUP","description":""},{"name":"PAGEUP","description":""},{"name":"PGDN","description":""},{"name":"PAGEDOWN","description":""},{"name":"PAUSE","description":""},{"name":"BREAK","description":""},{"name":"SHIFT","description":""},{"name":"LSHIFT","description":""},{"name":"RSHIFT","description":""},{"name":"ALT","description":""},{"name":"LALT","description":""},{"name":"RALT","description":""},{"name":"CTRL","description":""},{"name":"LCONTROL","description":""},{"name":"RCTRL","description":""},{"name":"RCONTROL","description":""},{"name":"LWIN","description":""},{"name":"RWIN","description":""},{"name":"APP","description":""},{"name":"UPARROW","description":""},{"name":"UP","description":""},{"name":"LEFTARROW","description":""},{"name":"LEFT","description":""},{"name":"DOWNARROW","description":""},{"name":"DOWN","description":""},{"name":"RIGHTARROW","description":""},{"name":"RIGHT","description":""},{"name":"F1","description":""},{"name":"F2","description":""},{"name":"F3","description":""},{"name":"F4","description":""},{"name":"F5","description":""},{"name":"F6","description":""},{"name":"F7","description":""},{"name":"F8","description":""},{"name":"F9","description":""},{"name":"F10","description":""},{"name":"F11","description":""},{"name":"F12","description":""},{"name":"CAPSLOCKTOGGLE","description":""},{"name":"NUMLOCKTOGGLE","description":""},{"name":"SCROLLLOCKTOGGLE","description":""},{"name":"LAST","description":""},{"name":"COUNT","description":""}],"realm":"shared","class":"table","name":"KEY","description":" ENUMs of keyboard keys for use with input library"},"RENDERFX":{"fields":[{"name":"NONE","description":""},{"name":"PULSESLOW","description":""},{"name":"PULSEFAST","description":""},{"name":"PULSESLOWWIDE","description":""},{"name":"PULSEFASTWIDE","description":""},{"name":"FADESLOW","description":""},{"name":"FADEFAST","description":""},{"name":"SOLIDSLOW","description":""},{"name":"SOLIDFAST","description":""},{"name":"STROBESLOW","description":""},{"name":"STROBEFAST","description":""},{"name":"STROBEFASTER","description":""},{"name":"FLICKERSLOW","description":""},{"name":"FLICKERFAST","description":""},{"name":"NODISSIPATION","description":""},{"name":"DISTORT","description":""},{"name":"HOLOGRAM","description":""},{"name":"EXPLODE","description":""},{"name":"GLOWSHELL","description":""},{"name":"CLAMPMINSCALE","description":""},{"name":"RAIN","description":""},{"name":"SNOW","description":""},{"name":"SPOTLIGHT","description":""},{"name":"RAGDOLL","description":""},{"name":"PULSEFASTWIDER","description":""}],"realm":"shared","class":"table","name":"RENDERFX","description":" ENUMs of entity renderfx to be used with Entity.setRenderFX"},"IN_KEY":{"fields":[{"name":"ALT1","description":""},{"name":"ALT2","description":""},{"name":"ATTACK","description":""},{"name":"ATTACK2","description":""},{"name":"BACK","description":""},{"name":"DUCK","description":""},{"name":"FORWARD","description":""},{"name":"JUMP","description":""},{"name":"LEFT","description":""},{"name":"MOVELEFT","description":""},{"name":"MOVERIGHT","description":""},{"name":"RELOAD","description":""},{"name":"RIGHT","description":""},{"name":"SCORE","description":""},{"name":"SPEED","description":""},{"name":"USE","description":""},{"name":"WALK","description":""},{"name":"ZOOM","description":""},{"name":"GRENADE1","description":""},{"name":"GRENADE2","description":""},{"name":"WEAPON1","description":""},{"name":"WEAPON2","description":""},{"name":"BULLRUSH","description":""},{"name":"CANCEL","description":""},{"name":"RUN","description":""}],"realm":"shared","class":"table","name":"IN_KEY","description":" ENUMs of in_keys for use with player:keyDown"},"PATTACH":{"fields":[{"name":"ABSORIGIN","description":""},{"name":"ABSORIGIN_FOLLOW","description":""},{"name":"CUSTOMORIGIN","description":""},{"name":"POINT","description":""},{"name":"POINT_FOLLOW","description":""},{"name":"WORLDORIGIN","description":""}],"realm":"shared","class":"table","name":"PATTACH","description":" PATTACH enum for particle library"},"STENCIL":{"fields":[{"name":"NEVER","description":""},{"name":"LESS","description":""},{"name":"EQUAL","description":""},{"name":"LESSEQUAL","description":""},{"name":"GREATER","description":""},{"name":"NOTEQUAL","description":""},{"name":"GREATEREQUAL","description":""},{"name":"ALWAYS","description":""},{"name":"KEEP","description":""},{"name":"ZERO","description":""},{"name":"REPLACE","description":""},{"name":"INCRSAT","description":""},{"name":"DECRSAT","description":""},{"name":"INVERT","description":""},{"name":"INCR","description":""},{"name":"DECR","description":""}],"realm":"shared","class":"table","name":"STENCIL","description":" ENUMs of stencil comparisons and operations"},"TEXFILTER":{"fields":[{"name":"NONE","description":""},{"name":"POINT","description":""},{"name":"LINEAR","description":""},{"name":"ANISOTROPIC","description":""}],"realm":"shared","class":"table","name":"TEXFILTER","description":" ENUMs of texture filtering modes"},"GESTURE_SLOT":{"fields":[{"name":"ATTACK_AND_RELOAD","description":""},{"name":"GRENADE","description":""},{"name":"JUMP","description":""},{"name":"SWIM","description":""},{"name":"FLINCH","description":""},{"name":"VCD","description":""},{"name":"CUSTOM","description":""}],"realm":"shared","class":"table","name":"GESTURE_SLOT","description":" ENUMs of gesture_slot for use with player:playGesture player:resetGesture"},"MATERIAL":{"fields":[{"name":"MATERIAL_LINES","description":""},{"name":"MATERIAL_LINE_LOOP","description":""},{"name":"MATERIAL_LINE_STRIP","description":""},{"name":"MATERIAL_POINTS","description":""},{"name":"MATERIAL_POLYGON","description":""},{"name":"MATERIAL_QUADS","description":""},{"name":"MATERIAL_TRIANGLES","description":""},{"name":"MATERIAL_TRIANGLE_STRIP","description":""}],"realm":"shared","class":"table","name":"MATERIAL","description":" ENUMs of mesh types. To be used with mesh.generate."},"MOUSE":{"fields":[{"name":"MOUSE1","description":""},{"name":"LEFT","description":""},{"name":"MOUSE2","description":""},{"name":"RIGHT","description":""},{"name":"MOUSE3","description":""},{"name":"MIDDLE","description":""},{"name":"MOUSE4","description":""},{"name":"4","description":""},{"name":"MOUSE5","description":""},{"name":"5","description":""},{"name":"MWHEELUP","description":""},{"name":"WHEEL_UP","description":""},{"name":"MWHEELDOWN","description":""},{"name":"WHEEL_DOWN","description":""},{"name":"COUNT","description":""},{"name":"FIRST","description":""},{"name":"LAST","description":""}],"realm":"shared","class":"table","name":"MOUSE","description":" ENUMs of mouse buttons for use with input library"},"MASK":{"fields":[{"name":"OPAQUE_AND_NPCS","description":""},{"name":"SOLID","description":""},{"name":"OPAQUE","description":""},{"name":"PLAYERSOLID_BRUSHONLY","description":""},{"name":"BLOCKLOS","description":""},{"name":"SHOT_HULL","description":""},{"name":"ALL","description":""},{"name":"VISIBLE","description":""},{"name":"NPCWORLDSTATIC","description":""},{"name":"DEADSOLID","description":""},{"name":"SPLITAREAPORTAL","description":""},{"name":"CURRENT","description":""},{"name":"BLOCKLOS_AND_NPCS","description":""},{"name":"SHOT","description":""},{"name":"NPCSOLID","description":""},{"name":"SOLID_BRUSHONLY","description":""},{"name":"VISIBLE_AND_NPCS","description":""},{"name":"NPCSOLID_BRUSHONLY","description":""},{"name":"SHOT_PORTAL","description":""},{"name":"WATER","description":""},{"name":"PLAYERSOLID","description":""}],"realm":"shared","class":"table","name":"MASK","description":" ENUMs used as trace masks in the trace library. These are simply combinations of the CONTENTS enums."}},"class":"library","name":"builtins","description":" Built in values. These don't need to be loaded; they are in the default builtins_library."}},"Hooks":{"PlayerDisconnected":{"realm":"server","params":[{"name":"ply","description":"Player that disconnected"}],"class":"hook","name":"PlayerDisconnected","description":" Called when a player disconnects"},"setupskyboxfog":{"realm":"client","params":[{"name":"scale","description":"Skybox scale"}],"class":"hook","name":"setupskyboxfog","description":" Called when skybox fog is drawn."},"PlayerEnteredVehicle":{"realm":"server","params":[{"name":"ply","description":"Player who entered a vehicle"},{"name":"vehicle","description":"Vehicle that was entered"},{"name":"num","description":"Role"}],"class":"hook","name":"PlayerEnteredVehicle","description":" Called when a players enters a vehicle"},"postdrawhud":{"description":"Called after drawing HUD (2D Context)","class":"hook","name":"postdrawhud","realm":"client"},"writecell":{"realm":"server","params":[{"name":"address","description":"The address written to"},{"name":"data","description":"The data being written"}],"class":"hook","name":"writecell","description":" Called when a high speed device writes to a wired SF chip"},"remote":{"realm":"shared","params":[{"name":"sender","description":"The entity that caused the hook to run"},{"name":"owner","description":"The owner of the sender"},{"name":"The","description":"payload that was supplied when calling the hook"}],"class":"hook","name":"remote","description":" Remote hook.\n This hook can be called from other instances"},"EntityRemoved":{"realm":"shared","params":[{"name":"ent","description":"Entity being removed"}],"class":"hook","name":"EntityRemoved","description":" Called when an entity is removed"},"hudshoulddraw":{"returns":["Return false to not draw the element"],"realm":"client","params":[{"name":"string","description":"The name of the hud element trying to be drawn"}],"class":"hook","name":"hudshoulddraw","description":" Called when a hud element is attempting to be drawn"},"xinputTrigger":{"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"},{"name":"value","description":"The position of the trigger. 0-255 inclusive"},{"name":"trigger","description":"The trigger that was moved. 0 is left"},{"name":"when","description":"The timer.realtime() at which this event occurred."}],"class":"hook","name":"xinputTrigger","description":" Called when a trigger on the controller has moved. Client must have XInput Lua binary installed."},"renderoffscreen":{"description":" Called when a frame is requested to be drawn. Doesn't require a screen or HUD but only works on rendertargets. (2D Context)","class":"hook","name":"renderoffscreen","realm":"client"},"VRPreRenderRight":{"description":" Called before rendering the right eye. This along with the previous hook can be used to render different things in different eyes. HUD is required.","class":"hook","name":"VRPreRenderRight","realm":"client"},"KeyRelease":{"realm":"shared","params":[{"name":"ply","description":"Player releasing the key"},{"name":"key","description":"The key being released"}],"class":"hook","name":"KeyRelease","description":" Called when a player releases a key"},"PhysgunPickup":{"realm":"shared","params":[{"name":"ply","description":"Player picking up the entity"},{"name":"ent","description":"Entity being picked up"}],"class":"hook","name":"PhysgunPickup","description":" Called when an entity gets picked up by a physgun"},"StartChat":{"description":" Called when the local player opens their chat window.","class":"hook","name":"StartChat","realm":"client"},"FinishChat":{"description":" Called when the local player closes their chat window.","class":"hook","name":"FinishChat","realm":"client"},"hologrammatrix":{"description":" Called before entities are drawn. You can't render anything, but you can edit hologram matrices before they are drawn.","class":"hook","name":"hologrammatrix","realm":"client"},"Removed":{"description":" Called when the starfall chip is removed","class":"hook","name":"Removed","realm":"server"},"xinputPressed":{"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"},{"name":"button","description":"The button that was pushed. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_"},{"name":"when","description":"The timer.realtime() at which this event occurred."}],"class":"hook","name":"xinputPressed","description":" Called when a controller button has been pressed. Client must have XInput Lua binary installed."},"input":{"realm":"server","params":[{"name":"input","description":"The input name"},{"name":"value","description":"The value of the input"}],"class":"hook","name":"input","description":" Called when an input on a wired SF chip is written to"},"PlayerHurt":{"realm":"shared","params":[{"name":"ply","description":"Player being hurt"},{"name":"attacker","description":"Entity causing damage to the player"},{"name":"newHealth","description":"New health of the player"},{"name":"damageTaken","description":"Amount of damage the player has taken"}],"class":"hook","name":"PlayerHurt","description":" Called when a player gets hurt"},"VRStart":{"realm":"shared","params":[{"name":"ply","description":"Player entering VR"}],"class":"hook","name":"VRStart","description":" Called when a player enters VR"},"readcell":{"returns":["The value read"],"realm":"server","params":[{"name":"address","description":"The address requested"}],"class":"hook","name":"readcell","description":" Called when a high speed device reads from a wired SF chip"},"think":{"description":" Think hook. Called each frame on the client and each game tick on the server.","class":"hook","name":"think","realm":"shared"},"OnPhysgunFreeze":{"realm":"server","params":[{"name":"physgun","description":"Entity of the physgun"},{"name":"physobj","description":"PhysObj of the entity"},{"name":"ent","description":"Entity being frozen"},{"name":"ply","description":"Player freezing the entity"}],"class":"hook","name":"OnPhysgunFreeze","description":" Called when an entity is being frozen"},"EntityFireBullets":{"realm":"shared","params":[{"name":"ent","description":"The entity that fired the bullet"},{"name":"data","description":"The bullet data. See http://wiki.facepunch.com/gmod/Structures/Bullet"}],"class":"hook","name":"EntityFireBullets","description":" Called every time a bullet is fired from an entity"},"PlayerSpawn":{"realm":"server","params":[{"name":"ply","description":"Player who spawned"}],"class":"hook","name":"PlayerSpawn","description":" Called when a player spawns"},"PlayerChat":{"realm":"client","params":[{"name":"ply","description":"Player that said the message"},{"name":"text","description":"The message"},{"name":"team","description":"Whether the message was team only"},{"name":"isdead","description":"Whether the message was send from a dead player"}],"class":"hook","name":"PlayerChat","description":" Called when a player's chat message is printed to the chat window"},"GravGunPunt":{"realm":"shared","params":[{"name":"ply","description":"Player punting the gravgun"},{"name":"ent","description":"Entity being punted"}],"class":"hook","name":"GravGunPunt","description":" Called when a player punts with the gravity gun"},"GravGunOnPickedUp":{"realm":"server","params":[{"name":"ply","description":"Player picking up an object"},{"name":"ent","description":"Entity being picked up"}],"class":"hook","name":"GravGunOnPickedUp","description":" Called when an entity is being picked up by a gravity gun"},"hudconnected":{"description":" Called when the player connects to a HUD component linked to the Starfall Chip","class":"hook","name":"hudconnected","realm":"client"},"PlayerNoClip":{"realm":"shared","params":[{"name":"ply","description":"Player toggling noclip"},{"name":"newState","description":"New noclip state. True if on."}],"class":"hook","name":"PlayerNoClip","description":" Called when a player toggles noclip"},"StartEntityDriving":{"realm":"shared","params":[{"name":"ent","description":"Entity being driven"},{"name":"ply","description":"Player that is driving the entity"}],"class":"hook","name":"StartEntityDriving","description":" Called when a player starts driving an entity"},"NetworkEntityCreated":{"realm":"client","params":[{"name":"ent","description":"New entity"}],"class":"hook","name":"NetworkEntityCreated","description":" Called when a clientside entity gets created or re-created via lag/PVS"},"postdrawopaquerenderables":{"realm":"client","params":[{"name":"boolean","description":"isDrawingDepth Whether the current draw is writing depth."},{"name":"boolean","description":"isDrawSkybox Whether the current draw is drawing the skybox."}],"class":"hook","name":"postdrawopaquerenderables","description":" Called after opaque entities are drawn. (Only works with HUD) (3D context)"},"starfallUsed":{"realm":"client","params":[{"name":"activator","description":"Player who used the screen or chip"},{"name":"used","description":"The screen or chip entity that was used"}],"class":"hook","name":"starfallUsed","description":" Called when a player uses the screen"},"render":{"description":" Called when a frame is requested to be drawn on screen. (2D/3D Context)","class":"hook","name":"render","realm":"client"},"NotifyShouldTransmit":{"realm":"client","params":[{"name":"ent","description":"The entity"},{"name":"shouldtransmit","description":"Whether it is now transmitting or not"}],"class":"hook","name":"NotifyShouldTransmit","description":" Called when a clientside entity transmit state is changed. Usually when changing PVS\n If you want clientside render changes to persist on an entity you have to re-apply them\n each time it begins transmitting again"},"drawhud":{"description":" Called when a frame is requested to be drawn on hud. (2D Context)","class":"hook","name":"drawhud","realm":"client"},"PhysgunDrop":{"realm":"shared","params":[{"name":"ply","description":"Player droppig the entity"},{"name":"ent","description":"Entity being dropped"}],"class":"hook","name":"PhysgunDrop","description":" Called when an entity being held by a physgun gets dropped"},"PlayerInitialSpawn":{"realm":"server","params":[{"name":"ply","description":"Player who spawned"}],"class":"hook","name":"PlayerInitialSpawn","description":" Called when a player spawns for the first time"},"predrawopaquerenderables":{"realm":"client","params":[{"name":"boolean","description":"isDrawingDepth Whether the current draw is writing depth."},{"name":"boolean","description":"isDrawSkybox Whether the current draw is drawing the skybox."}],"class":"hook","name":"predrawopaquerenderables","description":" Called before opaque entities are drawn. (Only works with HUD) (3D context)"},"tick":{"description":" Tick hook. Called each game tick on both the server and client.","class":"hook","name":"tick","realm":"shared"},"KeyPress":{"realm":"shared","params":[{"name":"ply","description":"Player pressing the key"},{"name":"key","description":"The key being pressed"}],"class":"hook","name":"KeyPress","description":" Called when a player presses a key"},"PropBreak":{"realm":"shared","params":[{"name":"ply","description":"Player who broke it"},{"name":"ent","description":"Entity broken"}],"class":"hook","name":"PropBreak","description":" Called when an entity is broken"},"xinputReleased":{"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"},{"name":"button","description":"The button that was released. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_"},{"name":"when","description":"The timer.realtime() at which this event occurred."}],"class":"hook","name":"xinputReleased","description":" Called when a controller button has been released. Client must have XInput Lua binary installed."},"PlayerLeaveVehicle":{"realm":"server","params":[{"name":"ply","description":"Player who left a vehicle"},{"name":"vehicle","description":"Vehicle that was left"}],"class":"hook","name":"PlayerLeaveVehicle","description":" Called when a players leaves a vehicle"},"StarfallError":{"realm":"shared","params":[{"name":"ent","description":"Starfall chip that errored"},{"name":"ply","description":"Owner of the chip on server or player that script errored for on client"},{"name":"err","description":"Error message"}],"class":"hook","name":"StarfallError","description":" Called when starfall chip errors"},"inputReleased":{"realm":"client","params":[{"name":"button","description":"Number of the button"}],"class":"hook","name":"inputReleased","description":" Called when a button is released"},"renderscene":{"realm":"client","params":[{"name":"origin","description":"View origin"},{"name":"angles","description":"View angles"},{"name":"fov","description":"View FOV"}],"class":"hook","name":"renderscene","description":" Called when a scene is requested to be drawn. This is used for the render.renderview function."},"mouseWheeled":{"realm":"client","params":[{"name":"delta","description":"Rotate delta"}],"class":"hook","name":"mouseWheeled","description":" Called when the mouse wheel is rotated"},"mousemoved":{"realm":"client","params":[{"name":"x","description":"X coordinate moved"},{"name":"y","description":"Y coordinate moved"}],"class":"hook","name":"mousemoved","description":" Called when the mouse is moved"},"VRPreRender":{"description":" Called before rendering the game. Any code that you want to run once per frame should be put here. HUD is required.","class":"hook","name":"VRPreRender","realm":"client"},"EntityTakeDamage":{"realm":"server","params":[{"name":"target","description":"Entity that is hurt"},{"name":"attacker","description":"Entity that attacked"},{"name":"inflictor","description":"Entity that inflicted the damage"},{"name":"amount","description":"How much damage"},{"name":"type","description":"Type of the damage"},{"name":"position","description":"Position of the damage"},{"name":"force","description":"Force of the damage"}],"class":"hook","name":"EntityTakeDamage","description":" Called when an entity is damaged"},"setupworldfog":{"description":" Called when world fog is drawn.","class":"hook","name":"setupworldfog","realm":"client"},"predrawhud":{"description":"Called before drawing HUD (2D Context)","class":"hook","name":"predrawhud","realm":"client"},"PlayerSay":{"returns":["New text. \"\" to stop from displaying. Nil to keep original."],"realm":"server","params":[{"name":"ply","description":"Player that sent the message"},{"name":"text","description":"Content of the message"},{"name":"teamChat","description":"True if team chat"}],"class":"hook","name":"PlayerSay","description":" Called when a player sends a chat message"},"inputPressed":{"realm":"client","params":[{"name":"button","description":"Number of the button"}],"class":"hook","name":"inputPressed","description":" Called when a button is pressed"},"DupeFinished":{"realm":"server","params":[{"name":"entTbl","description":"A table of entities duped with the chip mapped to their previous indices."}],"class":"hook","name":"DupeFinished","description":" Called after the starfall chip is duplicated and the duplication is finished."},"xinputStick":{"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"},{"name":"x","description":"The X coordinate of the trigger. -32768 - 32767 inclusive"},{"name":"y","description":"The Y coordinate of the trigger. -32768 - 32767 inclusive"},{"name":"stick","description":"The stick that was moved. 0 is left"},{"name":"when","description":"The timer.realtime() at which this event occurred."}],"class":"hook","name":"xinputStick","description":" Called when a stick on the controller has moved. Client must have XInput Lua binary installed."},"xinputDisconnected":{"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"},{"name":"when","description":"The timer.realtime() at which this event occurred."}],"class":"hook","name":"xinputDisconnected","description":" Called when a controller has been disconnected. Client must have XInput Lua binary installed."},"GravGunOnDropped":{"realm":"server","params":[{"name":"ply","description":"Player dropping the object"},{"name":"ent","description":"Entity being dropped"}],"class":"hook","name":"GravGunOnDropped","description":" Called when an entity is being dropped by a gravity gun"},"EndEntityDriving":{"realm":"shared","params":[{"name":"ent","description":"Entity that had been driven"},{"name":"ply","description":"Player that drove the entity"}],"class":"hook","name":"EndEntityDriving","description":" Called when a player stops driving an entity"},"PlayerCanPickupWeapon":{"realm":"server","params":[{"name":"ply","description":"Player"},{"name":"wep","description":"Weapon"}],"class":"hook","name":"PlayerCanPickupWeapon","description":" Called when a wants to pick up a weapon"},"VRInput":{"realm":"client","params":[{"name":"actionname","description":"Name of the input"},{"name":"boolean","description":"State of the input"}],"class":"hook","name":"VRInput","description":" This gets called every time a boolean controller input action changes state"},"VRExit":{"realm":"shared","params":[{"name":"ply","description":"Player exiting VR"}],"class":"hook","name":"VRExit","description":" Called when a player exits VR"},"xinputConnected":{"realm":"client","params":[{"name":"id","description":"Controller number. Starts at 0"},{"name":"when","description":"The timer.realtime() at which this event occurred."}],"class":"hook","name":"xinputConnected","description":" Called when a controller has been connected. Client must have XInput Lua binary installed."},"PlayerDeath":{"realm":"server","params":[{"name":"ply","description":"Player who died"},{"name":"inflictor","description":"Entity used to kill the player"},{"name":"attacker","description":"Entity that killed the player"}],"class":"hook","name":"PlayerDeath","description":" Called when a player dies"},"PlayerSpray":{"realm":"server","params":[{"name":"ply","description":"Player that sprayed"}],"class":"hook","name":"PlayerSpray","description":" Called when a players sprays his logo"},"ClientInitialized":{"realm":"server","params":[{"name":"ply","description":"The player that initialized"}],"class":"hook","name":"ClientInitialized","description":" Called after a client's starfall has initialized. Use this to know when it's safe to send net messages to the client."},"OnPhysgunReload":{"realm":"server","params":[{"name":"physgun","description":"Entity of the physgun"},{"name":"ply","description":"Player reloading the physgun"}],"class":"hook","name":"OnPhysgunReload","description":" Called when a player reloads his physgun"},"ComponentLinked":{"realm":"shared","params":[{"name":"ent","description":"The component entity"}],"class":"hook","name":"ComponentLinked","description":" Called when a component is linked to the starfall"},"PlayerSwitchFlashlight":{"realm":"server","params":[{"name":"ply","description":"Player switching flashlight"},{"name":"state","description":"New flashlight state. True if on."}],"class":"hook","name":"PlayerSwitchFlashlight","description":" Called when a players turns their flashlight on or off"},"calcview":{"returns":["table Table containing information for the camera. {origin=camera origin, angles=camera angles, fov=camera fov, znear=znear, zfar=zfar, drawviewer=drawviewer, ortho=ortho table}"],"realm":"client","params":[{"name":"pos","description":"Current position of the camera"},{"name":"ang","description":"Current angles of the camera"},{"name":"fov","description":"Current fov of the camera"},{"name":"znear","description":"Current near plane of the camera"},{"name":"zfar","description":"Current far plane of the camera"}],"class":"hook","name":"calcview","description":" Called when the engine wants to calculate the player's view. Only works if connected to Starfall HUD"},"ComponentUnlinked":{"realm":"shared","params":[{"name":"ent","description":"The component entity"}],"class":"hook","name":"ComponentUnlinked","description":" Called when a component is unlinked to the starfall"},"PlayerSwitchWeapon":{"realm":"shared","params":[{"name":"ply","description":"Player droppig the entity"},{"name":"oldwep","description":"Old weapon"},{"name":"newweapon","description":"New weapon"}],"class":"hook","name":"PlayerSwitchWeapon","description":" Called when a player switches their weapon"},"net":{"realm":"shared","params":[{"name":"name","description":"Name of the arriving net message"},{"name":"len","description":"Length of the arriving net message in bits"},{"name":"ply","description":"On server, the player that sent the message. Nil on client."}],"class":"hook","name":"net","description":" Called when a net message arrives"},"permissionrequest":{"description":" Called when local client changed instance permissions","class":"hook","name":"permissionrequest","realm":"client"},"PlayerUse":{"realm":"server","params":[{"name":"ply","description":"Player using the entity"},{"name":"ent","description":"Entity being used"}],"class":"hook","name":"PlayerUse","description":" Called when a player holds their use key and looks at an entity.\n Will continuously run."},"OnEntityCreated":{"realm":"shared","params":[{"name":"ent","description":"New entity"}],"class":"hook","name":"OnEntityCreated","description":" Called when an entity gets created"},"huddisconnected":{"description":" Called when the player disconnects from a HUD component linked to the Starfall Chip","class":"hook","name":"huddisconnected","realm":"client"}},"Version":"master","Directives":{"server":{"description":" Set the current file to only run on the server. Shared is default. --@server","class":"directive","name":"server","realm":"shared"},"model":{"realm":"shared","params":[{"name":"model","description":"String of the model"}],"class":"directive","name":"model","description":" Set the model of the processor entity. --@model models/props_junk/watermelon01.mdl"},"clientmain":{"realm":"shared","params":[{"name":"filename","description":"The file to run as main on client"}],"class":"directive","name":"clientmain","description":" Set the client file to run as main. Can only be used in the main file. The client file must be --@include'ed. The main file will not be sent to the client if you use this directive.\n --@include somefile.txt\n --@clientmain somefile.txt"},"includedir":{"realm":"shared","params":[{"name":"path","description":"Path to the directory"}],"class":"directive","name":"includedir","description":" Mark a directory to be included in the upload.\n This is optional to include all files in the directory in require() and dofile()"},"superuser":{"description":" Lets the chip run with no restrictions and the chip owner becomes SF.Superuser. Can only be used in the main file. --@superuser","class":"directive","name":"superuser","realm":"shared"},"client":{"description":" Set the current file to only run on the client. Shared is default. --@client","class":"directive","name":"client","realm":"shared"},"name":{"realm":"shared","params":[{"name":"name","description":"Name of the script"}],"class":"directive","name":"name","description":" Set the name of the script.\n This will become the name of the tab and will show on the overlay of the processor. --@name Awesome script"},"include":{"realm":"shared","params":[{"name":"path","description":"Path to the file"}],"class":"directive","name":"include","description":" Mark a file to be included in the upload.\n This is required to use the file in require() and dofile()"},"author":{"realm":"shared","params":[{"name":"author","description":"Author of the script"}],"class":"directive","name":"author","description":" Set the author of the script.\n This will set the author that will be shown on the overlay of the processor. --@author TheAuthor"}},"Types":{"Mesh":{"methods":{"destroy":{"description":" Frees the mesh from memory","class":"function","name":"destroy","realm":"client"},"draw":{"description":" Draws the mesh. Must be in a 3D rendering context.","class":"function","name":"draw","realm":"client"}},"libtbl":["mesh_methods"],"realm":"shared","class":"type","name":"Mesh","description":" Mesh type"},"Player":{"methods":{"getShootPos":{"returns":["Shoot position"],"realm":"shared","class":"function","name":"getShootPos","description":" Returns the player's shoot position"},"getTeam":{"returns":["team"],"realm":"shared","class":"function","name":"getTeam","description":" Returns the player's current team"},"setAnimationTime":{"realm":"client","params":[{"name":"time","description":"The time of the animation in seconds. Float"}],"class":"function","name":"setAnimationTime","description":" Sets the animation time"},"isMuted":{"returns":["True if the player was muted"],"realm":"shared","class":"function","name":"isMuted","description":" Returns whether the local player has muted the player"},"isCrouching":{"returns":["True if player crouching"],"realm":"shared","class":"function","name":"isCrouching","description":" Returns whether the player is crouching"},"isPlayingAnimation":{"returns":["True or false"],"realm":"client","class":"function","name":"isPlayingAnimation","description":" Gets whether a animation is playing"},"setEyeAngles":{"realm":"server","params":[{"name":"ang","description":"New angles"}],"class":"function","name":"setEyeAngles","description":" Sets a player's eye angles"},"getAnimationProgress":{"returns":["Progress ranging 0-1"],"realm":"client","class":"function","name":"getAnimationProgress","description":" Gets the progress of the animation ranging 0-1"},"getAnimationTime":{"returns":["Time in seconds"],"realm":"client","class":"function","name":"getAnimationTime","description":" Gets the animation time"},"hasGodMode":{"returns":["True if the player has godmode"],"realm":"server","class":"function","name":"hasGodMode","description":" Returns whether or not the player has godmode"},"isSuperAdmin":{"returns":["True if player is super admin"],"realm":"shared","class":"function","name":"isSuperAdmin","description":" Returns whether the player is a super admin"},"getUserID":{"returns":["user ID"],"realm":"shared","class":"function","name":"getUserID","description":" Returns the player's user ID"},"isConnected":{"returns":["True if player is connected"],"realm":"shared","class":"function","name":"isConnected","description":" Returns whether the player is connected"},"isUserGroup":{"returns":["True if player belongs to group"],"realm":"shared","params":[{"name":"group","description":"Group to check against"}],"class":"function","name":"isUserGroup","description":" Returns whether the player belongs to a usergroup"},"voiceVolume":{"returns":["Returns the players voice volume, how loud the player's voice communication currently is, as a normal number. Doesn't work on local player unless the voice_loopback convar is set to 1."],"realm":"client","class":"function","name":"voiceVolume","description":" Returns the voice volume of the player"},"setAnimationRate":{"realm":"client","params":[{"name":"rate","description":"The playback rate of the animation. Float"}],"class":"function","name":"setAnimationRate","description":" Sets the animation playback rate"},"isSpeaking":{"returns":["bool true/false"],"realm":"client","class":"function","name":"isSpeaking","description":" Returns whether the player is heard by the local player."},"getEyeTrace":{"returns":["table trace data https://wiki.facepunch.com/gmod/Structures/TraceResult"],"realm":"shared","class":"function","name":"getEyeTrace","description":" Returns a table with information of what the player is looking at"},"setAnimationActivity":{"realm":"client","params":[{"name":"activity","description":"number or string name, keep empty to use the animation sequence"}],"class":"function","name":"setAnimationActivity","description":" Sets the animation activity"},"getGroundEntity":{"returns":["Ground entity"],"realm":"shared","class":"function","name":"getGroundEntity","description":" Returns the entity that the player is standing on"},"setAnimationProgress":{"realm":"client","params":[{"name":"progress","description":"The progress of the animation. Ranging from 0-1"}],"class":"function","name":"setAnimationProgress","description":" Sets the animation progress"},"getMaxArmor":{"returns":["Armor limit"],"realm":"shared","class":"function","name":"getMaxArmor","description":" Returns maximum armor capacity"},"getViewModel":{"returns":["Player's view model"],"realm":"shared","class":"function","name":"getViewModel","description":" Returns the player's view model\n In the Client realm, other players' viewmodels are not available unless they are being spectated"},"isFrozen":{"returns":["True if player is frozen"],"realm":"shared","class":"function","name":"isFrozen","description":" Returns whether the player is frozen"},"getMaxSpeed":{"returns":["Maximum speed"],"realm":"shared","class":"function","name":"getMaxSpeed","description":" Returns the player's maximum speed"},"resetAnimation":{"description":" Resets the animation","class":"function","name":"resetAnimation","realm":"client"},"setAnimationBounce":{"realm":"client","params":[{"name":"bounce","description":"Should the animation bounce instead of loop. Bool"}],"class":"function","name":"setAnimationBounce","description":" Sets the animation bounce"},"getUniqueID":{"returns":["unique ID"],"realm":"shared","class":"function","name":"getUniqueID","description":" Returns the player's unique ID"},"getJumpPower":{"returns":["Jump power"],"realm":"shared","class":"function","name":"getJumpPower","description":" Returns the player's jump power"},"dropWeapon":{"realm":"server","params":[{"name":"weapon","description":"The weapon entity or class to drop"},{"name":"target","description":"If set, launches the weapon at the given position"},{"name":"velocity","description":"If set and target is unset, launches the weapon with the given velocity"}],"class":"function","name":"dropWeapon","description":" Drops the players' weapon"},"isFlashlightOn":{"returns":["True if player has flashlight on"],"realm":"shared","class":"function","name":"isFlashlightOn","description":" Returns whether the player's flashlight is on"},"setAnimationAutoAdvance":{"realm":"client","params":[{"name":"auto_advance","description":"Should the animation handle advancing itself. Bool"}],"class":"function","name":"setAnimationAutoAdvance","description":" Sets the animation audo advance"},"getFrags":{"returns":["Amount of kills"],"realm":"shared","class":"function","name":"getFrags","description":" Returns the amount of kills of the player"},"getWeapons":{"returns":["Table of weapons"],"realm":"shared","class":"function","name":"getWeapons","description":" Returns a table of weapons the player is carrying"},"getAmmoCount":{"returns":["The amount of ammo player has in reserve."],"realm":"shared","params":[{"name":"id","description":"The string or number id of the ammo"}],"class":"function","name":"getAmmoCount","description":" Gets the amount of ammo the player has."},"getWeapon":{"returns":["weapon"],"realm":"shared","params":[{"name":"wep","description":"String weapon class"}],"class":"function","name":"getWeapon","description":" Returns the specified weapon or nil if the player doesn't have it"},"isAdmin":{"returns":["True if player is admin"],"realm":"shared","class":"function","name":"isAdmin","description":" Returns whether the player is an admin"},"getName":{"returns":["Name"],"realm":"shared","class":"function","name":"getName","description":" Returns the player's name"},"getRunSpeed":{"returns":["Running speed"],"realm":"shared","class":"function","name":"getRunSpeed","description":" Returns the player's running speed"},"getViewEntity":{"returns":["Player's current view entity"],"realm":"shared","class":"function","name":"getViewEntity","description":" Returns the player's current view entity"},"setAnimationLoop":{"realm":"client","params":[{"name":"loop","description":"Should the animation loop. Bool"}],"class":"function","name":"setAnimationLoop","description":" Sets the animation loop"},"setAnimationRange":{"realm":"client","params":[{"name":"min","description":"Min. Ranging from 0-1"},{"name":"max","description":"Max. Ranging from 0-1"}],"class":"function","name":"setAnimationRange","description":" Sets the animation range"},"isPlayer":{"returns":["True if player is player"],"realm":"shared","class":"function","name":"isPlayer","description":" Returns whether the player is a player"},"getFriendStatus":{"returns":["One of: \"friend\", \"blocked\", \"none\", \"requested\""],"realm":"shared","class":"function","name":"getFriendStatus","description":" Returns the relationship of the player to the local client"},"lastHitGroup":{"returns":["Hitgroup, see https://wiki.facepunch.com/gmod/Enums/HITGROUP"],"realm":"server","class":"function","name":"lastHitGroup","description":" Returns the hitgroup where the player was last hit."},"getPing":{"returns":["ping"],"realm":"shared","class":"function","name":"getPing","description":" Returns the player's current ping"},"inVehicle":{"returns":["True if player in vehicle"],"realm":"shared","class":"function","name":"inVehicle","description":" Returns whether the player is in a vehicle"},"getFOV":{"returns":["Field of view"],"realm":"shared","class":"function","name":"getFOV","description":" Returns the player's field of view"},"resetGesture":{"realm":"client","params":[{"name":"slot","description":"Optional int (Default GESTURE_SLOT.CUSTOM), the gesture slot to use. GESTURE_SLOT table values"}],"class":"function","name":"resetGesture","description":" Resets gesture animations on a player"},"setViewEntity":{"realm":"server","params":[{"name":"ent","description":"Entity to set the player's view entity to, or nothing to reset it"}],"class":"function","name":"setViewEntity","description":" Sets the view entity of the player. Only works if they are linked to a hud."},"playGesture":{"realm":"client","params":[{"name":"animation","description":"sequence string or act number. https://wiki.facepunch.com/gmod/Enums/ACT"},{"name":"loop","description":"Optional bool (Default true), should the gesture loop"},{"name":"slot","description":"Optional int (Default GESTURE_SLOT.CUSTOM), the gesture slot to use. GESTURE_SLOT table values"},{"name":"weight","description":"Optional float (Default 1), the weight of the gesture. Ranging from 0-1"}],"class":"function","name":"playGesture","description":" Plays gesture animations on a player"},"getVehicle":{"returns":["Vehicle if player in vehicle or nil"],"realm":"shared","class":"function","name":"getVehicle","description":" Returns the vehicle the player is driving"},"isBot":{"returns":["True if player is a bot"],"realm":"shared","class":"function","name":"isBot","description":" Returns whether the player is a bot"},"getDeaths":{"returns":["Amount of deaths"],"realm":"shared","class":"function","name":"getDeaths","description":" Returns the amount of deaths of the player"},"getAimVector":{"returns":["Aim vector"],"realm":"shared","class":"function","name":"getAimVector","description":" Returns the player's aim vector"},"getSteamID":{"returns":["steam ID"],"realm":"shared","class":"function","name":"getSteamID","description":" Returns the player's steam ID"},"isNPC":{"returns":["True if player is an NPC"],"realm":"shared","class":"function","name":"isNPC","description":" Returns whether the player is an NPC"},"isAlive":{"returns":["True if player alive"],"realm":"shared","class":"function","name":"isAlive","description":" Returns whether the player is alive"},"getTeamName":{"returns":["team name"],"realm":"shared","class":"function","name":"getTeamName","description":" Returns the name of the player's current team"},"isSprinting":{"returns":["bool true/false"],"realm":"shared","class":"function","name":"isSprinting","description":" Returns whether the player is sprinting"},"setModelScale":{"realm":"server","params":[{"name":"scale","description":"The scale to apply (min 0.001, max 100)"}],"class":"function","name":"setModelScale","description":" Lets you change the size of yourself if the server has sf_permissions_entity_owneraccess 1"},"getArmor":{"returns":["Armor"],"realm":"shared","class":"function","name":"getArmor","description":" Returns the players armor"},"getSteamID64":{"returns":["community ID"],"realm":"shared","class":"function","name":"getSteamID64","description":" Returns the player's community ID"},"keyDown":{"returns":["True or false"],"realm":"shared","params":[{"name":"key","description":"Key to check. IN_KEY table values"}],"class":"function","name":"keyDown","description":" Returns whether or not the player is pushing the key."},"isTyping":{"returns":["bool true/false"],"realm":"shared","class":"function","name":"isTyping","description":" Returns whether the player is typing in their chat"},"setAnimation":{"realm":"client","params":[{"name":"sequence","description":"Sequence number or string name"},{"name":"progress","description":"Optional float (Default 0), the progress of the animation. Ranging from 0-1"},{"name":"rate","description":"Optional float (Default 1), the playback rate of the animation"},{"name":"loop","description":"Optional bool (Default false), should the animation loop"},{"name":"auto_advance","description":"Optional bool (Default true), should the animation handle advancing itself"},{"name":"act","description":"Optional number or string name (Default sequence value), the activity the player should use"}],"class":"function","name":"setAnimation","description":" Plays an animation on the player"},"isNoclipped":{"returns":["true if the player is noclipped"],"realm":"shared","class":"function","name":"isNoclipped","description":" Returns true if the player is noclipped"},"getActiveWeapon":{"returns":["The weapon"],"realm":"shared","class":"function","name":"getActiveWeapon","description":" Returns the name of the player's active weapon"},"setGestureWeight":{"realm":"client","params":[{"name":"slot","description":"Optional int (Default GESTURE_SLOT.CUSTOM), the gesture slot to use. GESTURE_SLOT table values"},{"name":"weight","description":"Optional float (Default 1), the weight of the gesture. Ranging from 0-1"}],"class":"function","name":"setGestureWeight","description":" Sets the weight of the gesture animation in the given gesture slot"}},"libtbl":["player_methods"],"realm":"shared","class":"type","name":"Player","description":" Player type"},"Vector":{"methods":{"isEqualTol":{"returns":["bool True/False."],"realm":"shared","params":[{"name":"v","description":"Second Vector"},{"name":"t","description":"Tolerance number."}],"class":"function","name":"isEqualTol","description":" Is this vector and v equal within tolerance t."},"getQuaternion":{"returns":["Quaternion from the given vector"],"realm":"shared","params":[{"name":"up","description":"Upward direction. If specified, the original vector will act like a forward pointing one"}],"class":"function","name":"getQuaternion","description":" Converts vector to quaternion"},"getLength2D":{"returns":["number length"],"realm":"shared","class":"function","name":"getLength2D","description":" Returns the length of the vector in two dimensions, without the Z axis."},"__mul":{"returns":["Scaled vector."],"realm":"shared","params":[{"name":"lhs","description":"Left side of equation"},{"name":"rhs","description":"Right side of equation"}],"class":"function","name":"__mul","description":" multiplication metamethod"},"round":{"returns":["nil"],"realm":"shared","params":[{"name":"idp","description":"(Default 0) The integer decimal place to round to. "}],"class":"function","name":"round","description":" Round the vector values. Self-Modifies."},"getQuaternionFromRotation":{"returns":["Rotated quaternion"],"realm":"shared","class":"function","name":"getQuaternionFromRotation","description":" Constructs a quaternion from the rotation vector. Vector direction is axis of rotation, it's magnitude is angle in degrees"},"withinAABox":{"returns":["bool True/False."],"realm":"shared","params":[{"name":"v1","description":"Vector used to define AABox"},{"name":"v2","description":"Second Vector to define AABox"}],"class":"function","name":"withinAABox","description":" Returns whenever the given vector is in a box created by the 2 other vectors."},"__sub":{"returns":["Resultant vector after subtraction operation."],"realm":"shared","params":[{"name":"v","description":"Vector to subtract"}],"class":"function","name":"__sub","description":" sub metamethod"},"__unm":{"returns":["negated vector."],"realm":"shared","class":"function","name":"__unm","description":" unary minus metamethod"},"getLength":{"returns":["number Length."],"realm":"shared","class":"function","name":"getLength","description":" Get the vector's Length."},"getLengthSqr":{"returns":["number length squared."],"realm":"shared","class":"function","name":"getLengthSqr","description":" Get the vector's length squared ( Saves computation by skipping the square root )."},"vdiv":{"realm":"shared","params":[{"name":"v","description":"Vector to divide by"}],"class":"function","name":"vdiv","description":" Divide self by a Vector. Self-Modifies. ( convenience function )"},"mul":{"returns":["nil"],"realm":"shared","params":[{"name":"n","description":"Scalar to multiply with."}],"class":"function","name":"mul","description":" Scalar Multiplication of the vector. Self-Modifies."},"__eq":{"returns":["bool if both sides are equal."],"realm":"shared","class":"function","name":"__eq","description":" equivalence metamethod"},"rotate":{"returns":["nil."],"realm":"shared","params":[{"name":"b","description":"Angle to rotate by."}],"class":"function","name":"rotate","description":" Rotate the vector by Angle b. Self-Modifies."},"normalize":{"returns":["nil"],"realm":"shared","class":"function","name":"normalize","description":" Normalise the vector, same direction, length 1. Self-Modifies."},"getNormalized":{"returns":["Vector Normalised"],"realm":"shared","class":"function","name":"getNormalized","description":" Returns a new vector with the same direction by length of 1."},"getQuaternionFromAxis":{"returns":["Rotated quaternion"],"realm":"shared","params":[{"name":"ang","description":"Number rotation angle"}],"class":"function","name":"getQuaternionFromAxis","description":" Returns quaternion for rotation about axis represented by the vector by an angle"},"setX":{"returns":["The modified vector"],"realm":"shared","params":[{"name":"x","description":"The x coordinate"}],"class":"function","name":"setX","description":" Set's the vector's x coordinate and returns it."},"setY":{"returns":["The modified vector"],"realm":"shared","params":[{"name":"y","description":"The y coordinate"}],"class":"function","name":"setY","description":" Set's the vector's y coordinate and returns it."},"getDistanceSqr":{"returns":["Number"],"realm":"shared","params":[{"name":"v","description":"Second Vector"}],"class":"function","name":"getDistanceSqr","description":" Returns the squared distance of 2 vectors, this is faster Vector:getDistance as calculating the square root is an expensive process."},"getColor":{"returns":["New color object"],"realm":"shared","class":"function","name":"getColor","description":" Converts vector to color"},"isInWorld":{"returns":["bool True/False."],"realm":"server","class":"function","name":"isInWorld","description":" Returns whether the vector is in world"},"cross":{"returns":["Vector"],"realm":"shared","params":[{"name":"v","description":"Second Vector"}],"class":"function","name":"cross","description":" Calculates the cross product of the 2 vectors, creates a unique perpendicular vector to both input vectors."},"set":{"returns":["nil"],"realm":"shared","params":[{"name":"v","description":"Second Vector"}],"class":"function","name":"set","description":" Copies the values from the second vector to the first vector. Self-Modifies."},"setZ":{"returns":["The modified vector"],"realm":"shared","params":[{"name":"z","description":"The z coordinate"}],"class":"function","name":"setZ","description":" Set's the vector's z coordinate and returns it."},"sub":{"returns":["nil"],"realm":"shared","params":[{"name":"v","description":"Second Vector."}],"class":"function","name":"sub","description":" Subtract v from this Vector. Self-Modifies."},"add":{"returns":["nil"],"realm":"shared","params":[{"name":"v","description":"Vector to add"}],"class":"function","name":"add","description":" Add vector - Modifies self."},"__div":{"returns":["Scaled vector."],"realm":"shared","params":[{"name":"b","description":"Scalar or vector to divide the scalar or vector by"}],"class":"function","name":"__div","description":" division metamethod"},"rotateAroundAxis":{"returns":["Rotated vector"],"realm":"shared","params":[{"name":"axis","description":"Axis the rotate around"},{"name":"degrees","description":"Angle to rotate by in degrees or nil if radians."},{"name":"radians","description":"Angle to rotate by in radians or nil if degrees."}],"class":"function","name":"rotateAroundAxis","description":" Return rotated vector by an axis"},"__index":{"description":" __index metamethod\n Can be indexed with: 1, 2, 3, x, y, z, xx, xy, xz, xxx, xyz, zyx, etc.. 1,2,3 is most efficient.","class":"function","name":"__index","realm":"shared"},"dot":{"returns":["Number"],"realm":"shared","params":[{"name":"v","description":"Second Vector"}],"class":"function","name":"dot","description":" Dot product is the cosine of the angle between both vectors multiplied by their lengths. A.B = ||A||||B||cosA."},"getRotated":{"returns":["Rotated Vector"],"realm":"shared","params":[{"name":"b","description":"Angle to rotate by."}],"class":"function","name":"getRotated","description":" Returns Rotated vector by Angle b"},"getDistance":{"returns":["Number"],"realm":"shared","params":[{"name":"v","description":"Second Vector"}],"class":"function","name":"getDistance","description":" Returns the pythagorean distance between the vector and the other vector."},"clone":{"returns":["The copy of the vector"],"realm":"shared","class":"function","name":"clone","description":" Copies x,y,z from a vector and returns a new vector"},"__tostring":{"returns":["string representing the vector."],"realm":"shared","class":"function","name":"__tostring","description":" tostring metamethod"},"getAngle":{"returns":["Angle"],"realm":"shared","class":"function","name":"getAngle","description":" Get the vector's angle."},"vmul":{"realm":"shared","params":[{"name":"v","description":"Vector to multiply with"}],"class":"function","name":"vmul","description":" Multiply self with a Vector. Self-Modifies. ( convenience function )"},"isZero":{"returns":["bool True/False"],"realm":"shared","class":"function","name":"isZero","description":" Are all fields zero."},"toScreen":{"returns":["A table {x=screenx,y=screeny,visible=visible}"],"realm":"shared","class":"function","name":"toScreen","description":" Translates the vectors position into 2D user screen coordinates."},"__newindex":{"description":" __newindex metamethod","class":"function","name":"__newindex","realm":"shared"},"__add":{"returns":["Resultant vector after addition operation."],"realm":"shared","params":[{"name":"v","description":"Vector to add"}],"class":"function","name":"__add","description":" add metamethod"},"div":{"returns":["nil"],"realm":"shared","params":[{"name":"n","description":"Scalar to divide by."}],"class":"function","name":"div","description":" \"Scalar Division\" of the vector. Self-Modifies."},"getLength2DSqr":{"returns":["number length squared."],"realm":"shared","class":"function","name":"getLength2DSqr","description":" Returns the length squared of the vector in two dimensions, without the Z axis. ( Saves computation by skipping the square root )"},"getBasis":{"returns":["Basis 1","Basis 2"],"realm":"shared","class":"function","name":"getBasis","description":" Returns an arbitrary orthogonal basis from the direction of the vector. Input must be a normalized vector"},"getAngleEx":{"returns":["Angle"],"realm":"shared","params":[{"name":"v","description":"Second Vector"}],"class":"function","name":"getAngleEx","description":" Returns the vector's euler angle with respect to the other vector as if it were the new vertical axis."},"setZero":{"returns":["nil"],"realm":"shared","class":"function","name":"setZero","description":" Set's all vector fields to 0."}},"libtbl":["vec_methods","vec_meta"],"realm":"shared","class":"type","name":"Vector","description":" Vector type"},"Sound":{"methods":{"stop":{"realm":"shared","params":[{"name":"fade","description":"Time in seconds to fade out, if nil or 0 the sound stops instantly."}],"class":"function","name":"stop","description":" Stops the sound from being played."},"setVolume":{"realm":"shared","params":[{"name":"vol","description":"Volume to set to, between 0 and 1."},{"name":"fade","description":"Time in seconds to transition to this new volume."}],"class":"function","name":"setVolume","description":" Sets the volume of the sound. Won't work unless the sound is playing."},"isPlaying":{"description":" Returns whether the sound is being played.","class":"function","name":"isPlaying","realm":"shared"},"setPitch":{"realm":"shared","params":[{"name":"pitch","description":"Pitch to set to, between 0 and 255."},{"name":"fade","description":"Time in seconds to transition to this new pitch."}],"class":"function","name":"setPitch","description":" Sets the pitch of the sound. Won't work unless the sound is playing."},"play":{"description":" Starts to play the sound.","class":"function","name":"play","realm":"shared"},"setSoundLevel":{"realm":"shared","params":[{"name":"level","description":"dB level, see <a href='https://developer.valvesoftware.com/wiki/Soundscripts#SoundLevel'> Vale Dev Wiki</a>, for information on the value to use."}],"class":"function","name":"setSoundLevel","description":" Sets the sound level in dB. Won't work unless the sound is playing."},"destroy":{"description":" Removes the sound from the game so new one can be created if limit is reached","class":"function","name":"destroy","realm":"shared"}},"libtbl":["sound_methods"],"realm":"shared","class":"type","name":"Sound","description":" Sound type"},"Hologram":{"methods":{"setAngVel":{"realm":"server","params":[{"name":"angvel","description":"*Vector* angular velocity."}],"class":"function","name":"setAngVel","description":" Sets the hologram's angular velocity."},"setAnimation":{"realm":"shared","params":[{"name":"animation","description":"number or string name. Does nothing if nil"},{"name":"frame","description":"Optional int (Default 0) The starting frame number. Does nothing if nil"},{"name":"rate","description":"Optional float (Default 1) Frame speed. Does nothing if nil"}],"class":"function","name":"setAnimation","description":" Animates a hologram"},"setVel":{"realm":"server","params":[{"name":"vel","description":"New velocity"}],"class":"function","name":"setVel","description":" Sets the hologram linear velocity"},"setScale":{"realm":"shared","params":[{"name":"scale","description":"Vector new scale"}],"class":"function","name":"setScale","description":" Sets the hologram scale. Basically the same as setRenderMatrix() with a scaled matrix"},"getScale":{"returns":["Vector scale"],"realm":"shared","class":"function","name":"getScale","description":" Gets the hologram scale."},"draw":{"description":" Manually draws a hologram, requires a 3d render context","class":"function","name":"draw","realm":"client"},"setFilterMag":{"realm":"client","params":[{"name":"val","description":"The filter function to use http://wiki.facepunch.com/gmod/Enums/TEXFILTER"}],"class":"function","name":"setFilterMag","description":" Sets the texture filtering function when viewing a close texture"},"addEffects":{"realm":"shared","params":[{"name":"effect","description":"The effects to add. EF table values"}],"class":"function","name":"addEffects","description":" Applies engine effects to the hologram"},"setRenderMatrix":{"realm":"client","params":[{"name":"mat","description":"Starfall matrix to use"}],"class":"function","name":"setRenderMatrix","description":" Sets a hologram entity's rendermatrix"},"setPos":{"realm":"shared","params":[{"name":"vec","description":"New position"}],"class":"function","name":"setPos","description":" Sets the hologram's position."},"setAngles":{"realm":"shared","params":[{"name":"ang","description":"New angles"}],"class":"function","name":"setAngles","description":" Sets the hologram's angles."},"setModel":{"realm":"shared","params":[{"name":"model","description":"string model path"}],"class":"function","name":"setModel","description":" Sets the model of a hologram"},"getSuppressEngineLighting":{"realm":"shared","params":[{"name":"suppress","description":"Boolean to represent if shading should be set or not."}],"class":"function","name":"getSuppressEngineLighting","description":" Suppress Engine Lighting of a hologram. Disabled by default."},"removeEffects":{"realm":"shared","params":[{"name":"effect","description":"The effects to remove. EF table values"}],"class":"function","name":"removeEffects","description":" Removes engine effects from the hologram"},"remove":{"description":" Removes a hologram","class":"function","name":"remove","realm":"shared"},"suppressEngineLighting":{"realm":"shared","params":[{"name":"suppress","description":"Boolean to represent if shading should be set or not."}],"class":"function","name":"suppressEngineLighting","description":" Suppress Engine Lighting of a hologram. Disabled by default."},"setClip":{"realm":"shared","params":[{"name":"index","description":"Whatever number you want the clip to be"},{"name":"enabled","description":"Whether the clip is enabled"},{"name":"origin","description":"The center of the clip plane in world coordinates, or local to entity if it is specified"},{"name":"normal","description":"The the direction of the clip plane in world coordinates, or local to entity if it is specified"},{"name":"entity","description":"(Optional) The entity to make coordinates local to, otherwise the world is used"}],"class":"function","name":"setClip","description":" Updates a clip plane"},"setSize":{"realm":"shared","params":[{"name":"size","description":"Vector new size in game units"}],"class":"function","name":"setSize","description":" Sets the hologram size in game units"},"setParent":{"realm":"shared","params":[{"name":"ent","description":"Entity parent (nil to unparent)"},{"name":"attachment","description":"Optional attachment ID"}],"class":"function","name":"setParent","description":" Parents a hologram"},"setFilterMin":{"realm":"client","params":[{"name":"val","description":"The filter function to use http://wiki.facepunch.com/gmod/Enums/TEXFILTER"}],"class":"function","name":"setFilterMin","description":" Sets the texture filtering function when viewing a far texture"}},"libtbl":["hologram_methods"],"realm":"shared","class":"type","name":"Hologram","description":" Hologram type"},"Light":{"methods":{"setNoWorld":{"realm":"client","params":[{"name":"on","description":"Whether the light shouldn't cast onto the world"}],"class":"function","name":"setNoWorld","description":" Sets whether the light should cast onto the world or not"},"setOuterAngle":{"realm":"client","params":[{"name":"ang","description":"Number outer angle of the light"}],"class":"function","name":"setOuterAngle","description":" Sets the light outer angle (used with setDirection and setInnerAngle)"},"setInnerAngle":{"realm":"client","params":[{"name":"ang","description":"Number inner angle of the light"}],"class":"function","name":"setInnerAngle","description":" Sets the light inner angle (used with setDirection and setOuterAngle)"},"setStyle":{"realm":"client","params":[{"name":"style","description":"The number of the flicker style"}],"class":"function","name":"setStyle","description":" Sets the flicker style of the light https://developer.valvesoftware.com/wiki/Light_dynamic#Appearances"},"setColor":{"realm":"client","params":[{"name":"color","description":"The color of the light"}],"class":"function","name":"setColor","description":" Sets the color of the light"},"setBrightness":{"realm":"client","params":[{"name":"brightness","description":"The light's brightness"}],"class":"function","name":"setBrightness","description":" Sets the light brightness"},"setDieTime":{"realm":"client","params":[{"name":"dietime","description":"The how long the light will stay alive after turning it off."}],"class":"function","name":"setDieTime","description":" Sets the light lifespan (Required for fade effect i.e. decay)"},"draw":{"description":" Draws the light. Typically used in the think hook. Will throw an error if it fails (use pcall)","class":"function","name":"draw","realm":"client"},"setSize":{"realm":"client","params":[{"name":"size","description":"The size of the light"}],"class":"function","name":"setSize","description":" Sets the size of the light (max is sf_light_maxsize)"},"setMinLight":{"realm":"client","params":[{"name":"min","description":"The minimum light"}],"class":"function","name":"setMinLight","description":" Sets the minimum light amount"},"setDecay":{"realm":"client","params":[{"name":"decay","description":"The light's decay speed"}],"class":"function","name":"setDecay","description":" Sets the light decay speed in thousandths per second. 1000 lasts for 1 second, 2000 lasts for 0.5 seconds"},"setPos":{"realm":"client","params":[{"name":"pos","description":"The position of the light"}],"class":"function","name":"setPos","description":" Sets the light position"},"setNoModel":{"realm":"client","params":[{"name":"on","description":"Whether the light shouldn't cast onto the models"}],"class":"function","name":"setNoModel","description":" Sets whether the light should cast onto models or not"},"setDirection":{"realm":"client","params":[{"name":"dir","description":"Direction of the light"}],"class":"function","name":"setDirection","description":" Sets the light direction (used with setInnerAngle and setOuterAngle)"}},"libtbl":["light_methods"],"realm":"client","class":"type","name":"Light","description":" Light type"},"Npc":{"methods":{"stop":{"description":" Stops the npc","class":"function","name":"stop","realm":"server"},"goRun":{"realm":"server","params":[{"name":"vec","description":"The position of the destination"}],"class":"function","name":"goRun","description":" Makes the npc run to a destination"},"getEnemy":{"returns":["Entity the npc is fighting"],"realm":"server","class":"function","name":"getEnemy","description":" Gets what the npc is fighting"},"addRelationship":{"realm":"server","params":[{"name":"str","description":"The relationship string. http://wiki.facepunch.com/gmod/NPC:AddRelationship"}],"class":"function","name":"addRelationship","description":" Adds a relationship to the npc"},"giveWeapon":{"realm":"server","params":[{"name":"wep","description":"The classname of the weapon"}],"class":"function","name":"giveWeapon","description":" Gives the npc a weapon"},"attackMelee":{"description":" Makes the npc do a melee attack","class":"function","name":"attackMelee","realm":"server"},"goWalk":{"realm":"server","params":[{"name":"vec","description":"The position of the destination"}],"class":"function","name":"goWalk","description":" Makes the npc walk to a destination"},"attackRange":{"description":" Makes the npc do a ranged attack","class":"function","name":"attackRange","realm":"server"},"getRelationship":{"returns":["string relationship of the npc with the target"],"realm":"server","params":[{"name":"ent","description":"Target entity"}],"class":"function","name":"getRelationship","description":" Gets the npc's relationship to the target"},"addEntityRelationship":{"realm":"server","params":[{"name":"ent","description":"The target entity"},{"name":"disp","description":"String of the relationship. (hate fear like neutral)"},{"name":"priority","description":"number how strong the relationship is. Higher number is stronger"}],"class":"function","name":"addEntityRelationship","description":" Adds a relationship to the npc with an entity"},"setEnemy":{"realm":"server","params":[{"name":"ent","description":"Target entity"}],"class":"function","name":"setEnemy","description":" Tell the npc to fight this"}},"libtbl":["npc_methods"],"realm":"shared","class":"type","name":"Npc","description":" Npc type"},"Quaternion":{"methods":{"getMatrix":{"returns":["Transformation matrix"],"realm":"shared","params":[{"name":"Optional","description":"bool, normalizes the quaternion"}],"class":"function","name":"getMatrix","description":" Converts quaternion to a matrix"},"getMod":{"returns":["Quaternion with contained rotation"],"realm":"shared","class":"function","name":"getMod","description":" Gets the quaternion representing rotation contained within an angle between 0 and 180 degrees"},"__mul":{"returns":["Product"],"realm":"shared","params":[{"name":"lhs","description":"Left side of equation"},{"name":"rhs","description":"Right side of equation"}],"class":"function","name":"__mul","description":" multiplication metamethod"},"getForward":{"returns":["Vector pointing forward"],"realm":"shared","class":"function","name":"getForward","description":" Calculates forward direction of the quaternion"},"__sub":{"returns":["Difference"],"realm":"shared","params":[{"name":"lhs","description":"Left side of equation"},{"name":"rhs","description":"Right side of equation"}],"class":"function","name":"__sub","description":" subtraction metamethod"},"__unm":{"returns":["Negated quaternion"],"realm":"shared","params":[{"name":"q","description":"Quaternion"}],"class":"function","name":"__unm","description":" unary minus metamethod"},"set":{"realm":"shared","params":[{"name":"quat","description":"Quaternion to copy from"}],"class":"function","name":"set","description":" Copies components of the second quaternion to the first quaternion. Self-modifies"},"getRight":{"returns":["Vector pointing right"],"realm":"shared","class":"function","name":"getRight","description":" Calculates right direction of the quaternion"},"getRotationVector":{"returns":["Rotation vector"],"realm":"shared","class":"function","name":"getRotationVector","description":" Returns the rotation vector - rotation axis where magnitude is the angle of rotation in degrees"},"__pow":{"returns":["Power"],"realm":"shared","params":[{"name":"lhs","description":"Left side of equation"},{"name":"rhs","description":"Right side of equation"}],"class":"function","name":"__pow","description":" involution metamethod"},"__newindex":{"description":" newindex metamethod","class":"function","name":"__newindex","realm":"shared"},"conjugate":{"description":" Conjugates the quaternion.","class":"function","name":"conjugate","realm":"shared"},"getExp":{"returns":["Constant e raised to the quaternion"],"realm":"shared","class":"function","name":"getExp","description":" Raises Euler's constant e to the quaternion's power"},"pack":{"realm":"shared","params":[{"name":"r","description":"R component"},{"name":"i","description":"I component"},{"name":"j","description":"J component"},{"name":"k","description":"K component"}],"class":"function","name":"pack","description":" Set components of the quaternion"},"getNormalized":{"returns":["Normalized quaternion"],"realm":"shared","class":"function","name":"getNormalized","description":" Returns new normalized quaternion"},"setK":{"returns":["self"],"realm":"shared","params":[{"name":"k","description":"Value of the K component"}],"class":"function","name":"setK","description":" Sets K component of the quaternion"},"log":{"description":" Calculates natural logarithm of the quaternion. Self-modifies","class":"function","name":"log","realm":"shared"},"setR":{"returns":["self"],"realm":"shared","params":[{"name":"r","description":"Value of the R component"}],"class":"function","name":"setR","description":" Sets R (real) component of the quaternion"},"mod":{"description":" Contains quaternion's represented rotation within an angle between 0 and 180 degrees. Self-modifies","class":"function","name":"mod","realm":"shared"},"getRotationAngle":{"returns":["Angle number"],"realm":"shared","params":[{"name":"full","description":"Optional bool, if true returned angle will be between -180 and 180, otherwise between 0 and 360"}],"class":"function","name":"getRotationAngle","description":" Returns the angle of rotation in degrees"},"getEulerAngle":{"returns":["Angle object"],"realm":"shared","class":"function","name":"getEulerAngle","description":" Returns the euler angle of rotation in degrees"},"setI":{"returns":["self"],"realm":"shared","params":[{"name":"i","description":"Value of the I component"}],"class":"function","name":"setI","description":" Sets I component of the quaternion"},"__div":{"returns":["Quotient"],"realm":"shared","params":[{"name":"lhs","description":"Left side of equation"},{"name":"rhs","description":"Right side of equation"}],"class":"function","name":"__div","description":" division metamethod"},"getVector":{"returns":["Vector from the quaternion"],"realm":"shared","class":"function","name":"getVector","description":" Converts quaternion to a vector by dropping the R (real) component"},"__index":{"description":" index metamethod\n Can be indexed with: 1, 2, 3, 4, r, i, j, k, rr, ri, rj, rk, rrr, rijk, kjir, etc. Numerical lookup is the most efficient","class":"function","name":"__index","realm":"shared"},"dot":{"returns":["The dot product"],"realm":"shared","params":[{"name":"quat","description":"Second quaternion"}],"class":"function","name":"dot","description":" Returns dot product of two quaternions"},"normalize":{"description":" Normalizes the quaternion. Self-modifies","class":"function","name":"normalize","realm":"shared"},"setJ":{"returns":["self"],"realm":"shared","params":[{"name":"j","description":"Value of the J component"}],"class":"function","name":"setJ","description":" Sets J component of the quaternion"},"clone":{"returns":["Duplicate quaternion"],"realm":"shared","class":"function","name":"clone","description":" Creates a copy of the quaternion"},"getRotationAxis":{"returns":["Vector axis"],"realm":"shared","class":"function","name":"getRotationAxis","description":" Returns the axis of rotation"},"__add":{"returns":["Sum"],"realm":"shared","params":[{"name":"lhs","description":"Left side of equation"},{"name":"rhs","description":"Right side of equation"}],"class":"function","name":"__add","description":" addition metamethod"},"getLog":{"returns":["Logarithmic quaternion"],"realm":"shared","class":"function","name":"getLog","description":" Calculates natural logarithm of the quaternion"},"__tostring":{"returns":["Quaternion represented as a string"],"realm":"shared","params":[{"name":"q","description":"Quaternion"}],"class":"function","name":"__tostring","description":" tostring metamethod"},"inverse":{"description":" Calculates inverse of the quaternon. Self-modifies","class":"function","name":"inverse","realm":"shared"},"getAbsolute":{"returns":["Absolute value"],"realm":"shared","class":"function","name":"getAbsolute","description":" Returns absolute value of the quaternion"},"getUp":{"returns":["Vector pointing up"],"realm":"shared","class":"function","name":"getUp","description":" Calculates upward direction of the quaternion"},"__eq":{"returns":["True if both sides are equal"],"realm":"shared","params":[{"name":"lhs","description":"Left side of equation"},{"name":"rhs","description":"Right side of equation"}],"class":"function","name":"__eq","description":" equivalence metamethod"},"unpack":{"returns":["r, i, j, k"],"realm":"shared","class":"function","name":"unpack","description":" Returns components of the quaternion"},"exp":{"description":" Raises Euler's constant e to the quaternion's power. Self-modifies","class":"function","name":"exp","realm":"shared"},"getInverse":{"returns":["Inverse of the quaternion"],"realm":"shared","class":"function","name":"getInverse","description":" Calculates inverse of the quaternion"},"getConjugate":{"returns":["Quaternion's conjugate"],"realm":"shared","class":"function","name":"getConjugate","description":" Returns conjugate of the quaternion"}},"libtbl":["quat_methods","quat_meta"],"realm":"shared","class":"type","name":"Quaternion","description":" Quaternion type. Recently reworked, for full changelist visit: https://github.com/thegrb93/StarfallEx/pull/953"},"Effect":{"methods":{"setAttachment":{"realm":"shared","params":[{"name":"attachment","description":"The attachment"}],"class":"function","name":"setAttachment","description":" Sets the effect's attachment"},"setRadius":{"realm":"shared","params":[{"name":"radius","description":"The radius"}],"class":"function","name":"setRadius","description":" Sets the effect's radius"},"getAttachment":{"returns":["the effect's attachment"],"realm":"shared","class":"function","name":"getAttachment","description":" Returns the effect's attachment"},"getRadius":{"returns":["the effect's radius"],"realm":"shared","class":"function","name":"getRadius","description":" Returns the effect's radius"},"getScale":{"returns":["the effect's scale"],"realm":"shared","class":"function","name":"getScale","description":" Returns the effect's scale"},"getSurfaceProp":{"returns":["the effect's surface prop"],"realm":"shared","class":"function","name":"getSurfaceProp","description":" Returns the effect's surface prop"},"getMaterialIndex":{"returns":["the effect's material index"],"realm":"shared","class":"function","name":"getMaterialIndex","description":" Returns the effect's material index"},"setColor":{"realm":"shared","params":[{"name":"color","description":"The color represented by a byte 0-255. wtf?"}],"class":"function","name":"setColor","description":" Sets the effect's color"},"setOrigin":{"realm":"shared","params":[{"name":"origin","description":"The vector origin"}],"class":"function","name":"setOrigin","description":" Sets the effect's origin"},"setMaterialIndex":{"realm":"shared","params":[{"name":"mat","description":"The material index"}],"class":"function","name":"setMaterialIndex","description":" Sets the effect's material index"},"setSurfaceProp":{"realm":"shared","params":[{"name":"prop","description":"The surface property"}],"class":"function","name":"setSurfaceProp","description":" Sets the effect's surface property"},"getStart":{"returns":["the effect's start position"],"realm":"shared","class":"function","name":"getStart","description":" Returns the effect's start position"},"setHitBox":{"realm":"shared","params":[{"name":"hitbox","description":"The hitbox"}],"class":"function","name":"setHitBox","description":" Sets the effect's hitbox"},"setNormal":{"realm":"shared","params":[{"name":"normal","description":"The vector normal"}],"class":"function","name":"setNormal","description":" Sets the effect's normal"},"getColor":{"returns":["the effect's color"],"realm":"shared","class":"function","name":"getColor","description":" Returns the effect's color"},"getOrigin":{"returns":["the effect's origin"],"realm":"shared","class":"function","name":"getOrigin","description":" Returns the effect's origin"},"setEntIndex":{"realm":"shared","params":[{"name":"index","description":"The entity index"}],"class":"function","name":"setEntIndex","description":" Sets the effect's entity index"},"setStart":{"realm":"shared","params":[{"name":"start","description":"The vector start"}],"class":"function","name":"setStart","description":" Sets the effect's start"},"play":{"realm":"shared","params":[{"name":"eff","description":"The effect type to play"}],"class":"function","name":"play","description":" Plays the effect"},"setMagnitude":{"realm":"shared","params":[{"name":"magnitude","description":"The magnitude"}],"class":"function","name":"setMagnitude","description":" Sets the effect's magnitude"},"setAngles":{"realm":"shared","params":[{"name":"ang","description":"The angles"}],"class":"function","name":"setAngles","description":" Sets the effect's angles"},"getEntity":{"returns":["the effect's entity"],"realm":"shared","class":"function","name":"getEntity","description":" Returns the effect's entity"},"getAngles":{"returns":["the effect's angle"],"realm":"shared","class":"function","name":"getAngles","description":" Returns the effect's angle"},"getHitBox":{"returns":["the effect's hitbox"],"realm":"shared","class":"function","name":"getHitBox","description":" Returns the effect's hitbox"},"setDamageType":{"realm":"shared","params":[{"name":"dmgtype","description":"The damage type"}],"class":"function","name":"setDamageType","description":" Sets the effect's damage type"},"getNormal":{"returns":["the effect's normal"],"realm":"shared","class":"function","name":"getNormal","description":" Returns the effect's normal"},"getDamageType":{"returns":["the effect's damagetype"],"realm":"shared","class":"function","name":"getDamageType","description":" Returns the effect's damagetype"},"getFlags":{"returns":["the effect's flags"],"realm":"shared","class":"function","name":"getFlags","description":" Returns the effect's flags"},"setFlags":{"realm":"shared","params":[{"name":"flags","description":"The flags"}],"class":"function","name":"setFlags","description":" Sets the effect's flags"},"getMagnitude":{"returns":["the effect's magnitude"],"realm":"shared","class":"function","name":"getMagnitude","description":" Returns the effect's magnitude"},"setEntity":{"realm":"shared","params":[{"name":"ent","description":"The entity"}],"class":"function","name":"setEntity","description":" Sets the effect's entity"},"getEntIndex":{"returns":["the effect's entindex"],"realm":"shared","class":"function","name":"getEntIndex","description":" Returns the effect's entindex"},"setScale":{"realm":"shared","params":[{"name":"scale","description":"The number scale"}],"class":"function","name":"setScale","description":" Sets the effect's scale"}},"libtbl":["effect_methods"],"realm":"shared","class":"type","name":"Effect","description":" Effect type"},"Weapon":{"methods":{"getNextSecondaryFire":{"returns":["The time, relative to CurTime"],"realm":"shared","class":"function","name":"getNextSecondaryFire","description":" Gets the next time the weapon can secondary fire."},"lastShootTime":{"returns":["Time the weapon was last shot"],"realm":"shared","class":"function","name":"lastShootTime","description":" Returns the time since a weapon was last fired at a float variable"},"clip1":{"returns":["amount of ammo"],"realm":"shared","class":"function","name":"clip1","description":" Returns Ammo in primary clip"},"maxClip1":{"returns":["amount of ammo"],"realm":"shared","class":"function","name":"maxClip1","description":" Returns Maximum ammo in primary clip"},"getActivity":{"returns":["number Current activity"],"realm":"shared","class":"function","name":"getActivity","description":" Returns the sequence enumeration number that the weapon is playing. Must be used on a view model."},"maxClip2":{"returns":["amount of ammo"],"realm":"shared","class":"function","name":"maxClip2","description":" Returns Maximum ammo in secondary clip"},"getNextPrimaryFire":{"returns":["The time, relative to CurTime"],"realm":"shared","class":"function","name":"getNextPrimaryFire","description":" Gets the next time the weapon can primary fire."},"isCarriedByLocalPlayer":{"returns":["whether or not the weapon is carried by the local player"],"realm":"client","class":"function","name":"isCarriedByLocalPlayer","description":" Returns if the weapon is carried by the local player."},"getPrintName":{"returns":["string Display name of weapon"],"realm":"client","class":"function","name":"getPrintName","description":" Gets Display name of weapon"},"getToolMode":{"returns":["The tool mode of the toolgun"],"realm":"shared","class":"function","name":"getToolMode","description":" Returns the tool mode of the toolgun"},"isWeaponVisible":{"returns":["Whether the weapon is visble or not"],"realm":"shared","class":"function","name":"isWeaponVisible","description":" Returns whether the weapon is visible"},"clip2":{"returns":["amount of ammo"],"realm":"shared","class":"function","name":"clip2","description":" Returns Ammo in secondary clip"},"getSecondaryAmmoType":{"returns":["Ammo number type"],"realm":"shared","class":"function","name":"getSecondaryAmmoType","description":" Gets the secondary ammo type of the given weapon."},"getHoldType":{"returns":["string Holdtype"],"realm":"shared","class":"function","name":"getHoldType","description":" Returns the hold type of the weapon."},"getPrimaryAmmoType":{"returns":["Ammo number type"],"realm":"shared","class":"function","name":"getPrimaryAmmoType","description":" Gets the primary ammo type of the given weapon."}},"libtbl":["weapon_methods"],"realm":"shared","class":"type","name":"Weapon","description":" Weapon type"},"Particle":{"methods":{"setVelocity":{"realm":"client","params":[{"name":"vel","description":"vector"}],"class":"function","name":"setVelocity","description":" Sets the velocity of the particle."},"setAngleVelocity":{"realm":"client","params":[{"name":"angVel","description":"angle"}],"class":"function","name":"setAngleVelocity","description":" Sets the angular velocity of the the particle."},"getPos":{"returns":["vector"],"realm":"client","class":"function","name":"getPos","description":" Returns the absolute position of the particle."},"getAngles":{"returns":["angle"],"realm":"client","class":"function","name":"getAngles","description":" Returns the current orientation of the particle."},"setBounce":{"realm":"client","params":[{"name":"bounce","description":"number"}],"class":"function","name":"setBounce","description":" Sets the 'bounciness' of the the particle."},"setPos":{"realm":"client","params":[{"name":"pos","description":"vector"}],"class":"function","name":"setPos","description":" Sets the absolute position of the particle."},"getRoll":{"returns":["number"],"realm":"client","class":"function","name":"getRoll","description":" Returns the current rotation of the particle in radians, this should only be used for 2D particles."},"setRoll":{"realm":"client","params":[{"name":"roll","description":"number"}],"class":"function","name":"setRoll","description":" Sets the roll of the particle in radians. This should only be used for 2D particles."},"getAngleVelocity":{"returns":["angle"],"realm":"client","class":"function","name":"getAngleVelocity","description":" Returns the angular velocity of the particle"},"setAngles":{"realm":"client","params":[{"name":"ang","description":"angle"}],"class":"function","name":"setAngles","description":" Sets the angles of the particle."},"setVelocityScale":{"realm":"client","params":[{"name":"doScale","description":"boolean"}],"class":"function","name":"setVelocityScale","description":" Scales the velocity based on the particle speed."},"getVelocity":{"returns":["vector"],"realm":"client","class":"function","name":"getVelocity","description":" Returns the current velocity of the particle."},"setRollDelta":{"realm":"client","params":[{"name":"rollDelta","description":"number"}],"class":"function","name":"setRollDelta","description":" Sets the rotation speed of the particle in radians. This should only be used for 2D particles."},"setGravity":{"realm":"client","params":[{"name":"gravity","description":"vector"}],"class":"function","name":"setGravity","description":" Sets the directional gravity aka. acceleration of the particle."},"setAirResistance":{"realm":"client","params":[{"name":"airResistance","description":"number"}],"class":"function","name":"setAirResistance","description":" Sets the air resistance of the the particle."},"setColor":{"realm":"client","params":[{"name":"col","description":"color"}],"class":"function","name":"setColor","description":" Sets the color of the particle."},"setMaterial":{"realm":"client","params":[{"name":"mat","description":"material"}],"class":"function","name":"setMaterial","description":" Sets the material of the particle."},"setCollide":{"realm":"client","params":[{"name":"shouldCollide","description":"boolean"}],"class":"function","name":"setCollide","description":" Sets the whether the particle should collide with the world or not."},"setLighting":{"realm":"client","params":[{"name":"useLighting","description":"boolean"}],"class":"function","name":"setLighting","description":" Sets whether the particle should be affected by lighting."},"getColor":{"returns":["color"],"realm":"client","class":"function","name":"getColor","description":" Returns the color of the particle."}},"libtbl":["particle_methods"],"realm":"client","class":"type","name":"Particle","description":" Particle type"},"StringStream":{"methods":{"writeInt32":{"realm":"shared","params":[{"name":"x","description":"An int32 to write"}],"class":"function","name":"writeInt32","description":" Writes an int to the buffer and advances the buffer pointer."},"readUInt32":{"returns":["The uint32 at this position"],"realm":"shared","class":"function","name":"readUInt32","description":" Reads an unsigned 32 bit (four byte) integer from the byte stream and advances the buffer pointer."},"readUInt16":{"returns":["The uint16 at this position"],"realm":"shared","class":"function","name":"readUInt16","description":" Reads an unsigned 16 bit (two byte) integer from the byte stream and advances the buffer pointer."},"read":{"returns":["A string containing the bytes"],"realm":"shared","params":[{"name":"n","description":"How many bytes to read"}],"class":"function","name":"read","description":" Reads the specified number of bytes from the buffer and advances the buffer pointer."},"writeFloat":{"realm":"shared","params":[{"name":"x","description":"The float to write"}],"class":"function","name":"writeFloat","description":" Writes a 4 byte IEEE754 float to the byte stream and advances the buffer pointer."},"readString":{"returns":["The string of bytes read"],"realm":"shared","class":"function","name":"readString","description":" returns a null terminated string, reads until \"\\x00\" and advances the buffer pointer."},"getString":{"returns":["The buffer as a string"],"realm":"shared","class":"function","name":"getString","description":" Returns the buffer as a string"},"writeDouble":{"realm":"shared","params":[{"name":"x","description":"The double to write"}],"class":"function","name":"writeDouble","description":" Writes a 8 byte IEEE754 double to the byte stream and advances the buffer pointer."},"readInt8":{"returns":["The int8 at this position"],"realm":"shared","class":"function","name":"readInt8","description":" Reads a signed 8-bit (one byte) integer from the byte stream and advances the buffer pointer."},"getBuffer":{"returns":["The buffer table"],"realm":"shared","class":"function","name":"getBuffer","description":" Returns the internal buffer"},"readInt16":{"returns":["The int16 at this position"],"realm":"shared","class":"function","name":"readInt16","description":" Reads a signed 16-bit (two byte) integer from the byte stream and advances the buffer pointer."},"setEndian":{"realm":"shared","params":[{"name":"endian","description":"The endianness of number types. \"big\" or \"little\" (default \"little\")"}],"class":"function","name":"setEndian","description":" Sets the endianness of the string stream"},"tell":{"returns":["The buffer position"],"realm":"shared","class":"function","name":"tell","description":" Returns the internal position of the byte reader."},"readUInt8":{"returns":["The uint8 at this position"],"realm":"shared","class":"function","name":"readUInt8","description":" Reads an unsigned 8-bit (one byte) integer from the byte stream and advances the buffer pointer."},"writeInt16":{"realm":"shared","params":[{"name":"x","description":"An int16 to write"}],"class":"function","name":"writeInt16","description":" Writes a short to the buffer and advances the buffer pointer."},"writeInt8":{"realm":"shared","params":[{"name":"x","description":"An int8 to write"}],"class":"function","name":"writeInt8","description":" Writes a byte to the buffer and advances the buffer pointer."},"write":{"realm":"shared","params":[{"name":"bytes","description":"A string of bytes to write"}],"class":"function","name":"write","description":" Writes the given string and advances the buffer pointer."},"size":{"returns":["The buffer size"],"realm":"shared","class":"function","name":"size","description":" Tells the size of the byte stream."},"readDouble":{"returns":["The double at this position"],"realm":"shared","class":"function","name":"readDouble","description":" Reads a 8 byte IEEE754 double from the byte stream and advances the buffer pointer."},"readInt32":{"returns":["The int32 at this position"],"realm":"shared","class":"function","name":"readInt32","description":" Reads a signed 32-bit (four byte) integer from the byte stream and advances the buffer pointer."},"skip":{"realm":"shared","params":[{"name":"i","description":"The offset"}],"class":"function","name":"skip","description":" Move the internal pointer by amount i"},"writeString":{"realm":"shared","params":[{"name":"string","description":"The string of bytes to write"}],"class":"function","name":"writeString","description":" Writes a string to the buffer putting a null at the end and advances the buffer pointer."},"readUntil":{"returns":["The string of bytes read"],"realm":"shared","params":[{"name":"byte","description":"The byte to read until (in number form)"}],"class":"function","name":"readUntil","description":" Reads until the given byte and advances the buffer pointer."},"seek":{"realm":"shared","params":[{"name":"i","description":"The position"}],"class":"function","name":"seek","description":" Sets internal pointer to i. The position will be clamped to [1, buffersize+1]"},"readFloat":{"returns":["The float32 at this position"],"realm":"shared","class":"function","name":"readFloat","description":" Reads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer."}},"libtbl":["ss_methods"],"realm":"shared","class":"type","name":"StringStream","description":" StringStream type"},"Angle":{"methods":{"setZero":{"returns":["nil"],"realm":"shared","class":"function","name":"setZero","description":" Sets p,y,r to 0. This is faster than doing it manually."},"getQuaternion":{"returns":["Constructed quaternion"],"realm":"shared","class":"function","name":"getQuaternion","description":" Converts angle to a quaternion"},"__mul":{"returns":["resultant angle."],"realm":"shared","params":[{"name":"b","description":"Number or Angle to multiply by."}],"class":"function","name":"__mul","description":" __mul metamethod ang1 * b or ang1 * ang2."},"round":{"returns":["nil"],"realm":"shared","params":[{"name":"idp","description":"(Default 0) The integer decimal place to round to. "}],"class":"function","name":"round","description":" Round the angle values. Self-Modifies."},"rotateAroundAxis":{"returns":["The modified angle"],"realm":"shared","params":[{"name":"v","description":"Vector axis"},{"name":"deg","description":"Number of degrees or nil if radians."},{"name":"rad","description":"Number of radians or nil if degrees."}],"class":"function","name":"rotateAroundAxis","description":" Return Rotated angle around the specified axis."},"__div":{"returns":["resultant angle."],"realm":"shared","params":[{"name":"b","description":"Number or Angle to divided by."}],"class":"function","name":"__div","description":" __div metamethod ang1 / b or ang1 / ang2."},"__index":{"description":" __index metamethod\n Can be indexed with: 1, 2, 3, p, y, r, pitch, yaw, roll. 1,2,3 is most efficient.","class":"function","name":"__index","realm":"shared"},"__tostring":{"returns":["string representing the angle."],"realm":"shared","class":"function","name":"__tostring","description":" tostring metamethod"},"__unm":{"returns":["resultant angle."],"realm":"shared","class":"function","name":"__unm","description":" __unm metamethod -ang."},"clone":{"returns":["The copy of the angle"],"realm":"shared","class":"function","name":"clone","description":" Copies p,y,r from angle and returns a new angle"},"setY":{"returns":["The modified angle"],"realm":"shared","params":[{"name":"y","description":"The yaw"}],"class":"function","name":"setY","description":" Set's the angle's yaw and returns it."},"getRight":{"returns":["vector normalised."],"realm":"shared","class":"function","name":"getRight","description":" Return the Right Vector relative to the angle dir."},"setP":{"returns":["The modified angle"],"realm":"shared","params":[{"name":"p","description":"The pitch"}],"class":"function","name":"setP","description":" Set's the angle's pitch and returns it."},"set":{"returns":["nil"],"realm":"shared","params":[{"name":"b","description":"The angle to copy from."}],"class":"function","name":"set","description":" Copies p,y,r from angle to another."},"__newindex":{"description":" __newindex metamethod","class":"function","name":"__newindex","realm":"shared"},"__add":{"returns":["resultant angle."],"realm":"shared","params":[{"name":"a","description":"Angle to add."}],"class":"function","name":"__add","description":" __add metamethod ang1 + ang2."},"getUp":{"returns":["vector normalised."],"realm":"shared","class":"function","name":"getUp","description":" Return the Up Vector relative to the angle dir."},"isZero":{"returns":["boolean"],"realm":"shared","class":"function","name":"isZero","description":" Returns if p,y,r are all 0."},"__sub":{"returns":["resultant angle."],"realm":"shared","params":[{"name":"a","description":"Angle to subtract."}],"class":"function","name":"__sub","description":" __sub metamethod ang1 - ang2."},"__eq":{"returns":["bool"],"realm":"shared","params":[{"name":"a","description":"Angle to check against."}],"class":"function","name":"__eq","description":" __eq metamethod ang1 == ang2."},"setR":{"returns":["The modified angle"],"realm":"shared","params":[{"name":"r","description":"The roll"}],"class":"function","name":"setR","description":" Set's the angle's roll and returns it."},"getForward":{"returns":["vector normalised."],"realm":"shared","class":"function","name":"getForward","description":" Return the Forward Vector ( direction the angle points )."}},"libtbl":["ang_methods","ang_meta"],"realm":"shared","class":"type","name":"Angle","description":" Angle Type"},"Material":{"methods":{"getFloat":{"returns":["The float value or nil if it doesn't exist"],"realm":"client","params":[{"name":"key","description":"The key to get the float from"}],"class":"function","name":"getFloat","description":" Returns a float keyvalue"},"recompute":{"description":" Refreshes the material. Sometimes needed for certain parameters to update","class":"function","name":"recompute","realm":"client"},"getMatrix":{"returns":["The matrix value or nil if it doesn't exist"],"realm":"client","params":[{"name":"key","description":"The key to get the matrix from"}],"class":"function","name":"getMatrix","description":" Returns a matrix keyvalue"},"getColor":{"returns":["The color value"],"realm":"client","params":[{"name":"x","description":"The x coordinate of the pixel"},{"name":"y","description":"The y coordinate of the pixel"}],"class":"function","name":"getColor","description":" Returns a color pixel value of the $basetexture of a .png or .jpg material."},"getInt":{"returns":["The int value or nil if it doesn't exist"],"realm":"client","params":[{"name":"key","description":"The key to get the int from"}],"class":"function","name":"getInt","description":" Returns an int keyvalue"},"setInt":{"realm":"client","params":[{"name":"key","description":"The key name to set"},{"name":"v","description":"The value to set it to"}],"class":"function","name":"setInt","description":" Sets an int keyvalue"},"getTexture":{"returns":["The string id of the texture or nil if it doesn't exist"],"realm":"client","params":[{"name":"key","description":"The key to get the texture from"}],"class":"function","name":"getTexture","description":" Returns a texture id keyvalue"},"setFloat":{"realm":"client","params":[{"name":"key","description":"The key name to set"},{"name":"v","description":"The value to set it to"}],"class":"function","name":"setFloat","description":" Sets a float keyvalue"},"setTexture":{"realm":"client","params":[{"name":"key","description":"The key name to set. $basetexture is the key name for most purposes."},{"name":"v","description":"The texture name to set it to."}],"class":"function","name":"setTexture","description":" Sets a texture keyvalue"},"setUndefined":{"realm":"client","params":[{"name":"key","description":"The key name to set"}],"class":"function","name":"setUndefined","description":" Sets a keyvalue to be undefined"},"getString":{"returns":["The string value or nil if it doesn't exist"],"realm":"client","params":[{"name":"key","description":"The key to get the string from"}],"class":"function","name":"getString","description":" Returns a string keyvalue"},"getVectorLinear":{"returns":["The vector value or nil if it doesn't exist"],"realm":"client","params":[{"name":"key","description":"The key to get the vector from"}],"class":"function","name":"getVectorLinear","description":" Returns a linear color-corrected vector keyvalue"},"setTextureURL":{"realm":"client","params":[{"name":"key","description":"The key name to set. $basetexture is the key name for most purposes."},{"name":"url","description":"The url or base64 data"},{"name":"cb","description":"An optional callback called when image is loaded. Passes nil if it fails or Passes the material, url, width, height, and layout function which can be called with x, y, w, h to reposition the image in the texture"},{"name":"done","description":"An optional callback called when the image is done loading. Passes the material, url"}],"class":"function","name":"setTextureURL","description":" Loads an online image or base64 data to the specified texture key\n If the texture in key is not set to a rendertarget, a rendertarget will be created and used."},"getKeyValues":{"returns":["The table of keyvalues"],"realm":"client","class":"function","name":"getKeyValues","description":" Returns a table of material keyvalues"},"getName":{"returns":["The name of the material. If this material is user created, add ! to the beginning of this to use it with entity.setMaterial"],"realm":"client","class":"function","name":"getName","description":" Returns the material's engine name"},"destroy":{"description":" Free's a user created material allowing you to create others","class":"function","name":"destroy","realm":"client"},"setVector":{"realm":"client","params":[{"name":"key","description":"The key name to set"},{"name":"v","description":"The value to set it to"}],"class":"function","name":"setVector","description":" Sets a vector keyvalue"},"setString":{"realm":"client","params":[{"name":"key","description":"The key name to set"},{"name":"v","description":"The value to set it to"}],"class":"function","name":"setString","description":" Sets a string keyvalue"},"setMatrix":{"realm":"client","params":[{"name":"key","description":"The key name to set"},{"name":"v","description":"The value to set it to"}],"class":"function","name":"setMatrix","description":" Sets a matrix keyvalue"},"getShader":{"returns":["The shader name of the material"],"realm":"client","class":"function","name":"getShader","description":" Returns the shader name of the material"},"getVector":{"returns":["The string id of the texture"],"realm":"client","params":[{"name":"key","description":"The key to get the vector from"}],"class":"function","name":"getVector","description":" Returns a vector keyvalue"},"setTextureRenderTarget":{"realm":"client","params":[{"name":"key","description":"The key name to set. $basetexture is the key name for most purposes."},{"name":"name","description":"The name of the rendertarget"}],"class":"function","name":"setTextureRenderTarget","description":" Sets a rendertarget texture to the specified texture key"},"getWidth":{"returns":["The basetexture's width"],"realm":"client","class":"function","name":"getWidth","description":" Gets the base texture set to the material's width"},"getHeight":{"returns":["The basetexture's height"],"realm":"client","class":"function","name":"getHeight","description":" Gets the base texture set to the material's height"}},"libtbl":["material_methods"],"realm":"client","class":"type","name":"Material","description":" The `Material` type is used to control shaders in rendering.\n For a list of shader parameters, see https://developer.valvesoftware.com/wiki/Category:List_of_Shader_Parameters\n For a list of $flags and $flags2, see https://developer.valvesoftware.com/wiki/Material_Flags"},"Entity":{"methods":{"localToWorld":{"returns":["data as world space vector"],"realm":"shared","params":[{"name":"data","description":"Local space vector"}],"class":"function","name":"localToWorld","description":" Converts a vector in entity local space to world space"},"setVelocity":{"realm":"server","params":[{"name":"vel","description":"New velocity"}],"class":"function","name":"setVelocity","description":" Sets the entity's linear velocity"},"obbMins":{"returns":["The min bounding box vector"],"realm":"shared","class":"function","name":"obbMins","description":" Returns min local bounding box vector of the entity"},"getForward":{"returns":["Vector forward"],"realm":"shared","class":"function","name":"getForward","description":" Gets the entity's forward vector"},"emitSound":{"realm":"shared","params":[{"name":"snd","description":"string Sound path"},{"name":"lvl","description":"number soundLevel=75"},{"name":"pitch","description":"pitchPercent=100"},{"name":"volume","description":"volume=1"},{"name":"channel","description":"channel=CHAN_AUTO"}],"class":"function","name":"emitSound","description":" Plays a sound on the entity"},"getCreationTime":{"returns":["Seconds relative to server map start"],"realm":"shared","class":"function","name":"getCreationTime","description":" Returns the timer.curtime() time the entity was created on"},"getNWVar":{"returns":["The object associated with that key or nil if it's not set"],"realm":"shared","params":[{"name":"key","description":"The string key to get"}],"class":"function","name":"getNWVar","description":" Gets a networked variable of an entity"},"setTrails":{"realm":"server","params":[{"name":"startSize","description":"The start size of the trail"},{"name":"endSize","description":"The end size of the trail"},{"name":"length","description":"The length size of the trail"},{"name":"material","description":"The material of the trail"},{"name":"color","description":"The color of the trail"},{"name":"attachmentID","description":"Optional attachmentid the trail should attach to"},{"name":"additive","description":"If the trail's rendering is additive"}],"class":"function","name":"setTrails","description":" Adds a trail to the entity with the specified attributes."},"getHitBoxBounds":{"returns":["Hitbox mins vector.","Hitbox maxs vector."],"realm":"shared","params":[{"name":"hitbox","description":"The number of the hitbox."},{"name":"group","description":"The number of the hitbox group, 0 in most cases."}],"class":"function","name":"getHitBoxBounds","description":" Gets the bounds (min and max corners) of a hit box."},"setUnbreakable":{"realm":"server","params":[{"name":"on","description":"Whether to make the prop unbreakable"}],"class":"function","name":"setUnbreakable","description":" Sets a prop_physics to be unbreakable"},"addCollisionListener":{"realm":"server","params":[{"name":"func","description":"The callback function with argument, table collsiondata, http://wiki.facepunch.com/gmod/Structures/CollisionData"}],"class":"function","name":"addCollisionListener","description":" Allows detecting collisions on an entity. You can only do this once for the entity's entire lifespan so use it wisely."},"getLinkedComponents":{"returns":["A list of components linked to the entity"],"realm":"shared","class":"function","name":"getLinkedComponents","description":" Returns a list of components linked to a processor. Can also return vehicles linked to a HUD, but only through the server."},"getVelocity":{"returns":["The velocity vector"],"realm":"shared","class":"function","name":"getVelocity","description":" Returns the velocity of the entity"},"setPhysMaterial":{"realm":"server","params":[{"name":"mat","description":"Material to use"}],"class":"function","name":"setPhysMaterial","description":" Sets the physical material of the entity"},"getQuotaUsed":{"returns":["Current quota used this Think"],"realm":"shared","class":"function","name":"getQuotaUsed","description":" Returns the current count for this Think's CPU Time of the specified starfall.\n This value increases as more executions are done, may not be exactly as you want.\n If used on screens, will show 0 if only rendering is done. Operations must be done in the Think loop for them to be counted."},"getMaterials":{"returns":["Material"],"realm":"shared","class":"function","name":"getMaterials","description":" Gets an entities' material list"},"getMassCenter":{"returns":["The position vector of the mass center"],"realm":"shared","class":"function","name":"getMassCenter","description":" Returns the local position of the entity's mass center"},"setMesh":{"realm":"client","params":[{"name":"mesh","description":"The mesh to set it to or nil to set back to normal"}],"class":"function","name":"setMesh","description":" Sets a hologram or custom_prop model to a custom Mesh"},"setComponentLocksControls":{"realm":"server","params":[{"name":"enable","description":"Whether the component will lock the player's controls when used"}],"class":"function","name":"setComponentLocksControls","description":" Sets a component's ability to lock a player's controls"},"getBrushPlaneCount":{"returns":["The amount of brush planes"],"realm":"shared","class":"function","name":"getBrushPlaneCount","description":" Returns the amount of planes of the brush entity"},"getCollisionGroup":{"returns":["The collision group enum of the entity. https://wiki.facepunch.com/gmod/Enums/COLLISION_GROUP"],"realm":"shared","class":"function","name":"getCollisionGroup","description":" Gets the collision group enum of the entity"},"setDrawShadow":{"realm":"server","params":[{"name":"ply","description":"Optional player argument to set only for that player. Can also be table of players."}],"class":"function","name":"setDrawShadow","description":" Sets whether an entity's shadow should be drawn"},"getBonePosition":{"returns":["Position of the bone","Angle of the bone"],"realm":"shared","params":[{"name":"bone","description":"Bone index. (def 0)"}],"class":"function","name":"getBonePosition","description":" Returns the bone's position and angle in world coordinates"},"getMass":{"returns":["The numerical mass"],"realm":"shared","class":"function","name":"getMass","description":" Returns the mass of the entity"},"getPersistent":{"returns":["True if the entity is persistent "],"realm":"shared","class":"function","name":"getPersistent","description":" Checks if entity is marked as persistent"},"getInertia":{"returns":["The principle moments of inertia as a vector"],"realm":"shared","class":"function","name":"getInertia","description":" Returns the principle moments of inertia of the entity"},"getBoneName":{"returns":["Name of the bone"],"realm":"shared","params":[{"name":"bone","description":"Bone index. (def 0)"}],"class":"function","name":"getBoneName","description":" Returns the name of an entity's bone"},"getDTBool":{"returns":["The boolean or nil if it doesn't exist"],"realm":"shared","params":[{"name":"key","description":"The number key. Valid keys are 0 - 31"}],"class":"function","name":"getDTBool","description":" Gets a datatable boolean"},"getUp":{"returns":["Vector up"],"realm":"shared","class":"function","name":"getUp","description":" Gets the entity's up vector"},"getRenderMode":{"returns":["Number render mode, https://wiki.facepunch.com/gmod/Enums/RENDERMODE"],"realm":"shared","class":"function","name":"getRenderMode","description":" Gets the render mode of the entity"},"getHitBoxCount":{"returns":["Number of hitboxes"],"realm":"shared","params":[{"name":"group","description":"The number of the hitbox group."}],"class":"function","name":"getHitBoxCount","description":" Gets number of hitboxes in a group."},"getMatrix":{"returns":["The matrix"],"realm":"shared","class":"function","name":"getMatrix","description":" Returns the world transform matrix of the entity"},"setNocollideAll":{"realm":"server","params":[{"name":"nocollide","description":"Whether to collide with nothing except world or not."}],"class":"function","name":"setNocollideAll","description":" Set's the entity to collide with nothing but the world. Alias to entity:setCollisionGroup(COLLISION_GROUP_WORLD)"},"getAttachmentParent":{"returns":["number index of the attachment the entity is parented to or 0"],"realm":"shared","class":"function","name":"getAttachmentParent","description":" Gets the attachment index the entity is parented to"},"getDTInt":{"returns":["The int or nil if it doesn't exist"],"realm":"shared","params":[{"name":"key","description":"The number key. Valid keys are 0 - 31"}],"class":"function","name":"getDTInt","description":" Gets a datatable int"},"isOnGround":{"returns":["Boolean if it's flag is set or not"],"realm":"shared","class":"function","name":"isOnGround","description":" Checks if the entity ONGROUND flag is set"},"getCreationID":{"returns":["The creation ID"],"realm":"server","class":"function","name":"getCreationID","description":" Returns entity's creation ID (similar to entIndex, but increments monotonically)"},"getFlexScale":{"returns":["The scale of the flexes"],"realm":"shared","class":"function","name":"getFlexScale","description":" Gets the scale of the entity flexes"},"getPhysicsObjectNum":{"returns":["The physics object of the entity"],"realm":"shared","params":[{"name":"id","description":"The physics object id (starts at 0)"}],"class":"function","name":"getPhysicsObjectNum","description":" Gets a physics objects of an entity"},"lookupBodygroup":{"returns":["The bodygroup index"],"realm":"shared","params":[{"name":"name","description":"The bodygroup's string name"}],"class":"function","name":"lookupBodygroup","description":" Returns the bodygroup index of the entity with given name"},"isVehicle":{"returns":["True if vehicle, false if not"],"realm":"shared","class":"function","name":"isVehicle","description":" Checks if an entity is a vehicle."},"toHologram":{"returns":["Hologram type"],"realm":"shared","class":"function","name":"toHologram","description":" Casts a hologram entity into the hologram type"},"setRenderBounds":{"realm":"client","params":[{"name":"mins","description":"The lower bounding corner coordinate local to the hologram"},{"name":"maxs","description":"The upper bounding corner coordinate local to the hologram"}],"class":"function","name":"setRenderBounds","description":" Sets a hologram or custom_prop's renderbounds"},"getRight":{"returns":["Vector right"],"realm":"shared","class":"function","name":"getRight","description":" Gets the entity's right vector"},"getErroredPlayers":{"returns":["A table containg the errored players."],"realm":"server","class":"function","name":"getErroredPlayers","description":" Gets all players the specified starfall errored for.\n This excludes the owner of the starfall chip."},"setFlexScale":{"realm":"shared","params":[{"name":"scale","description":"The scale of the flexes to set"}],"class":"function","name":"setFlexScale","description":" Sets the scale of the entity flexes"},"getClass":{"returns":["The string class name"],"realm":"shared","class":"function","name":"getClass","description":" Returns the class of the entity"},"getMassCenterW":{"returns":["The position vector of the mass center"],"realm":"shared","class":"function","name":"getMassCenterW","description":" Returns the world position of the entity's mass center"},"isConstraint":{"returns":["Boolean if the entity is a constraint"],"realm":"server","class":"function","name":"isConstraint","description":"Returns if the entity is a constraint."},"setBodygroup":{"realm":"shared","params":[{"name":"bodygroup","description":"Number, The ID of the bodygroup you're setting."},{"name":"value","description":"Number, The value you're setting the bodygroup to."}],"class":"function","name":"setBodygroup","description":" Sets the bodygroup of the entity"},"getPhysicsObjectCount":{"returns":["The number of physics objects on the entity"],"realm":"shared","class":"function","name":"getPhysicsObjectCount","description":" Gets the number of physicsobjects of an entity"},"getColor":{"returns":["Color"],"realm":"shared","class":"function","name":"getColor","description":" Gets the color of an entity"},"ignite":{"realm":"server","params":[{"name":"length","description":"How long the fire lasts"},{"name":"radius","description":"(optional) How large the fire hitbox is (entity obb is the max)"}],"class":"function","name":"ignite","description":" Ignites an entity"},"linkComponent":{"realm":"server","params":[{"name":"e","description":"Entity to link the component to, a vehicle or starfall for huds, or a starfall for screens. nil to clear links."}],"class":"function","name":"linkComponent","description":" Links starfall components to a starfall processor or vehicle. Screen can only connect to processor. HUD can connect to processor and vehicle."},"getBoneCount":{"returns":["Number of bones"],"realm":"shared","class":"function","name":"getBoneCount","description":" Returns the number of an entity's bones"},"isOnFire":{"returns":["Boolean if the entity is on fire or not"],"realm":"shared","class":"function","name":"isOnFire","description":" Returns if the entity is ignited"},"enableSphere":{"realm":"server","params":[{"name":"enabled","description":"Bool should the entity be spherical?"}],"class":"function","name":"enableSphere","description":" Sets the physics of an entity to be a sphere"},"getSequence":{"returns":["The sequence number"],"realm":"shared","class":"function","name":"getSequence","description":" Gets the current playing sequence"},"obbMaxs":{"returns":["The max bounding box vector"],"realm":"shared","class":"function","name":"obbMaxs","description":" Returns max local bounding box vector of the entity"},"getRenderFX":{"returns":["Number renderfx, https://wiki.facepunch.com/gmod/Enums/kRenderFx"],"realm":"shared","class":"function","name":"getRenderFX","description":" Gets the renderfx of the entity"},"isWeapon":{"returns":["True if weapon, false if not"],"realm":"shared","class":"function","name":"isWeapon","description":" Checks if an entity is a weapon."},"lookupAttachment":{"returns":["number of the attachment index, or 0 if it doesn't exist"],"realm":"shared","params":[{"name":"name","description":""}],"class":"function","name":"lookupAttachment","description":" Gets the attachment index via the entity and it's attachment name"},"setRenderFX":{"realm":"shared","params":[{"name":"renderfx","description":"Number, renderfx to use. http://wiki.facepunch.com/gmod/Enums/kRenderFx"}],"class":"function","name":"setRenderFX","description":" Sets the renderfx of the entity, most effects require entity's alpha to be less than 255 to take effect"},"removeCollisionListener":{"description":" Removes a collision listening hook from the entity so that a new one can be added","class":"function","name":"removeCollisionListener","realm":"server"},"getPhysMaterial":{"returns":["the physical material"],"realm":"server","class":"function","name":"getPhysMaterial","description":" Get the physical material of the entity"},"getAngles":{"returns":["The angle"],"realm":"shared","class":"function","name":"getAngles","description":" Returns the angle of the entity"},"getBodygroupName":{"returns":["The bodygroup name"],"realm":"shared","params":[{"name":"id","description":"The bodygroup's number index"}],"class":"function","name":"getBodygroupName","description":" Returns the bodygroup name of the entity with given index"},"setParent":{"realm":"server","params":[{"name":"parent","description":"Entity to parent to. nil to unparent"},{"name":"attachment","description":"Optional string attachment name to parent to"}],"class":"function","name":"setParent","description":" Parents the entity to another entity"},"translatePhysBoneToBone":{"returns":["The ragdoll bone id"],"realm":"shared","params":[{"name":"boneid","description":"The physobject id"}],"class":"function","name":"translatePhysBoneToBone","description":" Converts a physobject id to the corresponding ragdoll bone id"},"canDraw":{"description":" Returns whether or not the entity can be drawn using Entity.draw function\n Checks Entity against a predefined class whitelist\n Entities that have RenderOverride defined or are parented cannot be drawn","class":"function","name":"canDraw","realm":"client"},"setSkin":{"realm":"shared","params":[{"name":"skinIndex","description":"Number, Index of the skin to use."}],"class":"function","name":"setSkin","description":" Sets the skin of the entity"},"setSubMaterial":{"realm":"shared","params":[{"name":"index","description":", number, submaterial index."},{"name":"material","description":", string, New material name."}],"class":"function","name":"setSubMaterial","description":" Sets the submaterial of the entity"},"unparent":{"description":" Unparents the entity from another entity","class":"function","name":"unparent","realm":"server"},"getNWVarTable":{"returns":["The table of networked objects"],"realm":"shared","class":"function","name":"getNWVarTable","description":" Gets the table of all networked things on an entity"},"getDTVector":{"returns":["The vector or nil if it doesn't exist"],"realm":"shared","params":[{"name":"key","description":"The number key. Valid keys are 0 - 31"}],"class":"function","name":"getDTVector","description":" Gets a datatable vector"},"getMoveType":{"returns":["The movetype enum of the entity. https://wiki.facepunch.com/gmod/Enums/MOVETYPE"],"realm":"shared","class":"function","name":"getMoveType","description":" Gets the movetype enum of the entity"},"getDTString":{"returns":["The string or nil if it doesn't exist"],"realm":"shared","params":[{"name":"key","description":"The number key. Valid keys are 0 - 31"}],"class":"function","name":"getDTString","description":" Gets a datatable string"},"worldToLocal":{"returns":["data as local space vector"],"realm":"shared","params":[{"name":"data","description":"World space vector"}],"class":"function","name":"worldToLocal","description":" Converts a vector in world space to entity local space"},"getBoneMatrix":{"returns":["The matrix"],"realm":"shared","params":[{"name":"bone","description":"Bone index. (def 0)"}],"class":"function","name":"getBoneMatrix","description":" Returns the matrix of the entity's bone. Note: this method is slow/doesnt work well if the entity isn't animated."},"getDTFloat":{"returns":["The float or nil if it doesn't exist"],"realm":"shared","params":[{"name":"key","description":"The number key. Valid keys are 0 - 31"}],"class":"function","name":"getDTFloat","description":" Gets a datatable float"},"getDTEntity":{"returns":["The entity or nil if it doesn't exist"],"realm":"shared","params":[{"name":"key","description":"The number key. Valid keys are 0 - 31"}],"class":"function","name":"getDTEntity","description":" Gets a datatable entity"},"getDTAngle":{"returns":["The angle or nil if it doesn't exist"],"realm":"shared","params":[{"name":"key","description":"The number key. Valid keys are 0 - 31"}],"class":"function","name":"getDTAngle","description":" Gets a datatable angle"},"isEffectActive":{"returns":["True or false"],"realm":"shared","params":[{"name":"effect","description":"The effect to check. EF table values"}],"class":"function","name":"isEffectActive","description":" Checks if an engine effect is applied to the entity"},"manipulateBonePosition":{"realm":"client","params":[{"name":"bone","description":"The bone ID"},{"name":"vec","description":"The position it should be manipulated to"}],"class":"function","name":"manipulateBonePosition","description":" Allows manipulation of an entity's bones' positions"},"getBrushSurfaces":{"returns":["Table of SurfaceInfos if the entity has a brush model, or no value otherwise."],"realm":"shared","class":"function","name":"getBrushSurfaces","description":" Returns a table of brushes surfaces for brush model entities."},"getHitBoxHitGroup":{"returns":["The hitbox group of given hitbox. See https://wiki.facepunch.com/gmod/Enums/HITGROUP"],"realm":"shared","params":[{"name":"hitbox","description":"The number of the hit box."},{"name":"hitboxset","description":"The number of the hit box set. This should be 0 in most cases."}],"class":"function","name":"getHitBoxHitGroup","description":" Gets the hit group of a given hitbox in a given hitbox set."},"getHitBoxSetCount":{"returns":["Number of hitbox sets."],"realm":"shared","class":"function","name":"getHitBoxSetCount","description":" Returns entity's number of hitbox sets."},"removeTrails":{"description":" Removes trails from the entity","class":"function","name":"removeTrails","realm":"server"},"getHitBoxSet":{"returns":["Hitbox set number, nil if entity has no hitboxes.","Hitbox set name, nil if entity has no hitboxes."],"realm":"shared","class":"function","name":"getHitBoxSet","description":" Returns entity's current hit box set."},"setMaterial":{"realm":"shared","params":[{"name":"material","description":", string, New material name."}],"class":"function","name":"setMaterial","description":" Sets the material of the entity"},"getHitBoxBone":{"returns":["Bone ID"],"realm":"shared","params":[{"name":"hitbox","description":"The number of the hitbox."},{"name":"group","description":"The number of the hitbox group, 0 in most cases."}],"class":"function","name":"getHitBoxBone","description":" Gets the bone the given hitbox is attached to."},"testPVS":{"returns":["bool True/False"],"realm":"server","params":[{"name":"other","description":"Entity or Vector to test"}],"class":"function","name":"testPVS","description":" Check if the given Entity or Vector is within this entity's PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},"entOwner":{"returns":["Owner"],"realm":"shared","class":"function","name":"entOwner","description":" Returns the game assigned owner of an entity. This doesn't take CPPI into account and will return nil for most standard entities.\n Used on entities with custom physics like held SWEPs and fired bullets in which case player entity should be returned."},"draw":{"description":" Draws the entity, requires 3D rendering context\n Only certain, whitelisted entities can be drawn. They can't be parented or have RenderOverride defined\n Use Entity.canDraw to check if you can draw the entity","class":"function","name":"draw","realm":"client"},"setPersistent":{"realm":"shared","params":[{"name":"persist","description":"True to make persistent"}],"class":"function","name":"setPersistent","description":" Marks entity as persistent, disallowing players from physgunning it. Persistent entities save on server shutdown when sbox_persist is set"},"getBrushPlane":{"returns":["The origin of the plane","The normal of the plane","The distance to the plane"],"realm":"shared","params":[{"name":"id","description":"Plane index. Starts from 0"}],"class":"function","name":"getBrushPlane","description":" Returns info about the given brush plane"},"getBodygroups":{"returns":["Bodygroups as a table of BodyGroupDatas. https://wiki.facepunch.com/gmod/Structures/BodyGroupData"],"realm":"shared","class":"function","name":"getBodygroups","description":" Returns a list of all bodygroups of the entity"},"breakEnt":{"description":" Invokes the entity's breaking animation and removes it.","class":"function","name":"breakEnt","realm":"server"},"getFlexWeight":{"returns":["The weight of the flex"],"realm":"shared","params":[{"name":"flexid","description":"The id of the flex"}],"class":"function","name":"getFlexWeight","description":" Gets the weight (value) of a flex."},"worldToLocalAngles":{"returns":["data as local space angle"],"realm":"shared","params":[{"name":"data","description":"World space angle"}],"class":"function","name":"worldToLocalAngles","description":" Converts an angle in world space to entity local space"},"getEyePos":{"returns":["Eye position of the entity","In case of a ragdoll, the position of the second eye"],"realm":"shared","class":"function","name":"getEyePos","description":" Gets the entity's eye position"},"setInertia":{"realm":"server","params":[{"name":"vec","description":"Inertia tensor"}],"class":"function","name":"setInertia","description":" Sets the entity's inertia"},"manipulateBoneJiggle":{"realm":"client","params":[{"name":"bone","description":"The bone ID"},{"name":"enabled","description":"Whether to make the bone jiggly or not"}],"class":"function","name":"manipulateBoneJiggle","description":" Allows manipulation of an entity's bones' jiggle status"},"getEyeAngles":{"returns":["Angles of the entity's eyes"],"realm":"shared","class":"function","name":"getEyeAngles","description":" Gets the entitiy's eye angles"},"getHealth":{"returns":["Health of the entity"],"realm":"shared","class":"function","name":"getHealth","description":" Gets the health of an entity"},"getMaxHealth":{"returns":["Max Health of the entity"],"realm":"shared","class":"function","name":"getMaxHealth","description":" Gets the max health of an entity"},"setCollisionGroup":{"realm":"server","params":[{"name":"group","description":"The COLLISION_GROUP value to set it to"}],"class":"function","name":"setCollisionGroup","description":" Sets the entity's collision group"},"getModel":{"returns":["Model of the entity"],"realm":"shared","class":"function","name":"getModel","description":" Gets the model of an entity"},"getAttachments":{"returns":["table of attachment id and attachment name or nil"],"realm":"shared","class":"function","name":"getAttachments","description":" Returns a table of attachments"},"getMaterial":{"returns":["String material"],"realm":"shared","class":"function","name":"getMaterial","description":" Gets an entities' material"},"getChipAuthor":{"returns":["The author of the starfall chip."],"realm":"shared","class":"function","name":"getChipAuthor","description":" Gets the author of the specified starfall."},"getFlexes":{"description":" Returns a table of flexname -> flexid pairs for use in flex functions.","class":"function","name":"getFlexes","realm":"shared"},"getPose":{"returns":["Value of the pose parameter"],"realm":"shared","params":[{"name":"pose","description":"Pose parameter name"}],"class":"function","name":"getPose","description":" Get the pose value of an animation"},"setPose":{"realm":"shared","params":[{"name":"pose","description":"Name of the pose parameter"},{"name":"value","description":"Value to set it to."}],"class":"function","name":"setPose","description":" Set the pose value of an animation. Turret/Head angles for example."},"sequenceDuration":{"returns":["Length of the animation in seconds"],"realm":"shared","params":[{"name":"id","description":"(Optional) The id of the sequence, or will default to the currently playing sequence"}],"class":"function","name":"sequenceDuration","description":" Get the length of an animation"},"lookupSequence":{"returns":["Animation index or -1 if invalid"],"realm":"shared","params":[{"name":"animation","description":"Name of the animation"}],"class":"function","name":"lookupSequence","description":" Gets the animation number from the animation name"},"localToWorldAngles":{"returns":["data as world space angle"],"realm":"shared","params":[{"name":"data","description":"Local space angle"}],"class":"function","name":"localToWorldAngles","description":" Converts an angle in entity local space to world space"},"getAngleVelocityAngle":{"returns":["The angular velocity as an angle"],"realm":"shared","class":"function","name":"getAngleVelocityAngle","description":" Returns the angular velocity of the entity"},"setFrozen":{"realm":"server","params":[{"name":"freeze","description":"Should the entity be frozen?"}],"class":"function","name":"setFrozen","description":" Sets the entity frozen state"},"getOwner":{"returns":["Owner"],"realm":"shared","class":"function","name":"getOwner","description":" Gets the owner of the entity"},"setAngleVelocity":{"realm":"server","params":[{"name":"angvel","description":"The local angvel vector to set"}],"class":"function","name":"setAngleVelocity","description":" Set the angular velocity of an object"},"getPos":{"returns":["The position vector"],"realm":"shared","class":"function","name":"getPos","description":" Returns the position of the entity"},"getPhysicsObject":{"returns":["The main physics object of the entity"],"realm":"shared","class":"function","name":"getPhysicsObject","description":" Gets the main physics objects of an entity"},"getChipName":{"returns":["The name of the chip"],"realm":"shared","class":"function","name":"getChipName","description":" Returns the starfall or expression2's name"},"setSolid":{"realm":"server","params":[{"name":"solid","description":"Boolean, Should the entity be solid?"}],"class":"function","name":"setSolid","description":" Sets the entity to be Solid or not."},"enableGravity":{"realm":"server","params":[{"name":"grav","description":"Bool should the entity respect gravity?"}],"class":"function","name":"enableGravity","description":" Sets entity gravity"},"applyDamage":{"realm":"server","params":[{"name":"amt","description":"damage amount"},{"name":"attacker","description":"damage attacker"},{"name":"inflictor","description":"damage inflictor"}],"class":"function","name":"applyDamage","description":" Applies damage to an entity"},"enableMotion":{"realm":"server","params":[{"name":"move","description":"Bool should the entity move?"}],"class":"function","name":"enableMotion","description":" Sets the entity movement state"},"manipulateBoneScale":{"realm":"client","params":[{"name":"bone","description":"The bone ID"},{"name":"vec","description":"The scale it should be manipulated to"}],"class":"function","name":"manipulateBoneScale","description":" Allows manipulation of an entity's bones' scale"},"setPos":{"realm":"server","params":[{"name":"vec","description":"New position"}],"class":"function","name":"setPos","description":" Sets the entitiy's position. No interpolation will occur clientside, use physobj.setPos to have interpolation."},"applyAngForce":{"realm":"server","params":[{"name":"ang","description":"The force angle"}],"class":"function","name":"applyAngForce","description":" Applies angular force to the entity (This function is garbage, use applyTorque instead)"},"setMeshMaterial":{"realm":"client","params":[{"name":"material","description":"The material to set it to or nil to set back to default"}],"class":"function","name":"setMeshMaterial","description":" Sets a hologram or custom_prop's custom mesh material"},"entIndex":{"returns":["The numerical index of the entity"],"realm":"shared","class":"function","name":"entIndex","description":" Returns the EntIndex of the entity"},"use":{"realm":"server","params":[{"name":"usetype","description":"The USE_ enum use type. (Default: USE_ON)"},{"name":"value","description":"The use value (Default: 0)"}],"class":"function","name":"use","description":" Simulate a Use action on the entity by the chip owner"},"__tostring":{"description":" To string","class":"function","name":"__tostring","realm":"shared"},"getAllConstrained":{"realm":"server","params":[{"name":"filter","description":"Optional constraint type filter table where keys are the type name and values are 'true'. \"Wire\" and \"Parent\" are used for wires and parents."}],"class":"function","name":"getAllConstrained","description":" Gets a table of all constrained entities to each other"},"applyTorque":{"realm":"server","params":[{"name":"torque","description":"The torque vector"}],"class":"function","name":"applyTorque","description":" Applies torque"},"setMass":{"realm":"server","params":[{"name":"mass","description":"number mass"}],"class":"function","name":"setMass","description":" Sets the entity's mass"},"worldSpaceAABB":{"returns":["The min bounding box vector","The max bounding box vector"],"realm":"shared","class":"function","name":"worldSpaceAABB","description":" Returns Entity axis aligned bounding box in world coordinates"},"stopSound":{"realm":"shared","params":[{"name":"snd","description":"string Soundscript path. See http://wiki.facepunch.com/gmod/Entity:StopSound"}],"class":"function","name":"stopSound","description":" Stops a sound on the entity"},"getParent":{"returns":["Entity's parent or nil"],"realm":"shared","class":"function","name":"getParent","description":" Gets the parent of an entity"},"isPlayerHolding":{"returns":["Boolean if the entity is being held or not"],"realm":"server","class":"function","name":"isPlayerHolding","description":" Returns true if the entity is being held by a player. Either by Physics gun, Gravity gun or Use-key."},"obbSize":{"returns":["The outer bounding box size"],"realm":"shared","class":"function","name":"obbSize","description":" Returns the x, y, z size of the entity's outer bounding box (local to the entity)"},"isWeldedTo":{"returns":["The first welded/parent entity"],"realm":"server","class":"function","name":"isWeldedTo","description":" Gets what the entity is welded to. If the entity is parented, returns the parent."},"getWirelink":{"returns":["Wirelink of the entity"],"realm":"server","class":"function","name":"getWirelink","description":" Returns an entities wirelink"},"getBoneParent":{"returns":["Parent index of the bone"],"realm":"shared","params":[{"name":"bone","description":"Bone index. (def 0)"}],"class":"function","name":"getBoneParent","description":" Returns the parent index of an entity's bone"},"getClipping":{"returns":["Table containing the clipdata"],"realm":"shared","class":"function","name":"getClipping","description":" Gets the clipping of an entity"},"getQuaternion":{"returns":["Constructed quaternion"],"realm":"shared","class":"function","name":"getQuaternion","description":" Converts entity angles to a quaternion"},"addAngleVelocity":{"realm":"server","params":[{"name":"angvel","description":"The local angvel vector to apply"}],"class":"function","name":"addAngleVelocity","description":" Applys a angular velocity to an object"},"isValid":{"returns":["True if valid, false if not"],"realm":"shared","class":"function","name":"isValid","description":" Checks if an entity is valid."},"getChildren":{"returns":["table of parented children"],"realm":"shared","class":"function","name":"getChildren","description":" Gets the children (the parented entities) of an entity"},"applyForceOffset":{"realm":"server","params":[{"name":"force","description":"The force vector in world coordinates"},{"name":"position","description":"The force position in world coordinates"}],"class":"function","name":"applyForceOffset","description":" Applies linear force to the entity with an offset"},"manipulateBoneAngles":{"realm":"client","params":[{"name":"bone","description":"The bone ID"},{"name":"ang","description":"The angle it should be manipulated to"}],"class":"function","name":"manipulateBoneAngles","description":" Allows manipulation of an entity's bones' angles"},"obbCenterW":{"returns":["The position vector of the outer bounding box center"],"realm":"shared","class":"function","name":"obbCenterW","description":" Returns the world position of the entity's outer bounding box"},"setFlexWeight":{"realm":"shared","params":[{"name":"flexid","description":"The id of the flex"},{"name":"weight","description":"The weight of the flex"}],"class":"function","name":"setFlexWeight","description":" Sets the weight (value) of a flex."},"setCustomPropForces":{"realm":"server","params":[{"name":"ang","description":"Angular Force (Torque)"},{"name":"lin","description":"Linear Force"},{"name":"mode","description":"The physics mode to use. 0 = Off, 1 = Local acceleration, 2 = Local force, 3 = Global Acceleration, 4 = Global force"}],"class":"function","name":"setCustomPropForces","description":" Sets a custom prop's physics simulation forces. Thrusters and balloons use this."},"getBodygroup":{"returns":["The bodygroup value"],"realm":"shared","params":[{"name":"id","description":"The bodygroup's number index"}],"class":"function","name":"getBodygroup","description":" Returns the bodygroup value of the entity with given index"},"setNoDraw":{"realm":"shared","params":[{"name":"draw","description":"Whether to draw the entity or not."}],"class":"function","name":"setNoDraw","description":" Sets the whether an entity should be drawn or not"},"translateBoneToPhysBone":{"returns":["The physobj id"],"realm":"shared","params":[{"name":"boneid","description":"The ragdoll boneid"}],"class":"function","name":"translateBoneToPhysBone","description":" Converts a ragdoll bone id to the corresponding physobject id"},"getSkinCount":{"returns":["The amount of skins"],"realm":"shared","class":"function","name":"getSkinCount","description":" Returns the amount of skins of the entity"},"setRenderMode":{"realm":"shared","params":[{"name":"rendermode","description":"Number, rendermode to use. http://wiki.facepunch.com/gmod/Enums/RENDERMODE"}],"class":"function","name":"setRenderMode","description":" Sets the render mode of the entity"},"applyForceCenter":{"realm":"server","params":[{"name":"vec","description":"The force vector"}],"class":"function","name":"applyForceCenter","description":" Applies linear force to the entity"},"setColor":{"realm":"shared","params":[{"name":"clr","description":"New color"}],"class":"function","name":"setColor","description":" Sets the color of the entity"},"getSkin":{"returns":["Skin number"],"realm":"shared","class":"function","name":"getSkin","description":" Gets the skin number of the entity"},"getAngleVelocity":{"returns":["The angular velocity as a vector"],"realm":"shared","class":"function","name":"getAngleVelocity","description":" Returns the angular velocity of the entity"},"getQuotaAverage":{"returns":["Average CPU Time of the buffer of the specified starfall or expression2."],"realm":"shared","class":"function","name":"getQuotaAverage","description":" Gets the Average CPU Time in the buffer of the specified starfall or expression2."},"setAngles":{"realm":"server","params":[{"name":"ang","description":"New angles"}],"class":"function","name":"setAngles","description":" Sets the entity's angles"},"isValidPhys":{"returns":["True if entity has physics"],"realm":"server","class":"function","name":"isValidPhys","description":" Checks whether entity has physics"},"getAttachment":{"returns":["vector position, and angle orientation or nil if the attachment doesn't exist"],"realm":"shared","params":[{"name":"index","description":"The index of the attachment"}],"class":"function","name":"getAttachment","description":" Gets the position and angle of an attachment"},"remove":{"description":" Removes an entity","class":"function","name":"remove","realm":"server"},"extinguish":{"description":" Extinguishes an entity","class":"function","name":"extinguish","realm":"server"},"isNPC":{"returns":["True if npc, false if not"],"realm":"shared","class":"function","name":"isNPC","description":" Checks if an entity is an npc."},"isFrozen":{"returns":["True if entity is frozen"],"realm":"server","class":"function","name":"isFrozen","description":" Checks the entities frozen state"},"getQuotaMax":{"returns":["Max SysTime allowed to take for execution of the chip in a Think."],"realm":"shared","class":"function","name":"getQuotaMax","description":" Gets the CPU Time max of the specified starfall of the specified starfall or expression2.\n CPU Time is stored in a buffer of N elements, if the average of this exceeds quotaMax, the chip will error."},"obbCenter":{"returns":["The position vector of the outer bounding box center"],"realm":"shared","class":"function","name":"obbCenter","description":" Returns the local position of the entity's outer bounding box"},"enableDrag":{"realm":"server","params":[{"name":"drag","description":"Bool should the entity have air resistence?"}],"class":"function","name":"enableDrag","description":" Sets the entity drag state"},"getWaterLevel":{"returns":["The water level. 0 none, 1 slightly, 2 at least halfway, 3 all the way"],"realm":"shared","class":"function","name":"getWaterLevel","description":" Returns how submerged the entity is in water"},"lookupBone":{"returns":["The bone index"],"realm":"shared","params":[{"name":"name","description":"The bone's string name"}],"class":"function","name":"lookupBone","description":" Returns the ragdoll bone index given a bone name"},"isPlayer":{"returns":["True if player, false if not"],"realm":"shared","class":"function","name":"isPlayer","description":" Checks if an entity is a player."},"getSubMaterial":{"returns":["String material"],"realm":"shared","params":[{"name":"index","description":"Number index of the sub material"}],"class":"function","name":"getSubMaterial","description":" Gets an entities' submaterial"}},"libtbl":["ents_methods","ent_meta"],"realm":"shared","class":"type","name":"Entity","description":" Entity type"},"Vehicle":{"methods":{"getDriver":{"returns":["Driver of vehicle"],"realm":"server","class":"function","name":"getDriver","description":" Returns the driver of the vehicle"},"getPassenger":{"returns":["The passenger or NULL if empty"],"realm":"server","params":[{"name":"n","description":"The index of the passenger to get"}],"class":"function","name":"getPassenger","description":" Returns a passenger of a vehicle"},"ejectDriver":{"description":" Ejects the driver of the vehicle","class":"function","name":"ejectDriver","realm":"server"},"unlock":{"description":" Will unlock the vehicle.","class":"function","name":"unlock","realm":"server"},"lock":{"description":" Will lock the vehicle preventing players from entering or exiting the vehicle.","class":"function","name":"lock","realm":"server"},"killDriver":{"description":" Kills the driver of the vehicle","class":"function","name":"killDriver","realm":"server"},"stripDriver":{"realm":"server","params":[{"name":"class","description":"Optional weapon class to strip. Otherwise all are stripped."}],"class":"function","name":"stripDriver","description":" Strips weapons of the driver"}},"libtbl":["vehicle_methods"],"realm":"shared","class":"type","name":"Vehicle","description":" Vehicle type"},"PhysObj":{"methods":{"localToWorld":{"returns":["The transformed vector"],"realm":"shared","params":[{"name":"vec","description":"The vector to transform"}],"class":"function","name":"localToWorld","description":" Returns a vector in the reference frame of the world from the local frame of the physicsobject"},"setDamping":{"realm":"shared","params":[{"name":"linear","description":"Number of the linear damping"},{"name":"angular","description":"Number of the angular damping"}],"class":"function","name":"setDamping","description":" Sets the movement damping of the bone. Unlike air drag, it doesn't take into account the cross-section of the object."},"getMatrix":{"returns":["The matrix"],"realm":"shared","class":"function","name":"getMatrix","description":" Returns the world transform matrix of the physobj"},"setAngleVelocity":{"realm":"server","params":[{"name":"angvel","description":"The local angvel vector to set"}],"class":"function","name":"setAngleVelocity","description":" Sets the angular velocity of an object"},"getPos":{"returns":["Vector position of the physics object"],"realm":"shared","class":"function","name":"getPos","description":" Gets the position of the physics object"},"getAngles":{"returns":["Angle angles of the physics object"],"realm":"shared","class":"function","name":"getAngles","description":" Gets the angles of the physics object"},"addGameFlags":{"realm":"shared","params":[{"name":"flags","description":"The flags to add. FVPHYSICS enum."}],"class":"function","name":"addGameFlags","description":" Adds game flags to the physics object. Some flags cannot be modified. Can be:\n FVPHYSICS.DMG_DISSOLVE\n FVPHYSICS.DMG_SLICE\n FVPHYSICS.HEAVY_OBJECT\n FVPHYSICS.NO_IMPACT_DMG\n FVPHYSICS.NO_NPC_IMPACT_DMG\n FVPHYSICS.NO_PLAYER_PICKUP"},"enableMotion":{"realm":"shared","params":[{"name":"move","description":"Bool should the bone move?"}],"class":"function","name":"enableMotion","description":" Sets the bone movement state"},"setPos":{"realm":"server","params":[{"name":"pos","description":"The position vector to set it to"}],"class":"function","name":"setPos","description":" Sets the position of the physics object. Will cause interpolation of the entity in clientside, use entity.setPos to avoid this."},"isDragEnabled":{"returns":["boolean If bone is affected by drag"],"realm":"shared","class":"function","name":"isDragEnabled","description":" Check if bone is affected by air resistance"},"setAngleDragCoefficient":{"realm":"shared","params":[{"name":"coeff","description":"Number how much drag affects the bone when rotating"}],"class":"function","name":"setAngleDragCoefficient","description":" Sets coefficient of air resistance affecting the bone when rotating. Air resistance depends on the cross-section of the object."},"applyTorque":{"realm":"server","params":[{"name":"torque","description":"The world torque vector to apply"}],"class":"function","name":"applyTorque","description":" Applys a torque to a physics object"},"getVelocity":{"returns":["Vector velocity of the physics object"],"realm":"shared","class":"function","name":"getVelocity","description":" Gets the velocity of the physics object"},"worldToLocal":{"returns":["The transformed vector"],"realm":"shared","params":[{"name":"vec","description":"The vector to transform"}],"class":"function","name":"worldToLocal","description":" Returns a vector in the local reference frame of the physicsobject from the world frame"},"getMassCenter":{"returns":["Center of mass vector in the physobject's local reference frame."],"realm":"shared","class":"function","name":"getMassCenter","description":" Gets the center of mass of the physics object in the local reference frame."},"getMesh":{"returns":["table of MeshVertex structures"],"realm":"shared","class":"function","name":"getMesh","description":" Returns a table of MeshVertex structures where each 3 vertices represent a triangle. See: http://wiki.facepunch.com/gmod/Structures/MeshVertex"},"addAngleVelocity":{"realm":"server","params":[{"name":"angvel","description":"The local angvel vector to apply"}],"class":"function","name":"addAngleVelocity","description":" Applys a angular velocity to an object"},"worldToLocalVector":{"returns":["The transformed vector"],"realm":"shared","params":[{"name":"vec","description":"The normal vector to transform"}],"class":"function","name":"worldToLocalVector","description":" Returns a normal vector in the local reference frame of the physicsobject from the world frame"},"applyForceOffset":{"realm":"server","params":[{"name":"force","description":"The force vector in world coordinates"},{"name":"position","description":"The force position in world coordinates"}],"class":"function","name":"applyForceOffset","description":" Applys an offset force to a physics object"},"setBuoyancyRatio":{"realm":"server","params":[{"name":"ratio","description":"The buoyancy ratio to use"}],"class":"function","name":"setBuoyancyRatio","description":" Sets the buoyancy ratio of a physobject"},"setMaterial":{"realm":"shared","params":[{"name":"material","description":"The physical material to set it to"}],"class":"function","name":"setMaterial","description":" Sets the physical material of a physics object"},"setMass":{"realm":"server","params":[{"name":"mass","description":"The mass to set it to"}],"class":"function","name":"setMass","description":" Sets the mass of a physics object"},"getFrictionSnapshot":{"returns":["Table of tables of data. Each table will contain:"],"realm":"server","class":"function","name":"getFrictionSnapshot","description":" Returns table of tables of friction data of a contact against the physobj\n PhysObj Other - The other physics object we came in contact with\n number EnergyAbsorbed -\n number FrictionCoefficient -\n number NormalForce -\n Vector Normal - Direction of the friction event\n Vector ContactPoint - Contact point of the friction event\n number Material - Surface Property ID of our physics obj\n number MaterialOther - Surface Property ID of the physics obj we came in contact with"},"wake":{"description":" Makes a sleeping physobj wakeup","class":"function","name":"wake","realm":"server"},"localToWorldVector":{"returns":["The transformed vector"],"realm":"shared","params":[{"name":"vec","description":"The normal vector to transform"}],"class":"function","name":"localToWorldVector","description":" Returns a normal vector in the reference frame of the world from the local frame of the physicsobject"},"sleep":{"description":" Makes a physobj go to sleep. (like it's frozen but interacting wakes it back up)","class":"function","name":"sleep","realm":"server"},"clearGameFlags":{"realm":"shared","params":[{"name":"flags","description":"The flags to add. FVPHYSICS enum."}],"class":"function","name":"clearGameFlags","description":" Clears game flags from the physics object. Some flags cannot be modified. Can be:\n FVPHYSICS.DMG_DISSOLVE\n FVPHYSICS.DMG_SLICE\n FVPHYSICS.HEAVY_OBJECT\n FVPHYSICS.NO_IMPACT_DMG\n FVPHYSICS.NO_NPC_IMPACT_DMG\n FVPHYSICS.NO_PLAYER_PICKUP"},"applyForceCenter":{"realm":"server","params":[{"name":"force","description":"The force vector to apply"}],"class":"function","name":"applyForceCenter","description":" Applys a force to the center of the physics object"},"getVelocityAtPoint":{"returns":["Vector Local velocity of the physics object at the point"],"realm":"shared","params":[{"name":"vec","description":"The point to get velocity of in local reference frame"}],"class":"function","name":"getVelocityAtPoint","description":" Gets the velocity of the physics object at an arbitrary point in its local reference frame\n This includes velocity at the point induced by rotational velocity"},"isAsleep":{"returns":["boolean if the physobj is asleep"],"realm":"server","class":"function","name":"isAsleep","description":" Returns whether the physobj is asleep"},"getAngleVelocity":{"returns":["Vector angular velocity of the physics object"],"realm":"shared","class":"function","name":"getAngleVelocity","description":" Gets the angular velocity of the physics object"},"setInertia":{"realm":"server","params":[{"name":"inertia","description":"The inertia vector to set it to"}],"class":"function","name":"setInertia","description":" Sets the inertia of a physics object"},"setAngles":{"realm":"server","params":[{"name":"ang","description":"The angle to set it to"}],"class":"function","name":"setAngles","description":" Sets the angles of the physics object. Will cause interpolation of the entity in clientside, use entity.setAngles to avoid this."},"getEntity":{"returns":["The entity attached to the physics object"],"realm":"shared","class":"function","name":"getEntity","description":" Gets the entity attached to the physics object"},"setDragCoefficient":{"realm":"shared","params":[{"name":"coeff","description":"Number how much drag affects the bone"}],"class":"function","name":"setDragCoefficient","description":" Sets coefficient of air resistance affecting the bone. Air resistance depends on the cross-section of the object."},"getDamping":{"returns":["Linear damping","Angular damping"],"realm":"shared","class":"function","name":"getDamping","description":" Returns Movement damping of the bone."},"enableDrag":{"realm":"shared","params":[{"name":"drag","description":"Bool should the bone have air resistence?"}],"class":"function","name":"enableDrag","description":" Sets the bone drag state"},"enableGravity":{"realm":"shared","params":[{"name":"grav","description":"Bool should the bone respect gravity?"}],"class":"function","name":"enableGravity","description":" Sets bone gravity"},"hasGameFlags":{"returns":["boolean If the flags are set"],"realm":"shared","params":[{"name":"flags","description":"The flags to test. FVPHYSICS enum."}],"class":"function","name":"hasGameFlags","description":" Returns whether the game flags of the physics object are set."},"getMaterial":{"returns":["The physics material of the physics object"],"realm":"shared","class":"function","name":"getMaterial","description":" Gets the material of the physics object"},"isValid":{"returns":["boolean if the physics object is valid"],"realm":"shared","class":"function","name":"isValid","description":" Checks if the physics object is valid"},"getMeshConvexes":{"returns":["table of MeshVertex structures"],"realm":"shared","class":"function","name":"getMeshConvexes","description":" Returns a structured table, the physics mesh of the physics object. See: http://wiki.facepunch.com/gmod/Structures/MeshVertex"},"getAABB":{"returns":["The mins of the AABB","The maxs of the AABB"],"realm":"shared","class":"function","name":"getAABB","description":" Gets the axis aligned bounding box of the physics object"},"setVelocity":{"realm":"server","params":[{"name":"vel","description":"The velocity vector to set it to"}],"class":"function","name":"setVelocity","description":" Sets the velocity of the physics object"},"getInertia":{"returns":["Vector Inertia of the physics object"],"realm":"shared","class":"function","name":"getInertia","description":" Gets the inertia of the physics object"},"getMass":{"returns":["mass of the physics object"],"realm":"shared","class":"function","name":"getMass","description":" Gets the mass of the physics object"}},"libtbl":["physobj_methods"],"realm":"shared","class":"type","name":"PhysObj","description":" PhysObj Type"},"ParticleEmitter":{"methods":{"setBBox":{"realm":"client","params":[{"name":"mins","description":"vector"},{"name":"maxs","description":"vector"}],"class":"function","name":"setBBox","description":" Sets the bounding box for this emitter. Usually the bounding box is automatically determined by the particles, but this function overrides it."},"is3D":{"returns":["boolean"],"realm":"client","class":"function","name":"is3D","description":" Returns whether this emitter is 3D or not. This is set when creating the emitter with ParticleEmitter."},"getPos":{"returns":["vector"],"realm":"client","class":"function","name":"getPos","description":" Returns the position of this emitter. This is set when creating the emitter with ParticleEmitter."},"setPos":{"realm":"client","params":[{"name":"position","description":"The position"}],"class":"function","name":"setPos","description":" Sets the position of the particle emitter."},"getParticlesLeft":{"returns":["number"],"realm":"client","class":"function","name":"getParticlesLeft","description":" Returns number of particles left able to be created from the emitter"},"setParticleCullRadius":{"realm":"client","params":[{"name":"radius","description":"number"}],"class":"function","name":"setParticleCullRadius","description":" The function name has not much in common with its actual function, it applies a radius to every particles that affects the building of the bounding box, as it, usually is constructed by the particle that has the lowest x, y and z and the highest x, y and z, this function just adds/subtracts the radius and inflates the bounding box."},"draw":{"description":" Manually renders all particles the emitter has created.","class":"function","name":"draw","realm":"client"},"setNoDraw":{"realm":"client","params":[{"name":"noDraw","description":"boolean"}],"class":"function","name":"setNoDraw","description":" Prevents all particles of the emitter from automatically drawing. They can be manually drawn with draw()"},"destroy":{"description":" Removes the emitter, making it no longer usable from Lua. If particles remain, the emitter will be removed when all particles die.","class":"function","name":"destroy","realm":"client"},"getNumActiveParticles":{"returns":["number"],"realm":"client","class":"function","name":"getNumActiveParticles","description":" Returns the amount of active particles of this emitter."},"add":{"returns":["A Particle object"],"realm":"client","params":[{"name":"material","description":"The material object to set the particle"},{"name":"position","description":"The position to create the particle"},{"name":"startSize","description":"number Sets the initial size value of the particle."},{"name":"endSize","description":"number Sets the size of the particle that it will reach when it dies."},{"name":"startLength","description":"number Sets the initial length value of the particle."},{"name":"endLength","description":"number Sets the length of the particle that it will reach when it dies."},{"name":"startAlpha","description":"number Sets the initial alpha value of the particle."},{"name":"endAlpha","description":"number Sets the alpha value of the particle that it will reach when it dies."},{"name":"dieTime","description":"number Sets the time where the particle will be removed."}],"class":"function","name":"add","description":" Creates a new Particle with the given material and position."},"setNearClip":{"realm":"client","params":[{"name":"distanceMin","description":"number"},{"name":"distanceMax","description":"number"}],"class":"function","name":"setNearClip","description":" This function sets the the distance between the render camera and the emitter at which the particles should start fading and at which distance fade ends ( alpha becomes 0 )."},"isValid":{"returns":["boolean"],"realm":"client","class":"function","name":"isValid","description":" Returns whether this object is valid or not."}},"libtbl":["particleem_methods"],"realm":"client","class":"type","name":"ParticleEmitter","description":" ParticleEmitter type"},"VMatrix":{"methods":{"setRight":{"realm":"shared","params":[{"name":"right","description":"The right vector"}],"class":"function","name":"setRight","description":" Sets the right direction of the matrix. Negated second column"},"invert":{"returns":["bool Whether the matrix was inverted or not"],"realm":"shared","class":"function","name":"invert","description":" Inverts the matrix. Inverting the matrix will fail if its determinant is 0 or close to 0"},"getInverse":{"returns":["Inverted matrix"],"realm":"shared","class":"function","name":"getInverse","description":" Returns an inverted matrix. Inverting the matrix will fail if its determinant is 0 or close to 0"},"setForward":{"realm":"shared","params":[{"name":"forward","description":"The forward vector"}],"class":"function","name":"setForward","description":" Sets the forward direction of the matrix. First column"},"getAngles":{"returns":["Angles"],"realm":"shared","class":"function","name":"getAngles","description":" Returns angles"},"__mul":{"returns":["Result matrix"],"realm":"shared","class":"function","name":"__mul","description":" Multiplies two matrices"},"getScale":{"returns":["Scale"],"realm":"shared","class":"function","name":"getScale","description":" Returns scale"},"getForward":{"returns":["Translation"],"realm":"shared","class":"function","name":"getForward","description":" Returns forward vector of matrix. First matrix column"},"__sub":{"returns":["Subtracted matrix"],"realm":"shared","class":"function","name":"__sub","description":" Subtracts two matrices (why would you do this?)"},"setAxisAngle":{"realm":"shared","params":[{"name":"axis","description":"The normalized axis of rotation"},{"name":"angle","description":"The angle of rotation in radians"}],"class":"function","name":"setAxisAngle","description":" Sets the rotation or the matrix to the rotation by an axis and angle"},"getField":{"returns":["Value of the specified field"],"realm":"shared","params":[{"name":"row","description":"A number from 1 to 4"},{"name":"column","description":"A number from 1 to 4"}],"class":"function","name":"getField","description":" Returns a specific field in the matrix"},"set":{"realm":"shared","params":[{"name":"src","description":"Second matrix"}],"class":"function","name":"set","description":" Copies the values from the second matrix to the first matrix. Self-Modifies"},"translate":{"realm":"shared","params":[{"name":"vec","description":"Vector to translate by"}],"class":"function","name":"translate","description":" Translate the matrix"},"getRight":{"returns":["Translation"],"realm":"shared","class":"function","name":"getRight","description":" Returns right vector of matrix. Negated second matrix column"},"setTranslation":{"realm":"shared","params":[{"name":"vec","description":"New translation"}],"class":"function","name":"setTranslation","description":" Sets the translation"},"invertTR":{"description":" Inverts the matrix efficiently for translations and rotations","class":"function","name":"invertTR","realm":"shared"},"isRotationMatrix":{"returns":["bool True/False"],"realm":"shared","class":"function","name":"isRotationMatrix","description":" Returns whether the matrix is a rotation matrix or not. Checks if the forward, right and up vectors are orthogonal and normalized."},"rotate":{"realm":"shared","params":[{"name":"ang","description":"Angle to rotate by"}],"class":"function","name":"rotate","description":" Rotate the matrix"},"scale":{"realm":"shared","params":[{"name":"vec","description":"Vector to scale by"}],"class":"function","name":"scale","description":" Scale the matrix"},"setScale":{"realm":"shared","params":[{"name":"vec","description":"New scale"}],"class":"function","name":"setScale","description":" Sets the scale"},"__add":{"returns":["Added matrix"],"realm":"shared","class":"function","name":"__add","description":" Adds two matrices (why would you do this?)"},"isIdentity":{"returns":["bool True/False"],"realm":"shared","class":"function","name":"isIdentity","description":" Returns whether the matrix is equal to Identity matrix or not"},"setAngles":{"realm":"shared","params":[{"name":"ang","description":"New angles"}],"class":"function","name":"setAngles","description":" Sets the angles"},"clone":{"returns":["The copy of the matrix"],"realm":"shared","class":"function","name":"clone","description":" Copies The matrix and returns a new matrix"},"getAxisAngle":{"returns":["The axis of rotation","The angle of rotation"],"realm":"shared","class":"function","name":"getAxisAngle","description":" Gets the rotation axis and angle of rotation of the rotation matrix"},"setIdentity":{"description":" Initializes the matrix as Identity matrix","class":"function","name":"setIdentity","realm":"shared"},"setUnpacked":{"realm":"shared","params":[{"name":"The","description":"16 fields"}],"class":"function","name":"setUnpacked","description":" Allows you to set all 16 fields in row-major order"},"getUp":{"returns":["Translation"],"realm":"shared","class":"function","name":"getUp","description":" Returns up vector of matrix. Third matrix column"},"setUp":{"realm":"shared","params":[{"name":"up","description":"The up vector"}],"class":"function","name":"setUp","description":" Sets the up direction of the matrix. Third column"},"getInverseTR":{"returns":["Inverted matrix"],"realm":"shared","class":"function","name":"getInverseTR","description":" Returns an inverted matrix. Efficiently for translations and rotations"},"__tostring":{"returns":["string representing the matrix."],"realm":"shared","class":"function","name":"__tostring","description":" tostring metamethod"},"getTranslation":{"returns":["Translation"],"realm":"shared","class":"function","name":"getTranslation","description":" Returns translation"},"toTable":{"returns":["The 4x4 table"],"realm":"shared","class":"function","name":"toTable","description":" Converts the matrix to a 4x4 table"},"unpack":{"returns":["16 numbers"],"realm":"shared","class":"function","name":"unpack","description":" Returns all 16 fields of the matrix in row-major order"},"setField":{"realm":"shared","params":[{"name":"row","description":"A number from 1 to 4"},{"name":"column","description":"A number from 1 to 4"},{"name":"value","description":"Value to set"}],"class":"function","name":"setField","description":" Sets a specific field in the matrix"},"scaleTranslation":{"realm":"shared","params":[{"name":"num","description":"Amount to scale by"}],"class":"function","name":"scaleTranslation","description":" Scales the absolute translation"}},"libtbl":["vmatrix_methods","vmatrix_meta"],"realm":"shared","class":"type","name":"VMatrix","description":" VMatrix type"},"ParticleEffect":{"methods":{"setSortOrigin":{"realm":"client","params":[{"name":"vector","description":"Sort Origin"}],"class":"function","name":"setSortOrigin","description":" Sets the sort origin for given particle effect system. This is used as a helper to determine which particles are in front of which."},"restart":{"description":" Restarts emission of the particle effect.","class":"function","name":"restart","realm":"client"},"stopEmission":{"description":" Stops emission of the particle effect.","class":"function","name":"stopEmission","realm":"client"},"setControlPointEntity":{"realm":"client","params":[{"name":"number","description":"Child Control Point ID (0-63)"},{"name":"entity","description":"Entity parent"}],"class":"function","name":"setControlPointEntity","description":" Essentially makes child control point follow the parent entity."},"isFinished":{"returns":["bool finished"],"realm":"client","class":"function","name":"isFinished","description":" Restarts emission of the particle effect."},"setControlPointParent":{"realm":"client","params":[{"name":"number","description":"Child Control Point ID (0-63)"},{"name":"number","description":"Parent"}],"class":"function","name":"setControlPointParent","description":" Sets the forward direction for given control point."},"setControlPoint":{"realm":"client","params":[{"name":"number","description":"Control Point ID (0-63)"},{"name":"vector","description":"Value"}],"class":"function","name":"setControlPoint","description":" Sets a value for given control point."},"setUpVector":{"realm":"client","params":[{"name":"number","description":"Control Point ID (0-63)"},{"name":"vector","description":"Right"}],"class":"function","name":"setUpVector","description":" Sets the right direction for given control point."},"destroy":{"description":" Stops emission of the particle effect and destroys the object.","class":"function","name":"destroy","realm":"client"},"setForwardVector":{"realm":"client","params":[{"name":"number","description":"Control Point ID (0-63)"},{"name":"vector","description":"Forward"}],"class":"function","name":"setForwardVector","description":" Sets the forward direction for given control point."},"startEmission":{"description":" Starts emission of the particle effect.","class":"function","name":"startEmission","realm":"client"},"setRightVector":{"realm":"client","params":[{"name":"number","description":"Control Point ID (0-63)"},{"name":"vector","description":"Right"}],"class":"function","name":"setRightVector","description":" Sets the right direction for given control point."},"isValid":{"returns":["Is valid or not"],"realm":"client","class":"function","name":"isValid","description":" Gets if the particle effect is valid or not."}},"libtbl":["particleef_methods"],"realm":"client","class":"type","name":"ParticleEffect","description":" ParticleEffect type"},"Markup":{"methods":{"getSize":{"returns":["number The width of the object","number The height of the object"],"realm":"client","class":"function","name":"getSize","description":" Get the object size"},"draw":{"realm":"client","params":[{"name":"x","description":"number The x offset"},{"name":"y","description":"number The x offset"},{"name":"xalign","description":"number The x TEXT_ALIGN (default TEXT_ALIGN.LEFT)"},{"name":"yalign","description":"number The y TEXT_ALIGN (default TEXT_ALIGN.TOP)"},{"name":"a","description":"number The alpha to draw it with. (default 255)"}],"class":"function","name":"draw","description":" Draw the markup object"},"getWidth":{"returns":["number The width of the object"],"realm":"client","class":"function","name":"getWidth","description":" Get the object width"},"getHeight":{"returns":["number The height of the object"],"realm":"client","class":"function","name":"getHeight","description":" Get the object height"}},"libtbl":["markup_methods"],"realm":"client","class":"type","name":"Markup","description":" The Markup type is used to easily format and draw text. Use render.parseMarkup(str, maxwidth) to create one."},"File":{"methods":{"write":{"realm":"client","params":[{"name":"str","description":"The data to write"}],"class":"function","name":"write","description":" Writes a string to the file and advances the file position"},"read":{"returns":["The data"],"realm":"client","params":[{"name":"n","description":"The length to read"}],"class":"function","name":"read","description":" Reads a certain length of the file's bytes"},"writeFloat":{"realm":"client","params":[{"name":"x","description":"The float to write"}],"class":"function","name":"writeFloat","description":" Writes a float and advances the file position"},"seek":{"realm":"client","params":[{"name":"n","description":"The position to set it to"}],"class":"function","name":"seek","description":" Sets the file position"},"writeLong":{"realm":"client","params":[{"name":"x","description":"The long to write"}],"class":"function","name":"writeLong","description":" Writes a long and advances the file position"},"flush":{"description":" Wait until all changes to the file are complete","class":"function","name":"flush","realm":"client"},"writeDouble":{"realm":"client","params":[{"name":"x","description":"The double to write"}],"class":"function","name":"writeDouble","description":" Writes a double and advances the file position"},"readLine":{"returns":["The data"],"realm":"client","class":"function","name":"readLine","description":" Reads a line and advances the file position"},"readBool":{"returns":["The data"],"realm":"client","class":"function","name":"readBool","description":" Reads a boolean and advances the file position"},"writeBool":{"realm":"client","params":[{"name":"x","description":"The boolean to write"}],"class":"function","name":"writeBool","description":" Writes a boolean and advances the file position"},"readByte":{"returns":["The data"],"realm":"client","class":"function","name":"readByte","description":" Reads a byte and advances the file position"},"readFloat":{"returns":["The data"],"realm":"client","class":"function","name":"readFloat","description":" Reads a float and advances the file position"},"writeByte":{"realm":"client","params":[{"name":"x","description":"The byte to write"}],"class":"function","name":"writeByte","description":" Writes a byte and advances the file position"},"readLong":{"returns":["The data"],"realm":"client","class":"function","name":"readLong","description":" Reads a long and advances the file position"},"readDouble":{"returns":["The data"],"realm":"client","class":"function","name":"readDouble","description":" Reads a double and advances the file position"},"close":{"description":" Flushes and closes the file. The file must be opened again to use a new file object.","class":"function","name":"close","realm":"client"},"skip":{"returns":["The resulting position"],"realm":"client","params":[{"name":"n","description":"How much to move the position"}],"class":"function","name":"skip","description":" Moves the file position relative to its current position"},"writeShort":{"realm":"client","params":[{"name":"x","description":"The short to write"}],"class":"function","name":"writeShort","description":" Writes a short and advances the file position"},"tell":{"returns":["The current file position"],"realm":"client","class":"function","name":"tell","description":" Returns the current file position"},"readShort":{"returns":["The data"],"realm":"client","class":"function","name":"readShort","description":" Reads a short and advances the file position"},"size":{"returns":["The file's size"],"realm":"client","class":"function","name":"size","description":" Returns the file's size in bytes"}},"libtbl":["file_methods"],"realm":"client","class":"type","name":"File","description":" File type"},"Color":{"methods":{"setB":{"returns":["The modified color"],"realm":"shared","params":[{"name":"b","description":"The blue"}],"class":"function","name":"setB","description":" Set's the color's blue and returns it."},"__mul":{"returns":["Scaled color."],"realm":"shared","params":[{"name":"b","description":"Number or Color to multiply by"}],"class":"function","name":"__mul","description":" multiplication metamethod"},"setG":{"returns":["The modified color"],"realm":"shared","params":[{"name":"g","description":"The green"}],"class":"function","name":"setG","description":" Set's the color's green and returns it."},"__concat":{"description":" __concat metamethod","class":"function","name":"__concat","realm":"shared"},"__sub":{"returns":["Subtracted color."],"realm":"shared","params":[{"name":"lhs","description":"Left side of equation"},{"name":"rhs","description":"Right side of equation"}],"class":"function","name":"__sub","description":" subtraction metamethod"},"__div":{"returns":["Scaled color."],"realm":"shared","params":[{"name":"b","description":"Number or Color to multiply by"}],"class":"function","name":"__div","description":" division metamethod"},"__index":{"description":" __index metamethod","class":"function","name":"__index","realm":"shared"},"set":{"returns":["nil"],"realm":"shared","params":[{"name":"b","description":"The color to copy from."}],"class":"function","name":"set","description":" Copies r,g,b,a from color to another."},"rgbToHSV":{"returns":["A triplet of numbers representing HSV."],"realm":"shared","class":"function","name":"rgbToHSV","description":" Converts the color from RGB to HSV."},"setA":{"returns":["The modified color"],"realm":"shared","params":[{"name":"a","description":"The alpha"}],"class":"function","name":"setA","description":" Set's the color's alpha and returns it."},"__newindex":{"description":" __newindex metamethod","class":"function","name":"__newindex","realm":"shared"},"hsvToRGB":{"returns":["A triplet of numbers representing HSV."],"realm":"shared","class":"function","name":"hsvToRGB","description":" Converts the color from HSV to RGB."},"__add":{"returns":["Added color."],"realm":"shared","params":[{"name":"lhs","description":"Left side of equation"},{"name":"rhs","description":"Right side of equation"}],"class":"function","name":"__add","description":" addition metamethod"},"__eq":{"description":" __eq metamethod","class":"function","name":"__eq","realm":"shared"},"__tostring":{"description":" __tostring metamethod","class":"function","name":"__tostring","realm":"shared"},"round":{"returns":["nil"],"realm":"shared","params":[{"name":"idp","description":"(Default 0) The integer decimal place to round to. "}],"class":"function","name":"round","description":" Round the color values. Self-Modifies."},"setR":{"returns":["The modified color"],"realm":"shared","params":[{"name":"r","description":"The red"}],"class":"function","name":"setR","description":" Set's the color's red channel and returns it."},"clone":{"returns":["The copy of the color"],"realm":"shared","class":"function","name":"clone","description":" Copies r,g,b,a from color and returns a new color"}},"libtbl":["color_methods","color_meta"],"realm":"shared","class":"type","name":"Color","description":" Color type"},"SurfaceInfo":{"methods":{"getMaterial":{"returns":["In SERVER, the material name, and in CLIENT, the Material object."],"realm":"shared","class":"function","name":"getMaterial","description":" Returns the brush surface's material."},"isWater":{"returns":["Returns true if the surface is water."],"realm":"shared","class":"function","name":"isWater","description":" Checks if the brush surface is water.\n This internally checks the SURFDRAW_WATER flag."},"getVertices":{"returns":["A list of Vector points. This will usually be 4 corners of a quadrilateral in counter-clockwise order."],"realm":"shared","class":"function","name":"getVertices","description":" Returns a list of vertices the brush surface is built from."},"isNoDraw":{"returns":["Returns true if this surface won't be drawn."],"realm":"shared","class":"function","name":"isNoDraw","description":" Checks if the brush surface is a nodraw surface, meaning it will not be drawn by the engine.\n This internally checks the SURFDRAW_NODRAW flag."},"isSky":{"returns":["Returns true if the surface is the sky."],"realm":"shared","class":"function","name":"isSky","description":" Checks if the brush surface is displaying the skybox.\n This internally checks the SURFDRAW_SKY flag."}},"libtbl":["surfaceinfo_methods","surfaceinfo_meta"],"realm":"shared","class":"type","name":"SurfaceInfo","description":" SurfaceInfo type"},"Wirelink":{"methods":{"isWired":{"realm":"server","params":[{"name":"name","description":"Name of the input to check"}],"class":"function","name":"isWired","description":" Checks if an input is wired."},"entity":{"description":" Returns the entity that the wirelink represents","class":"function","name":"entity","realm":"server"},"getWiredToName":{"returns":["String name of the output that the input is wired to."],"realm":"server","params":[{"name":"name","description":"Name of the input of the wirelink."}],"class":"function","name":"getWiredToName","description":" Returns the name of the output an input of the wirelink is wired to."},"outputs":{"description":" Returns a table of all of the wirelink's outputs","class":"function","name":"outputs","realm":"server"},"__newindex":{"description":" Writes to an input.","class":"function","name":"__newindex","realm":"server"},"inputType":{"description":" Returns the type of input name, or nil if it doesn't exist","class":"function","name":"inputType","realm":"server"},"outputType":{"description":" Returns the type of output name, or nil if it doesn't exist","class":"function","name":"outputType","realm":"server"},"getWiredTo":{"returns":["The entity the wirelink is wired to"],"realm":"server","params":[{"name":"name","description":"Name of the input"}],"class":"function","name":"getWiredTo","description":" Returns what an input of the wirelink is wired to."},"isValid":{"description":" Checks if a wirelink is valid. (ie. doesn't point to an invalid entity)","class":"function","name":"isValid","realm":"server"},"inputs":{"description":" Returns a table of all of the wirelink's inputs","class":"function","name":"inputs","realm":"server"},"__index":{"description":" Retrieves an output. Returns nil if the output doesn't exist.","class":"function","name":"__index","realm":"server"}},"libtbl":["wirelink_methods","wirelink_meta"],"realm":"server","class":"type","name":"Wirelink","description":" Wirelink type"},"Bass":{"methods":{"stop":{"description":" Stops playing the sound.","class":"function","name":"stop","realm":"client"},"getLevels":{"returns":["The left sound level, a value between 0 and 1.","The right sound level, a value between 0 and 1."],"realm":"client","class":"function","name":"getLevels","description":" Gets the left and right levels of the audio channel"},"setFade":{"realm":"client","params":[{"name":"min","description":"The channel's volume is at maximum when the listener is within this distance"},{"name":"max","description":"The channel's volume stops decreasing when the listener is beyond this distance."}],"class":"function","name":"setFade","description":" Sets the fade distance of the sound in 3D space. Must have `3d` flag to get this work on."},"getLength":{"returns":["Sound channel length in seconds."],"realm":"client","class":"function","name":"getLength","description":" Gets the length of a sound channel."},"pause":{"description":" Pauses the sound.","class":"function","name":"pause","realm":"client"},"setLooping":{"realm":"client","params":[{"name":"loop","description":"Boolean of whether the sound channel should loop."}],"class":"function","name":"setLooping","description":" Sets whether the sound channel should loop. Requires the 'noblock' flag"},"play":{"description":" Starts to play the sound.","class":"function","name":"play","realm":"client"},"destroy":{"description":" Removes the sound from the game so new one can be created if limit is reached","class":"function","name":"destroy","realm":"client"},"setPitch":{"realm":"client","params":[{"name":"pitch","description":"Pitch to set to, between 0 and 100. 1 is normal pitch."}],"class":"function","name":"setPitch","description":" Sets the pitch of the sound channel."},"getFFT":{"returns":["Table containing DFT magnitudes, each between 0 and 1."],"realm":"client","params":[{"name":"n","description":"Number of consecutive audio samples, between 0 and 7. Depending on this parameter you will get 256*2^n samples."}],"class":"function","name":"getFFT","description":" Perform fast Fourier transform algorithm to compute the DFT of the sound channel."},"setVolume":{"realm":"client","params":[{"name":"vol","description":"Volume multiplier (1 is normal), between 0x and 10x."}],"class":"function","name":"setVolume","description":" Sets the volume of the sound channel."},"getTime":{"returns":["Sound channel playback time in seconds."],"realm":"client","class":"function","name":"getTime","description":" Gets the current playback time of the sound channel. Requires the 'noblock' flag"},"setTime":{"realm":"client","params":[{"name":"time","description":"Sound channel playback time in seconds."}],"class":"function","name":"setTime","description":" Sets the current playback time of the sound channel. Requires the 'noblock' flag"},"setPos":{"realm":"client","params":[{"name":"pos","description":"Where to position the sound."}],"class":"function","name":"setPos","description":" Sets the position of the sound in 3D space. Must have `3d` flag to get this work on."},"isOnline":{"returns":["Boolean of whether the sound channel is streamed online."],"realm":"client","class":"function","name":"isOnline","description":" Gets whether the sound channel is streamed online."},"isValid":{"returns":["Boolean of whether the bass is valid."],"realm":"client","class":"function","name":"isValid","description":" Gets whether the bass is valid."}},"libtbl":["bass_methods"],"realm":"client","class":"type","name":"Bass","description":" For playing music there is `Bass` type. You can pause and set current playback time in it. If you're looking to apply DSP effects on present game sounds, use `Sound` instead."}}}