{"examples":{"coroutine.lua":"--@name Coroutine Example\n--@author Radon\n--@server\n\n-- Some functions for checking our quota usage.\nlocal function checkQ (n)\n\treturn quotaAverage() < quotaMax()*n\nend\n\n-- Check if we should yield\nlocal function yieldCheck ()\n\tif not checkQ(0.95) then\n\t\tcoroutine.yield()\n\tend\nend\n\n-- Create the coroutine\n-- The Function here is \"Sieve of Eratosthenes\" and is used to find Primes up to a given integer.\nlocal erato = coroutine.create(function (n)\n\tlocal time = timer.systime()\n\tif n < 2 then return {} end\n\tlocal t = {}\n\tlocal sqrtlmt = math.sqrt(n)\n\n\tfor i = 2, sqrtlmt do\n\t\tif not t[i] then\n\t\t\tfor j = i * i, n, i do\n\t\t\t\t-- Because we're in a for loop, best make sure we check to yield.\n\t\t\t\tyieldCheck()\n\t\t\t\tt[j] = true\n\t\t\tend\n\t\tend\n\tend\n\n\tlocal primes = {}\n\tfor i = 2, n do\n\t\t-- Because we're in a for loop, best make sure we check to yield.\n\t\tyieldCheck()\n\t\tif not t[i] then\n\t\t\tprimes[#primes + 1] = i\n\t\tend\n\tend\n\n\t-- Finally we want to return our table of primes we've generated.\n\t-- Therefore we yield but pass it the table to yield back.\n\tprint((timer.systime() - time) .. \" seconds to complete\")\n\treturn primes\nend)\n\nhook.add(\"think\", \"primeNumbers\", function ()\n\t-- If the coroutine hasn't died, then we need to start it or resume it.\n\tif coroutine.status(erato) ~= \"dead\" then\n\t\t-- Make sure we're sufficiently below quota to resume\n\t\tif checkQ(0.8) then\n\t\t\t-- r will be nil until the final yield which gives us our primes.\n\t\t\t-- This will start / resume the coroutine.\n\t\t\tlocal r = coroutine.resume(erato, 50000)\n\n\t\t\t-- Therefore we check if it's not nil, and print the highest prime.\n\t\t\tif r then\n\t\t\t\tprint(\"Highest prime: \" .. r[#r])\n\n\t\t\t\t-- Since we've finished calculating all our primes, remove our think hook.\n\t\t\t\thook.remove(\"think\", \"primeNumbers\")\n\t\t\tend\n\t\tend\n\tend\nend)\n","helloworld.lua":"--@name Hello World\n--@author INP\n\nprint(\"Hello World!\")\n","include.lua":"--@name Include\n--@author INP\n--@include examples/processor/lib/included.txt\n\nlocal value = require(\"examples/processor/lib/included.txt\") -- Note the include above\nprintHelloWorld() -- Call global function from included file\nprint(value) -- Print returned value\n","fireplace.lua":"--@name Fireplace\n--@author INP - Radon\n\nif SERVER then return end\n\n-- Credits to Natty for original fireplace idea as an example\n-- Credits to funkake for working out the kinks\n\n-- We'll call Particle as our constructor\nlocal Particle = class(\"Particle\")\n\n-- Let's add our constructor definition\nfunction Particle:initialize (x, y, scale, xv, yv, clr)\n\t-- Just standard assignment, we want to make sure we get all the properties.\n\t-- If one of the params is nil, then the default value, 0, will be assigned.\n\tself.x = x or 0\n\tself.y = y or 0\n\tself.scale = scale or 0\n\tself.x_vel = xv or 0\n\tself.y_vel = yv or 0\n\tself.color = clr or Color(0, 0, 0)\nend\n\n-- A think method, we'll use this to change particle states.\nfunction Particle:think ()\n\t-- We draw first, then change state.\n\n\tself:draw()\n\n\tself.x = self.x + self.x_vel\n\tself.y = self.y + self.y_vel\n\n\tself.y_vel = self.y_vel - math.random(0, 0.04)\n\n\tself.color.a = self.color.a - math.random(1.5, 3)\n\n\tlocal c = self.color.g - math.random(0.65, 0.95)\n\tself.color.g = c > 0 and c or 0\n\n\tlocal c = self.color.r + math.random(0.4, 0.6)\n\tself.color.r = c < 255 and c or 255\n\n\tself.scale = self.scale - math.random(0.20, 0.30)\nend\n\n-- draw method so that each pixel can be drawn by itself.\nfunction Particle:draw ()\n\trender.setColor(self.color)\n\trender.drawRect(self.x + 512, self.y + 780, self.scale, self.scale)\nend\n\n-- Little table to store some information about the display.\nlocal game = {}\ngame.particles = {}\n\n-- Timers, we'll use these to spawn new particles and to draw our current ones.\n-- This helps us keep constant time when rendering.\nlocal t = timer.systime()\nlocal t2 = timer.systime()\n\nrender.createRenderTarget(\"fireplace\")\n\nhook.add(\"render\", \"\", function ()\n render.setRenderTargetTexture(\"fireplace\")\n render.drawTexturedRect(0,0,512,512)\n\n render.selectRenderTarget(\"fireplace\")\n\tif timer.systime() > t then\n\t\tfor i = 1, math.random(4, 10) do\n\n\t\t\t-- Make a new particle using our constructor.\n\t\t\tlocal nP = Particle:new(math.random(-512, 512),\n\t\t\t\tmath.random(-64, 32),\n\t\t\t\tmath.random(40, 80),\n\t\t\t\tmath.random() * 5 - 2,\n\t\t\t\t-math.random() * 3,\n\t\t\t\tColor(math.random(200, 230), math.random(100, 130), 0, math.random(120, 255)))\n\n\t\t\t-- Add our newly made particle to a table of game particles\n\t\t\ttable.insert(game.particles, nP)\n\n\t\tend\n\n\t\t-- Increase our timer for our next spawn time.\n\t\tt = timer.systime() + (1 / 20)\n\tend\n\n\tif timer.systime() > t2 then\n\n\t\tgame.relVel = chip():worldToLocal(chip():getPos() + chip():getVelocity())\n\n\t\t-- Clear the board before rendering anything new\n\t\trender.clear(Color(5, 5, 16))\n\n\t\tfor k, v in pairs(game.particles) do\n\t\t\t-- Now iterate over all our particles and check if they should be removed.\n\t\t\tif v.color.a <= 0 then table.remove(game.particles, k) continue end\n\n\t\t\t-- This is responsible for moving our flames if we shake our screen.\n\t\t\t-- Moves sprites based upon their scale.\n\t\t\tv.x_vel = v.x_vel - (game.relVel.y * (1 / 5000) * (80 / v.scale))\n\t\t\tv.y_vel = v.y_vel - (game.relVel.x * (1 / 2000) * (80 / v.scale))\n\n\t\t\t-- We only need to think.\n\t\t\t-- Our function draws before thinking, so we're fine.\n\t\t\tv:think()\n\t\tend\n\n\t\t-- Increase our timer for our next draw time.\n\t\tt2 = timer.systime() + (1 / 120)\n\tend\n render.selectRenderTarget()\nend)\n","screenhelloworld.lua":"--@name Hello World\n--@author INP\n--@client\n\nlocal font = render.createFont(\"Default\", 30)\n\nhook.add(\"render\", \"helloworld_render\", function ()\n\trender.setColor(Color(255, 0, 0, 255)) -- Set colour to red, the alpha argument is optional and will default to 255\n\trender.setFont(font) -- \"Activate\" font\n\trender.drawText(20, 20, \"Hello World!\") -- Draw text at 20, 20\nend)\n","sync.lua":"--@name Sync\n--@author INP\n\nif SERVER then\n\t-- Code only executed on the server\n\tlocal randomNumber = math.random(0, 100)\n\n\tnet.receive(\"request\", function (len, ply)\n\t\t-- ply being the client that sent the net message\n\n\t\t-- A client is asking for the number\n\t\t-- Send it to the client\n\t\tnet.start(\"number\")\n\t\t\t-- UInt means that the number is an unsigned integer\n\t\t\t-- 7 is the amount of bits to use for the transmission\n\t\t\tnet.writeUInt(randomNumber, 7)\n\t\tnet.send(ply)\n\tend)\nelse\n\t-- Code only executed on the client\n\tlocal randomNumber\n\n\tlocal font = render.createFont(\"Default\", 62)\n\n\t-- Send a request for the number to the server\n\tnet.start(\"request\")\n\tnet.send()\n\n\tnet.receive(\"number\", function (len)\n\t\t-- No client argument, since it can only come from the server\n\t\t-- The server is sending us the number\n\t\trandomNumber = net.readUInt(7)\n\tend)\n\n\t-- The render hook is called every frame the client requires the screen to be rendered\n\t-- If the client has 120 FPS then this hook will be called 120 in a second.\n\thook.add(\"render\", \"renderHook\", function ()\n\t\tif randomNumber then\n\t\t\trender.setColor(Color(0, 255, 255, 255))\n\t\t\trender.setFont(font)\n\t\t\trender.drawText(20, 20, tostring(randomNumber))\n\t\tend\n\tend)\nend\n","simple_moving_hologram.lua":"--@name Simple Moving Hologram\n--@author Name\n--@shared\n\n\n// only do stuff on the serverside, we could also change --@shared to --@server\nif SERVER then\n    \n    // Note that everything we do here works like if(first()) on expression 2, later in the code we'll add so-called hooks or timers that refresh our code\n    // so everything written here line defining chip (its like entity()) in E2 is executed only once, but unlike in E2 we don't have to add it to @persist\n    // each definition here will be remembered through-out the whole code, we can also do 'local variable' without the equal sign and any value provided\n    // to just make space for this variable and set it later\n    \n    // assign our chip entity to 'c'\n    local c = chip()\n    \n    // define our holo and assign it to variable 'holo'\n    // at position of our entity, angle 0,0,0, with model of default E2 holo cube and scale 1.2\n    local holo = holograms.create(c:getPos(), Angle(), \"models/holograms/cube.mdl\", Vector(1.2))\n    \n    // now lets change the hologram color so its not boring-white\n    holo:setColor(Color(128,0,255)) // i just realised the model is a cube and color wont make it super-fun suddenly, shut up you\n    \n    // parent our hologram to the chip\n    holo:setParent(c)\n    \n    // set our hologram angle velocity to 0,100,0\n    // NOTE: this isnt using any cpu time, this is constant velocity, we set it only once you can do same with position as well (very good for constantly rotating stuff without using resources)\n    holo:setAngVel(Angle(0,100,0))\n    \n    // lets define a simple function to update our holo\n    local function myFunc()\n        \n        // you have different libraries like timer math and so on\n        // but function names are very simmilar to those in E2\n        // find all the libraries in the helper or on Gmod wiki\n        \n        // using the timer library, we're getting a current time (single number), lets multiply it so its a bit faster\n        local curtime = timer.curtime()*2\n        \n        // using the math library we're using trigonometric function sinus (you are probably familiar with it already) and we pass in curtime\n        // we're also multiplying this by 30 so it will move -30 to 30 G-Units\n        local sin = math.sin(curtime)*30\n        \n        // now lets set position of our hologram to our chip pos (defined as 'c') + the sin we've created in the Y direction\n        holo:setPos(c:getPos() + Vector(0,sin,0))\n        \n    end\n    \n    \n    // we're now creating our hook, its basically equivelent of some way to refresh E2\n    // you can find different hooks like PlayerSay KeyPress and others in the SF Helper (top right corner)\n    // this one (think) will execute every physics update, to simplify its basically a runOnTick(1) and don't worry to use that in Starfall\n    // we also define a name (its required but can be and empty string) so we can delete it later\n    // we pass the function we've previously created, it will be executed when hook fires\n    hook.add(\"tick\", \"custom_name\", myFunc)\n    \n    \n    \n    \n    // this is the simplest timer possible it will execute only once and remove itself, you can do more complex timers using timer.create(name, delay, repeats (0 - inf, func)\n    // we're also gonna pass anonymous function, its just like a normal function we've created earlier to update our holo, but we can just write it in-line and we dont need to give it a name\n    // also timer delays are in seconds\n    timer.simple(3, function()\n        \n        // lets now remove our update hook so it will no longer move using our sin\n        hook.remove(\"tick\", \"custom_name\")\n        \n        // lets create a more complex timer now using timer.create() instead of timer.simple(), also with in-line function\n        // i specify the name, delay and how many times to repeat, then function in which i write what to do on execution\n        timer.create(\"lololo\", 0.5, 6, function()\n            \n            // lets just move our holo up every 0.5s, 6 times total, whatever\n            \n            // getting position of my hologram, then getting it's up direction multiplied by 10\n            holo:setPos(holo:getPos() + holo:getUp()*10)\n            \n        end)\n        \n    end) // dont forget this bracket here, since we're ending timer.simple()\n    \n    \nend\n","included.lua":"-- This file gets included in the include example\n\nfunction printHelloWorld () -- Define a global function\n\tprint(\"Hello World!\")\nend\n\nreturn 5 -- Return a value\n","mesh_bumpmap.lua":"--@name Bumpmap Sphere\n--@author Sparky\n--@shared\n\nlocal holo\nif SERVER then\n\n\tholo = holograms.create(chip():getPos()+Vector(0,0,50), chip():getAngles(), \"models/Combine_Helicopter/helicopter_bomb01.mdl\")\n\tholo:setScale(Vector(0.1, 0.1, 0.1))\n\tholo:setParent(chip())\n\n\thook.add(\"net\",\"\",function(name, len, pl)\n\t\tnet.start(\"\")\n\t\tnet.writeEntity(holo)\n\t\tnet.send(pl)\n\tend)\n\nelse\n\n\tlocal sphere\n\tlocal mat = material.create(\"VertexLitGeneric\")\n\tmat:setInt(\"$flags\",138414080)\n\tmat:setTexture(\"$basetexture\", \"hunter/myplastic\")\n\tmat:setTexture(\"$bumpmap\", \"hunter/myplastic_normal\")\n\tmat:setTexture(\"$envmap\", \"env_cubemap\")\n\n\tmat:setFloat(\"$envmapcontrast\", 1)\n\tmat:setFloat(\"$envmapsaturation\", 0.20000000298023)\n\tmat:setVector(\"$envmaptint\", Vector(0.006585, 0.006585, 0.006585))\n\n\tmat:setInt(\"$phong\", 1)\n\tmat:setFloat(\"$phongalbedotint\", 0)\n\tmat:setFloat(\"$phongboost\", 2)\n\tmat:setFloat(\"$phongexponent\", 60)\n\tmat:setVector(\"$phongfresnelranges\", Vector(0.219520, 0.612066, 1.000000))\n\n\tnet.start(\"\")\n\tnet.send()\n\n\tlocal function init()\n\t\tif holo and sphere then\n\t\t\tholo:setMesh(sphere)\n\t\t\tholo:setMeshMaterial(mat)\n\t\t\tholo:setRenderBounds(Vector(-200),Vector(200))\n\t\tend\n\tend\n\n\thook.add(\"net\",\"\",function(name, len, pl)\n\t\tholo = net.readEntity():toHologram()\n\t\tinit()\n\tend)\n\n\thttp.get(\"https://dl.dropboxusercontent.com/s/vdcb9ujr7qslg51/sphere.obj\",function(data)\n\t\tsphere = mesh.createFromObj(data)\n\t\tinit()\n\tend)\nend\n","mesh_3d.lua":"--@name Renamon\n--@author Sparky\n--@client\n\nlocal holo = holograms.create(chip():getPos(), chip():getAngles(), \"models/Combine_Helicopter/helicopter_bomb01.mdl\")\nholo:setParent(chip())\n\nlocal textureloaded, mymesh\nlocal texture = material.create(\"VertexLitGeneric\")\nlocal screentexture = material.create(\"UnlitGeneric\")\nscreentexture:setInt(\"$flags\",48)\nrender.createRenderTarget(\"mesh\")\n\n-- Renders the mesh using a HUD\nlocal function renderHUD()\n\trender.pushMatrix(chip():getMatrix(),true)\n\trender.enableDepth(true)\n\trender.setMaterial(texture)\n\tmymesh:draw()\n\trender.popMatrix()\nend\n\n-- Render the mesh using a screen\nlocal function renderScreen()\n\trender.selectRenderTarget(\"mesh\")\n\trender.pushViewMatrix({type=\"3D\", x=0, y=0, w=1024, h=1024, origin=Vector(-50,50,0), angles = Angle(0,0,0), aspect=1})\n\tlocal rotation = Matrix()\n\trotation:rotate(Angle(timer.curtime()*10,0,0))\n\trender.pushMatrix(rotation, true)\n\trender.clear(Color(0,0,0,0),true)\n\trender.enableDepth(true)\n\trender.setTexture(screentexture)\n\tmymesh:draw()\n\trender.popMatrix()\n\trender.popViewMatrix()\n\trender.selectRenderTarget()\n\n\trender.enableDepth(false)\n\trender.setRenderTargetTexture(\"mesh\")\n\trender.drawTexturedRect(0,0,512,512)\nend\n\ntexture:setTextureURL(\"$basetexture\", \"https://dl.dropboxusercontent.com/s/79nhlngkvydv85f/renamon.png\")\nscreentexture:setTexture(\"$basetexture\", texture:getTexture(\"$basetexture\"))\n\nhttp.get(\"https://dl.dropboxusercontent.com/s/cwob1j0nka0ko2e/renamon.obj\",function(objdata)\n\tlocal triangles = mesh.trianglesLeft()\n\n\tlocal function doneLoadingMesh()\n\t\tprint(\"Used \"..(triangles - mesh.trianglesLeft())..\" triangles.\")\n\t\tholo:setMesh(mymesh)\n\t\tholo:setMeshMaterial(texture)\n\t\tholo:setRenderBounds(Vector(-200),Vector(200))\n\t\t\n\t\thook.add(\"postdrawopaquerenderables\",\"mesh\",renderHUD)\n\t\thook.add(\"render\",\"mesh\",renderScreen)\n\tend\n\n\tlocal thread = coroutine.create(function() mymesh = mesh.createFromObj(objdata, true) end)\n\thook.add(\"think\",\"loadingMesh\",function()\n\t\twhile coroutine.status(thread)~=\"dead\" and quotaAverage()<quotaMax()/2 do\n\t\t\tcoroutine.resume(thread)\n\t\tend\n\t\tif coroutine.status(thread)==\"dead\" then\n\t\t\tdoneLoadingMesh()\n\t\t\thook.remove(\"think\",\"loadingMesh\")\n\t\tend\n\tend)\nend)\n","console.lua":"--@name Console\n--@author Sparky\n--@server\n\nwire.adjustInputs({ \"Keyboard\", \"Console\" }, { \"Wirelink\", \"Wirelink\" })\n\nhook.add(\"input\", \"getwirelinks\", function(name, val)\n\tif name == \"Console\" then\n\t\tConsole = val\n\telseif name == \"Keyboard\" then\n\t\tKeyboard = val\n\tend\nend)\n\nlocal ConsolePos = 0\nlocal ConsoleRow = 0\nlocal ConsoleInit = false\n\nlocal function updateCursor()\n\tConsole[2045] = ConsolePos\n\tConsole[2046] = 1\nend\nlocal function cls()\n\tConsole[2041] = 1\n\tConsolePos = 0\n\tConsoleRow = 0\n\tupdateCursor()\nend\nlocal cincb, cinstart\nlocal function scrollScreen(amount)\n\tConsole[2038] = amount\n\tcinstart = cinstart - 60\nend\nlocal function cout(str, color)\n\tfor I = 1, #str do\n\t\tif str[I] == \"\\n\" then\n\t\t\tif ConsoleRow >= 17 then\n\t\t\t\tscrollScreen(1)\n\t\t\t\tConsolePos = ConsolePos - ConsolePos%60\n\t\t\telse\n\t\t\t\tlocal lastpos = ConsolePos - 2\n\t\t\t\tConsolePos = lastpos + 60 - lastpos%60\n\t\t\t\tConsoleRow = ConsoleRow + 1\n\t\t\tend\n\t\telse\n\t\t\tConsole[ConsolePos] = str:byte(I)\n\t\t\tConsole[ConsolePos + 1] = color or 999\n\t\t\tConsolePos = ConsolePos + 2\n\n\t\t\tlocal newline = ConsolePos%60 == 0\n\n\t\t\tif newline then\n\t\t\t\tif ConsoleRow >= 17 then\n\t\t\t\t\tscrollScreen(1)\n\t\t\t\t\tConsolePos = ConsolePos - 60\n\t\t\t\telse\n\t\t\t\t\tConsoleRow = ConsoleRow + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\tupdateCursor()\nend\nlocal function cin(cb)\n\tcinstart = ConsolePos\n\tcincb = cb\nend\nlocal function getcin()\n\tlocal chars = {}\n\tfor I = cinstart, ConsolePos-2, 2 do\n\t\tchars[#chars + 1] = string.char(Console[I])\n\tend\n\treturn table.concat(chars)\nend\n\nkey_funcs = {\n\t[127] = function()\n\t\tConsolePos = math.max(ConsolePos - 2, cinstart)\n\n\t\tif ConsolePos%60 == 0 then\n\t\t\tConsoleRow = ConsoleRow - 1\n\t\tend\n\n\t\tConsole[ConsolePos] = 0\n\t\tupdateCursor()\n\tend,\n\n\t[13] = function()\n\t\tif cincb then\n\t\t\tlocal str = getcin()\n\t\t\tcout(\"\\n\")\n\t\t\tcincb(str)\n\t\t\tcincb = nil\n\t\tend\n\tend\n}\nkey_funcs[10] = key_funcs[13]\nkey_funcs[142] = key_funcs[13]\n\nlocal function main_loop()\n\tif not Keyboard or not Console then\n\t\tInitialized = false\n\telse\n\t\tif not Initialized then\n\t\t\tInitialized = true\n\t\t\tcls()\n\t\t\tmain()\n\t\tend\n\t\twhile Keyboard[0] > 0 do\n\t\t\tlocal keycode = Keyboard[1]\n\t\t\tif cincb then\n\t\t\t\tif key_funcs[keycode] then\n\t\t\t\t\tkey_funcs[keycode]()\n\t\t\t\telseif keycode > 31 and keycode < 127 then\n\t\t\t\t\tcout(string.char(keycode))\n\t\t\t\t\tupdateCursor()\n\t\t\t\tend\n\t\t\tend\n\n\t\t\tKeyboard[0] = 0\n\t\tend\n\tend\nend\nhook.add(\"Think\", \"Mainloop\", main_loop)\n\nfunction main()\n\tcout(\"Type hello: \")\n\tcin(function(str)\n\t\tif str == \"hello\" then\n\t\t\tcout(\"Hi!\\n\")\n\t\telse\n\t\t\tcout(\"WRONG!!!\\n\", 800999)\n\t\tend\n\t\ttimer.simple(0, main)\n\tend)\nend\n","eyeBox.lua":"--@name Eyebox\n--@author thegrb93 aka Sparky\n--@shared\n\n-- Place this chip on a box to give it eyes\n\nif SERVER then\n\tlocal weldedTo = chip():isWeldedTo()\n\n\tif weldedTo and weldedTo:getModel():find(\"/wood_crate001a\") then\n\t\thook.add(\"net\",\"\",function(name,len,ply)\n\t\t\tnet.start(\"\")\n\t\t\tnet.writeEntity(weldedTo)\n\t\t\tnet.send(ply)\n\t\tend)\n\telse\n\t\tprint(\"Place this chip on a box to give it eyes\")\n\tend\nelse\n\tlocal ent\n\trender.createRenderTarget(\"rt\")\n\trender.createRenderTarget(\"circle\")\n\n\tlocal box = render.createMaterial(\"models/props_junk/woodcrates01a\")\n\tlocal m = material.create(\"VertexLitGeneric\")\n\tm:setTextureRenderTarget(\"$basetexture\", \"rt\")\n\n\tnet.start(\"\")\n\tnet.send()\n\n\tlocal function getEyes()\n\t\tlocal playerpos = ent:worldToLocal(player():getShootPos())\n\t\tlocal rightdiff = Vector(-7.373, -7.957, 19.722) - playerpos\n\t\tlocal leftdiff = Vector(-7.373, 6.908, 19.722) - playerpos\n\t\tlocal ratio = -15/leftdiff.z\n\t\tlocal x1, y1, x2, y2 = leftdiff.y*ratio, leftdiff.x*ratio, rightdiff.y*ratio, rightdiff.x*ratio\n\t\tlocal len1 = math.sqrt(x1^2 + y1^2)\n\t\tlocal len2 = math.sqrt(x2^2 + y2^2)\n\t\tif len1>20 then x1 = x1*20/len1 y1 = y1*20/len1 end\n\t\tif len2>20 then x2 = x2*20/len2 y2 = y2*20/len2 end\n\t\treturn x1, y1, x2, y2\n\tend\n\n\tlocal function doRender()\n\t\trender.selectRenderTarget(\"rt\")\n\t\trender.setRenderTargetTexture(\"circle\")\n\t\trender.setMaterial(box)\n\t\trender.drawTexturedRect(0,0,1024,1024)\n\n\t\trender.setRenderTargetTexture(\"circle\")\n\t\trender.setColor(Color(0,0,0))\n\t\trender.drawTexturedRect(705,595,110,110)\n\t\trender.drawTexturedRect(855,595,110,110)\n\n\t\trender.setColor(Color(255,255,255))\n\t\trender.drawTexturedRect(710,600,100,100)\n\t\trender.drawTexturedRect(860,600,100,100)\n\n\t\tlocal x1, y1, x2, y2 = getEyes()\n\t\trender.setColor(Color(0,0,0))\n\t\trender.drawTexturedRect(730+x1,620+y1,60,60)\n\t\trender.drawTexturedRect(880+x2,620+y2,60,60)\n\t\trender.selectRenderTarget()\n\tend\n\n\tlocal function initRender()\n\t\trender.selectRenderTarget(\"circle\")\n\t\tlocal poly = {}\n\t\tfor i=1, 360 do\n\t\t\tlocal theta = i*math.pi/180\n\t\t\tpoly[i] = {x=math.cos(theta)*512+512, y=math.sin(theta)*512+512}\n\t\tend\n\t\trender.clear(Color(0,0,0,0))\n\t\trender.drawPoly(poly)\n\t\trender.selectRenderTarget()\n\n\t\thook.remove(\"renderoffscreen\",\"init\")\n\t\thook.add(\"renderoffscreen\",\"go\",doRender)\n\tend\n\thook.add(\"net\",\"\",function()\n\t\tent = net.readEntity()\n\t\tent:setMaterial(\"!\"..m:getName())\n\t\thook.add(\"renderoffscreen\",\"init\",initRender)\n\tend)\nend\n","xinputTest.lua":"--@name XInput Test\n--@author mitterdoo\n--@client\n\n-- Renders a rectangle and colors it based on the bool value of b\nlocal function button(b, x, y, w, h)\n    if b then\n        render.setRGBA(0,255,0,255)\n    else\n        render.setRGBA(255,0,0,255)\n    end\n    render.drawRect(x, y, w, h)\nend\n\nlocal controllerIdx = 0 -- This is the index for the controller to show the input of. It begins at 0\n\nlocal softRumble = 0\nlocal hardRumble = 0\n\nhook.add(\"render\", \"\", function()\n\n    if xinput.getState(controllerIdx) then-- This shows we're connected\n    \n        render.setRGBA(255,255,255,255)\n        render.drawText(0, 0, \"CONTROLLER \" .. controllerIdx .. \" CONNECTED\", 0)\n    \n    end\n    local cx, cy = 100, 200 -- Center of the left dpad\n    local dist = 10 -- Distance between center, and the inside endpoints of the button line\n    local size = 40 -- Length of a dpad button\n    local wide = 10 -- Width of a dpad button\n    local tsize = 100 -- Height of trigger\n    \n    button(xinput.getButton(controllerIdx, 0x1), cx - wide/2, cy - dist - size, wide, size) -- Up\n    button(xinput.getButton(controllerIdx, 0x2), cx - wide/2, cy + dist, wide, size) -- Down\n    button(xinput.getButton(controllerIdx, 0x4), cx - dist - size, cy - wide/2, size, wide) -- Left\n    button(xinput.getButton(controllerIdx, 0x8), cx + dist, cy - wide/2, size, wide) -- Right\n    button(xinput.getButton(controllerIdx, 0x100), cx - dist - size, cy - dist - size - wide, size*2 + dist*2, wide) -- Left shoulder\n    render.setRGBA(255,0,0,255)\n    render.drawRect(cx - dist - size, cy - dist - size - wide*2 - tsize, size*2 + dist*2, tsize) -- Trigger BG\n    \n    render.setRGBA(0,255,0,255)\n    local perc = xinput.getTrigger(controllerIdx, 0) / 255\n    render.drawRect(cx - dist - size, cy - dist - size - wide*2 - tsize*perc, size*2 + dist*2, tsize*perc) -- Left Trigger\n    \n    cx, cy = 300, 200 -- Move centerpoint to right\n    button(xinput.getButton(controllerIdx, 0x8000), cx - wide/2, cy - dist - size, wide, size) -- Y\n    button(xinput.getButton(controllerIdx, 0x1000), cx - wide/2, cy + dist, wide, size) -- A\n    button(xinput.getButton(controllerIdx, 0x4000), cx - dist - size, cy - wide/2, size, wide) -- X\n    button(xinput.getButton(controllerIdx, 0x2000), cx + dist, cy - wide/2, size, wide) -- B\n    button(xinput.getButton(controllerIdx, 0x200), cx - dist - size, cy - dist - size - wide, size*2 + dist*2, wide) -- Right shoulder\n    \n    button(xinput.getButton(controllerIdx, 0x20), 50 + 110, 150, 5, 20) -- Back\n    button(xinput.getButton(controllerIdx, 0x10), 250 - 15, 150, 5, 20) -- Start\n    \n    button(xinput.getButton(controllerIdx, 0x40), 50, 300, 100, 100) -- Left thumb button\n    button(xinput.getButton(controllerIdx, 0x80), 250, 300, 100, 100) -- Right thumb button\n    render.setRGBA(255,0,0,255)\n    render.drawRect(cx - dist - size, cy - dist - size - wide*2 - tsize, size*2 + dist*2, tsize) -- Trigger BG\n    \n    render.setRGBA(0,255,0,255)\n    local perc = xinput.getTrigger(controllerIdx, 1) / 255\n    render.drawRect(cx - dist - size, cy - dist - size - wide*2 - tsize*perc, size*2 + dist*2, tsize*perc) -- Right Trigger\n    \n    render.setRGBA(0,0,0,255)\n    cx, cy = 50+50, 300+50 -- Move centerpoint to below trigger for stick\n    size = 100 -- Width of the stick region\n    local blip = 4 -- Size of the \"blip\" that marks where the stick is located\n    \n    local x, y = xinput.getStick(controllerIdx, 0)\n    render.drawRect(cx + x/65535*size-blip/2, cy + -y/65535*size-blip/2, blip, blip) -- Left stick position\n    \n    cx, cy = 250+50, 300+50 -- Move centerpoint to the right\n    local x, y = xinput.getStick(controllerIdx, 1)\n    render.drawRect(cx + x/65535*size-blip/2, cy + -y/65535*size-blip/2, blip, blip) -- Right stick position\n    \n    \n    local cursor_x, cursor_y = render.cursorPos()\n    local useKey = input.lookupBinding(\"+use\")\n    local held = cursor_x and input.isKeyDown(useKey) -- If cursor_x is nil (player isn't looking at screen), don't bother with slider maths)\n    \n    local bx1, by1, bw, bh = 400, 100, 40, 200\n    local bx2, by2 = bx1 + bw, by1 + bh -- Get the boundary of the slider\n    \n    render.setRGBA(255,0,0,255)\n    render.drawRect(bx1, by1, bw, bh)\n    \n    if held and bx1 <= cursor_x and cursor_x <= bx2 and by1 <= cursor_y and cursor_y <= by2 then -- Checks if the cursor is inside the slider\n        local percent = 1 - (cursor_y - by1) / bh\n        softRumble = percent\n        \n    end\n    \n    render.setRGBA(0,255,0,255)\n    render.drawRect(bx1, by2 - bh*softRumble, bw, bh*softRumble) -- Draws a variable-height rectangle, locked to the bottom\n    \n    bx1, by1, bw, bh = 450, 100, 40, 200\n    bx2, by2 = bx1 + bw, by1 + bh -- Get the boundary of the slider\n    render.setRGBA(255,0,0,255)\n    render.drawRect(bx1, by1, bw, bh)\n    \n    if held and bx1 <= cursor_x and cursor_x <= bx2 and by1 <= cursor_y and cursor_y <= by2 then -- Checks if the cursor is inside the slider\n        local percent = 1 - (cursor_y - by1) / bh\n        hardRumble = percent\n    end\n    \n    render.setRGBA(0,255,0,255)\n    render.drawRect(bx1, by2 - bh*hardRumble, bw, bh*hardRumble) -- Draws a variable-height rectangle, locked to the bottom\n    \n    render.setRGBA(255,255,255,255)\n    render.drawText(420, 110, \"SOFT\", 1)\n    render.drawText(470, 110, \"HARD\", 1)\n    render.drawText(445, 310, \"RUMBLE (PRESS USE)\", 1)\n    \n    xinput.setRumble(controllerIdx, softRumble, hardRumble)\n    \n    \nend)\n","cpuTime.lua":"--@name cpuTime Example\n--@author INP - Radon\n--@server\n\n-- This function helps us check if we can run.\n-- Use a mixture of quotaUsed() and quotaAverage()\n-- quotaUsed() returns the value of the current buffer.\n-- quotaAverage() gives the cpuTime average across the whole buffer.\n-- Your chip will throw an error if quotaAverage() > quotaMax()\n-- n is a parameter between 0 and 1 that represents the percent. 0.8 = 80%.\nlocal function quotaCheck (n)\n\treturn math.max(quotaAverage(), quotaUsed()) < quotaMax()*n\nend\n\n-- Standard think hook.\nhook.add(\"think\", \"\", function ()\n\t-- Simple incrementer inside a while loop\n\tlocal i = 0\n\twhile(quotaCheck(0.95)) do\n\t\t-- We'll increment until we reach 95%\n\t\ti = i + 1\n\tend\n\t-- Then print the final counter, this is how many times the while loop executed this think\n\tprint(i)\nend)\n","screencpuTime.lua":"--@name cpuTime Example\n--@author INP - Radon + Sparky\n--@client\n\n-- This function helps us check if we can run.\n-- Use a mixture of quotaUsed() and quotaAverage()\n-- quotaUsed() returns the value of the current buffer.\n-- quotaAverage() gives the cpuTime average across the whole buffer.\n-- Your chip will throw an error if quotaAverage() > quotaMax()\n-- n is a parameter between 0 and 1 that represents the percent. 0.8 = 80%.\nlocal function quotaCheck (n)\n\treturn math.max(quotaAverage(), quotaUsed()) < quotaMax() * n\nend\n\nrender.createRenderTarget(\"Background\")\n-- Standard render hook.\nhook.add(\"render\", \"\", function ()\n\tlocal maxQuota = 0.1\n\trender.setColor(Color(255, 255, 255))\n\t-- Print some stats to the screen\n\trender.drawText(10, 10, \"Quota Used: \" .. math.round(quotaUsed() * 1000000) .. \"us\")\n\trender.drawText(10, 30, \"Quota Avg: \" .. math.round(quotaAverage() * 1000000) .. \"us\")\n\trender.drawText(10, 50, \"Quota Max: \" .. math.round(quotaMax() * 1000000) .. \"us\")\n\n\tlocal quota = quotaAverage() / quotaMax()\n\tif quota >= maxQuota then render.setColor(Color(255, 0, 0)) end\n\trender.drawText(10, 70, \"Percent: \" .. math.round(quota * 100, 2) .. \"%\")\n\n\t-- Set the rendertarget to our background so that we can make a bluring effect\n\trender.selectRenderTarget(\"Background\")\n\trender.setColor(Color(0, 0, 0, 50))\n\trender.drawRect(0, 0, 1024, 1024)\n\n\t-- While our quota is less than 10%.\n\t-- This will result in higher FPS, thus more render calls.\n\t-- You'd think this would affect the rendering of the cube, it doesn't.\n\t-- If you increase this check to 99%, FPS will significantly drop, and the movement would be slower.\n\t-- Play with this value and see the effects on percentage and your FPS.\n\twhile quotaCheck(maxQuota) do\n\t\t-- Now we can draw a funky box that oscillates back and forth in the middle of the screen.\n\t\trender.setColor(Color(math.random(100, 255), math.random(100, 255), math.random(100, 255)))\n\t\trender.drawRect(math.sin(timer.curtime() * 2) * 380 + (512 - 100), 512 / 2, 200, 400)\n\tend\n\n\trender.selectRenderTarget(nil)\n\n\t-- Draw the resulting rendertarget\n\trender.setRenderTargetTexture(\"Background\")\n\trender.setColor(Color(255, 255, 255))\n\trender.drawTexturedRect(0, 128, 512, 384)\nend)\n","setpos_methods.lua":"--@name Setpos methods\n--@author Neatro\n--@server\n\nif not hasPermission( \"entities.setPos\", owner() ) then\n    throw( \"You need Entities permission to see this example code! Enable permission entities.setpos\" )\nend\n\n--[[\nThis example code shows how smooth Setpos is achieved.\n\nYou may have tried to directly setPos() an entity and saw how the movement was very choppy.\n\nThis is because this method doesn't have any interpolation.\nIt can be good for other uses unless you want smooth motion with setPos().\n\nTo do this, you need to setPos() the physicsObject of an entity. \n\nThis retains the interpolation and makes motion looks smooth.\n\nAs an example, The red box has setPos on itself.\nThe greenbox has setPos on the physicsObject.\n\n]]--\n\n--ignore this bit, it's for creating the prop\nfunction create( c )\n    p = prop.create( Vector( 0), Angle( 0 ), \"models/props_junk/wood_crate001a.mdl\", 1 )\n    p:setColor( c ) \n    return p\nend\n\n--hook\nhook.add( \"tick\", \"runtime\", function() \n    --movement code\n    Motion = chip():getPos() + Vector( math.sin( timer.systime() * 4 ) * 64, 0, 48 )\n    --spawns prop when it doesn't exist\n    normal = ( ( not normal or not normal:isValid() ) and prop.canSpawn() ) and create( Color( 255, 0, 0, 255 ) ) or normal        \n    --check\n    if normal and normal:isValid() and normal:isValidPhys() then\n        \n        --This is setpos WITHOUT getting the entities getPhysicsObject()\n        --There is NO interpolation!\n        normal:setPos( Motion )\n    end\n    --movement code\n    Motion = Motion + Vector( 0, 0, 48 ) \n    --spawns prop when it doesn't exist\n    normalandphys = ( ( not normalandphys or not normalandphys:isValid() ) and prop.canSpawn() ) and create( Color( 0, 255, 0, 255 ) ) or normalandphys        \n    --check\n    if normalandphys and normalandphys:isValid() and normalandphys:isValidPhys() then\n        \n        --This is setpos With getting the entities getPhysicsObject()\n        --Interpolation will work!\n        normalandphys:getPhysicsObject():setPos( Motion )\n        --            __________________\n    end\n    \nend )","render_view.lua":"--@name render.renderView example\n--@author Szymekk\n--@client\n\n-- render.renderView allows to render the world into a render target\n-- Link the chip to a screen to see how it works\n\nsetupPermissionRequest({ \"render.renderscene\", \"render.renderView\" }, \"See an example of render.renderView.\", true)\nlocal permissionSatisfied = hasPermission(\"render.renderView\")\n\nlocal rtName = \"mirror_rt\"\nrender.createRenderTarget(rtName)\n\nlocal mat = material.create(\"gmodscreenspace\")\nmat:setTextureRenderTarget(\"$basetexture\", rtName)\n\nlocal scrW, scrH\nlocal screenEnt\n\nhook.add(\"renderscene\", \"render_view\", function()\n    if not permissionSatisfied then return end\n\n    if not render.isInRenderView() and screenEnt then\n        render.selectRenderTarget(rtName)\n        \n        render.enableClipping(true)\n        \n        local clipNormal = screenEnt:getUp()\n        render.pushCustomClipPlane(clipNormal, (screenEnt:getPos() + clipNormal):dot(clipNormal))\n        \n        local localOrigin = screenEnt:worldToLocal(eyePos())\n        local reflectedOrigin = screenEnt:localToWorld(localOrigin * Vector(1, 1, -1))  \n        \n        local localAng = screenEnt:worldToLocalAngles(eyeAngles())\n        local reflectedAngle = screenEnt:localToWorldAngles(Angle(-localAng.p, localAng.y, -localAng.r + 180))\n        \n        render.renderView({\n            origin = reflectedOrigin,\n            angles = reflectedAngle,\n            aspectratio = scrW / scrH,\n            x = 0,\n            y = 0,\n            w = 1024,\n            h = 1024,\n            drawviewmodel = false,\n            drawviewer = true,\n        })\n        \n        render.popCustomClipPlane()\n        \n        render.selectRenderTarget()\n    end\nend)\n\nhook.add(\"render\", \"render_screen\", function()\n    if not permissionSatisfied then\n        render.setColor(Color(255, 255, 255))\n        render.setFont(\"DermaLarge\")\n        render.drawText(256, 256 - 32, \"Use me\", 1)\n        return\n    end\n\n    if render.isInRenderView() then\n        render.setColor(Color(0, 0, 0))\n        render.drawRect(0, 0, 512, 512)\n        render.setColor(Color(255, 255, 0))\n        render.setFont(\"DermaLarge\")\n        render.drawText(256, 256 - 32, \"RenderView\", 1)\n        return\n    end\n\n    scrW, scrH = render.getGameResolution()\n    screenEnt = screenEnt or render.getScreenEntity()\n\n    render.pushViewMatrix({ type = \"2D\" })\n    render.setMaterial(mat)\n    render.setColor(Color(255, 255, 255))\n    render.drawTexturedRect(scrW, 0, -scrW, scrH)\n    render.popViewMatrix()\nend)\n\nhook.add(\"permissionrequest\", \"\", function()\n    permissionSatisfied = hasPermission(\"render.renderView\")\nend)","music_player.lua":"--@name MusicPlayer\n--@author Sparky\n--@model models/props_lab/citizenradio.mdl\n\nif SERVER then\n\thook.add(\"PlayerSay\", \"Hey\", function(ply, txt)\n\t\tif ply==owner() and txt:sub(1, 6)==\"!song \" then\n\t\t\tnet.start(\"playSong\")\n\t\t\tnet.writeString(txt:sub(7))\n\t\t\tnet.send()\n\n\t\t\treturn \"\"\n\t\tend\n\tend)\nelse\n\tlocal function loadSong(songURL)\n\t\tif song then song:stop() end\n\n\t\tbass.loadURL(songURL, \"3d noblock\", function(snd, err, errtxt)\n\t\t\tif snd then\n\t\t\t\tsong = snd\n\t\t\t\tsnd:setFade(500, 100000)\n\t\t\t\tsnd:setVolume(2)\n\t\t\t\tpcall(snd.setLooping, snd, true) -- pcall in case of audio stream\n\n\t\t\t\thook.add(\"think\", \"snd\", function()\n\t\t\t\t\tif isValid(snd) and isValid(chip()) then\n\t\t\t\t\t\tsnd:setPos(chip():getPos())\n\t\t\t\t\tend\n\t\t\t\tend)\n\t\t\telse\n\t\t\t\tprint(errtxt)\n\t\t\tend\n\t\tend)\n\n\t\turl = nil\n\tend\n\n\tnet.receive(\"playSong\", function(len)\n\t\turl = net.readString()\n\n\t\tif not hasPermission(\"bass.loadURL\", url) then\n\t\t\tprint(\"Press E to grant URL sound permission\")\n\t\t\treturn\n\t\tend\n\n\t\tloadSong(url)\n\tend)\n\n\tsetupPermissionRequest({\"bass.loadURL\"}, \"URL sounds from external sites\", true)\n\n\thook.add(\"permissionrequest\", \"permission\", function()\n\t\tif url and hasPermission(\"bass.loadURL\", url) then\n\t\t\tloadSong(url)\n\t\tend\n\tend)\nend\n"},"libraries":{"1":"bass","2":"bit","3":"builtin","4":"constraint","5":"coroutine","6":"effect","7":"fastlz","8":"file","9":"find","10":"game","11":"holograms","12":"hook","13":"http","14":"input","15":"joystick","16":"json","17":"light","18":"material","19":"mesh","20":"net","21":"notification","22":"particle","23":"physenv","24":"prop","25":"quaternion","26":"render","27":"sounds","28":"sql","29":"team","30":"timer","31":"trace","32":"von","33":"wire","34":"xinput","render":{"summary":"\nRender library.","entity":"starfall_screen","tables":[],"field":{"1":"TEXT_ALIGN_LEFT","2":"TEXT_ALIGN_CENTER","3":"TEXT_ALIGN_RIGHT","4":"TEXT_ALIGN_TOP","5":"TEXT_ALIGN_BOTTOM","TEXT_ALIGN_LEFT":"","TEXT_ALIGN_BOTTOM":"","TEXT_ALIGN_RIGHT":"","TEXT_ALIGN_CENTER":"","TEXT_ALIGN_TOP":""},"libtbl":"render_library","fields":[],"class":"library","functions":{"1":"capturePixels","2":"clear","3":"clearBuffersObeyStencil","4":"clearDepth","5":"clearStencil","6":"clearStencilBufferRectangle","7":"createFont","8":"createMaterial","9":"createRenderTarget","10":"cursorPos","11":"destroyRenderTarget","12":"destroyTexture","13":"disableScissorRect","14":"draw3DBeam","15":"draw3DBox","16":"draw3DLine","17":"draw3DQuad","18":"draw3DQuadUV","19":"draw3DSphere","20":"draw3DSprite","21":"draw3DWireframeBox","22":"draw3DWireframeSphere","23":"drawCircle","24":"drawLine","25":"drawPoly","26":"drawRect","27":"drawRectFast","28":"drawRectOutline","29":"drawRoundedBox","30":"drawRoundedBoxEx","31":"drawSimpleText","32":"drawText","33":"drawTexturedRect","34":"drawTexturedRectFast","35":"drawTexturedRectRotated","36":"drawTexturedRectRotatedFast","37":"drawTexturedRectUV","38":"drawTexturedRectUVFast","39":"enableClipping","40":"enableDepth","41":"enableScissorRect","42":"getDefaultFont","43":"getGameResolution","44":"getResolution","45":"getScreenEntity","46":"getScreenInfo","47":"getTextSize","48":"isHUDActive","49":"isInRenderView","50":"overrideBlend","51":"parseMarkup","52":"popCustomClipPlane","53":"popMatrix","54":"popViewMatrix","55":"pushCustomClipPlane","56":"pushMatrix","57":"pushViewMatrix","58":"readPixel","59":"renderView","60":"renderViewsLeft","61":"selectRenderTarget","62":"setBackgroundColor","63":"setColor","64":"setCullMode","65":"setFilterMag","66":"setFilterMin","67":"setFont","68":"setHUDActive","69":"setLightingMode","70":"setMaterial","71":"setRGBA","72":"setRenderTargetTexture","73":"setStencilCompareFunction","74":"setStencilEnable","75":"setStencilFailOperation","76":"setStencilPassOperation","77":"setStencilReferenceValue","78":"setStencilTestMask","79":"setStencilWriteMask","80":"setStencilZFailOperation","81":"setTextureFromScreen","82":"traceSurfaceColor","setRenderTargetTexture":{"summary":"\nSets the active texture to the render target with the specified name.","class":"function","private":false,"param":{"1":"name","name":"Name of the render target to use"},"fname":"setRenderTargetTexture","realm":"cl","description":"\nSets the active texture to the render target with the specified name. \nNil to reset.","name":"render_library.setRenderTargetTexture","library":"render"},"getScreenEntity":{"summary":"\nReturns the entity currently being rendered to ","ret":"Entity of the screen or hud being rendered","class":"function","private":false,"library":"render","fname":"getScreenEntity","realm":"cl","param":[],"name":"render_library.getScreenEntity","description":"\nReturns the entity currently being rendered to"},"setStencilCompareFunction":{"summary":"\nSets the compare function of the stencil.","class":"function","private":false,"param":{"1":"compareFunction","compareFunction":""},"fname":"setStencilCompareFunction","realm":"cl","description":"\nSets the compare function of the stencil. More: http://wiki.garrysmod.com/page/render/SetStencilCompareFunction","name":"render_library.setStencilCompareFunction","library":"render"},"enableScissorRect":{"summary":"\nEnables a scissoring rect which limits the drawing area.","class":"function","private":false,"param":{"1":"startX","2":"startY","3":"endX","4":"endY","endX":"Y end coordinate of the scissor rect.","startY":"Y start coordinate of the scissor rect.","startX":"X start coordinate of the scissor rect."},"fname":"enableScissorRect","realm":"cl","description":"\nEnables a scissoring rect which limits the drawing area. Only works 2D contexts such as HUD or render targets.","name":"render_library.enableScissorRect","library":"render"},"setRGBA":{"summary":"\nSets the draw color by RGBA values ","class":"function","private":false,"param":["r","g","b","a"],"fname":"setRGBA","realm":"cl","description":"\nSets the draw color by RGBA values","name":"render_library.setRGBA","library":"render"},"setFilterMag":{"summary":"\nSets the texture filtering function when viewing a close texture ","class":"function","private":false,"param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"fname":"setFilterMag","realm":"cl","description":"\nSets the texture filtering function when viewing a close texture","name":"render_library.setFilterMag","library":"render"},"clearBuffersObeyStencil":{"summary":"\nClears the current rendertarget for obeying the current stencil buffer conditions.","class":"function","private":false,"param":{"1":"r","2":"g","3":"b","4":"a","5":"depth","r":"Value of the red channel to clear the current rt with.","b":"Value of the blue channel to clear the current rt with.","depth":"Clear the depth buffer.","g":"Value of the green channel to clear the current rt with."},"fname":"clearBuffersObeyStencil","realm":"cl","description":"\nClears the current rendertarget for obeying the current stencil buffer conditions.","name":"render_library.clearBuffersObeyStencil","library":"render"},"renderViewsLeft":{"summary":"\nReturns how many render.renderView calls can be done in the current frame.","class":"function","private":false,"param":[],"fname":"renderViewsLeft","realm":"cl","description":"\nReturns how many render.renderView calls can be done in the current frame.","name":"render_library.renderViewsLeft","library":"render"},"isInRenderView":{"summary":"\nReturns whether render.renderView is being executed.","class":"function","private":false,"param":[],"fname":"isInRenderView","realm":"cl","description":"\nReturns whether render.renderView is being executed.","name":"render_library.isInRenderView","library":"render"},"setLightingMode":{"summary":"\nSets the lighting mode ","class":"function","private":false,"param":{"1":"mode","mode":"The lighting mode. 0 - Default, 1 - Fullbright, 2 - Increased Fullbright"},"fname":"setLightingMode","realm":"cl","description":"\nSets the lighting mode","name":"render_library.setLightingMode","library":"render"},"setStencilFailOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the compare function was not successful.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilFailOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the compare function was not successful. More: http://wiki.garrysmod.com/page/render/SetStencilFailOperation","name":"render_library.setStencilFailOperation","library":"render"},"overrideBlend":{"summary":"\nEnables blend mode control.","class":"function","private":false,"param":{"1":"on","2":"srcBlend","3":"destBlend","4":"blendFunc","5":"srcBlendAlpha","6":"destBlendAlpha","7":"blendFuncAlpha","blendFuncAlpha":"Optional Number http://wiki.garrysmod.com/page/Enums/BLENDFUNC","srcBlend":"Number http://wiki.garrysmod.com/page/Enums/BLEND","destBlendAlpha":"Optional Number","srcBlendAlpha":"Optional Number http://wiki.garrysmod.com/page/Enums/BLEND","blendFunc":"Number http://wiki.garrysmod.com/page/Enums/BLENDFUNC","on":"Whether to control the blend mode of upcoming rendering","destBlend":"Number"},"fname":"overrideBlend","realm":"cl","description":"\nEnables blend mode control. Read OpenGL or DirectX docs for more info","name":"render_library.overrideBlend","library":"render"},"drawCircle":{"summary":"\nDraws a circle outline ","class":"function","private":false,"param":{"1":"x","2":"y","3":"r","y":"Center y coordinate","x":"Center x coordinate","r":"Radius"},"fname":"drawCircle","realm":"cl","description":"\nDraws a circle outline","name":"render_library.drawCircle","library":"render"},"draw3DSprite":{"summary":"\nDraws a sprite in 3d space.","class":"function","private":false,"param":{"1":"pos","2":"width","3":"height","width":"Width of the sprite.","height":"Height of the sprite.","pos":"Position of the sprite."},"fname":"draw3DSprite","realm":"cl","description":"\nDraws a sprite in 3d space.","name":"render_library.draw3DSprite","library":"render"},"drawTexturedRectRotatedFast":{"summary":"\nDraws a rotated, textured rectangle.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"rot","x":"X coordinate of center of rect","w":"Width","y":"Y coordinate of center of rect","h":"Height","rot":"Rotation in degrees"},"fname":"drawTexturedRectRotatedFast","realm":"cl","description":"\nDraws a rotated, textured rectangle. \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectRotatedFast","library":"render"},"getDefaultFont":{"summary":"\nGets the default font ","ret":"Default font","class":"function","private":false,"library":"render","fname":"getDefaultFont","realm":"cl","param":[],"name":"render_library.getDefaultFont","description":"\nGets the default font"},"setFilterMin":{"summary":"\nSets the texture filtering function when viewing a far texture ","class":"function","private":false,"param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"fname":"setFilterMin","realm":"cl","description":"\nSets the texture filtering function when viewing a far texture","name":"render_library.setFilterMin","library":"render"},"drawText":{"summary":"\nDraws text with newlines and tabs ","class":"function","private":false,"param":{"1":"x","2":"y","3":"text","4":"alignment","y":"Y coordinate","x":"X coordinate","alignment":"Text alignment","text":"Text to draw"},"fname":"drawText","realm":"cl","description":"\nDraws text with newlines and tabs","name":"render_library.drawText","library":"render"},"drawRoundedBox":{"summary":"\nDraws a rounded rectangle using the current color ","class":"function","private":false,"param":{"1":"r","2":"x","3":"y","4":"w","5":"h","x":"Top left corner x coordinate","w":"Width","r":"The corner radius","h":"Height","y":"Top left corner y coordinate"},"fname":"drawRoundedBox","realm":"cl","description":"\nDraws a rounded rectangle using the current color","name":"render_library.drawRoundedBox","library":"render"},"setMaterial":{"summary":"\nSets the current render material ","class":"function","private":false,"param":{"1":"mat","mat":"The material object"},"fname":"setMaterial","realm":"cl","description":"\nSets the current render material","name":"render_library.setMaterial","library":"render"},"enableClipping":{"summary":"\nSets the status of the clip renderer, returning previous state.","ret":"Previous clipping state.","class":"function","private":false,"library":"render","fname":"enableClipping","realm":"cl","param":{"1":"state","state":"New clipping state."},"name":"render_library.enableClipping","description":"\nSets the status of the clip renderer, returning previous state."},"drawSimpleText":{"summary":"\nDraws text more easily and quickly but no new lines or tabs.","class":"function","private":false,"param":{"1":"x","2":"y","3":"text","4":"xalign","5":"yalign","x":"X coordinate","y":"Y coordinate","yalign":"Text y alignment","xalign":"Text x alignment","text":"Text to draw"},"fname":"drawSimpleText","realm":"cl","description":"\nDraws text more easily and quickly but no new lines or tabs.","name":"render_library.drawSimpleText","library":"render"},"draw3DBox":{"summary":"\nDraws a box in 3D space ","class":"function","private":false,"param":{"1":"origin","2":"angle","3":"mins","4":"maxs","mins":"Start position of the box, relative to origin.","angle":"Orientation of the box","maxs":"End position of the box, relative to origin.","origin":"Origin of the box."},"fname":"draw3DBox","realm":"cl","description":"\nDraws a box in 3D space","name":"render_library.draw3DBox","library":"render"},"createMaterial":{"summary":"\nLooks up a texture by file name and creates an UnlitGeneric material with it.","ret":"The material. Use with render.setMaterial to draw with it.","class":"function","private":false,"library":"render","fname":"createMaterial","realm":"cl","param":{"1":"tx","2":"cb","3":"done","done":"An optional callback called when the image is done loading. Passes the material, url","tx":"Texture file path, a http url, or image data: https://en.wikipedia.org/wiki/Data_URI_scheme","cb":"An optional callback called when loading is done. Passes nil if it fails or Passes the material, url, width, height, and layout function which can be called with x, y, w, h to reposition the image in the texture."},"name":"render_library.createMaterial","description":"\nLooks up a texture by file name and creates an UnlitGeneric material with it. \nAlso supports image URLs or image data: https://en.wikipedia.org/wiki/Data_URI_scheme \nMake sure to store the material to use it rather than calling this slow function repeatedly. \nNOTE: This no longer supports material names. Use texture names instead (Textures are .vtf, material are .vmt)"},"drawRoundedBoxEx":{"summary":"\nDraws a rounded rectangle using the current color ","class":"function","private":false,"param":{"1":"r","2":"x","3":"y","4":"w","5":"h","6":"tl","7":"tr","8":"bl","9":"br","x":"Top left corner x coordinate","tl":"Boolean Top left corner","br":"Boolean Bottom right corner","bl":"Boolean Bottom left corner","w":"Width","tr":"Boolean Top right corner","h":"Height","y":"Top left corner y coordinate","r":"The corner radius"},"fname":"drawRoundedBoxEx","realm":"cl","description":"\nDraws a rounded rectangle using the current color","name":"render_library.drawRoundedBoxEx","library":"render"},"drawRectOutline":{"summary":"\nDraws a rectangle outline using the current color.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y integer coordinate","x":"Top left corner x integer coordinate","h":"Height","w":"Width"},"fname":"drawRectOutline","realm":"cl","description":"\nDraws a rectangle outline using the current color.","name":"render_library.drawRectOutline","library":"render"},"parseMarkup":{"summary":"\nConstructs a markup object for quick styled text drawing.","ret":"The markup object. See https://wiki.garrysmod.com/page/Category:MarkupObject","class":"function","private":false,"library":"render","fname":"parseMarkup","realm":"cl","param":{"1":"str","2":"maxsize","maxsize":"The max width of the markup","str":"The markup string to parse"},"name":"render_library.parseMarkup","description":"\nConstructs a markup object for quick styled text drawing."},"destroyTexture":{"summary":"\nReleases the texture.","class":"function","private":false,"param":{"1":"mat","mat":"The material object"},"fname":"destroyTexture","realm":"cl","description":"\nReleases the texture. Required if you reach the maximum url textures.","name":"render_library.destroyTexture","library":"render"},"getResolution":{"summary":"\nReturns the render context's width and height ","classForced":true,"ret":["the X size of the current render context","the Y size of the current render context"],"class":"function","param":[],"private":false,"fname":"getResolution","library":"render","realm":"cl","name":"render_library.getResolution","description":"\nReturns the render context's width and height"},"traceSurfaceColor":{"summary":"\nDoes a trace and returns the color of the textel the trace hits.","ret":"The color","class":"function","private":false,"library":"render","fname":"traceSurfaceColor","realm":"cl","param":{"1":"vec1","2":"vec2","vec2":"The ending vector","vec1":"The starting vector"},"name":"render_library.traceSurfaceColor","description":"\nDoes a trace and returns the color of the textel the trace hits."},"setStencilPassOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the compare function was successful.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilPassOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the compare function was successful. More: http://wiki.garrysmod.com/page/render/SetStencilPassOperation","name":"render_library.setStencilPassOperation","library":"render"},"drawRect":{"summary":"\nDraws a rectangle using the current color ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawRect","realm":"cl","description":"\nDraws a rectangle using the current color","name":"render_library.drawRect","library":"render"},"clear":{"summary":"\nClears the active render target ","class":"function","private":false,"param":{"1":"clr","2":"depth","clr":"Color type to clear with","depth":"Boolean if should clear depth"},"fname":"clear","realm":"cl","description":"\nClears the active render target","name":"render_library.clear","library":"render"},"setStencilReferenceValue":{"summary":"\nSets the reference value which will be used for all stencil operations.","class":"function","private":false,"param":{"1":"referenceValue","referenceValue":"Reference value."},"fname":"setStencilReferenceValue","realm":"cl","description":"\nSets the reference value which will be used for all stencil operations. This is an unsigned integer.","name":"render_library.setStencilReferenceValue","library":"render"},"draw3DLine":{"summary":"\nDraws a 3D Line ","class":"function","private":false,"param":{"1":"startPos","2":"endPos","startPos":"Starting position","endPos":"Ending position"},"fname":"draw3DLine","realm":"cl","description":"\nDraws a 3D Line","name":"render_library.draw3DLine","library":"render"},"draw3DWireframeBox":{"summary":"\nDraws a wireframe box in 3D space ","class":"function","private":false,"param":{"1":"origin","2":"angle","3":"mins","4":"maxs","mins":"Start position of the box, relative to origin.","angle":"Orientation of the box","maxs":"End position of the box, relative to origin.","origin":"Origin of the box."},"fname":"draw3DWireframeBox","realm":"cl","description":"\nDraws a wireframe box in 3D space","name":"render_library.draw3DWireframeBox","library":"render"},"draw3DWireframeSphere":{"summary":"\nDraws a wireframe sphere ","class":"function","private":false,"param":{"1":"pos","2":"radius","3":"longitudeSteps","4":"latitudeSteps","longitudeSteps":"The amount of longitude steps. The larger this number is, the smoother the sphere is","pos":"Position of the sphere","radius":"Radius of the sphere","latitudeSteps":"The amount of latitude steps. The larger this number is, the smoother the sphere is"},"fname":"draw3DWireframeSphere","realm":"cl","description":"\nDraws a wireframe sphere","name":"render_library.draw3DWireframeSphere","library":"render"},"drawRectFast":{"summary":"\nDraws a rectangle using the current color \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawRectFast","realm":"cl","description":"\nDraws a rectangle using the current color \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawRectFast","library":"render"},"drawTexturedRect":{"summary":"\nDraws a textured rectangle ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawTexturedRect","realm":"cl","description":"\nDraws a textured rectangle","name":"render_library.drawTexturedRect","library":"render"},"getGameResolution":{"summary":"\nReturns width and height of the game window.","classForced":true,"ret":["the X size of the game window","the Y size of the game window"],"class":"function","param":[],"private":false,"fname":"getGameResolution","library":"render","realm":"cl","name":"render_library.getGameResolution","description":"\nReturns width and height of the game window. If a rendertarget is selected, will return 1024, 1024"},"setColor":{"summary":"\nSets the draw color ","class":"function","private":false,"param":{"1":"clr","clr":"Color type"},"fname":"setColor","realm":"cl","description":"\nSets the draw color","name":"render_library.setColor","library":"render"},"setTextureFromScreen":{"summary":"\nSets the texture of a screen entity ","class":"function","private":false,"param":{"1":"ent","ent":"Screen entity"},"fname":"setTextureFromScreen","realm":"cl","description":"\nSets the texture of a screen entity","name":"render_library.setTextureFromScreen","library":"render"},"getScreenInfo":{"summary":"\nReturns information about the screen, such as world offsets, dimentions, and rotation.","ret":"A table describing the screen.","class":"function","private":false,"library":"render","fname":"getScreenInfo","realm":"cl","param":{"1":"e","e":"The screen to get info from."},"name":"render_library.getScreenInfo","description":"\nReturns information about the screen, such as world offsets, dimentions, and rotation. \nNote: this does a table copy so move it out of your draw hook"},"setBackgroundColor":{"summary":"\nSets background color of screen ","class":"function","private":false,"param":{"1":"col","2":"screen","col":"Color of background"},"fname":"setBackgroundColor","realm":"cl","description":"\nSets background color of screen","name":"render_library.setBackgroundColor","library":"render"},"setStencilZFailOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilZFailOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails. More: http://wiki.garrysmod.com/page/render/SetStencilZFailOperation","name":"render_library.setStencilZFailOperation","library":"render"},"capturePixels":{"summary":"\nDumps the current render target and allows the pixels to be accessed by render.readPixel.","class":"function","private":false,"param":[],"fname":"capturePixels","realm":"cl","description":"\nDumps the current render target and allows the pixels to be accessed by render.readPixel.","name":"render_library.capturePixels","library":"render"},"drawTexturedRectFast":{"summary":"\nDraws a textured rectangle \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawTexturedRectFast","realm":"cl","description":"\nDraws a textured rectangle \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectFast","library":"render"},"draw3DBeam":{"summary":"\nDraws textured beam.","class":"function","private":false,"param":{"1":"startPos","2":"endPos","3":"width","4":"textureStart","5":"textureEnd","textureEnd":"The end coordinate of the texture used.","textureStart":"The start coordinate of the texture used.","endPos":"Beam end position.","startPos":"Beam start position.","width":"The width of the beam."},"fname":"draw3DBeam","realm":"cl","description":"\nDraws textured beam.","name":"render_library.draw3DBeam","library":"render"},"setStencilEnable":{"summary":"\nSets whether stencil tests are carried out for each rendered pixel.","class":"function","private":false,"param":{"1":"enable","enable":"true to enable, false to disable"},"fname":"setStencilEnable","realm":"cl","description":"\nSets whether stencil tests are carried out for each rendered pixel. Only pixels passing the stencil test are written to the render target.","name":"render_library.setStencilEnable","library":"render"},"drawPoly":{"summary":"\nDraws a polygon.","class":"function","private":false,"param":{"1":"poly","poly":"Table of polygon vertices. Texture coordinates are optional. {{x=x1, y=y1, u=u1, v=v1}, ... }"},"fname":"drawPoly","realm":"cl","description":"\nDraws a polygon.","name":"render_library.drawPoly","library":"render"},"setCullMode":{"summary":"\nChanges the cull mode ","class":"function","private":false,"param":{"1":"mode","mode":"Cull mode. 0 for counter clock wise, 1 for clock wise"},"fname":"setCullMode","realm":"cl","description":"\nChanges the cull mode","name":"render_library.setCullMode","library":"render"},"setHUDActive":{"summary":"\nSets the current instance to allow HUD drawing.","class":"function","private":false,"param":{"1":"active","active":"Whether hud hooks should be active. true to force on, false to force off, nil to restore default."},"fname":"setHUDActive","realm":"cl","description":"\nSets the current instance to allow HUD drawing. Only works for owner of the chip","name":"render_library.setHUDActive","library":"render"},"readPixel":{"summary":"\nReads the color of the specified pixel.","ret":"Color object with ( r, g, b, 255 ) from the specified pixel.","class":"function","private":false,"library":"render","fname":"readPixel","realm":"cl","param":{"1":"x","2":"y","y":"Pixel y-coordinate.","x":"Pixel x-coordinate."},"name":"render_library.readPixel","description":"\nReads the color of the specified pixel."},"selectRenderTarget":{"summary":"\nSelects the render target to draw on.","class":"function","private":false,"param":{"1":"name","name":"Name of the render target to use"},"fname":"selectRenderTarget","realm":"cl","description":"\nSelects the render target to draw on. \nNil for the visible RT.","name":"render_library.selectRenderTarget","library":"render"},"pushMatrix":{"summary":"\nPushes a matrix onto the matrix stack.","class":"function","private":false,"param":{"1":"m","2":"world","world":"Should the transformation be relative to the screen or world?","m":"The matrix"},"fname":"pushMatrix","realm":"cl","description":"\nPushes a matrix onto the matrix stack.","name":"render_library.pushMatrix","library":"render"},"setStencilTestMask":{"summary":"\nSets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","class":"function","private":false,"param":{"1":"mask","mask":"The mask bitflag."},"fname":"setStencilTestMask","realm":"cl","description":"\nSets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","name":"render_library.setStencilTestMask","library":"render"},"destroyRenderTarget":{"summary":"\nReleases the rendertarget.","class":"function","private":false,"param":{"1":"name","name":"Rendertarget name"},"fname":"destroyRenderTarget","realm":"cl","description":"\nReleases the rendertarget. Required if you reach the maximum rendertargets.","name":"render_library.destroyRenderTarget","library":"render"},"popCustomClipPlane":{"summary":"\nRemoves the current active clipping plane from the clip plane stack.","class":"function","private":false,"param":[],"fname":"popCustomClipPlane","realm":"cl","description":"\nRemoves the current active clipping plane from the clip plane stack.","name":"render_library.popCustomClipPlane","library":"render"},"pushViewMatrix":{"summary":"\nPushes a perspective matrix onto the view matrix stack.","class":"function","private":false,"param":{"1":"tbl","tbl":"The view matrix data. See http://wiki.garrysmod.com/page/Structures/RenderCamData"},"fname":"pushViewMatrix","realm":"cl","description":"\nPushes a perspective matrix onto the view matrix stack.","name":"render_library.pushViewMatrix","library":"render"},"pushCustomClipPlane":{"summary":"\nPushes a new clipping plane of the clip plane stack.","class":"function","private":false,"param":{"1":"normal","2":"distance","normal":"The normal of the clipping plane.","distance":"The normal of the clipping plane."},"fname":"pushCustomClipPlane","realm":"cl","description":"\nPushes a new clipping plane of the clip plane stack.","name":"render_library.pushCustomClipPlane","library":"render"},"renderView":{"summary":"\nRenders the scene with the specified viewData to the current active render target.","class":"function","private":false,"param":{"1":"tbl","tbl":"view The view data to be used in the rendering. See http://wiki.garrysmod.com/page/Structures/ViewData. There's an additional key drawviewer used to tell the engine whether the local player model should be rendered."},"fname":"renderView","realm":"cl","description":"\nRenders the scene with the specified viewData to the current active render target.","name":"render_library.renderView","library":"render"},"getTextSize":{"summary":"\nGets the size of the specified text.","ret":["width of the text","height of the text"],"class":"function","private":false,"library":"render","fname":"getTextSize","realm":"cl","param":{"1":"text","text":"Text to get the size of"},"name":"render_library.getTextSize","description":"\nGets the size of the specified text. Don't forget to use setFont before calling this function"},"isHUDActive":{"summary":"\nChecks if a hud component is connected to the Starfall Chip ","class":"function","private":false,"param":[],"fname":"isHUDActive","realm":"cl","description":"\nChecks if a hud component is connected to the Starfall Chip","name":"render_library.isHUDActive","library":"render"},"disableScissorRect":{"summary":"\nDisables a scissoring rect which limits the drawing area.","class":"function","private":false,"param":[],"fname":"disableScissorRect","realm":"cl","description":"\nDisables a scissoring rect which limits the drawing area.","name":"render_library.disableScissorRect","library":"render"},"cursorPos":{"summary":"\nGets a 2D cursor position where ply is aiming at the current rendered screen or nil if they aren't aiming at it.","ret":["x position","y position"],"class":"function","private":false,"library":"render","fname":"cursorPos","realm":"cl","param":{"1":"ply","2":"screen","screen":"An explicit screen to get the cursor pos of (default: The current rendering screen using 'render' hook)","ply":"player to get cursor position from (default: player())"},"name":"render_library.cursorPos","description":"\nGets a 2D cursor position where ply is aiming at the current rendered screen or nil if they aren't aiming at it."},"draw3DSphere":{"summary":"\nDraws a sphere ","class":"function","private":false,"param":{"1":"pos","2":"radius","3":"longitudeSteps","4":"latitudeSteps","longitudeSteps":"The amount of longitude steps. The larger this number is, the smoother the sphere is","pos":"Position of the sphere","radius":"Radius of the sphere","latitudeSteps":"The amount of latitude steps. The larger this number is, the smoother the sphere is"},"fname":"draw3DSphere","realm":"cl","description":"\nDraws a sphere","name":"render_library.draw3DSphere","library":"render"},"clearStencilBufferRectangle":{"summary":"\nSets the stencil value in a specified rect.","class":"function","private":false,"param":{"1":"originX","2":"originY","3":"endX","4":"endY","5":"stencilValue","stencilValue":"Value to set cleared stencil buffer to.","endX":"The end X coordinate of the rectangle.","originX":"X origin of the rectangle.","endY":"The end Y coordinate of the rectangle.","originY":"Y origin of the rectangle."},"fname":"clearStencilBufferRectangle","realm":"cl","description":"\nSets the stencil value in a specified rect.","name":"render_library.clearStencilBufferRectangle","library":"render"},"clearDepth":{"summary":"\nResets the depth buffer ","class":"function","private":false,"param":[],"fname":"clearDepth","realm":"cl","description":"\nResets the depth buffer","name":"render_library.clearDepth","library":"render"},"draw3DQuad":{"summary":"\nDraws 2 connected triangles.","class":"function","private":false,"param":{"1":"vert1","2":"vert2","3":"vert3","4":"vert4","vert4":"The fourth vertex.","vert1":"First vertex.","vert3":"The third vertex.","vert2":"The second vertex."},"fname":"draw3DQuad","realm":"cl","description":"\nDraws 2 connected triangles.","name":"render_library.draw3DQuad","library":"render"},"popMatrix":{"summary":"\nPops a matrix from the matrix stack.","class":"function","private":false,"param":[],"fname":"popMatrix","realm":"cl","description":"\nPops a matrix from the matrix stack.","name":"render_library.popMatrix","library":"render"},"setFont":{"summary":"\nSets the font ","class":"function","usage":"Use a font created by render.createFont or use one of these already defined fonts: \n- DebugFixed \n- DebugFixedSmall \n- Default \n- Marlett \n- Trebuchet18 \n- Trebuchet24 \n- HudHintTextLarge \n- HudHintTextSmall \n- CenterPrintText \n- HudSelectionText \n- CloseCaption_Normal \n- CloseCaption_Bold \n- CloseCaption_BoldItalic \n- ChatFont \n- TargetID \n- TargetIDSmall \n- HL2MPTypeDeath \n- BudgetLabel \n- HudNumbers \n- DermaDefault \n- DermaDefaultBold \n- DermaLarge","private":false,"library":"render","fname":"setFont","realm":"cl","param":{"1":"font","font":"The font to use"},"name":"render_library.setFont","description":"\nSets the font"},"createFont":{"summary":"\nCreates a font.","class":"function","usage":"\nBase font can be one of (keep in mind that these may not exist on all clients if they are not shipped with starfall): \n- Akbar \n- Coolvetica \n- Roboto \n- Roboto Mono \n- FontAwesome \n- Courier New \n- Verdana \n- Arial \n- HalfLife2 \n- hl2mp \n- csd \n- Tahoma \n- Trebuchet \n- Trebuchet MS \n- DejaVu Sans Mono \n- Lucida Console \n- Times New Roman","private":false,"library":"render","fname":"createFont","realm":"cl","param":{"1":"font","2":"size","3":"weight","4":"antialias","5":"additive","6":"shadow","7":"outline","8":"blur","9":"extended","outline":"Enable outline?","size":"Font size","font":"Base font to use","antialias":"Antialias font?","additive":"If true, adds brightness to pixels behind it rather than drawing over them.","blur":"Enable blur?","extended":"Allows the font to display glyphs outside of Latin-1 range. Unicode code points above 0xFFFF are not supported. Required to use FontAwesome","weight":"Font weight (default: 400)","shadow":"Enable drop shadow?"},"name":"render_library.createFont","description":"\nCreates a font. Does not require rendering hook"},"drawTexturedRectRotated":{"summary":"\nDraws a rotated, textured rectangle.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"rot","x":"X coordinate of center of rect","w":"Width","y":"Y coordinate of center of rect","h":"Height","rot":"Rotation in degrees"},"fname":"drawTexturedRectRotated","realm":"cl","description":"\nDraws a rotated, textured rectangle.","name":"render_library.drawTexturedRectRotated","library":"render"},"enableDepth":{"summary":"\nEnables or disables Depth Buffer ","class":"function","private":false,"param":{"1":"enable","enable":"true to enable"},"fname":"enableDepth","realm":"cl","description":"\nEnables or disables Depth Buffer","name":"render_library.enableDepth","library":"render"},"createRenderTarget":{"summary":"\nCreates a new render target to draw onto.","class":"function","private":false,"param":{"1":"name","name":"The name of the render target"},"fname":"createRenderTarget","realm":"cl","description":"\nCreates a new render target to draw onto. \nThe dimensions will always be 1024x1024","name":"render_library.createRenderTarget","library":"render"},"drawTexturedRectUVFast":{"summary":"\nDraws a textured rectangle with UV coordinates \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"startU","6":"startV","7":"endU","8":"endV","9":"UVHack","startV":"Texture mapping at rectangle origin","x":"Top left corner x","UVHack":"If enabled, will scale the UVs to compensate for internal bug. Should be true for user created materials.","w":"Width","y":"Top left corner y","h":"Height","startU":"Texture mapping at rectangle origin","endV":"Texture mapping at rectangle end"},"fname":"drawTexturedRectUVFast","realm":"cl","description":"\nDraws a textured rectangle with UV coordinates \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectUVFast","library":"render"},"clearStencil":{"summary":"\nResets all values in the stencil buffer to zero.","class":"function","private":false,"param":[],"fname":"clearStencil","realm":"cl","description":"\nResets all values in the stencil buffer to zero.","name":"render_library.clearStencil","library":"render"},"drawTexturedRectUV":{"summary":"\nDraws a textured rectangle with UV coordinates ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"startU","6":"startV","7":"endU","8":"endV","startV":"Texture mapping at rectangle origin","x":"Top left corner x","w":"Width","y":"Top left corner y","h":"Height","startU":"Texture mapping at rectangle origin","endV":"Texture mapping at rectangle end"},"fname":"drawTexturedRectUV","realm":"cl","description":"\nDraws a textured rectangle with UV coordinates","name":"render_library.drawTexturedRectUV","library":"render"},"draw3DQuadUV":{"summary":"\nDraws 2 connected triangles with custom UVs.","class":"function","private":false,"param":{"1":"vert1","2":"vert2","3":"vert3","4":"vert4","vert4":"The fourth vertex.","vert1":"First vertex. {x, y, z, u, v}","vert3":"The third vertex.","vert2":"The second vertex."},"fname":"draw3DQuadUV","realm":"cl","description":"\nDraws 2 connected triangles with custom UVs.","name":"render_library.draw3DQuadUV","library":"render"},"popViewMatrix":{"summary":"\nPops a view matrix from the matrix stack.","class":"function","private":false,"param":[],"fname":"popViewMatrix","realm":"cl","description":"\nPops a view matrix from the matrix stack.","name":"render_library.popViewMatrix","library":"render"},"drawLine":{"summary":"\nDraws a line.","class":"function","private":false,"param":{"1":"x1","2":"y1","3":"x2","4":"y2","y1":"Y start integer coordinate","x1":"X start integer coordinate","y2":"Y end integer coordinate","x2":"X end interger coordinate"},"fname":"drawLine","realm":"cl","description":"\nDraws a line. Use 3D functions for float coordinates","name":"render_library.drawLine","library":"render"},"setStencilWriteMask":{"summary":"\nSets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer.","class":"function","private":false,"param":{"1":"mask","mask":"The mask bitflag."},"fname":"setStencilWriteMask","realm":"cl","description":"\nSets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer.","name":"render_library.setStencilWriteMask","library":"render"}},"name":"render","description":"\nRender library. Screens are 512x512 units. Most functions require \nthat you be in the rendering hook to call, otherwise an error is \nthrown. +x is right, +y is down"},"bass":{"summary":"\n`bass` library is intended to be used only on client side.","tables":[],"client":true,"libtbl":"bass_library","fields":[],"class":"library","functions":{"1":"loadFile","2":"loadURL","3":"soundsLeft","loadURL":{"summary":"\nLoads a sound channel from an URL.","class":"function","private":false,"param":{"1":"path","2":"flags","3":"callback","path":"URL path to play from.","callback":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name.","flags":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},"fname":"loadURL","realm":"cl","description":"\nLoads a sound channel from an URL.","name":"bass_library.loadURL","library":"bass"},"loadFile":{"summary":"\nLoads a sound channel from a file.","class":"function","private":false,"param":{"1":"path","2":"flags","3":"callback","path":"File path to play from.","callback":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name.","flags":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},"fname":"loadFile","realm":"cl","description":"\nLoads a sound channel from a file.","name":"bass_library.loadFile","library":"bass"},"soundsLeft":{"summary":"\nReturns the number of sounds left that can be created ","ret":"The number of sounds left","class":"function","private":false,"library":"bass","fname":"soundsLeft","realm":"cl","param":[],"name":"bass_library.soundsLeft","description":"\nReturns the number of sounds left that can be created"}},"name":"bass","description":"\n`bass` library is intended to be used only on client side. It's good for streaming local and remote sound files and playing them directly in player's \"2D\" context."},"hook":{"server":true,"tables":[],"client":true,"summary":"\nDeals with hooks ","libtbl":"hook_library","fields":[],"class":"library","functions":{"1":"add","2":"remove","3":"run","4":"runRemote","run":{"server":true,"class":"function","client":true,"library":"hook","private":false,"summary":"\nRun a hook ","fname":"run","realm":"sh","param":{"1":"hookname","2":"...","hookname":"The hook name","...":"arguments"},"name":"hook_library.run","description":"\nRun a hook"},"add":{"summary":"\nSets a hook function ","class":"function","private":false,"param":{"1":"hookname","2":"name","3":"func","func":"Function to run","hookname":"Name of the event","name":"Unique identifier"},"fname":"add","realm":"sh","description":"\nSets a hook function","name":"hook_library.add","library":"hook"},"remove":{"server":true,"class":"function","client":true,"library":"hook","private":false,"summary":"\nRemove a hook ","fname":"remove","realm":"sh","param":{"1":"hookname","2":"name","hookname":"The hook name","name":"The unique name for this hook"},"name":"hook_library.remove","description":"\nRemove a hook"},"runRemote":{"server":true,"ret":"tbl A list of the resultset of each called hook","class":"function","client":true,"library":"hook","private":false,"summary":"\nRun a hook remotely.","fname":"runRemote","realm":"sh","param":{"1":"recipient","2":"...","...":"Payload. These parameters will be used to call the hook functions","recipient":"Starfall entity to call the hook on. Nil to run on every starfall entity"},"name":"hook_library.runRemote","description":"\nRun a hook remotely. \nThis will call the hook \"remote\" on either a specified entity or all instances on the server/client"}},"name":"hook","description":"\nDeals with hooks"},"material":{"summary":"\n`material` library is allows creating material objects which are used for controlling shaders in rendering.","tables":[],"client":true,"libtbl":"material_library","fields":[],"class":"library","functions":{"1":"create","2":"createFromImage","3":"getColor","4":"getFloat","5":"getHeight","6":"getInt","7":"getKeyValues","8":"getMatrix","9":"getName","10":"getShader","11":"getString","12":"getTexture","13":"getVector","14":"getVectorLinear","15":"getWidth","16":"load","getFloat":{"summary":"\nReturns a float keyvalue of a material ","ret":"The float value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getFloat","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the float from"},"name":"material_library.getFloat","description":"\nReturns a float keyvalue of a material"},"createFromImage":{"summary":"\nCreates a .jpg or .png material from file \nCan't be modified ","class":"function","private":false,"param":{"1":"path","2":"params","path":"The path to the image file","params":"The shader parameters to apply to the material. See http://wiki.garrysmod.com/page/Material_Parameters"},"fname":"createFromImage","realm":"cl","description":"\nCreates a .jpg or .png material from file \nCan't be modified","name":"material_library.createFromImage","library":"material"},"create":{"summary":"\nCreates a new blank material ","class":"function","private":false,"param":{"1":"shader","shader":"The shader of the material. Must be one of \nUnlitGeneric \nVertexLitGeneric \nRefract_DX90 \nWater_DX90 \nSky_DX9 \ngmodscreenspace \nModulate_DX9"},"fname":"create","realm":"cl","description":"\nCreates a new blank material","name":"material_library.create","library":"material"},"getMatrix":{"summary":"\nReturns a matrix keyvalue of a material ","ret":"The matrix value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getMatrix","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the matrix from"},"name":"material_library.getMatrix","description":"\nReturns a matrix keyvalue of a material"},"getVectorLinear":{"summary":"\nReturns a linear color-corrected vector keyvalue of a material ","ret":"The vector value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getVectorLinear","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the vector from"},"name":"material_library.getVectorLinear","description":"\nReturns a linear color-corrected vector keyvalue of a material"},"getKeyValues":{"summary":"\nReturns a table of keyvalues from a material ","ret":"The table of keyvalues","class":"function","private":false,"library":"material","fname":"getKeyValues","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getKeyValues","description":"\nReturns a table of keyvalues from a material"},"getName":{"summary":"\nReturns a material's engine name ","ret":"The name of a material. If this material is user created, add ! to the beginning of this to use it with entity.setMaterial","class":"function","private":false,"library":"material","fname":"getName","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getName","description":"\nReturns a material's engine name"},"getShader":{"summary":"\nReturns the shader name of a material ","ret":"The shader name of the material","class":"function","private":false,"library":"material","fname":"getShader","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getShader","description":"\nReturns the shader name of a material"},"getInt":{"summary":"\nReturns an int keyvalue of a material ","ret":"The int value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getInt","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the int from"},"name":"material_library.getInt","description":"\nReturns an int keyvalue of a material"},"load":{"summary":"\nLoads a .vmt material or existing material.","ret":"The material object. Can't be modified.","class":"function","private":false,"library":"material","fname":"load","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.load","description":"\nLoads a .vmt material or existing material. Throws an error if the material fails to load \nExisting created materials can be loaded with ! prepended to the name \nCan't be modified"},"getTexture":{"summary":"\nGets a texture from a material ","ret":"The texture's name","class":"function","private":false,"library":"material","fname":"getTexture","realm":"cl","param":{"1":"path","2":"texture","path":"The path of the material (don't include .vmt in the path)","texture":"The texture key to get"},"name":"material_library.getTexture","description":"\nGets a texture from a material"},"getString":{"summary":"\nReturns a string keyvalue ","ret":"The string value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getString","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the string from"},"name":"material_library.getString","description":"\nReturns a string keyvalue"},"getVector":{"summary":"\nReturns a vector keyvalue of a material ","ret":"The string id of the texture","class":"function","private":false,"library":"material","fname":"getVector","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the vector from"},"name":"material_library.getVector","description":"\nReturns a vector keyvalue of a material"},"getWidth":{"summary":"\nReturns the width of the member texture set for $basetexture of a material ","ret":"The basetexture's width","class":"function","private":false,"library":"material","fname":"getWidth","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getWidth","description":"\nReturns the width of the member texture set for $basetexture of a material"},"getColor":{"summary":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material.","ret":"The color value","class":"function","private":false,"library":"material","fname":"getColor","realm":"cl","param":{"1":"path","2":"x","3":"y","path":"The path of the material (don't include .vmt in the path)","x":"The x coordinate of the pixel","y":"The y coordinate of the pixel"},"name":"material_library.getColor","description":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material."},"getHeight":{"summary":"\nReturns the height of the member texture set for $basetexture of a material ","ret":"The basetexture's height","class":"function","private":false,"library":"material","fname":"getHeight","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getHeight","description":"\nReturns the height of the member texture set for $basetexture of a material"}},"name":"material","description":"\n`material` library is allows creating material objects which are used for controlling shaders in rendering."},"team":{"server":true,"tables":[],"client":true,"summary":"\nLibrary for retreiving information about teams ","libtbl":"team_library","fields":[],"class":"library","functions":{"1":"bestAutoJoinTeam","2":"exists","3":"getAllTeams","4":"getColor","5":"getJoinable","6":"getName","7":"getNumDeaths","8":"getNumFrags","9":"getNumPlayers","10":"getPlayers","11":"getScore","getPlayers":{"summary":"\nReturns the table of players on a team ","ret":"Table of players","class":"function","private":false,"library":"team","fname":"getPlayers","realm":"sh","param":{"1":"ind","ind":"Index of the team"},"name":"team_library.getPlayers","description":"\nReturns the table of players on a team"},"getScore":{"summary":"\nReturns the score of a team ","classForced":true,"ret":"Number score of the team","class":"function","description":"\nReturns the score of a team","fname":"getScore","library":"team","realm":"sh","name":"team_library.getScore","param":{"1":"ind","ind":"Index of the team"}},"getNumPlayers":{"summary":"\nReturns number of players on a team ","classForced":true,"ret":"number of players","class":"function","description":"\nReturns number of players on a team","fname":"getNumPlayers","library":"team","realm":"sh","name":"team_library.getNumPlayers","param":{"1":"ind","ind":"Index of the team"}},"getColor":{"summary":"\nReturns the color of a team ","ret":"Color of the team","class":"function","private":false,"library":"team","fname":"getColor","realm":"sh","param":{"1":"ind","ind":"Index of the team"},"name":"team_library.getColor","description":"\nReturns the color of a team"},"getJoinable":{"summary":"\nReturns whether or not a team can be joined ","classForced":true,"ret":"boolean","class":"function","description":"\nReturns whether or not a team can be joined","fname":"getJoinable","library":"team","realm":"sh","name":"team_library.getJoinable","param":{"1":"ind","ind":"Index of the team"}},"exists":{"summary":"\nReturns whether or not the team exists ","classForced":true,"ret":"boolean","class":"function","description":"\nReturns whether or not the team exists","fname":"exists","library":"team","realm":"sh","name":"team_library.exists","param":{"1":"ind","ind":"Index of the team"}},"getNumDeaths":{"summary":"\nReturns number of deaths of all players on a team ","classForced":true,"ret":"number of deaths","class":"function","description":"\nReturns number of deaths of all players on a team","fname":"getNumDeaths","library":"team","realm":"sh","name":"team_library.getNumDeaths","param":{"1":"ind","ind":"Index of the team"}},"getAllTeams":{"summary":"\nReturns a table containing team information ","ret":"table containing team information","class":"function","private":false,"library":"team","fname":"getAllTeams","realm":"sh","param":[],"name":"team_library.getAllTeams","description":"\nReturns a table containing team information"},"getNumFrags":{"summary":"\nReturns number of frags of all players on a team ","classForced":true,"ret":"number of frags","class":"function","description":"\nReturns number of frags of all players on a team","fname":"getNumFrags","library":"team","realm":"sh","name":"team_library.getNumFrags","param":{"1":"ind","ind":"Index of the team"}},"bestAutoJoinTeam":{"summary":"\nReturns team with least players ","classForced":true,"ret":"index of the best team to join","class":"function","description":"\nReturns team with least players","fname":"bestAutoJoinTeam","library":"team","realm":"sh","name":"team_library.bestAutoJoinTeam","param":[]},"getName":{"summary":"\nReturns the name of a team ","classForced":true,"ret":"String name of the team","class":"function","description":"\nReturns the name of a team","fname":"getName","library":"team","realm":"sh","name":"team_library.getName","param":{"1":"ind","ind":"Index of the team"}}},"name":"team","description":"\nLibrary for retreiving information about teams"},"http":{"server":true,"tables":[],"client":true,"summary":"\nHttp library.","libtbl":"http_library","fields":[],"class":"library","functions":{"1":"base64Decode","2":"base64Encode","3":"canRequest","4":"get","5":"post","6":"urlEncode","canRequest":{"summary":"\nChecks if a new http request can be started ","class":"function","private":false,"param":[],"fname":"canRequest","realm":"sh","description":"\nChecks if a new http request can be started","name":"http_library.canRequest","library":"http"},"post":{"summary":"\nRuns a new http POST request ","class":"function","private":false,"param":{"1":"url","2":"payload","3":"callbackSuccess","4":"callbackFail","5":"headers","payload":"optional POST payload to be sent, can be both table and string. When table is used, the request body is encoded as application/x-www-form-urlencoded","callbackSuccess":"optional function to be called on request success, taking the arguments body (string), length (number), headers (table) and code (number)","url":"http target url","callbackFail":"optional function to be called on request fail, taking the failing reason as an argument","headers":"optional POST headers to be sent"},"fname":"post","realm":"sh","description":"\nRuns a new http POST request","name":"http_library.post","library":"http"},"base64Encode":{"summary":"\nConverts data into base64 format or nil if the string is 0 length ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"base64Encode","realm":"sh","param":{"1":"data","data":"The data to convert"},"name":"http_library.base64Encode","description":"\nConverts data into base64 format or nil if the string is 0 length"},"urlEncode":{"summary":"\nEncodes illegal url characters to be legal ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"urlEncode","realm":"sh","param":{"1":"data","data":"The data to convert"},"name":"http_library.urlEncode","description":"\nEncodes illegal url characters to be legal"},"base64Decode":{"summary":"\nConverts data from base64 format ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"base64Decode","realm":"sh","param":{"1":"data","2":"threaded","data":"The data to convert","threaded":"Optional bool"},"name":"http_library.base64Decode","description":"\nConverts data from base64 format"},"get":{"summary":"\nRuns a new http GET request ","class":"function","private":false,"param":{"1":"url","2":"callbackSuccess","3":"callbackFail","4":"headers","url":"http target url","callbackSuccess":"the function to be called on request success, taking the arguments body (string), length (number), headers (table) and code (number)","callbackFail":"the function to be called on request fail, taking the failing reason as an argument","headers":"GET headers to be sent"},"fname":"get","realm":"sh","description":"\nRuns a new http GET request","name":"http_library.get","library":"http"}},"name":"http","description":"\nHttp library. Requests content from urls."},"particle":{"summary":"\nParticle library.","tables":[],"client":true,"libtbl":"particle_library","fields":[],"class":"library","functions":{"1":"attach","attach":{"summary":"\nAttaches a particle to an entity.","ret":"Particle type.","class":"function","private":false,"library":"particle","fname":"attach","realm":"cl","param":{"1":"entity","2":"particle","3":"pattach","4":"options","entity":"Entity to attach to","particle":"Name of the particle","pattach":"PATTACH enum","options":"Table of options"},"name":"particle_library.attach","description":"\nAttaches a particle to an entity."}},"name":"particle","description":"\nParticle library."},"file":{"summary":"\nFile functions.","tables":[],"client":true,"libtbl":"file_library","fields":[],"class":"library","functions":{"1":"append","2":"createDir","3":"delete","4":"exists","5":"find","6":"findInGame","7":"open","8":"read","9":"write","exists":{"summary":"\nChecks if a file exists ","ret":"True if exists, false if not, nil if error","class":"function","private":false,"library":"file","fname":"exists","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.exists","description":"\nChecks if a file exists"},"find":{"summary":"\nEnumerates a directory ","ret":["Table of file names","Table of directory names"],"class":"function","private":false,"library":"file","fname":"find","realm":"cl","param":{"1":"path","2":"sorting","path":"The folder to enumerate, relative to data/sf_filedata/.","sorting":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"},"name":"file_library.find","description":"\nEnumerates a directory"},"write":{"summary":"\nWrites to a file ","ret":"True if OK, nil if error","class":"function","private":false,"library":"file","fname":"write","realm":"cl","param":{"1":"path","2":"data","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.write","description":"\nWrites to a file"},"append":{"summary":"\nAppends a string to the end of a file ","class":"function","private":false,"param":{"1":"path","2":"data","path":"Filepath relative to data/sf_filedata/.","data":"String that will be appended to the file."},"fname":"append","realm":"cl","description":"\nAppends a string to the end of a file","name":"file_library.append","library":"file"},"read":{"summary":"\nReads a file from path ","ret":"Contents, or nil if error","class":"function","private":false,"library":"file","fname":"read","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.read","description":"\nReads a file from path"},"findInGame":{"summary":"\nEnumerates a directory relative to gmod ","ret":["Table of file names","Table of directory names"],"class":"function","private":false,"library":"file","fname":"findInGame","realm":"cl","param":{"1":"path","2":"sorting","path":"The folder to enumerate, relative to garrysmod.","sorting":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"},"name":"file_library.findInGame","description":"\nEnumerates a directory relative to gmod"},"open":{"summary":"\nOpens and returns a file ","ret":"File object or nil if it failed","class":"function","private":false,"library":"file","fname":"open","realm":"cl","param":{"1":"path","2":"mode","path":"Filepath relative to data/sf_filedata/.","mode":"The file mode to use. See lua manual for explaination"},"name":"file_library.open","description":"\nOpens and returns a file"},"delete":{"summary":"\nDeletes a file ","ret":"True if successful, nil if it wasn't found","class":"function","private":false,"library":"file","fname":"delete","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.delete","description":"\nDeletes a file"},"createDir":{"summary":"\nCreates a directory ","class":"function","private":false,"param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"fname":"createDir","realm":"cl","description":"\nCreates a directory","name":"file_library.createDir","library":"file"}},"name":"file","description":"\nFile functions. Allows modification of files."},"constraint":{"server":true,"tables":[],"summary":"\nLibrary for creating and manipulating constraints.","libtbl":"constraint_library","fields":[],"class":"library","functions":{"1":"axis","2":"ballsocket","3":"ballsocketadv","4":"breakAll","5":"breakType","6":"constraintsLeft","7":"elastic","8":"getTable","9":"nocollide","10":"rope","11":"setConstraintClean","12":"setElasticLength","13":"setRopeLength","14":"slider","15":"weld","rope":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nRopes two entities ","fname":"rope","realm":"sv","param":["index","e1","e2","bone1","bone2","v1","v2","length","addlength","force_lim","width","material","rigid"],"name":"constraint_library.rope","description":"\nRopes two entities"},"ballsocket":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBallsocket two entities ","fname":"ballsocket","realm":"sv","param":["e1","e2","bone1","bone2","v1","force_lim","torque_lim","nocollide"],"name":"constraint_library.ballsocket","description":"\nBallsocket two entities"},"setRopeLength":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSets the length of a rope attached to the entity ","fname":"setRopeLength","realm":"sv","param":["index","e","length"],"name":"constraint_library.setRopeLength","description":"\nSets the length of a rope attached to the entity"},"constraintsLeft":{"server":true,"ret":"number of constraints able to be spawned","class":"function","library":"constraint","private":false,"summary":"\nChecks how many constraints can be spawned ","fname":"constraintsLeft","realm":"sv","param":[],"name":"constraint_library.constraintsLeft","description":"\nChecks how many constraints can be spawned"},"setElasticLength":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSets the length of an elastic attached to the entity ","fname":"setElasticLength","realm":"sv","param":["index","e","length"],"name":"constraint_library.setElasticLength","description":"\nSets the length of an elastic attached to the entity"},"slider":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSliders two entities ","fname":"slider","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","width"],"name":"constraint_library.slider","description":"\nSliders two entities"},"setConstraintClean":{"summary":"\nSets whether the chip should remove created constraints when the chip is removed ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the constraints should be cleaned or not"},"fname":"setConstraintClean","realm":"sv","description":"\nSets whether the chip should remove created constraints when the chip is removed","name":"constraint_library.setConstraintClean","library":"constraint"},"ballsocketadv":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nAdvanced Ballsocket two entities ","fname":"ballsocketadv","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","force_lim","torque_lim","minv","maxv","frictionv","rotateonly","nocollide"],"name":"constraint_library.ballsocketadv","description":"\nAdvanced Ballsocket two entities"},"breakAll":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBreaks all constraints on an entity ","fname":"breakAll","realm":"sv","param":["e"],"name":"constraint_library.breakAll","description":"\nBreaks all constraints on an entity"},"breakType":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBreaks all constraints of a certain type on an entity ","fname":"breakType","realm":"sv","param":["e","typename"],"name":"constraint_library.breakType","description":"\nBreaks all constraints of a certain type on an entity"},"weld":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nWelds two entities ","fname":"weld","realm":"sv","param":{"1":"e1","2":"e2","3":"bone1","4":"bone2","5":"force_lim","6":"nocollide","nocollide":"Bool whether or not to nocollide the two entities","bone1":"Number bone of the first entity","e1":"The first entity","e2":"The second entity","force_lim":"Max force the weld can take before breaking","bone2":"Number bone of the second entity"},"name":"constraint_library.weld","description":"\nWelds two entities"},"axis":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nAxis two entities ","fname":"axis","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","force_lim","torque_lim","friction","nocollide","laxis"],"name":"constraint_library.axis","description":"\nAxis two entities"},"getTable":{"summary":"\nReturns the table of constraints on an entity ","ret":"Table of entity constraints","class":"function","private":false,"library":"constraint","fname":"getTable","realm":"sv","param":{"1":"ent","ent":"The entity"},"name":"constraint_library.getTable","description":"\nReturns the table of constraints on an entity"},"nocollide":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nNocollides two entities ","fname":"nocollide","realm":"sv","param":["e1","e2","bone1","bone2"],"name":"constraint_library.nocollide","description":"\nNocollides two entities"},"elastic":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nElastic two entities ","fname":"elastic","realm":"sv","param":["index","e1","e2","bone1","bone2","v1","v2","const","damp","rdamp","width","strech"],"name":"constraint_library.elastic","description":"\nElastic two entities"}},"name":"constraint","description":"\nLibrary for creating and manipulating constraints."},"game":{"server":true,"tables":[],"client":true,"summary":"\nGame functions ","libtbl":"game_lib","fields":[],"class":"library","functions":{"1":"getHostname","2":"getMap","3":"getMaxPlayers","4":"getSunInfo","5":"hasFocus","6":"isDedicated","7":"isLan","8":"isSinglePlayer","isDedicated":{"summary":"\nReturns whether or not the server is a dedicated server ","classForced":true,"ret":"boolean True if the game is a dedicated server","class":"function","description":"\nReturns whether or not the server is a dedicated server","fname":"isDedicated","library":"game","realm":"sh","name":"game_lib.isDedicated","param":[]},"isLan":{"summary":"\nReturns true if the server is on a LAN ","ret":"boolean True if the game is a lan game","class":"function","private":false,"library":"game","fname":"isLan","realm":"sh","param":[],"name":"game_lib.isLan","description":"\nReturns true if the server is on a LAN"},"getSunInfo":{"summary":"\nReturns the direction and how obstructed the map's sun is ","ret":["vector The direction of the sun","number How obstructed the sun is 0 to 1."],"class":"function","client":true,"private":false,"library":"game","fname":"getSunInfo","realm":"cl","param":[],"name":"game_lib.getSunInfo","description":"\nReturns the direction and how obstructed the map's sun is"},"hasFocus":{"summary":"\nReturns if the game has focus or not, i.e.","classForced":true,"ret":"boolean True if the game is focused","class":"function","client":true,"description":"\nReturns if the game has focus or not, i.e. will return false if the game is minimized","fname":"hasFocus","library":"game","realm":"cl","name":"game_lib.hasFocus","param":[]},"getHostname":{"summary":"\nReturns The hostname ","classForced":true,"ret":"string The hostname of the se`rver","class":"function","description":"\nReturns The hostname","fname":"getHostname","library":"game","realm":"sh","name":"game_lib.getHostname","param":[]},"getMaxPlayers":{"summary":"\nReturns the maximum player limit ","classForced":true,"ret":"number The max players allowed by the server","class":"function","description":"\nReturns the maximum player limit","fname":"getMaxPlayers","library":"game","realm":"sh","name":"game_lib.getMaxPlayers","param":[]},"isSinglePlayer":{"summary":"\nReturns whether or not the current game is single player ","classForced":true,"ret":"boolean True if the game is singleplayer","class":"function","description":"\nReturns whether or not the current game is single player","fname":"isSinglePlayer","library":"game","realm":"sh","name":"game_lib.isSinglePlayer","param":[]},"getMap":{"summary":"\nReturns the map name ","classForced":true,"ret":"string The name of the current map","class":"function","description":"\nReturns the map name","fname":"getMap","library":"game","realm":"sh","name":"game_lib.getMap","param":[]}},"name":"game","description":"\nGame functions"},"xinput":{"summary":"\nA simpler, hook-based, and more-powerful controller input library.","tables":[],"client":true,"libtbl":"xinput_library","fields":[],"class":"library","functions":{"1":"getBatteryLevel","2":"getButton","3":"getControllers","4":"getState","5":"getStick","6":"getTrigger","7":"setRumble","setRumble":{"summary":"\nSets the rumble on the controller.","class":"function","private":false,"param":{"1":"id","2":"softPercent","3":"hardPercent","softPercent":"A number between 0.0-1.0 for how much the soft rumble motor should vibrate.","hardPercent":"A number between 0.0-1.0 for how much the hard rumble motor should vibrate.","id":"Controller number. Starts at 0"},"fname":"setRumble","realm":"cl","description":"\nSets the rumble on the controller.","name":"xinput_library.setRumble","library":"xinput"},"getTrigger":{"summary":"\nGets the current position of the trigger on the controller.","classForced":true,"ret":"0-255 inclusive","class":"function","description":"\nGets the current position of the trigger on the controller.","fname":"getTrigger","library":"xinput","realm":"cl","name":"xinput_library.getTrigger","param":{"1":"id","2":"trigger","trigger":"Which trigger to use. 0 is left","id":"Controller number. Starts at 0"}},"getStick":{"summary":"\nGets the current coordinates of the stick on the controller.","classForced":true,"ret":"Two numbers for the X and Y coordinates, respectively, each being between -32768 - 32767 inclusive","class":"function","description":"\nGets the current coordinates of the stick on the controller.","fname":"getStick","library":"xinput","realm":"cl","name":"xinput_library.getStick","param":{"1":"id","2":"stick","stick":"Which stick to use. 0 is left","id":"Controller number. Starts at 0"}},"getBatteryLevel":{"summary":"\nAttempts to check the battery level of the controller.","classForced":true,"ret":"If successful: a number between 0.0-1.0 inclusive. If unsuccessful: false, and a string error message","class":"function","description":"\nAttempts to check the battery level of the controller.","fname":"getBatteryLevel","library":"xinput","realm":"cl","name":"xinput_library.getBatteryLevel","param":{"1":"id","id":"Controller number. Starts at 0"}},"getState":{"summary":"\nGets the state of the controller.","classForced":true,"ret":"Table containing all input data of the controller, or false if the controller is not connected. The table uses this struct: https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad","class":"function","description":"\nGets the state of the controller.","fname":"getState","library":"xinput","realm":"cl","name":"xinput_library.getState","param":{"1":"id","id":"Controller number. Starts at 0"}},"getButton":{"summary":"\nGets whether the button on the controller is currently pushed down.","classForced":true,"ret":"bool","class":"function","description":"\nGets whether the button on the controller is currently pushed down.","fname":"getButton","library":"xinput","realm":"cl","name":"xinput_library.getButton","param":{"1":"id","2":"button","button":"The button to check for. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_","id":"Controller number. Starts at 0"}},"getControllers":{"summary":"\nGets all of the connected controllers.","classForced":true,"ret":"A table where each key is the ID of the controller that is connected. Disconnected controllers are not placed in the table.","class":"function","description":"\nGets all of the connected controllers.","fname":"getControllers","library":"xinput","realm":"cl","name":"xinput_library.getControllers","param":[]}},"name":"xinput","description":"\nA simpler, hook-based, and more-powerful controller input library. Inputs are not lost between rendered frames, and there is support for rumble. Note: the client must have the XInput lua binary module installed in order to access this library. See more at https://github.com/mitterdoo/garrysmod-xinput"},"light":{"summary":"\nLight library.","tables":[],"client":true,"libtbl":"light_library","fields":[],"class":"library","functions":{"1":"create","create":{"summary":"\nCreates a dynamic light (make sure to draw it) ","ret":"Dynamic light","class":"function","private":false,"library":"light","fname":"create","realm":"cl","param":{"1":"pos","2":"size","3":"brightness","4":"color","color":"The color of the light","pos":"The position of the light","size":"The size of the light. Must be lower than sf_light_maxsize","brightness":"The brightness of the light"},"name":"light_library.create","description":"\nCreates a dynamic light (make sure to draw it)"}},"name":"light","description":"\nLight library."},"builtin":{"server":true,"classForced":true,"class":"library","client":true,"summary":"\nBuilt in values.","tables":{"1":"math","2":"os","3":"string","4":"table","os":{"summary":"\nThe os library.","classForced":true,"class":"table","tname":"os","description":"\nThe os library. http://wiki.garrysmod.com/page/Category:os","param":[],"name":"SF.DefaultEnvironment.os","library":"builtin"},"table":{"summary":"\nTable library.","classForced":true,"class":"table","tname":"table","description":"\nTable library. http://wiki.garrysmod.com/page/Category:table","param":[],"name":"SF.DefaultEnvironment.table","library":"builtin"},"math":{"summary":"\nThe math library.","classForced":true,"class":"table","tname":"math","description":"\nThe math library. http://wiki.garrysmod.com/page/Category:math","param":[],"name":"SF.DefaultEnvironment.math","library":"builtin"},"string":{"summary":"\nString library http://wiki.garrysmod.com/page/Category:string ","classForced":true,"class":"table","tname":"string","description":"\nString library http://wiki.garrysmod.com/page/Category:string","param":[],"name":"SF.DefaultEnvironment.string","library":"builtin"}},"functions":{"1":"assert","2":"chip","3":"class","4":"concmd","5":"crc","6":"debugGetInfo","7":"dodir","8":"dofile","9":"entity","10":"error","11":"eyeAngles","12":"eyePos","13":"eyeVector","14":"getLibraries","15":"getScripts","16":"getUserdata","17":"getfenv","18":"getmetatable","19":"hasPermission","20":"ipairs","21":"isFirstTimePredicted","22":"isValid","23":"loadstring","24":"localToWorld","25":"next","26":"owner","27":"pairs","28":"pcall","29":"permissionRequestSatisfied","30":"player","31":"printMessage","32":"printTable","33":"quotaAverage","34":"quotaMax","35":"quotaTotalAverage","36":"quotaTotalUsed","37":"quotaUsed","38":"ramAverage","39":"ramUsed","40":"rawget","41":"rawset","42":"require","43":"requiredir","44":"select","45":"setClipboardText","46":"setName","47":"setSoftQuota","48":"setTypeMethod","49":"setUserdata","50":"setfenv","51":"setmetatable","52":"setupPermissionRequest","53":"throw","54":"tonumber","55":"tostring","56":"try","57":"type","58":"unpack","59":"version","60":"worldToLocal","61":"xpcall","localToWorld":{"summary":"\nTranslates the specified position and angle from the specified local coordinate system ","ret":["worldPos","worldAngles"],"class":"function","private":false,"library":"builtin","fname":"localToWorld","realm":"sh","param":{"1":"localPos","2":"localAng","3":"originPos","4":"originAngle","localPos":"The position vector that should be translated to world coordinates","localAng":"The angle that should be converted to a world angle","originPos":"The origin point of the source coordinate system, in world coordinates","originAngle":"The angles of the source coordinate system, as a world angle"},"name":"SF.DefaultEnvironment.localToWorld","description":"\nTranslates the specified position and angle from the specified local coordinate system"},"version":{"summary":"\nGets the starfall version ","ret":"Starfall version","class":"function","private":false,"library":"builtin","fname":"version","realm":"sh","param":[],"name":"SF.DefaultEnvironment.version","description":"\nGets the starfall version"},"assert":{"summary":"\nIf the result of the first argument is false or nil, an error is thrown with the second argument as the message.","classForced":true,"class":"function","param":{"1":"condition","2":"msg","msg":"","condition":""},"private":false,"fname":"assert","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.assert","description":"\nIf the result of the first argument is false or nil, an error is thrown with the second argument as the message."},"tostring":{"summary":"\nAttempts to convert the value to a string.","classForced":true,"ret":"obj as string","class":"function","description":"\nAttempts to convert the value to a string.","fname":"tostring","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.tostring","param":{"1":"obj","obj":""}},"crc":{"summary":"\nGenerates the CRC checksum of the specified string.","classForced":true,"ret":"The unsigned 32 bit checksum as a string","class":"function","description":"\nGenerates the CRC checksum of the specified string. (https://en.wikipedia.org/wiki/Cyclic_redundancy_check)","fname":"crc","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.crc","param":{"1":"stringToHash","stringToHash":"The string to calculate the checksum of"}},"tonumber":{"summary":"\nAttempts to convert the value to a number.","classForced":true,"ret":"obj as number","class":"function","description":"\nAttempts to convert the value to a number.","fname":"tonumber","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.tonumber","param":{"1":"obj","obj":""}},"throw":{"summary":"\nThrows an exception ","class":"function","private":false,"param":{"1":"msg","2":"level","3":"uncatchable","level":"Which level in the stacktrace to blame. Defaults to 1","msg":"Message string","uncatchable":"Makes this exception uncatchable"},"fname":"throw","realm":"sh","description":"\nThrows an exception","name":"SF.DefaultEnvironment.throw","library":"builtin"},"rawget":{"summary":"\nGets the value of a table index without invoking a metamethod ","ret":"The value of the index","class":"function","private":false,"library":"builtin","fname":"rawget","realm":"sh","param":{"1":"table","2":"key","3":"value","key":"The index of the table","table":"The table to get the value from"},"name":"SF.DefaultEnvironment.rawget","description":"\nGets the value of a table index without invoking a metamethod"},"ramUsed":{"summary":"\nGets the current ram usage of the lua environment ","ret":"The ram used in bytes","class":"function","private":false,"library":"builtin","fname":"ramUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.ramUsed","description":"\nGets the current ram usage of the lua environment"},"class":{"summary":"\nCreates a 'middleclass' class object that can be used similarly to Java/C++ classes.","class":"function","private":false,"param":{"1":"name","2":"super","name":"The string name of the class","super":"The (optional) parent class to inherit from"},"fname":"class","realm":"sh","description":"\nCreates a 'middleclass' class object that can be used similarly to Java/C++ classes. See https://github.com/kikito/middleclass for examples.","name":"SF.DefaultEnvironment.class","library":"builtin"},"ramAverage":{"summary":"\nGets the moving average of ram usage of the lua environment ","ret":"The ram used in bytes","class":"function","private":false,"library":"builtin","fname":"ramAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.ramAverage","description":"\nGets the moving average of ram usage of the lua environment"},"isFirstTimePredicted":{"summary":"\nReturns if this is the first time this hook was predicted.","classForced":true,"ret":"Boolean","class":"function","description":"\nReturns if this is the first time this hook was predicted.","fname":"isFirstTimePredicted","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.isFirstTimePredicted","param":[]},"worldToLocal":{"summary":"\nTranslates the specified position and angle into the specified coordinate system ","ret":["localPos","localAngles"],"class":"function","private":false,"library":"builtin","fname":"worldToLocal","realm":"sh","param":{"1":"pos","2":"ang","3":"newSystemOrigin","4":"newSystemAngles","ang":"The angles that should be translated from the current to the new system","pos":"The position that should be translated from the current to the new system","newSystemAngles":"The angles of the system to translate to","newSystemOrigin":"The origin of the system to translate to"},"name":"SF.DefaultEnvironment.worldToLocal","description":"\nTranslates the specified position and angle into the specified coordinate system"},"dodir":{"summary":"\nRuns an included directory, but does not cache the result.","ret":"Table of return values of the scripts","class":"function","private":false,"library":"builtin","fname":"dodir","realm":"sh","param":{"1":"dir","2":"loadpriority","loadpriority":"Table of files that should be loaded before any others in the directory","dir":"The directory to include. Make sure to --@includedir it"},"name":"SF.DefaultEnvironment.dodir","description":"\nRuns an included directory, but does not cache the result."},"error":{"summary":"\nThrows a raw exception.","class":"function","private":false,"param":{"1":"msg","2":"level","level":"Which level in the stacktrace to blame. Defaults to 1","msg":"Exception message"},"fname":"error","realm":"sh","description":"\nThrows a raw exception.","name":"SF.DefaultEnvironment.error","library":"builtin"},"ipairs":{"summary":"\nReturns an iterator function for a for loop, to return ordered key-value pairs from a table.","classForced":true,"ret":["Iterator function","Table tbl","0 as current index"],"class":"function","description":"\nReturns an iterator function for a for loop, to return ordered key-value pairs from a table.","fname":"ipairs","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.ipairs","param":{"1":"tbl","tbl":"Table to iterate over"}},"try":{"summary":"\nTry to execute a function and catch possible exceptions \nSimilar to xpcall, but a bit more in-depth ","class":"function","private":false,"param":{"1":"func","2":"catch","func":"Function to execute","catch":"Optional function to execute in case func fails"},"fname":"try","realm":"sh","description":"\nTry to execute a function and catch possible exceptions \nSimilar to xpcall, but a bit more in-depth","name":"SF.DefaultEnvironment.try","library":"builtin"},"xpcall":{"summary":"\nLua's xpcall with SF throw implementation, and a traceback for debugging.","ret":["Status of the execution; true for success, false for failure.","The returns of the first function if execution succeeded, otherwise the return values of the error callback."],"class":"function","private":false,"library":"builtin","fname":"xpcall","realm":"sh","param":{"1":"func","2":"callback","3":"...","func":"The function to call initially.","callback":"The function to be called if execution of the first fails; the error message and stack trace are passed.","...":"Varargs to pass to the initial function."},"name":"SF.DefaultEnvironment.xpcall","description":"\nLua's xpcall with SF throw implementation, and a traceback for debugging. \nAttempts to call the first function. If the execution succeeds, this returns true followed by the returns of the function. \nIf execution fails, this returns false and the second function is called with the error message, and the stack trace."},"getfenv":{"summary":"\nSimple version of Lua's getfenv \nReturns the current environment ","ret":"Current environment","class":"function","private":false,"library":"builtin","fname":"getfenv","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getfenv","description":"\nSimple version of Lua's getfenv \nReturns the current environment"},"debugGetInfo":{"summary":"\nGLua's getinfo() \nReturns a DebugInfo structure containing the passed function's info (https://wiki.garrysmod.com/page/Structures/DebugInfo) ","ret":"DebugInfo table","class":"function","private":false,"library":"builtin","fname":"debugGetInfo","realm":"sh","param":{"1":"funcOrStackLevel","2":"fields","funcOrStackLevel":"Function or stack level to get info about. Defaults to stack level 0.","fields":"A string that specifies the information to be retrieved. Defaults to all (flnSu)."},"name":"SF.DefaultEnvironment.debugGetInfo","description":"\nGLua's getinfo() \nReturns a DebugInfo structure containing the passed function's info (https://wiki.garrysmod.com/page/Structures/DebugInfo)"},"quotaUsed":{"summary":"\nReturns the current count for this Think's CPU Time.","ret":"Current quota used this Think","class":"function","private":false,"library":"builtin","fname":"quotaUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaUsed","description":"\nReturns the current count for this Think's CPU Time. \nThis value increases as more executions are done, may not be exactly as you want. \nIf used on screens, will show 0 if only rendering is done. Operations must be done in the Think loop for them to be counted."},"pcall":{"summary":"\nLua's pcall with SF throw implementation \nCalls a function and catches an error that can be thrown while the execution of the call.","ret":["If the function had no errors occur within it.","If an error occurred, this will be a string containing the error message. Otherwise, this will be the return values of the function passed in."],"class":"function","private":false,"library":"builtin","fname":"pcall","realm":"sh","param":{"1":"func","2":"...","3":"arguments","func":"Function to be executed and of which the errors should be caught of","arguments":"Arguments to call the function with."},"name":"SF.DefaultEnvironment.pcall","description":"\nLua's pcall with SF throw implementation \nCalls a function and catches an error that can be thrown while the execution of the call."},"setSoftQuota":{"summary":"\nSets a CPU soft quota which will trigger a catchable error if the cpu goes over a certain amount.","class":"function","private":false,"param":{"1":"quota","quota":"The threshold where the soft error will be thrown. Ratio of current cpu to the max cpu usage. 0.5 is 50%"},"fname":"setSoftQuota","realm":"sh","description":"\nSets a CPU soft quota which will trigger a catchable error if the cpu goes over a certain amount.","name":"SF.DefaultEnvironment.setSoftQuota","library":"builtin"},"quotaAverage":{"summary":"\nGets the Average CPU Time in the buffer ","ret":"Average CPU Time of the buffer.","class":"function","private":false,"library":"builtin","fname":"quotaAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaAverage","description":"\nGets the Average CPU Time in the buffer"},"setName":{"summary":"\nSets the chip's display name ","class":"function","client":true,"private":false,"library":"builtin","fname":"setName","realm":"cl","param":{"1":"name","name":"Name"},"name":"SF.DefaultEnvironment.setName","description":"\nSets the chip's display name"},"setfenv":{"summary":"\nLua's setfenv \nWorks like setfenv, but is restricted on functions ","ret":"func with environment set to tbl","class":"function","private":false,"library":"builtin","fname":"setfenv","realm":"sh","param":{"1":"func","2":"tbl","func":"Function to change environment of","tbl":"New environment"},"name":"SF.DefaultEnvironment.setfenv","description":"\nLua's setfenv \nWorks like setfenv, but is restricted on functions"},"loadstring":{"summary":"\nGLua's loadstring \nWorks like loadstring, except that it executes by default in the main environment ","ret":"Function of str","class":"function","private":false,"library":"builtin","fname":"loadstring","realm":"sh","param":{"1":"str","2":"name","str":"String to execute"},"name":"SF.DefaultEnvironment.loadstring","description":"\nGLua's loadstring \nWorks like loadstring, except that it executes by default in the main environment"},"quotaTotalAverage":{"summary":"\nReturns the total average time for all chips by the player.","ret":"Total average CPU Time of all your chips.","class":"function","private":false,"library":"builtin","fname":"quotaTotalAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaTotalAverage","description":"\nReturns the total average time for all chips by the player."},"isValid":{"summary":"\nReturns if the table has an isValid function and isValid returns true.","ret":"If it is valid","class":"function","private":false,"library":"builtin","fname":"isValid","realm":"sh","param":{"1":"object","object":"Table to check"},"name":"SF.DefaultEnvironment.isValid","description":"\nReturns if the table has an isValid function and isValid returns true."},"concmd":{"server":true,"class":"function","client":true,"library":"builtin","private":false,"summary":"\nExecute a console command ","fname":"concmd","realm":"sh","param":{"1":"cmd","cmd":"Command to execute"},"name":"SF.DefaultEnvironment.concmd","description":"\nExecute a console command"},"getScripts":{"summary":"\nReturns the table of scripts used by the chip ","ret":"Table of scripts used by the chip","class":"function","private":false,"library":"builtin","fname":"getScripts","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getScripts","description":"\nReturns the table of scripts used by the chip"},"eyeVector":{"summary":"\nReturns the local player's camera forward vector ","ret":"The local player's camera forward vector","class":"function","client":true,"private":false,"library":"builtin","fname":"eyeVector","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyeVector","description":"\nReturns the local player's camera forward vector"},"getLibraries":{"summary":"\nGets a list of all libraries ","ret":"Table containing the names of each available library","class":"function","private":false,"library":"builtin","fname":"getLibraries","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getLibraries","description":"\nGets a list of all libraries"},"rawset":{"summary":"\nSet the value of a table index without invoking a metamethod ","class":"function","private":false,"param":{"1":"table","2":"key","3":"value","value":"The value to set the index equal to","key":"The index of the table","table":"The table to modify"},"fname":"rawset","realm":"sh","description":"\nSet the value of a table index without invoking a metamethod","name":"SF.DefaultEnvironment.rawset","library":"builtin"},"setupPermissionRequest":{"summary":"\nSetups request for overriding permissions.","class":"function","client":true,"private":false,"library":"builtin","fname":"setupPermissionRequest","realm":"cl","param":{"1":"perms","2":"desc","3":"showOnUse","desc":"Description attached to request.","showOnUse":"Whether request will popup when player uses chip or linked screen.","perms":"Table of overridable permissions' names."},"name":"SF.DefaultEnvironment.setupPermissionRequest","description":"\nSetups request for overriding permissions."},"requiredir":{"summary":"\nRuns an included script and caches the result.","ret":"Table of return values of the scripts","class":"function","private":false,"library":"builtin","fname":"requiredir","realm":"sh","param":{"1":"dir","2":"loadpriority","loadpriority":"Table of files that should be loaded before any others in the directory","dir":"The directory to include. Make sure to --@includedir it"},"name":"SF.DefaultEnvironment.requiredir","description":"\nRuns an included script and caches the result. \nWorks pretty much like standard Lua require()"},"require":{"summary":"\nRuns an included script and caches the result.","ret":"Return value of the script","class":"function","private":false,"library":"builtin","fname":"require","realm":"sh","param":{"1":"file","file":"The file to include. Make sure to --@include it"},"name":"SF.DefaultEnvironment.require","description":"\nRuns an included script and caches the result. \nWorks pretty much like standard Lua require()"},"player":{"summary":"\nSame as owner() on the server.","classForced":true,"ret":"Returns player with given UserID or if none specified then returns either the owner (server) or the local player (client)","class":"function","description":"\nSame as owner() on the server. On the client, returns the local player","fname":"player","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.player","param":[]},"setClipboardText":{"summary":"\nSets clipboard text.","class":"function","private":false,"param":{"1":"txt","txt":"Text to set to the clipboard"},"fname":"setClipboardText","realm":"sh","description":"\nSets clipboard text. Only works on the owner of the chip.","name":"SF.DefaultEnvironment.setClipboardText","library":"builtin"},"eyePos":{"summary":"\nReturns the local player's camera position ","ret":"The local player's camera position","class":"function","client":true,"private":false,"library":"builtin","fname":"eyePos","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyePos","description":"\nReturns the local player's camera position"},"dofile":{"summary":"\nRuns an included script, but does not cache the result.","ret":"Return value of the script","class":"function","private":false,"library":"builtin","fname":"dofile","realm":"sh","param":{"1":"file","file":"The file to include. Make sure to --@include it"},"name":"SF.DefaultEnvironment.dofile","description":"\nRuns an included script, but does not cache the result. \nPretty much like standard Lua dofile()"},"printMessage":{"summary":"\nPrints a message to your chat, console, or the center of your screen.","class":"function","private":false,"param":{"1":"mtype","2":"text","text":"The message text.","mtype":"How the message should be displayed. See http://wiki.garrysmod.com/page/Enums/HUD"},"fname":"printMessage","realm":"sh","description":"\nPrints a message to your chat, console, or the center of your screen.","name":"SF.DefaultEnvironment.printMessage","library":"builtin"},"printTable":{"summary":"\nPrints a table to player's chat ","class":"function","private":false,"param":{"1":"tbl","tbl":"Table to print"},"fname":"printTable","realm":"sh","description":"\nPrints a table to player's chat","name":"SF.DefaultEnvironment.printTable","library":"builtin"},"setTypeMethod":{"summary":"\nSet's metamethod on SF type ","class":"function","private":false,"param":{"1":"sfType","2":"methodName","3":"method","sfType":"Name of SF type","method":"Method to set","methodName":"Name of method"},"fname":"setTypeMethod","realm":"sh","description":"\nSet's metamethod on SF type","name":"SF.DefaultEnvironment.setTypeMethod","library":"builtin"},"getUserdata":{"server":true,"ret":"String data","class":"function","library":"builtin","private":false,"summary":"\nGets the chip's userdata that the duplicator tool loads ","fname":"getUserdata","realm":"sv","param":[],"name":"SF.DefaultEnvironment.getUserdata","description":"\nGets the chip's userdata that the duplicator tool loads"},"setUserdata":{"server":true,"class":"function","library":"builtin","private":false,"summary":"\nSets the chip's userdata that the duplicator tool saves.","fname":"setUserdata","realm":"sv","param":{"1":"str","str":"String data"},"name":"SF.DefaultEnvironment.setUserdata","description":"\nSets the chip's userdata that the duplicator tool saves. max 1MiB; can be changed with convar sf_userdata_max"},"pairs":{"summary":"\nReturns an iterator function for a for loop that will return the values of the specified table in an arbitrary order.","classForced":true,"ret":["Iterator function","Table tbl","nil as current index"],"class":"function","description":"\nReturns an iterator function for a for loop that will return the values of the specified table in an arbitrary order.","fname":"pairs","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.pairs","param":{"1":"tbl","tbl":"Table to iterate over"}},"chip":{"summary":"\nReturns the entity representing a processor that this script is running on.","classForced":true,"ret":"Starfall entity","class":"function","description":"\nReturns the entity representing a processor that this script is running on.","fname":"chip","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.chip","param":[]},"unpack":{"summary":"\nThis function takes a numeric indexed table and return all the members as a vararg.","classForced":true,"ret":"Elements of tbl","class":"function","description":"\nThis function takes a numeric indexed table and return all the members as a vararg.","fname":"unpack","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.unpack","param":{"1":"tbl","tbl":""}},"entity":{"summary":"\nReturns the entity with index 'num' ","classForced":true,"ret":"entity","class":"function","description":"\nReturns the entity with index 'num'","fname":"entity","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.entity","param":{"1":"num","num":"Entity index"}},"next":{"summary":"\nReturns the next key and value pair in a table.","classForced":true,"ret":["Key or nil","Value or nil"],"class":"function","description":"\nReturns the next key and value pair in a table.","fname":"next","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.next","param":{"1":"tbl","2":"k","tbl":"Table to get the next key-value pair of","k":"Previous key (can be nil)"}},"hasPermission":{"summary":"\nChecks if the chip is capable of performing an action.","class":"function","private":false,"param":{"1":"perm","2":"obj","obj":"Optional object to pass to the permission system.","perm":"The permission id to check"},"fname":"hasPermission","realm":"sh","description":"\nChecks if the chip is capable of performing an action.","name":"SF.DefaultEnvironment.hasPermission","library":"builtin"},"quotaMax":{"summary":"\nGets the CPU Time max.","ret":"Max SysTime allowed to take for execution of the chip in a Think.","class":"function","private":false,"library":"builtin","fname":"quotaMax","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaMax","description":"\nGets the CPU Time max. \nCPU Time is stored in a buffer of N elements, if the average of this exceeds quotaMax, the chip will error."},"owner":{"summary":"\nReturns whoever created the chip ","classForced":true,"ret":"Owner entity","class":"function","description":"\nReturns whoever created the chip","fname":"owner","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.owner","param":[]},"setmetatable":{"summary":"\nSets, changes or removes a table's metatable.","classForced":true,"ret":"tbl with metatable set to meta","class":"function","description":"\nSets, changes or removes a table's metatable. Doesn't work on most internal metatables","fname":"setmetatable","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.setmetatable","param":{"1":"tbl","2":"meta","tbl":"The table to set the metatable of","meta":"The metatable to use"}},"select":{"summary":"\nUsed to select single values from a vararg or get the count of values in it.","classForced":true,"ret":"Returns a number or vararg, depending on the select method.","class":"function","description":"\nUsed to select single values from a vararg or get the count of values in it.","fname":"select","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.select","param":{"1":"parameter","2":"vararg","vararg":"","parameter":""}},"quotaTotalUsed":{"summary":"\nReturns the total used time for all chips by the player.","ret":"Total used CPU time of all your chips.","class":"function","private":false,"library":"builtin","fname":"quotaTotalUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaTotalUsed","description":"\nReturns the total used time for all chips by the player."},"type":{"summary":"\nReturns a string representing the name of the type of the passed object.","classForced":true,"ret":"The name of the object's type.","class":"function","param":{"1":"obj","obj":"Object to get type of"},"private":false,"fname":"type","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.type","description":"\nReturns a string representing the name of the type of the passed object."},"getmetatable":{"summary":"\nReturns the metatable of an object.","ret":"The metatable of tbl","class":"function","private":false,"library":"builtin","fname":"getmetatable","realm":"sh","param":{"1":"tbl","tbl":"Table to get metatable of"},"name":"SF.DefaultEnvironment.getmetatable","description":"\nReturns the metatable of an object. Doesn't work on most internal metatables"},"eyeAngles":{"summary":"\nReturns the local player's camera angles ","ret":"The local player's camera angles","class":"function","client":true,"private":false,"library":"builtin","fname":"eyeAngles","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyeAngles","description":"\nReturns the local player's camera angles"},"permissionRequestSatisfied":{"summary":"\nIs permission request fully satisfied.","ret":"Boolean of whether the client gave all permissions specified in last request or not.","class":"function","client":true,"private":false,"library":"builtin","fname":"permissionRequestSatisfied","realm":"cl","param":[],"name":"SF.DefaultEnvironment.permissionRequestSatisfied","description":"\nIs permission request fully satisfied."}},"libtbl":"SF.DefaultEnvironment","fields":{"1":"CLIENT","2":"SERVER","SERVER":{"summary":"\nConstant that denotes whether the code is executed on the server ","classForced":true,"class":"field","description":"\nConstant that denotes whether the code is executed on the server","param":[],"name":"SF.DefaultEnvironment.SERVER","library":"builtin"},"CLIENT":{"summary":"\nConstant that denotes whether the code is executed on the client ","classForced":true,"class":"field","description":"\nConstant that denotes whether the code is executed on the client","param":[],"name":"SF.DefaultEnvironment.CLIENT","library":"builtin"}},"name":"builtin","description":"\nBuilt in values. These don't need to be loaded; they are in the default environment."},"prop":{"server":true,"tables":[],"client":true,"summary":"\nLibrary for creating and manipulating physics-less models AKA \"Props\".","libtbl":"props_library","fields":[],"class":"library","functions":{"1":"canSpawn","2":"create","3":"createComponent","4":"createCustom","5":"createSent","6":"propsLeft","7":"setPropClean","8":"setPropUndo","9":"spawnRate","spawnRate":{"server":true,"ret":"Number of props per second the user can spawn","class":"function","library":"prop","private":false,"summary":"\nReturns how many props per second the user can spawn ","fname":"spawnRate","realm":"sv","param":[],"name":"props_library.spawnRate","description":"\nReturns how many props per second the user can spawn"},"setPropUndo":{"summary":"\nSets whether the props should be undo-able ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the props should be undo-able"},"fname":"setPropUndo","realm":"sv","description":"\nSets whether the props should be undo-able","name":"props_library.setPropUndo","library":"prop"},"createSent":{"server":true,"ret":"The sent object","class":"function","library":"prop","private":false,"summary":"\nCreates a sent.","fname":"createSent","realm":"sv","param":{"1":"pos","2":"ang","3":"class","4":"frozen","ang":"Angle of created sent","pos":"Position of created sent","frozen":"True to spawn frozen","class":"Class of created sent"},"name":"props_library.createSent","description":"\nCreates a sent."},"create":{"server":true,"ret":"The prop object","class":"function","library":"prop","private":false,"summary":"\nCreates a prop.","fname":"create","realm":"sv","param":["pos","ang","model","frozen"],"name":"props_library.create","description":"\nCreates a prop."},"createComponent":{"server":true,"ret":"Component entity","class":"function","library":"prop","private":false,"summary":"\nCreates starfall component.\\n Allowed components:\\n starfall_hud\\n starfall_screen ","fname":"createComponent","realm":"sv","param":{"1":"pos","2":"ang","3":"class","4":"model","5":"frozen","pos":"Position of created component","ang":"Angle of created component","model":"Model of created component","frozen":"True to spawn frozen","class":"Class of created component"},"name":"props_library.createComponent","description":"\nCreates starfall component.\\n Allowed components:\\n starfall_hud\\n starfall_screen"},"propsLeft":{"server":true,"ret":"number of props able to be spawned","class":"function","library":"prop","private":false,"summary":"\nChecks how many props can be spawned ","fname":"propsLeft","realm":"sv","param":[],"name":"props_library.propsLeft","description":"\nChecks how many props can be spawned"},"setPropClean":{"summary":"\nSets whether the chip should remove created props when the chip is removed ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the props should be cleaned or not"},"fname":"setPropClean","realm":"sv","description":"\nSets whether the chip should remove created props when the chip is removed","name":"props_library.setPropClean","library":"prop"},"createCustom":{"server":true,"ret":"The prop object","class":"function","library":"prop","private":false,"summary":"\nCreates a custom prop.","fname":"createCustom","realm":"sv","param":{"1":"pos","2":"ang","3":"vertices","4":"frozen","ang":"The angles to spawn the prop","pos":"The position to spawn the prop","frozen":"Whether the prop starts frozen"},"name":"props_library.createCustom","description":"\nCreates a custom prop."},"canSpawn":{"server":true,"ret":"True if user can spawn props, False if not.","class":"function","library":"prop","private":false,"summary":"\nChecks if a user can spawn anymore props.","fname":"canSpawn","realm":"sv","param":[],"name":"props_library.canSpawn","description":"\nChecks if a user can spawn anymore props."}},"name":"prop","description":"\nLibrary for creating and manipulating physics-less models AKA \"Props\"."},"input":{"summary":"\nInput library.","tables":[],"client":true,"libtbl":"input_methods","fields":[],"class":"library","functions":{"1":"canLockControls","2":"enableCursor","3":"getCursorPos","4":"getCursorVisible","5":"getKeyName","6":"isControlDown","7":"isControlLocked","8":"isKeyDown","9":"isShiftDown","10":"lockControls","11":"lookupBinding","12":"screenToVector","13":"selectWeapon","isControlLocked":{"summary":"\nGets whether the player's control is currenty locked ","ret":"Whether the player's control is locked","class":"function","client":true,"private":false,"library":"input","fname":"isControlLocked","realm":"cl","param":[],"name":"input_methods.isControlLocked","description":"\nGets whether the player's control is currenty locked"},"isKeyDown":{"summary":"\nGets whether a key is down ","ret":"True if the key is down","class":"function","client":true,"private":false,"library":"input","fname":"isKeyDown","realm":"cl","param":{"1":"key","key":"The key id, see input"},"name":"input_methods.isKeyDown","description":"\nGets whether a key is down"},"enableCursor":{"summary":"\nSets the state of the mouse cursor ","class":"function","client":true,"private":false,"library":"input","fname":"enableCursor","realm":"cl","param":{"1":"enabled","enabled":"Whether or not the cursor should be enabled"},"name":"input_methods.enableCursor","description":"\nSets the state of the mouse cursor"},"lockControls":{"summary":"\nLocks game controls for typing purposes.","class":"function","client":true,"private":false,"library":"input","fname":"lockControls","realm":"cl","param":{"1":"enabled","enabled":"Whether to lock or unlock the controls"},"name":"input_methods.lockControls","description":"\nLocks game controls for typing purposes. Alt will unlock the controls. Has a 10 second cooldown."},"screenToVector":{"summary":"\nTranslates position on player's screen to aim vector ","ret":"Aim vector","class":"function","client":true,"private":false,"library":"input","fname":"screenToVector","realm":"cl","param":{"1":"x","2":"y","y":"Y coordinate on the screen","x":"X coordinate on the screen"},"name":"input_methods.screenToVector","description":"\nTranslates position on player's screen to aim vector"},"getKeyName":{"summary":"\nGets the name of a key from the id ","ret":"The name of the key","class":"function","client":true,"private":false,"library":"input","fname":"getKeyName","realm":"cl","param":{"1":"key","key":"The key id, see input"},"name":"input_methods.getKeyName","description":"\nGets the name of a key from the id"},"isShiftDown":{"summary":"\nGets whether the shift key is down ","ret":"True if the shift key is down","class":"function","client":true,"private":false,"library":"input","fname":"isShiftDown","realm":"cl","param":[],"name":"input_methods.isShiftDown","description":"\nGets whether the shift key is down"},"getCursorPos":{"summary":"\nGets the position of the mouse ","ret":["The x position of the mouse","The y position of the mouse"],"class":"function","client":true,"private":false,"library":"input","fname":"getCursorPos","realm":"cl","param":[],"name":"input_methods.getCursorPos","description":"\nGets the position of the mouse"},"canLockControls":{"summary":"\nGets whether the player's control can be locked ","ret":"Whether the player's control can be locked","class":"function","client":true,"private":false,"library":"input","fname":"canLockControls","realm":"cl","param":[],"name":"input_methods.canLockControls","description":"\nGets whether the player's control can be locked"},"getCursorVisible":{"summary":"\nGets whether the cursor is visible on the screen ","ret":"The cursor's visibility","class":"function","client":true,"private":false,"library":"input","fname":"getCursorVisible","realm":"cl","param":[],"name":"input_methods.getCursorVisible","description":"\nGets whether the cursor is visible on the screen"},"selectWeapon":{"summary":"\nMakes the local player select a weapon ","class":"function","client":true,"private":false,"library":"input","fname":"selectWeapon","realm":"cl","param":{"1":"weapon","weapon":"The weapon entity to select"},"name":"input_methods.selectWeapon","description":"\nMakes the local player select a weapon"},"isControlDown":{"summary":"\nGets whether the control key is down ","ret":"True if the control key is down","class":"function","client":true,"private":false,"library":"input","fname":"isControlDown","realm":"cl","param":[],"name":"input_methods.isControlDown","description":"\nGets whether the control key is down"},"lookupBinding":{"summary":"\nGets the first key that is bound to the command passed ","ret":["The id of the first key bound","The name of the first key bound"],"class":"function","client":true,"private":false,"library":"input","fname":"lookupBinding","realm":"cl","param":{"1":"binding","binding":"The name of the bind"},"name":"input_methods.lookupBinding","description":"\nGets the first key that is bound to the command passed"}},"name":"input","description":"\nInput library."},"find":{"server":true,"tables":[],"client":true,"summary":"\nFind library.","libtbl":"find_library","fields":[],"class":"library","functions":{"1":"all","2":"allPlayers","3":"byClass","4":"byModel","5":"byName","6":"closest","7":"inBox","8":"inCone","9":"inPVS","10":"inRay","11":"inSphere","12":"sortByClosest","byName":{"summary":"\nFinds entities by their targetname ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byName","realm":"sh","param":{"1":"name","2":"filter","name":"The targetname","filter":"Optional function to filter results"},"name":"find_library.byName","description":"\nFinds entities by their targetname"},"inSphere":{"summary":"\nFinds entities in a sphere ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inSphere","realm":"sh","param":{"1":"center","2":"radius","3":"filter","filter":"Optional function to filter results","center":"Center of the sphere","radius":"Sphere radius"},"name":"find_library.inSphere","description":"\nFinds entities in a sphere"},"inRay":{"summary":"\nFinds entities in a ray ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inRay","realm":"sh","param":{"1":"startpos","2":"endpos","3":"mins","4":"maxs","5":"filter","filter":"Optional function to filter results","endpos":"The ray end","mins":"If not null, will define a lower bound of the ray's hull","maxs":"If not null, will define a upper bound of the ray's hull","startpos":"The ray start"},"name":"find_library.inRay","description":"\nFinds entities in a ray"},"inCone":{"summary":"\nFinds entities in a cone ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inCone","realm":"sh","param":{"1":"pos","2":"dir","3":"distance","4":"radius","5":"filter","filter":"Optional function to filter results","pos":"The cone vertex position","dir":"The direction to project the cone","distance":"The length to project the cone","radius":"The cosine of angle of the cone. 1 makes a 0° cone, 0.707 makes approximately 90°, 0 makes 180°, and so on."},"name":"find_library.inCone","description":"\nFinds entities in a cone"},"inPVS":{"server":true,"ret":"An array of found entities","class":"function","library":"find","private":false,"summary":"\nFinds entities that are in the PVS (Potentially Visible Set).","fname":"inPVS","realm":"sv","param":{"1":"pos","2":"filter","filter":"Optional function to filter results","pos":"Vector view point"},"name":"find_library.inPVS","description":"\nFinds entities that are in the PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},"sortByClosest":{"summary":"\nReturns a sorted array of entities by how close they are to a point ","ret":"A table of the closest entities","class":"function","private":false,"library":"find","fname":"sortByClosest","realm":"sh","param":{"1":"ents","2":"pos","3":"furthest","pos":"The position","ents":"The array of entities","furthest":"Whether to have the further entities first"},"name":"find_library.sortByClosest","description":"\nReturns a sorted array of entities by how close they are to a point"},"closest":{"summary":"\nFinds the closest entity to a point ","ret":"The closest entity","class":"function","private":false,"library":"find","fname":"closest","realm":"sh","param":{"1":"ents","2":"pos","pos":"The position","ents":"The array of entities"},"name":"find_library.closest","description":"\nFinds the closest entity to a point"},"all":{"summary":"\nFinds all entitites ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"all","realm":"sh","param":{"1":"filter","filter":"Optional function to filter results"},"name":"find_library.all","description":"\nFinds all entitites"},"byClass":{"summary":"\nFinds entities by class name ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byClass","realm":"sh","param":{"1":"class","2":"filter","filter":"Optional function to filter results","class":"The class name"},"name":"find_library.byClass","description":"\nFinds entities by class name"},"byModel":{"summary":"\nFinds entities by model ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byModel","realm":"sh","param":{"1":"model","2":"filter","filter":"Optional function to filter results","model":"The model file"},"name":"find_library.byModel","description":"\nFinds entities by model"},"allPlayers":{"summary":"\nFinds all players (including bots) ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"allPlayers","realm":"sh","param":{"1":"filter","filter":"Optional function to filter results"},"name":"find_library.allPlayers","description":"\nFinds all players (including bots)"},"inBox":{"summary":"\nFinds entities in a box ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inBox","realm":"sh","param":{"1":"min","2":"max","3":"filter","max":"Top corner","min":"Bottom corner","filter":"Optional function to filter results"},"name":"find_library.inBox","description":"\nFinds entities in a box"}},"name":"find","description":"\nFind library. Finds entities in various shapes."},"fastlz":{"server":true,"tables":[],"client":true,"summary":"\nFastLZ library ","libtbl":"fastlz_library","fields":[],"class":"library","functions":{"1":"compress","2":"decompress","compress":{"summary":"\nCompress string using FastLZ ","ret":"FastLZ compressed string","class":"function","private":false,"library":"fastlz","fname":"compress","realm":"sh","param":{"1":"s","s":"String to compress"},"name":"fastlz_library.compress","description":"\nCompress string using FastLZ"},"decompress":{"summary":"\nDecompress using FastLZ ","ret":"Decompressed string","class":"function","private":false,"library":"fastlz","fname":"decompress","realm":"sh","param":{"1":"s","s":"FastLZ compressed string to decode"},"name":"fastlz_library.decompress","description":"\nDecompress using FastLZ"}},"name":"fastlz","description":"\nFastLZ library"},"holograms":{"server":true,"tables":[],"client":true,"summary":"\nLibrary for creating and manipulating physics-less models AKA \"Holograms\".","libtbl":"holograms_library","fields":[],"class":"library","functions":{"1":"canSpawn","2":"create","3":"hologramsLeft","canSpawn":{"summary":"\nChecks if a user can spawn anymore holograms.","ret":"True if user can spawn holograms, False if not.","class":"function","private":false,"library":"holograms","fname":"canSpawn","realm":"sh","param":[],"name":"holograms_library.canSpawn","description":"\nChecks if a user can spawn anymore holograms."},"create":{"summary":"\nCreates a hologram.","ret":"The hologram object","class":"function","private":false,"library":"holograms","fname":"create","realm":"sh","param":["pos","ang","model","scale"],"name":"holograms_library.create","description":"\nCreates a hologram."},"hologramsLeft":{"summary":"\nChecks how many holograms can be spawned ","ret":"number of holograms able to be spawned","class":"function","private":false,"library":"holograms","fname":"hologramsLeft","realm":"sh","param":[],"name":"holograms_library.hologramsLeft","description":"\nChecks how many holograms can be spawned"}},"name":"holograms","description":"\nLibrary for creating and manipulating physics-less models AKA \"Holograms\"."},"mesh":{"server":true,"tables":[],"client":true,"summary":"\nMesh library.","libtbl":"mesh_library","fields":[],"class":"library","functions":{"1":"createFromObj","2":"createFromTable","3":"getModelMeshes","4":"parseObj","5":"trianglesLeft","6":"trianglesLeftRender","createFromObj":{"summary":"\nCreates a mesh from an obj file.","ret":"Mesh object","class":"function","client":true,"private":false,"library":"mesh","fname":"createFromObj","realm":"cl","param":{"1":"obj","2":"threaded","3":"triangulate","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit","obj":"The obj file data","triangulate":"Whether to triangulate faces. (Consumes more CPU)"},"name":"mesh_library.createFromObj","description":"\nCreates a mesh from an obj file. Only supports triangular meshes with normals and texture coordinates."},"getModelMeshes":{"summary":"\nReturns a table of visual meshes of given model or nil if the model is invalid ","ret":"A table of tables with the following format:<br><br>string material - The material of the specific mesh<br>table triangles - A table of MeshVertex structures ready to be fed into IMesh:BuildFromTriangles<br>table verticies - A table of MeshVertex structures representing all the vertexes of the mesh. This table is used internally to generate the \"triangles\" table.<br>Each MeshVertex structure returned also has an extra table of tables field called \"weights\" with the following data:<br><br>number boneID - The bone this vertex is attached to<br>number weight - How \"strong\" this vertex is attached to the bone. A vertex can be attached to multiple bones at once.","class":"function","client":true,"private":false,"library":"mesh","fname":"getModelMeshes","realm":"cl","param":{"1":"model","2":"lod","3":"bodygroupMask","model":"The full path to a model to get the visual meshes of.","lod":"The lod of the model to use.","bodygroupMask":"The bodygroupMask of the model to use."},"name":"mesh_library.getModelMeshes","description":"\nReturns a table of visual meshes of given model or nil if the model is invalid"},"createFromTable":{"summary":"\nCreates a mesh from vertex data.","ret":"Mesh object","class":"function","client":true,"private":false,"library":"mesh","fname":"createFromTable","realm":"cl","param":{"1":"verteces","2":"threaded","verteces":"Table containing vertex data. http://wiki.garrysmod.com/page/Structures/MeshVertex","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit"},"name":"mesh_library.createFromTable","description":"\nCreates a mesh from vertex data."},"parseObj":{"summary":"\nParses obj data into a table of vertices, normals, texture coordinates, colors, and tangents ","ret":["The table of vertices that can be passed to mesh.buildFromTriangles","The table of obj data. table.positions can be given to prop.createCustom"],"class":"function","private":false,"library":"mesh","fname":"parseObj","realm":"sh","param":{"1":"obj","2":"threaded","3":"triangulate","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit","obj":"The obj data","triangulate":"Whether to triangulate the faces"},"name":"mesh_library.parseObj","description":"\nParses obj data into a table of vertices, normals, texture coordinates, colors, and tangents"},"trianglesLeftRender":{"summary":"\nReturns how many triangles can be rendered ","ret":"Number of triangles that can be rendered","class":"function","client":true,"private":false,"library":"mesh","fname":"trianglesLeftRender","realm":"cl","param":[],"name":"mesh_library.trianglesLeftRender","description":"\nReturns how many triangles can be rendered"},"trianglesLeft":{"summary":"\nReturns how many triangles can be created ","ret":"Number of triangles that can be created","class":"function","client":true,"private":false,"library":"mesh","fname":"trianglesLeft","realm":"cl","param":[],"name":"mesh_library.trianglesLeft","description":"\nReturns how many triangles can be created"}},"name":"mesh","description":"\nMesh library."},"quaternion":{"server":true,"tables":[],"client":true,"summary":"\nQuaternion library ","libtbl":"quat_lib","fields":[],"class":"library","functions":{"1":"New","2":"abs","3":"conj","4":"exp","5":"inv","6":"log","7":"qMod","8":"qRotation","9":"qRotation","10":"qi","11":"qj","12":"qk","13":"rotationAngle","14":"rotationAxis","15":"rotationEulerAngle","16":"rotationVector","17":"slerp","18":"vec","New":{"summary":"\nCreates a new Quaternion given a variety of inputs ","class":"function","private":false,"param":{"1":"self","2":"...","...":"A series of arguments which lead to valid generation of a quaternion. \nSee argTypesToQuat table for examples of acceptable inputs."},"fname":"New","realm":"sh","description":"\nCreates a new Quaternion given a variety of inputs","name":"quat_lib.New","library":"quaternion"},"rotationEulerAngle":{"summary":"\nReturns the euler angle of rotation in degrees ","class":"function","private":false,"param":["q"],"fname":"rotationEulerAngle","realm":"sh","description":"\nReturns the euler angle of rotation in degrees","name":"quat_lib.rotationEulerAngle","library":"quaternion"},"conj":{"summary":"\nReturns the conjugate of <q> ","class":"function","private":false,"param":["q"],"fname":"conj","realm":"sh","description":"\nReturns the conjugate of <q>","name":"quat_lib.conj","library":"quaternion"},"rotationVector":{"summary":"\nReturns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationVector","realm":"sh","description":"\nReturns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff)","name":"quat_lib.rotationVector","library":"quaternion"},"slerp":{"summary":"\nPerforms spherical linear interpolation between <q0> and <q1>.","class":"function","private":false,"param":["q0","q1","t"],"fname":"slerp","realm":"sh","description":"\nPerforms spherical linear interpolation between <q0> and <q1>. Returns <q0> for <t>=0, <q1> for <t>=1","name":"quat_lib.slerp","library":"quaternion"},"qi":{"summary":"\nReturns Quaternion <n>*i ","class":"function","private":false,"param":["n"],"fname":"qi","realm":"sh","description":"\nReturns Quaternion <n>*i","name":"quat_lib.qi","library":"quaternion"},"qj":{"summary":"\nReturns Quaternion <n>*j ","class":"function","private":false,"param":["n"],"fname":"qj","realm":"sh","description":"\nReturns Quaternion <n>*j","name":"quat_lib.qj","library":"quaternion"},"qMod":{"summary":"\nChanges quaternion <q> so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"qMod","realm":"sh","description":"\nChanges quaternion <q> so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff)","name":"quat_lib.qMod","library":"quaternion"},"qRotation":{"summary":"\nConstruct a quaternion from the rotation vector <rv1>.","class":"function","private":false,"param":["rv1"],"fname":"qRotation","realm":"sh","description":"\nConstruct a quaternion from the rotation vector <rv1>. Vector direction is axis of rotation, magnitude is angle in degress (by coder0xff)","name":"quat_lib.qRotation","library":"quaternion"},"qk":{"summary":"\nReturns Quaternion <n>*k ","class":"function","private":false,"param":["n"],"fname":"qk","realm":"sh","description":"\nReturns Quaternion <n>*k","name":"quat_lib.qk","library":"quaternion"},"abs":{"summary":"\nReturns absolute value of <q> ","class":"function","private":false,"param":["q"],"fname":"abs","realm":"sh","description":"\nReturns absolute value of <q>","name":"quat_lib.abs","library":"quaternion"},"vec":{"summary":"\nConverts <q> to a vector by dropping the real component ","class":"function","private":false,"param":["q"],"fname":"vec","realm":"sh","description":"\nConverts <q> to a vector by dropping the real component","name":"quat_lib.vec","library":"quaternion"},"inv":{"summary":"\nReturns the inverse of <q> ","class":"function","private":false,"param":["q"],"fname":"inv","realm":"sh","description":"\nReturns the inverse of <q>","name":"quat_lib.inv","library":"quaternion"},"rotationAxis":{"summary":"\nReturns the axis of rotation (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationAxis","realm":"sh","description":"\nReturns the axis of rotation (by coder0xff)","name":"quat_lib.rotationAxis","library":"quaternion"},"rotationAngle":{"summary":"\nReturns the angle of rotation in degrees (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationAngle","realm":"sh","description":"\nReturns the angle of rotation in degrees (by coder0xff)","name":"quat_lib.rotationAngle","library":"quaternion"},"exp":{"summary":"\nRaises Euler's constant e to the power <q> ","class":"function","private":false,"param":["q"],"fname":"exp","realm":"sh","description":"\nRaises Euler's constant e to the power <q>","name":"quat_lib.exp","library":"quaternion"},"log":{"summary":"\nCalculates natural logarithm of <q> ","class":"function","private":false,"param":["q"],"fname":"log","realm":"sh","description":"\nCalculates natural logarithm of <q>","name":"quat_lib.log","library":"quaternion"}},"name":"quaternion","description":"\nQuaternion library"},"effect":{"server":true,"tables":[],"client":true,"summary":"\nEffects library.","libtbl":"effect_library","fields":[],"class":"library","functions":{"1":"create","2":"effectsLeft","create":{"summary":"\nCreates an effect data structure ","ret":"Effect Object","class":"function","private":false,"library":"effect","fname":"create","realm":"sh","param":[],"name":"effect_library.create","description":"\nCreates an effect data structure"},"effectsLeft":{"summary":"\nReturns number of effects able to be created ","ret":"number of effects able to be created","class":"function","private":false,"library":"effect","fname":"effectsLeft","realm":"sh","param":[],"name":"effect_library.effectsLeft","description":"\nReturns number of effects able to be created"}},"name":"effect","description":"\nEffects library."},"sql":{"summary":"\nSQL library.","tables":[],"client":true,"libtbl":"sql_library","fields":[],"class":"library","functions":{"1":"SQLStr","2":"query","3":"tableExists","4":"tableRemove","query":{"summary":"\nPerforms a query on the local SQLite database.","ret":"Query results as a table, nil if the query returned no data.","class":"function","private":false,"library":"sql","fname":"query","realm":"cl","param":{"1":"query","query":"The query to execute."},"name":"sql_library.query","description":"\nPerforms a query on the local SQLite database."},"SQLStr":{"summary":"\nEscapes dangerous characters and symbols from user input used in an SQLite SQL Query.","ret":"The escaped input.","class":"function","private":false,"library":"sql","fname":"SQLStr","realm":"cl","param":{"1":"str","2":"bNoQuotes","bNoQuotes":"Set this as true, and the function will not wrap the input string in apostrophes.","str":"The string to be escaped."},"name":"sql_library.SQLStr","description":"\nEscapes dangerous characters and symbols from user input used in an SQLite SQL Query."},"tableExists":{"summary":"\nChecks if a table exists within the local SQLite database.","ret":"False if the table does not exist, true if it does.","class":"function","private":false,"library":"sql","fname":"tableExists","realm":"cl","param":{"1":"tabname","tabname":"The table to check for."},"name":"sql_library.tableExists","description":"\nChecks if a table exists within the local SQLite database."},"tableRemove":{"summary":"\nRemoves a table within the local SQLite database.","ret":"True if the table was successfully removed, false if not.","class":"function","private":false,"library":"sql","fname":"tableRemove","realm":"cl","param":{"1":"tabname","tabname":"The table to remove."},"name":"sql_library.tableRemove","description":"\nRemoves a table within the local SQLite database."}},"name":"sql","description":"\nSQL library."},"joystick":{"summary":"\nJoystick library.","tables":[],"client":true,"libtbl":"joystick_library","fields":[],"class":"library","functions":{"1":"getAxis","2":"getButton","3":"getName","4":"getPov","5":"numAxes","6":"numButtons","7":"numJoysticks","8":"numPovs","numJoysticks":{"summary":"\nGets the number of detected joysticks.","ret":"Number of joysticks","class":"function","private":false,"library":"joystick","fname":"numJoysticks","realm":"cl","param":[],"name":"joystick_library.numJoysticks","description":"\nGets the number of detected joysticks."},"numButtons":{"summary":"\nGets the number of detected buttons on a joystick ","ret":"Number of buttons","class":"function","private":false,"library":"joystick","fname":"numButtons","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numButtons","description":"\nGets the number of detected buttons on a joystick"},"numPovs":{"summary":"\nGets the number of detected povs on a joystick ","ret":"Number of povs","class":"function","private":false,"library":"joystick","fname":"numPovs","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numPovs","description":"\nGets the number of detected povs on a joystick"},"numAxes":{"summary":"\nGets the number of detected axes on a joystick ","ret":"Number of axes","class":"function","private":false,"library":"joystick","fname":"numAxes","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numAxes","description":"\nGets the number of detected axes on a joystick"},"getAxis":{"summary":"\nGets the axis data value.","ret":"0 - 65535 where 32767 is the middle.","class":"function","private":false,"library":"joystick","fname":"getAxis","realm":"cl","param":{"1":"enum","2":"axis","axis":"Joystick axis number. Ranges from 0 to 7.","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getAxis","description":"\nGets the axis data value."},"getName":{"summary":"\nGets the hardware name of the joystick ","ret":"Name of the device","class":"function","private":false,"library":"joystick","fname":"getName","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getName","description":"\nGets the hardware name of the joystick"},"getButton":{"summary":"\nReturns if the button is pushed or not ","ret":"0 or 1","class":"function","private":false,"library":"joystick","fname":"getButton","realm":"cl","param":{"1":"enum","2":"button","button":"Joystick button number. Starts at 0","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getButton","description":"\nReturns if the button is pushed or not"},"getPov":{"summary":"\nGets the pov data value.","ret":"0 - 65535 where 32767 is the middle.","class":"function","private":false,"library":"joystick","fname":"getPov","realm":"cl","param":{"1":"enum","2":"pov","pov":"Joystick pov number. Ranges from 0 to 7.","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getPov","description":"\nGets the pov data value."}},"name":"joystick","description":"\nJoystick library."},"notification":{"summary":"\nNotification library.","tables":[],"client":true,"libtbl":"notification_library","fields":[],"class":"library","functions":{"1":"addLegacy","2":"addProgress","3":"kill","addProgress":{"summary":"\nDisplays a notification with an animated progress bar, will persist unless killed or chip is removed.","class":"function","private":false,"param":{"1":"id","2":"text","text":"The text to display","id":"String index of the notification"},"fname":"addProgress","realm":"cl","description":"\nDisplays a notification with an animated progress bar, will persist unless killed or chip is removed.","name":"notification_library.addProgress","library":"notification"},"kill":{"summary":"\nRemoves the notification with the given index after 0.8 seconds ","class":"function","private":false,"param":{"1":"id","id":"String index of the notification to kill"},"fname":"kill","realm":"cl","description":"\nRemoves the notification with the given index after 0.8 seconds","name":"notification_library.kill","library":"notification"},"addLegacy":{"summary":"\nDisplays a standard notification.","class":"function","private":false,"param":{"1":"text","2":"type","3":"length","type":"Determines the notification method. \nNOTIFY.GENERIC \nNOTIFY.ERROR \nNOTIFY.UNDO \nNOTIFY.HINT \nNOTIFY.CLEANUP","length":"Time in seconds to display the notification (Max length of 30)","text":"The text to display"},"fname":"addLegacy","realm":"cl","description":"\nDisplays a standard notification.","name":"notification_library.addLegacy","library":"notification"}},"name":"notification","description":"\nNotification library. Allows the user to display hints on the bottom right of their screen"},"timer":{"server":true,"tables":[],"client":true,"summary":"\nDeals with time and timers.","libtbl":"timer_library","fields":[],"class":"library","functions":{"1":"adjust","2":"create","3":"curtime","4":"exists","5":"frametime","6":"getTimersLeft","7":"pause","8":"realtime","9":"remove","10":"repsleft","11":"simple","12":"start","13":"stop","14":"systime","15":"timeleft","16":"toggle","17":"unpause","exists":{"summary":"\nChecks if a timer exists ","ret":"bool if the timer exists","class":"function","private":false,"library":"timer","fname":"exists","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.exists","description":"\nChecks if a timer exists"},"realtime":{"summary":"\nReturns the uptime of the game/server in seconds (to at least 4 decimal places) ","class":"function","private":false,"param":[],"fname":"realtime","realm":"sh","description":"\nReturns the uptime of the game/server in seconds (to at least 4 decimal places)","name":"timer_library.realtime","library":"timer"},"create":{"summary":"\nCreates (and starts) a timer ","class":"function","private":false,"param":{"1":"name","2":"delay","3":"reps","4":"func","func":"The function to call when the timer is fired","reps":"The repititions of the tiemr. 0 = infinte, nil = 1","name":"The timer name","delay":"The time, in seconds, to set the timer to."},"fname":"create","realm":"sh","description":"\nCreates (and starts) a timer","name":"timer_library.create","library":"timer"},"getTimersLeft":{"summary":"\nReturns number of available timers ","ret":"Number of available timers","class":"function","private":false,"library":"timer","fname":"getTimersLeft","realm":"sh","param":[],"name":"timer_library.getTimersLeft","description":"\nReturns number of available timers"},"start":{"summary":"\nStarts a timer ","ret":"true if the timer exists, false if it doesn't.","class":"function","private":false,"library":"timer","fname":"start","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.start","description":"\nStarts a timer"},"timeleft":{"summary":"\nReturns amount of time left (in seconds) before the timer executes its function.","ret":"The amount of time left (in seconds). If the timer is paused, the amount will be negative. Nil if timer doesnt exist","class":"function","private":false,"library":"timer","fname":"timeleft","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.timeleft","description":"\nReturns amount of time left (in seconds) before the timer executes its function."},"frametime":{"summary":"\nReturns time between frames on client and ticks on server.","class":"function","private":false,"param":[],"fname":"frametime","realm":"sh","description":"\nReturns time between frames on client and ticks on server. Same thing as G.FrameTime in GLua","name":"timer_library.frametime","library":"timer"},"adjust":{"summary":"\nAdjusts a timer ","ret":"true if succeeded","class":"function","private":false,"library":"timer","fname":"adjust","realm":"sh","param":{"1":"name","2":"delay","3":"reps","4":"func","func":"(Optional) The function to call when the tiemr is fired","reps":"(Optional) The repititions of the tiemr. 0 = infinte, nil = 1","name":"The timer name","delay":"The time, in seconds, to set the timer to."},"name":"timer_library.adjust","description":"\nAdjusts a timer"},"pause":{"summary":"\nPauses a timer ","ret":"false if the timer didn't exist or was already paused, true otherwise.","class":"function","private":false,"library":"timer","fname":"pause","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.pause","description":"\nPauses a timer"},"systime":{"summary":"\nReturns a highly accurate time in seconds since the start up, ideal for benchmarking.","class":"function","private":false,"param":[],"fname":"systime","realm":"sh","description":"\nReturns a highly accurate time in seconds since the start up, ideal for benchmarking.","name":"timer_library.systime","library":"timer"},"repsleft":{"summary":"\nReturns amount of repetitions/executions left before the timer destroys itself.","ret":"The amount of executions left. Nil if timer doesnt exist","class":"function","private":false,"library":"timer","fname":"repsleft","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.repsleft","description":"\nReturns amount of repetitions/executions left before the timer destroys itself."},"curtime":{"summary":"\nReturns the uptime of the server in seconds (to at least 4 decimal places) ","class":"function","private":false,"param":[],"fname":"curtime","realm":"sh","description":"\nReturns the uptime of the server in seconds (to at least 4 decimal places)","name":"timer_library.curtime","library":"timer"},"unpause":{"summary":"\nUnpauses a timer ","ret":"false if the timer didn't exist or was already running, true otherwise.","class":"function","private":false,"library":"timer","fname":"unpause","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.unpause","description":"\nUnpauses a timer"},"toggle":{"summary":"\nRuns either timer.pause or timer.unpause based on the timer's current status.","ret":"status of the timer.","class":"function","private":false,"library":"timer","fname":"toggle","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.toggle","description":"\nRuns either timer.pause or timer.unpause based on the timer's current status."},"stop":{"summary":"\nStops a timer ","ret":"false if the timer didn't exist or was already stopped, true otherwise.","class":"function","private":false,"library":"timer","fname":"stop","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.stop","description":"\nStops a timer"},"simple":{"summary":"\nCreates a simple timer, has no name, can't be stopped, paused, or destroyed.","class":"function","private":false,"param":{"1":"delay","2":"func","func":"the function to call when the timer is fired","delay":"the time, in second, to set the timer to"},"fname":"simple","realm":"sh","description":"\nCreates a simple timer, has no name, can't be stopped, paused, or destroyed.","name":"timer_library.simple","library":"timer"},"remove":{"summary":"\nStops and removes the timer.","class":"function","private":false,"param":{"1":"name","name":"The timer name"},"fname":"remove","realm":"sh","description":"\nStops and removes the timer.","name":"timer_library.remove","library":"timer"}},"name":"timer","description":"\nDeals with time and timers."},"wire":{"summary":"\nWire library.","tables":{"1":"ports","ports":{"summary":"\nPorts table.","class":"table","tname":"ports","description":"\nPorts table. Reads from this table will read from the wire input \nof the same name. Writes will write to the wire output of the same name.","param":[],"classForced":true,"name":"wire_library.ports","library":"wire"}},"libtbl":"wire_library","fields":[],"class":"library","functions":{"1":"adjustInputs","2":"adjustOutputs","3":"create","4":"delete","5":"getInputs","6":"getOutputs","7":"getWirelink","8":"self","9":"serverUUID","self":{"summary":"\nReturns the wirelink representing this entity.","class":"function","private":false,"param":[],"fname":"self","realm":"sv","description":"\nReturns the wirelink representing this entity.","name":"wire_library.self","library":"wire"},"getWirelink":{"summary":"\nReturns a wirelink to a wire entity ","ret":"Wirelink of the entity","class":"function","private":false,"library":"wire","fname":"getWirelink","realm":"sv","param":{"1":"ent","ent":"Wire entity"},"name":"wire_library.getWirelink","description":"\nReturns a wirelink to a wire entity"},"adjustInputs":{"summary":"\nCreates/Modifies wire inputs.","class":"function","private":false,"param":{"1":"names","2":"types","names":"An array of input names. May be modified by the function.","types":"An array of input types. Can be shortcuts. May be modified by the function."},"fname":"adjustInputs","realm":"sv","description":"\nCreates/Modifies wire inputs. All wire ports must begin with an uppercase \nletter and contain only alphabetical characters.","name":"wire_library.adjustInputs","library":"wire"},"create":{"summary":"\nWires two entities together ","class":"function","private":false,"param":{"1":"entI","2":"entO","3":"inputname","4":"outputname","5":"width","6":"color","7":"material","outputname":"Output to be wired","width":"Width of the wire(optional)","inputname":"Input to be wired","entO":"Entity with output","entI":"Entity with input","material":"Material of the wire(optional), Valid materials are cable/rope, cable/cable2, cable/xbeam, cable/redlaser, cable/blue_elec, cable/physbeam, cable/hydra, arrowire/arrowire, arrowire/arrowire2","color":"Color of the wire(optional)"},"fname":"create","realm":"sv","description":"\nWires two entities together","name":"wire_library.create","library":"wire"},"serverUUID":{"summary":"\nReturns the server's UUID.","ret":"UUID as string","class":"function","private":false,"library":"wire","fname":"serverUUID","realm":"sv","param":[],"name":"wire_library.serverUUID","description":"\nReturns the server's UUID."},"delete":{"summary":"\nUnwires an entity's input ","class":"function","private":false,"param":{"1":"entI","2":"inputname","inputname":"Input to be un-wired","entI":"Entity with input"},"fname":"delete","realm":"sv","description":"\nUnwires an entity's input","name":"wire_library.delete","library":"wire"},"getOutputs":{"summary":"\nReturns a table of entity's outputs ","ret":"Table of entity's outputs","class":"function","private":false,"library":"wire","fname":"getOutputs","realm":"sv","param":{"1":"entO","entO":"Entity with output(s)"},"name":"wire_library.getOutputs","description":"\nReturns a table of entity's outputs"},"adjustOutputs":{"summary":"\nCreates/Modifies wire outputs.","class":"function","private":false,"param":{"1":"names","2":"types","names":"An array of output names. May be modified by the function.","types":"An array of output types. Can be shortcuts. May be modified by the function."},"fname":"adjustOutputs","realm":"sv","description":"\nCreates/Modifies wire outputs. All wire ports must begin with an uppercase \nletter and contain only alphabetical characters.","name":"wire_library.adjustOutputs","library":"wire"},"getInputs":{"summary":"\nReturns a table of entity's inputs ","ret":"Table of entity's inputs","class":"function","private":false,"library":"wire","fname":"getInputs","realm":"sv","param":{"1":"entI","entI":"Entity with input(s)"},"name":"wire_library.getInputs","description":"\nReturns a table of entity's inputs"}},"name":"wire","description":"\nWire library. Handles wire inputs/outputs, wirelinks, etc."},"physenv":{"server":true,"tables":[],"client":true,"summary":"\nPhysenv functions ","libtbl":"physenv_lib","fields":[],"class":"library","functions":{"1":"getAirDensity","2":"getGravity","3":"getPerformanceSettings","getAirDensity":{"summary":"\nGets the air density.","ret":"number Air Density","class":"function","private":false,"library":"physenv","fname":"getAirDensity","realm":"sh","param":[],"name":"physenv_lib.getAirDensity","description":"\nGets the air density."},"getPerformanceSettings":{"summary":"\nGets the performance settings.</br> \nSee <a href=\"http://wiki.garrysmod.com/page/Structures/PhysEnvPerformanceSettings\">PhysEnvPerformance Settings Table Structure</a> for table structure.","ret":"table Performance Settings Table.","class":"function","private":false,"library":"physenv","fname":"getPerformanceSettings","realm":"sh","param":[],"name":"physenv_lib.getPerformanceSettings","description":"\nGets the performance settings.</br> \nSee <a href=\"http://wiki.garrysmod.com/page/Structures/PhysEnvPerformanceSettings\">PhysEnvPerformance Settings Table Structure</a> for table structure."},"getGravity":{"summary":"\nGets the gravity vector ","ret":"Vector Gravity Vector ( eg Vector(0,0,-600) )","class":"function","private":false,"library":"physenv","fname":"getGravity","realm":"sh","param":[],"name":"physenv_lib.getGravity","description":"\nGets the gravity vector"}},"name":"physenv","description":"\nPhysenv functions"},"net":{"summary":"\nNet message library.","tables":[],"libtbl":"net_library","fields":[],"class":"library","functions":{"1":"cancelStream","2":"getBitsLeft","3":"getBytesLeft","4":"getStreamProgress","5":"isStreaming","6":"readAngle","7":"readBit","8":"readBool","9":"readColor","10":"readData","11":"readDouble","12":"readEntity","13":"readFloat","14":"readInt","15":"readMatrix","16":"readStream","17":"readString","18":"readTable","19":"readType","20":"readUInt","21":"readVector","22":"receive","23":"send","24":"start","25":"writeAngle","26":"writeBit","27":"writeBool","28":"writeColor","29":"writeData","30":"writeDouble","31":"writeEntity","32":"writeFloat","33":"writeInt","34":"writeMatrix","35":"writeStream","36":"writeString","37":"writeTable","38":"writeType","39":"writeUInt","40":"writeVector","readVector":{"server":true,"ret":"The vector that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a vector from the net message ","fname":"readVector","realm":"sh","param":[],"name":"net_library.readVector","description":"\nReads a vector from the net message"},"writeUInt":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an unsigned integer to the net message ","fname":"writeUInt","realm":"sh","param":{"1":"t","2":"n","t":"The integer to be written","n":"The amount of bits the integer consists of. Should not be greater than 32"},"name":"net_library.writeUInt","description":"\nWrites an unsigned integer to the net message"},"send":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nSend a net message from client->server, or server->client.","fname":"send","realm":"sh","param":{"1":"target","2":"unreliable","unreliable":"Optional choose whether it's more important for the message to actually reach its destination (false) or reach it as fast as possible (true).","target":"Optional target location to send the net message."},"name":"net_library.send","description":"\nSend a net message from client->server, or server->client."},"readInt":{"server":true,"ret":"The integer that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an integer from the net message ","fname":"readInt","realm":"sh","param":{"1":"n","n":"The amount of bits to read"},"name":"net_library.readInt","description":"\nReads an integer from the net message"},"cancelStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nCancels a currently running readStream ","fname":"cancelStream","realm":"sh","param":[],"name":"net_library.cancelStream","description":"\nCancels a currently running readStream"},"readMatrix":{"server":true,"ret":"The matrix that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a matrix from the net message ","fname":"readMatrix","realm":"sh","param":[],"name":"net_library.readMatrix","description":"\nReads a matrix from the net message"},"writeDouble":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a double to the net message ","fname":"writeDouble","realm":"sh","param":{"1":"t","t":"The double to be written"},"name":"net_library.writeDouble","description":"\nWrites a double to the net message"},"readTable":{"server":true,"ret":"The object","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read.","fname":"readTable","realm":"sh","param":[],"name":"net_library.readTable","description":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read. Make sure to pcall it"},"readBool":{"server":true,"ret":"The boolean that was read.","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a boolean from the net message ","fname":"readBool","realm":"sh","param":[],"name":"net_library.readBool","description":"\nReads a boolean from the net message"},"writeData":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites string containing null characters to the net message ","fname":"writeData","realm":"sh","param":{"1":"t","2":"n","t":"The string to be written","n":"How much of the string to write"},"name":"net_library.writeData","description":"\nWrites string containing null characters to the net message"},"readUInt":{"server":true,"ret":"The unsigned integer that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an unsigned integer from the net message ","fname":"readUInt","realm":"sh","param":{"1":"n","n":"The amount of bits to read"},"name":"net_library.readUInt","description":"\nReads an unsigned integer from the net message"},"readData":{"server":true,"ret":"The string that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a string from the net message ","fname":"readData","realm":"sh","param":{"1":"n","n":"How many characters are in the data"},"name":"net_library.readData","description":"\nReads a string from the net message"},"writeTable":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a table to a net message automatically typing it.","fname":"writeTable","realm":"sh","param":{"1":"t","2":"v","v":"The object to write"},"name":"net_library.writeTable","description":"\nWrites a table to a net message automatically typing it."},"getStreamProgress":{"server":true,"ret":"The progress ratio 0-1","class":"function","client":true,"library":"net","private":false,"summary":"\nReturns the progress of a running readStream ","fname":"getStreamProgress","realm":"sh","param":[],"name":"net_library.getStreamProgress","description":"\nReturns the progress of a running readStream"},"readDouble":{"server":true,"ret":"The double that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a double from the net message ","fname":"readDouble","realm":"sh","param":[],"name":"net_library.readDouble","description":"\nReads a double from the net message"},"getBitsLeft":{"summary":"\nReturns available bandwidth in bits ","ret":"number of bits that can be sent","class":"function","private":false,"library":"net","fname":"getBitsLeft","realm":"sh","param":[],"name":"net_library.getBitsLeft","description":"\nReturns available bandwidth in bits"},"writeString":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a string to the net message.","fname":"writeString","realm":"sh","param":{"1":"t","t":"The string to be written"},"name":"net_library.writeString","description":"\nWrites a string to the net message. Null characters will terminate the string."},"readBit":{"server":true,"ret":"The bit that was read. (0 for false, 1 for true)","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a bit from the net message ","fname":"readBit","realm":"sh","param":[],"name":"net_library.readBit","description":"\nReads a bit from the net message"},"writeEntity":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an entity to the net message ","fname":"writeEntity","realm":"sh","param":{"1":"t","t":"The entity to be written"},"name":"net_library.writeEntity","description":"\nWrites an entity to the net message"},"writeInt":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an integer to the net message ","fname":"writeInt","realm":"sh","param":{"1":"t","2":"n","t":"The integer to be written","n":"The amount of bits the integer consists of"},"name":"net_library.writeInt","description":"\nWrites an integer to the net message"},"writeFloat":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a float to the net message ","fname":"writeFloat","realm":"sh","param":{"1":"t","t":"The float to be written"},"name":"net_library.writeFloat","description":"\nWrites a float to the net message"},"writeVector":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an vector to the net message.","fname":"writeVector","realm":"sh","param":{"1":"t","t":"The vector to be written"},"name":"net_library.writeVector","description":"\nWrites an vector to the net message. Has significantly lower precision than writeFloat"},"readType":{"server":true,"ret":"The object","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read.","fname":"readType","realm":"sh","param":[],"name":"net_library.readType","description":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read. Make sure to pcall it"},"start":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nStarts the net message ","fname":"start","realm":"sh","param":{"1":"name","name":"The message name"},"name":"net_library.start","description":"\nStarts the net message"},"readAngle":{"server":true,"ret":"The angle that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an angle from the net message ","fname":"readAngle","realm":"sh","param":[],"name":"net_library.readAngle","description":"\nReads an angle from the net message"},"writeBool":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a bool to the net message ","fname":"writeBool","realm":"sh","param":{"1":"t","t":"The bit to be written. (boolean)"},"name":"net_library.writeBool","description":"\nWrites a bool to the net message"},"readFloat":{"server":true,"ret":"The float that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a float from the net message ","fname":"readFloat","realm":"sh","param":[],"name":"net_library.readFloat","description":"\nReads a float from the net message"},"getBytesLeft":{"summary":"\nReturns available bandwidth in bytes ","ret":"number of bytes that can be sent","class":"function","private":false,"library":"net","fname":"getBytesLeft","realm":"sh","param":[],"name":"net_library.getBytesLeft","description":"\nReturns available bandwidth in bytes"},"receive":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nLike glua net.Receive, adds a callback that is called when a net message with the matching name is received.","fname":"receive","realm":"sh","param":{"1":"name","2":"func","name":"The name of the net message","func":"The callback or nil to remove callback. (len - length of the net message, ply - player that sent it or nil if clientside)"},"name":"net_library.receive","description":"\nLike glua net.Receive, adds a callback that is called when a net message with the matching name is received. If this happens, the net hook won't be called."},"readEntity":{"server":true,"ret":"The entity that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a entity from the net message ","fname":"readEntity","realm":"sh","param":[],"name":"net_library.readEntity","description":"\nReads a entity from the net message"},"readColor":{"server":true,"ret":"The color that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a color from the net message ","fname":"readColor","realm":"sh","param":[],"name":"net_library.readColor","description":"\nReads a color from the net message"},"writeAngle":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an angle to the net message ","fname":"writeAngle","realm":"sh","param":{"1":"t","t":"The angle to be written"},"name":"net_library.writeAngle","description":"\nWrites an angle to the net message"},"writeStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nStreams a large 20MB string.","fname":"writeStream","realm":"sh","param":{"1":"str","str":"The string to be written"},"name":"net_library.writeStream","description":"\nStreams a large 20MB string."},"writeColor":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an color to the net message ","fname":"writeColor","realm":"sh","param":{"1":"t","t":"The color to be written"},"name":"net_library.writeColor","description":"\nWrites an color to the net message"},"writeMatrix":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an matrix to the net message ","fname":"writeMatrix","realm":"sh","param":{"1":"t","t":"The matrix to be written"},"name":"net_library.writeMatrix","description":"\nWrites an matrix to the net message"},"writeBit":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a bit to the net message ","fname":"writeBit","realm":"sh","param":{"1":"t","t":"The bit to be written. (0 for false, 1 (or anything) for true)"},"name":"net_library.writeBit","description":"\nWrites a bit to the net message"},"isStreaming":{"summary":"\nReturns whether or not the library is currently reading data from a stream ","ret":"Boolean","class":"function","private":false,"library":"net","fname":"isStreaming","realm":"sh","param":[],"name":"net_library.isStreaming","description":"\nReturns whether or not the library is currently reading data from a stream"},"writeType":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an object to a net message automatically typing it ","fname":"writeType","realm":"sh","param":{"1":"v","v":"The object to write"},"name":"net_library.writeType","description":"\nWrites an object to a net message automatically typing it"},"readStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nReads a large string stream from the net message.","fname":"readStream","realm":"sh","param":{"1":"cb","cb":"Callback to run when the stream is finished. The first parameter in the callback is the data. Will be nil if transfer fails or is cancelled"},"name":"net_library.readStream","description":"\nReads a large string stream from the net message."},"readString":{"server":true,"ret":"The string that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a string from the net message ","fname":"readString","realm":"sh","param":[],"name":"net_library.readString","description":"\nReads a string from the net message"}},"name":"net","description":"\nNet message library. Used for sending data from the server to the client and back"},"trace":{"server":true,"field":{"1":"MAT_ANTLION","2":"MAT_BLOODYFLESH","3":"MAT_CONCRETE","4":"MAT_DIRT","5":"MAT_FLESH","6":"MAT_GRATE","7":"MAT_ALIENFLESH","8":"MAT_CLIP","9":"MAT_PLASTIC","10":"MAT_METAL","11":"MAT_SAND","12":"MAT_FOLIAGE","13":"MAT_COMPUTER","14":"MAT_SLOSH","15":"MAT_TILE","16":"MAT_GRASS","17":"MAT_VENT","18":"MAT_WOOD","19":"MAT_DEFAULT","20":"MAT_GLASS","21":"HITGROUP_GENERIC","22":"HITGROUP_HEAD","23":"HITGROUP_CHEST","24":"HITGROUP_STOMACH","25":"HITGROUP_LEFTARM","26":"HITGROUP_RIGHTARM","27":"HITGROUP_LEFTLEG","28":"HITGROUP_RIGHTLEG","29":"HITGROUP_GEAR","30":"MASK_SPLITAREAPORTAL","31":"MASK_SOLID_BRUSHONLY","32":"MASK_WATER","33":"MASK_BLOCKLOS","34":"MASK_OPAQUE","35":"MASK_VISIBLE","36":"MASK_DEADSOLID","37":"MASK_PLAYERSOLID_BRUSHONLY","38":"MASK_NPCWORLDSTATIC","39":"MASK_NPCSOLID_BRUSHONLY","40":"MASK_CURRENT","41":"MASK_SHOT_PORTAL","42":"MASK_SOLID","43":"MASK_BLOCKLOS_AND_NPCS","44":"MASK_OPAQUE_AND_NPCS","45":"MASK_VISIBLE_AND_NPCS","46":"MASK_PLAYERSOLID","47":"MASK_NPCSOLID","48":"MASK_SHOT_HULL","49":"MASK_SHOT","50":"MASK_ALL","51":"CONTENTS_EMPTY","52":"CONTENTS_SOLID","53":"CONTENTS_WINDOW","54":"CONTENTS_AUX","55":"CONTENTS_GRATE","56":"CONTENTS_SLIME","57":"CONTENTS_WATER","58":"CONTENTS_BLOCKLOS","59":"CONTENTS_OPAQUE","60":"CONTENTS_TESTFOGVOLUME","61":"CONTENTS_TEAM4","62":"CONTENTS_TEAM3","63":"CONTENTS_TEAM1","64":"CONTENTS_TEAM2","65":"CONTENTS_IGNORE_NODRAW_OPAQUE","66":"CONTENTS_MOVEABLE","67":"CONTENTS_AREAPORTAL","68":"CONTENTS_PLAYERCLIP","69":"CONTENTS_MONSTERCLIP","70":"CONTENTS_CURRENT_0","71":"CONTENTS_CURRENT_90","72":"CONTENTS_CURRENT_180","73":"CONTENTS_CURRENT_270","74":"CONTENTS_CURRENT_UP","75":"CONTENTS_CURRENT_DOWN","76":"CONTENTS_ORIGIN","77":"CONTENTS_MONSTER","78":"CONTENTS_DEBRIS","79":"CONTENTS_DETAIL","80":"CONTENTS_TRANSLUCENT","81":"CONTENTS_LADDER","82":"CONTENTS_HITBOX","MASK_SHOT_HULL":"","MAT_VENT":"","CONTENTS_TEAM3":"","CONTENTS_DEBRIS":"","MAT_PLASTIC":"","CONTENTS_MOVEABLE":"","CONTENTS_TEAM1":"","MAT_TILE":"","MASK_DEADSOLID":"","CONTENTS_BLOCKLOS":"","MAT_WOOD":"","CONTENTS_MONSTER":"","CONTENTS_GRATE":"","MASK_BLOCKLOS_AND_NPCS":"","HITGROUP_HEAD":"","CONTENTS_PLAYERCLIP":"","HITGROUP_CHEST":"","HITGROUP_GENERIC":"","CONTENTS_WINDOW":"","CONTENTS_CURRENT_DOWN":"","MAT_ANTLION":"","CONTENTS_OPAQUE":"","MASK_BLOCKLOS":"","HITGROUP_LEFTARM":"","MASK_SHOT":"","CONTENTS_SOLID":"","MASK_SOLID_BRUSHONLY":"","MASK_SOLID":"","MAT_ALIENFLESH":"","CONTENTS_TEAM4":"","MASK_NPCSOLID_BRUSHONLY":"","MASK_NPCWORLDSTATIC":"","MAT_METAL":"","MASK_NPCSOLID":"","MASK_SPLITAREAPORTAL":"","MASK_WATER":"","MASK_PLAYERSOLID":"","MAT_SAND":"","MAT_DEFAULT":"","CONTENTS_EMPTY":"","MAT_CONCRETE":"","MAT_BLOODYFLESH":"","CONTENTS_HITBOX":"","CONTENTS_LADDER":"","MASK_PLAYERSOLID_BRUSHONLY":"","CONTENTS_TRANSLUCENT":"","CONTENTS_CURRENT_90":"","CONTENTS_DETAIL":"","MASK_VISIBLE":"","CONTENTS_TESTFOGVOLUME":"","CONTENTS_ORIGIN":"","CONTENTS_CURRENT_UP":"","MAT_SLOSH":"","MASK_SHOT_PORTAL":"","CONTENTS_CURRENT_270":"","MAT_FLESH":"","CONTENTS_CURRENT_180":"","CONTENTS_CURRENT_0":"","CONTENTS_MONSTERCLIP":"","CONTENTS_AREAPORTAL":"","MAT_GRATE":"","CONTENTS_TEAM2":"","HITGROUP_STOMACH":"","HITGROUP_RIGHTARM":"","MAT_COMPUTER":"","MAT_GRASS":"","MASK_ALL":"","CONTENTS_WATER":"","MASK_OPAQUE":"","HITGROUP_RIGHTLEG":"","MASK_OPAQUE_AND_NPCS":"","MASK_CURRENT":"","MAT_DIRT":"","CONTENTS_AUX":"","MASK_VISIBLE_AND_NPCS":"","HITGROUP_GEAR":"","HITGROUP_LEFTLEG":"","CONTENTS_IGNORE_NODRAW_OPAQUE":"","MAT_GLASS":"","MAT_CLIP":"","CONTENTS_SLIME":"","MAT_FOLIAGE":""},"tables":[],"client":true,"summary":"\nProvides functions for doing line/AABB traces ","libtbl":"trace_library","fields":[],"class":"library","functions":{"1":"intersectRayWithOBB","2":"intersectRayWithPlane","3":"trace","4":"traceHull","intersectRayWithOBB":{"summary":"\nDoes a ray box intersection returning the position hit, normal, and trace fraction, or nil if not hit.","ret":["Hit position or nil if not hit","Hit normal or nil if not hit","Hit fraction or nil if not hit"],"class":"function","private":false,"library":"trace","fname":"intersectRayWithOBB","realm":"sh","param":{"1":"rayStart","2":"rayDelta","3":"boxOrigin","4":"boxAngles","5":"boxMins","6":"boxMaxs","boxAngles":"The box's angles","rayDelta":"The direction and length of the ray","boxMins":"The box min bounding vector","rayStart":"The origin of the ray","boxOrigin":"The origin of the box","boxMaxs":"The box max bounding vector"},"name":"trace_library.intersectRayWithOBB","description":"\nDoes a ray box intersection returning the position hit, normal, and trace fraction, or nil if not hit."},"traceHull":{"summary":"\nDoes a swept-AABB trace ","ret":"Result of the trace https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","private":false,"library":"trace","fname":"traceHull","realm":"sh","param":{"1":"start","2":"endpos","3":"minbox","4":"maxbox","5":"filter","6":"mask","7":"colgroup","8":"ignworld","minbox":"Lower box corner","endpos":"End position","ignworld":"Whether the trace should ignore world","colgroup":"The collision group of the trace","mask":"Trace mask","filter":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit","start":"Start position","maxbox":"Upper box corner"},"name":"trace_library.traceHull","description":"\nDoes a swept-AABB trace"},"intersectRayWithPlane":{"summary":"\nDoes a ray plane intersection returning the position hit or nil if not hit ","ret":"Hit position or nil if not hit","class":"function","private":false,"library":"trace","fname":"intersectRayWithPlane","realm":"sh","param":{"1":"rayStart","2":"rayDelta","3":"planeOrigin","4":"planeNormal","planeNormal":"The normal of the plane","rayStart":"The origin of the ray","rayDelta":"The direction and length of the ray","planeOrigin":"The origin of the plane"},"name":"trace_library.intersectRayWithPlane","description":"\nDoes a ray plane intersection returning the position hit or nil if not hit"},"trace":{"summary":"\nDoes a line trace ","ret":"Result of the trace https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","private":false,"library":"trace","fname":"trace","realm":"sh","param":{"1":"start","2":"endpos","3":"filter","4":"mask","5":"colgroup","6":"ignworld","filter":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit","endpos":"End position","mask":"Trace mask","ignworld":"Whether the trace should ignore world","start":"Start position","colgroup":"The collision group of the trace"},"name":"trace_library.trace","description":"\nDoes a line trace"}},"name":"trace","description":"\nProvides functions for doing line/AABB traces"},"bit":{"server":true,"tables":[],"client":true,"summary":"\nBit library http://wiki.garrysmod.com/page/Category:bit ","libtbl":"bit_library","fields":[],"class":"library","functions":{"1":"stringstream","stringstream":{"summary":"\nCreates a StringStream object ","class":"function","private":false,"param":{"1":"stream","2":"i","3":"endian","i":"The initial buffer pointer (default 1)","endian":"The endianness of number types. \"big\" or \"little\" (default \"little\")","stream":"A string to set the initial buffer to (default \"\")"},"fname":"stringstream","realm":"sh","description":"\nCreates a StringStream object","name":"bit_library.stringstream","library":"bit"}},"name":"bit","description":"\nBit library http://wiki.garrysmod.com/page/Category:bit"},"sounds":{"server":true,"tables":[],"client":true,"summary":"\nSounds library.","libtbl":"sound_library","fields":[],"class":"library","functions":{"1":"canCreate","2":"create","3":"soundsLeft","soundsLeft":{"summary":"\nReturns the number of sounds left that can be created ","ret":"The number of sounds left","class":"function","private":false,"library":"sounds","fname":"soundsLeft","realm":"sh","param":[],"name":"sound_library.soundsLeft","description":"\nReturns the number of sounds left that can be created"},"create":{"summary":"\nCreates a sound and attaches it to an entity ","ret":"Sound Object","class":"function","private":false,"library":"sounds","fname":"create","realm":"sh","param":{"1":"ent","2":"path","3":"nofilter","path":"Filepath to the sound file.","nofilter":"(Optional) Boolean Make the sound play for everyone regardless of range or location. Only affects Server-side sounds.","ent":"Entity to attach sound to."},"name":"sound_library.create","description":"\nCreates a sound and attaches it to an entity"},"canCreate":{"summary":"\nReturns if a sound is able to be created ","ret":"If it is possible to make a sound","class":"function","private":false,"library":"sounds","fname":"canCreate","realm":"sh","param":[],"name":"sound_library.canCreate","description":"\nReturns if a sound is able to be created"}},"name":"sounds","description":"\nSounds library."},"json":{"server":true,"tables":[],"client":true,"summary":"\nJSON library ","libtbl":"json_library","fields":[],"class":"library","functions":{"1":"decode","2":"encode","decode":{"summary":"\nConvert JSON string to table ","ret":"Table representing the JSON object","class":"function","private":false,"library":"json","fname":"decode","realm":"sh","param":{"1":"s","s":"String to decode"},"name":"json_library.decode","description":"\nConvert JSON string to table"},"encode":{"summary":"\nConvert table to JSON string ","ret":"JSON encoded string representation of the table","class":"function","private":false,"library":"json","fname":"encode","realm":"sh","param":{"1":"tbl","2":"prettyPrint","tbl":"Table to encode","prettyPrint":"Optional. If true, formats and indents the resulting JSON"},"name":"json_library.encode","description":"\nConvert table to JSON string"}},"name":"json","description":"\nJSON library"},"coroutine":{"server":true,"tables":[],"client":true,"summary":"\nCoroutine library ","libtbl":"coroutine_library","fields":[],"class":"library","functions":{"1":"create","2":"resume","3":"running","4":"status","5":"wait","6":"wrap","7":"yield","status":{"summary":"\nReturns the status of the coroutine.","ret":"Either \"suspended\", \"running\", \"normal\" or \"dead\"","class":"function","private":false,"library":"coroutine","fname":"status","realm":"sh","param":{"1":"thread","thread":"The coroutine"},"name":"coroutine_library.status","description":"\nReturns the status of the coroutine."},"resume":{"summary":"\nResumes a suspended coroutine.","ret":"Any values the coroutine is returning to the main thread","class":"function","private":false,"library":"coroutine","fname":"resume","realm":"sh","param":{"1":"thread","2":"...","...":"optional parameters that will be passed to the coroutine","thread":"coroutine to resume"},"name":"coroutine_library.resume","description":"\nResumes a suspended coroutine. Note that, in contrast to Lua's native coroutine.resume function, it will not run in protected mode and can throw an error."},"running":{"summary":"\nReturns the coroutine that is currently running.","ret":"Currently running coroutine","class":"function","private":false,"library":"coroutine","fname":"running","realm":"sh","param":[],"name":"coroutine_library.running","description":"\nReturns the coroutine that is currently running."},"wrap":{"summary":"\nCreates a new coroutine.","ret":"A function that, when called, resumes the created coroutine. Any parameters to that function will be passed to the coroutine.","class":"function","private":false,"library":"coroutine","fname":"wrap","realm":"sh","param":{"1":"func","func":"Function of the coroutine"},"name":"coroutine_library.wrap","description":"\nCreates a new coroutine."},"wait":{"summary":"\nSuspends the coroutine for a number of seconds.","class":"function","private":false,"param":{"1":"time","time":"Time in seconds to suspend the coroutine"},"fname":"wait","realm":"sh","description":"\nSuspends the coroutine for a number of seconds. Note that the coroutine will not resume automatically, but any attempts to resume the coroutine while it is waiting will not resume the coroutine and act as if the coroutine suspended itself immediately.","name":"coroutine_library.wait","library":"coroutine"},"create":{"summary":"\nCreates a new coroutine.","ret":"coroutine","class":"function","private":false,"library":"coroutine","fname":"create","realm":"sh","param":{"1":"func","func":"Function of the coroutine"},"name":"coroutine_library.create","description":"\nCreates a new coroutine."},"yield":{"summary":"\nSuspends the currently running coroutine.","ret":"Any values passed to the coroutine","class":"function","private":false,"library":"coroutine","fname":"yield","realm":"sh","param":{"1":"...","...":"optional parameters that will be returned to the main thread"},"name":"coroutine_library.yield","description":"\nSuspends the currently running coroutine. May not be called outside a coroutine."}},"name":"coroutine","description":"\nCoroutine library"},"von":{"server":true,"tables":[],"client":true,"summary":"\nvON Library ","libtbl":"von","fields":[],"class":"library","functions":{"1":"deserialize","2":"serialize","serialize":{"server":true,"classForced":true,"ret":"String","class":"function","client":true,"summary":"\nSerialize a table ","fname":"serialize","library":"von","realm":"sh","description":"\nSerialize a table","name":"von.serialize","param":{"1":"tbl","tbl":"Table to serialize"}},"deserialize":{"server":true,"classForced":true,"ret":"Table","class":"function","client":true,"summary":"\nDeserialize a string ","fname":"deserialize","library":"von","realm":"sh","description":"\nDeserialize a string","name":"von.deserialize","param":{"1":"str","str":"String to deserialize"}}},"name":"von","description":"\nvON Library"}},"classes":{"1":"Angle","2":"Bass","3":"Color","4":"Effect","5":"Entity","6":"File","7":"Hologram","8":"Light","9":"Material","10":"Mesh","11":"Npc","12":"Particle","13":"PhysObj","14":"Player","15":"Quaternion","16":"Sound","17":"StringStream","18":"VMatrix","19":"Vector","20":"Vehicle","21":"Weapon","22":"Wirelink","Mesh":{"methods":{"1":"destroy","2":"draw","destroy":{"summary":"\nFrees the mesh from memory ","class":"function","client":true,"private":false,"classlib":"Mesh","fname":"destroy","realm":"cl","param":[],"name":"mesh_methods:destroy","description":"\nFrees the mesh from memory"},"draw":{"summary":"\nDraws the mesh.","class":"function","client":true,"private":false,"classlib":"Mesh","fname":"draw","realm":"cl","param":[],"name":"mesh_methods:draw","description":"\nDraws the mesh. Must be in a 3D rendering context."}},"class":"class","client":true,"fields":[],"summary":"\nMesh type ","typtbl":"mesh_methods","name":"Mesh","description":"\nMesh type"},"Player":{"methods":{"1":"getActiveWeapon","2":"getAimVector","3":"getAmmoCount","4":"getArmor","5":"getDeaths","6":"getEyeTrace","7":"getFOV","8":"getFrags","9":"getFriendStatus","10":"getGroundEntity","11":"getJumpPower","12":"getMaxSpeed","13":"getName","14":"getPing","15":"getRunSpeed","16":"getShootPos","17":"getSteamID","18":"getSteamID64","19":"getTeam","20":"getTeamName","21":"getUniqueID","22":"getUserID","23":"getVehicle","24":"getViewEntity","25":"getWeapon","26":"getWeapons","27":"hasGodMode","28":"inVehicle","29":"isAdmin","30":"isAlive","31":"isBot","32":"isConnected","33":"isCrouching","34":"isFlashlightOn","35":"isFrozen","36":"isMuted","37":"isNPC","38":"isNoclipped","39":"isPlayer","40":"isSpeaking","41":"isSprinting","42":"isSuperAdmin","43":"isTyping","44":"isUserGroup","45":"keyDown","46":"setViewEntity","47":"voiceVolume","getJumpPower":{"server":true,"ret":"Jump power","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's jump power ","fname":"getJumpPower","realm":"sh","param":[],"name":"player_methods:getJumpPower","description":"\nReturns the player's jump power"},"isFlashlightOn":{"server":true,"ret":"True if player has flashlight on","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player's flashlight is on ","fname":"isFlashlightOn","realm":"sh","param":[],"name":"player_methods:isFlashlightOn","description":"\nReturns whether the player's flashlight is on"},"isTyping":{"server":true,"ret":"bool true/false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is typing in their chat ","fname":"isTyping","realm":"sh","param":[],"name":"player_methods:isTyping","description":"\nReturns whether the player is typing in their chat"},"getTeam":{"server":true,"ret":"team","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current team ","fname":"getTeam","realm":"sh","param":[],"name":"player_methods:getTeam","description":"\nReturns the player's current team"},"getSteamID":{"server":true,"ret":"steam ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's steam ID ","fname":"getSteamID","realm":"sh","param":[],"name":"player_methods:getSteamID","description":"\nReturns the player's steam ID"},"isMuted":{"summary":"\nReturns whether the local player has muted the player ","ret":"True if the player was muted","class":"function","private":false,"classlib":"Player","fname":"isMuted","realm":"sh","param":[],"name":"player_methods:isMuted","description":"\nReturns whether the local player has muted the player"},"isCrouching":{"server":true,"ret":"True if player crouching","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is crouching ","fname":"isCrouching","realm":"sh","param":[],"name":"player_methods:isCrouching","description":"\nReturns whether the player is crouching"},"getWeapons":{"server":true,"ret":"Table of weapons","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns a table of weapons the player is carrying ","fname":"getWeapons","realm":"sh","param":[],"name":"player_methods:getWeapons","description":"\nReturns a table of weapons the player is carrying"},"getAmmoCount":{"server":true,"ret":"The amount of ammo player has in reserve.","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nGets the amount of ammo the player has.","fname":"getAmmoCount","realm":"sh","param":{"1":"id","id":"The string or number id of the ammo"},"name":"player_methods:getAmmoCount","description":"\nGets the amount of ammo the player has."},"getWeapon":{"server":true,"ret":"weapon","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the specified weapon or nil if the player doesn't have it ","fname":"getWeapon","realm":"sh","param":{"1":"wep","wep":"String weapon class"},"name":"player_methods:getWeapon","description":"\nReturns the specified weapon or nil if the player doesn't have it"},"isAdmin":{"server":true,"ret":"True if player is admin","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is an admin ","fname":"isAdmin","realm":"sh","param":[],"name":"player_methods:isAdmin","description":"\nReturns whether the player is an admin"},"getName":{"server":true,"ret":"Name","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's name ","fname":"getName","realm":"sh","param":[],"name":"player_methods:getName","description":"\nReturns the player's name"},"hasGodMode":{"server":true,"ret":"True if the player has godmode","class":"function","classlib":"Player","private":false,"summary":"\nReturns whether or not the player has godmode ","fname":"hasGodMode","realm":"sv","param":[],"name":"player_methods:hasGodMode","description":"\nReturns whether or not the player has godmode"},"isSuperAdmin":{"server":true,"ret":"True if player is super admin","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a super admin ","fname":"isSuperAdmin","realm":"sh","param":[],"name":"player_methods:isSuperAdmin","description":"\nReturns whether the player is a super admin"},"getSteamID64":{"server":true,"ret":"community ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's community ID ","fname":"getSteamID64","realm":"sh","param":[],"name":"player_methods:getSteamID64","description":"\nReturns the player's community ID"},"getRunSpeed":{"server":true,"ret":"Running speed","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's running speed ","fname":"getRunSpeed","realm":"sh","param":[],"name":"player_methods:getRunSpeed","description":"\nReturns the player's running speed"},"isUserGroup":{"server":true,"ret":"True if player belongs to group","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player belongs to a usergroup ","fname":"isUserGroup","realm":"sh","param":{"1":"group","group":"Group to check against"},"name":"player_methods:isUserGroup","description":"\nReturns whether the player belongs to a usergroup"},"voiceVolume":{"summary":"\nReturns the voice volume of the player ","ret":"Returns the players voice volume, how loud the player's voice communication currently is, as a normal number. Doesn't work on local player unless the voice_loopback convar is set to 1.","class":"function","client":true,"private":false,"classlib":"Player","fname":"voiceVolume","realm":"cl","param":[],"name":"player_methods:voiceVolume","description":"\nReturns the voice volume of the player"},"isSpeaking":{"summary":"\nReturns whether the player is heard by the local player.","ret":"bool true/false","class":"function","client":true,"private":false,"classlib":"Player","fname":"isSpeaking","realm":"cl","param":[],"name":"player_methods:isSpeaking","description":"\nReturns whether the player is heard by the local player."},"setViewEntity":{"server":true,"class":"function","classlib":"Player","private":false,"summary":"\nSets the view entity of the player.","fname":"setViewEntity","realm":"sv","param":{"1":"ent","ent":"Entity to set the player's view entity to, or nothing to reset it"},"name":"player_methods:setViewEntity","description":"\nSets the view entity of the player. Only works if they are linked to a hud."},"keyDown":{"server":true,"ret":"True or false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether or not the player is pushing the key.","fname":"keyDown","realm":"sh","param":{"1":"key","key":"Key to check. \nIN_KEY.ALT1 \nIN_KEY.ALT2 \nIN_KEY.ATTACK \nIN_KEY.ATTACK2 \nIN_KEY.BACK \nIN_KEY.DUCK \nIN_KEY.FORWARD \nIN_KEY.JUMP \nIN_KEY.LEFT \nIN_KEY.MOVELEFT \nIN_KEY.MOVERIGHT \nIN_KEY.RELOAD \nIN_KEY.RIGHT \nIN_KEY.SCORE \nIN_KEY.SPEED \nIN_KEY.USE \nIN_KEY.WALK \nIN_KEY.ZOOM \nIN_KEY.GRENADE1 \nIN_KEY.GRENADE2 \nIN_KEY.WEAPON1 \nIN_KEY.WEAPON2 \nIN_KEY.BULLRUSH \nIN_KEY.CANCEL \nIN_KEY.RUN"},"name":"player_methods:keyDown","description":"\nReturns whether or not the player is pushing the key."},"getFriendStatus":{"summary":"\nReturns the relationship of the player to the local client ","ret":"One of: \"friend\", \"blocked\", \"none\", \"requested\"","class":"function","private":false,"classlib":"Player","fname":"getFriendStatus","realm":"sh","param":[],"name":"player_methods:getFriendStatus","description":"\nReturns the relationship of the player to the local client"},"getTeamName":{"server":true,"ret":"team name","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the name of the player's current team ","fname":"getTeamName","realm":"sh","param":[],"name":"player_methods:getTeamName","description":"\nReturns the name of the player's current team"},"isSprinting":{"server":true,"ret":"bool true/false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is sprinting ","fname":"isSprinting","realm":"sh","param":[],"name":"player_methods:isSprinting","description":"\nReturns whether the player is sprinting"},"inVehicle":{"server":true,"ret":"True if player in vehicle","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is in a vehicle ","fname":"inVehicle","realm":"sh","param":[],"name":"player_methods:inVehicle","description":"\nReturns whether the player is in a vehicle"},"getViewEntity":{"server":true,"ret":"Player's current view entity","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current view entity ","fname":"getViewEntity","realm":"sh","param":[],"name":"player_methods:getViewEntity","description":"\nReturns the player's current view entity"},"isAlive":{"server":true,"ret":"True if player alive","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is alive ","fname":"isAlive","realm":"sh","param":[],"name":"player_methods:isAlive","description":"\nReturns whether the player is alive"},"isNPC":{"server":true,"ret":"True if player is an NPC","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is an NPC ","fname":"isNPC","realm":"sh","param":[],"name":"player_methods:isNPC","description":"\nReturns whether the player is an NPC"},"getGroundEntity":{"server":true,"ret":"Ground entity","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the entity that the player is standing on ","fname":"getGroundEntity","realm":"sh","param":[],"name":"player_methods:getGroundEntity","description":"\nReturns the entity that the player is standing on"},"getEyeTrace":{"server":true,"ret":"table trace data https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns a table with information of what the player is looking at ","fname":"getEyeTrace","realm":"sh","param":[],"name":"player_methods:getEyeTrace","description":"\nReturns a table with information of what the player is looking at"},"isBot":{"server":true,"ret":"True if player is a bot","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a bot ","fname":"isBot","realm":"sh","param":[],"name":"player_methods:isBot","description":"\nReturns whether the player is a bot"},"getAimVector":{"server":true,"ret":"Aim vector","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's aim vector ","fname":"getAimVector","realm":"sh","param":[],"name":"player_methods:getAimVector","description":"\nReturns the player's aim vector"},"isFrozen":{"server":true,"ret":"True if player is frozen","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is frozen ","fname":"isFrozen","realm":"sh","param":[],"name":"player_methods:isFrozen","description":"\nReturns whether the player is frozen"},"getShootPos":{"server":true,"ret":"Shoot position","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's shoot position ","fname":"getShootPos","realm":"sh","param":[],"name":"player_methods:getShootPos","description":"\nReturns the player's shoot position"},"getUserID":{"server":true,"ret":"user ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's user ID ","fname":"getUserID","realm":"sh","param":[],"name":"player_methods:getUserID","description":"\nReturns the player's user ID"},"getVehicle":{"server":true,"ret":"Vehicle if player in vehicle or nil","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the vehicle the player is driving ","fname":"getVehicle","realm":"sh","param":[],"name":"player_methods:getVehicle","description":"\nReturns the vehicle the player is driving"},"getFrags":{"server":true,"ret":"Amount of kills","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the amount of kills of the player ","fname":"getFrags","realm":"sh","param":[],"name":"player_methods:getFrags","description":"\nReturns the amount of kills of the player"},"isNoclipped":{"server":true,"ret":"true if the player is noclipped","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns true if the player is noclipped ","fname":"isNoclipped","realm":"sh","param":[],"name":"player_methods:isNoclipped","description":"\nReturns true if the player is noclipped"},"getMaxSpeed":{"server":true,"ret":"Maximum speed","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's maximum speed ","fname":"getMaxSpeed","realm":"sh","param":[],"name":"player_methods:getMaxSpeed","description":"\nReturns the player's maximum speed"},"getArmor":{"server":true,"ret":"Armor","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the players armor ","fname":"getArmor","realm":"sh","param":[],"name":"player_methods:getArmor","description":"\nReturns the players armor"},"getFOV":{"server":true,"ret":"Field of view","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's field of view ","fname":"getFOV","realm":"sh","param":[],"name":"player_methods:getFOV","description":"\nReturns the player's field of view"},"isConnected":{"server":true,"ret":"True if player is connected","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is connected ","fname":"isConnected","realm":"sh","param":[],"name":"player_methods:isConnected","description":"\nReturns whether the player is connected"},"isPlayer":{"server":true,"ret":"True if player is player","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a player ","fname":"isPlayer","realm":"sh","param":[],"name":"player_methods:isPlayer","description":"\nReturns whether the player is a player"},"getPing":{"server":true,"ret":"ping","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current ping ","fname":"getPing","realm":"sh","param":[],"name":"player_methods:getPing","description":"\nReturns the player's current ping"},"getDeaths":{"server":true,"ret":"Amount of deaths","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the amount of deaths of the player ","fname":"getDeaths","realm":"sh","param":[],"name":"player_methods:getDeaths","description":"\nReturns the amount of deaths of the player"},"getActiveWeapon":{"server":true,"ret":"The weapon","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the name of the player's active weapon ","fname":"getActiveWeapon","realm":"sh","param":[],"name":"player_methods:getActiveWeapon","description":"\nReturns the name of the player's active weapon"},"getUniqueID":{"server":true,"ret":"unique ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's unique ID ","fname":"getUniqueID","realm":"sh","param":[],"name":"player_methods:getUniqueID","description":"\nReturns the player's unique ID"}},"class":"class","fields":[],"summary":"\nPlayer type ","typtbl":"player_methods","name":"Player","description":"\nPlayer type"},"Vector":{"methods":{"1":"add","2":"clone","3":"cross","4":"div","5":"dot","6":"getAngle","7":"getAngleEx","8":"getDistance","9":"getDistanceSqr","10":"getLength","11":"getLength2D","12":"getLength2DSqr","13":"getLengthSqr","14":"getNormalized","15":"getRotated","16":"isEqualTol","17":"isInWorld","18":"isZero","19":"mul","20":"normalize","21":"rotate","22":"rotateAroundAxis","23":"set","24":"setX","25":"setY","26":"setZ","27":"setZero","28":"sub","29":"toScreen","30":"vdiv","31":"vmul","32":"withinAABox","getNormalized":{"summary":"\nReturns a new vector with the same direction by length of 1.","ret":"Vector Normalised","class":"function","private":false,"classlib":"Vector","fname":"getNormalized","realm":"sh","param":[],"name":"vec_methods:getNormalized","description":"\nReturns a new vector with the same direction by length of 1."},"div":{"summary":"\n\"Scalar Division\" of the vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"div","realm":"sh","param":{"1":"n","n":"Scalar to divide by."},"name":"vec_methods:div","description":"\n\"Scalar Division\" of the vector. Self-Modifies."},"withinAABox":{"summary":"\nReturns whenever the given vector is in a box created by the 2 other vectors.","ret":"bool True/False.","class":"function","private":false,"classlib":"Vector","fname":"withinAABox","realm":"sh","param":{"1":"v1","2":"v2","v2":"Second Vector to define AABox","v1":"Vector used to define AABox"},"name":"vec_methods:withinAABox","description":"\nReturns whenever the given vector is in a box created by the 2 other vectors."},"isEqualTol":{"summary":"\nIs this vector and v equal within tolerance t.","ret":"bool True/False.","class":"function","private":false,"classlib":"Vector","fname":"isEqualTol","realm":"sh","param":{"1":"v","2":"t","t":"Tolerance number.","v":"Second Vector"},"name":"vec_methods:isEqualTol","description":"\nIs this vector and v equal within tolerance t."},"setY":{"summary":"\nSet's the vector's y coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setY","realm":"sh","param":{"1":"y","y":"The y coordinate"},"name":"vec_methods:setY","description":"\nSet's the vector's y coordinate and returns it."},"getDistanceSqr":{"summary":"\nReturns the squared distance of 2 vectors, this is faster Vector:getDistance as calculating the square root is an expensive process.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"getDistanceSqr","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getDistanceSqr","description":"\nReturns the squared distance of 2 vectors, this is faster Vector:getDistance as calculating the square root is an expensive process."},"getLength2D":{"summary":"\nReturns the length of the vector in two dimensions, without the Z axis.","ret":"number length","class":"function","private":false,"classlib":"Vector","fname":"getLength2D","realm":"sh","param":[],"name":"vec_methods:getLength2D","description":"\nReturns the length of the vector in two dimensions, without the Z axis."},"toScreen":{"summary":"\nTranslates the vectors position into 2D user screen coordinates.","ret":"A table {x=screenx,y=screeny,visible=visible}","class":"function","private":false,"classlib":"Vector","fname":"toScreen","realm":"sh","param":[],"name":"vec_methods:toScreen","description":"\nTranslates the vectors position into 2D user screen coordinates."},"clone":{"summary":"\nCopies x,y,z from a vector and returns a new vector ","ret":"The copy of the vector","class":"function","private":false,"classlib":"Vector","fname":"clone","realm":"sh","param":[],"name":"vec_methods:clone","description":"\nCopies x,y,z from a vector and returns a new vector"},"set":{"summary":"\nCopies the values from the second vector to the first vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"set","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:set","description":"\nCopies the values from the second vector to the first vector. Self-Modifies."},"setZ":{"summary":"\nSet's the vector's z coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setZ","realm":"sh","param":{"1":"z","z":"The z coordinate"},"name":"vec_methods:setZ","description":"\nSet's the vector's z coordinate and returns it."},"sub":{"summary":"\nSubtract v from this Vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"sub","realm":"sh","param":{"1":"v","v":"Second Vector."},"name":"vec_methods:sub","description":"\nSubtract v from this Vector. Self-Modifies."},"rotateAroundAxis":{"summary":"\nReturn rotated vector by an axis ","ret":"Rotated vector","class":"function","private":false,"classlib":"Vector","fname":"rotateAroundAxis","realm":"sh","param":{"1":"axis","2":"degrees","3":"radians","axis":"Axis the rotate around","degrees":"Angle to rotate by in degrees or nil if radians.","radians":"Angle to rotate by in radians or nil if degrees."},"name":"vec_methods:rotateAroundAxis","description":"\nReturn rotated vector by an axis"},"add":{"summary":"\nAdd vector - Modifies self.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"add","realm":"sh","param":{"1":"v","v":"Vector to add"},"name":"vec_methods:add","description":"\nAdd vector - Modifies self."},"getRotated":{"summary":"\nReturns Rotated vector by Angle b ","ret":"Rotated Vector","class":"function","private":false,"classlib":"Vector","fname":"getRotated","realm":"sh","param":{"1":"b","b":"Angle to rotate by."},"name":"vec_methods:getRotated","description":"\nReturns Rotated vector by Angle b"},"mul":{"summary":"\nScalar Multiplication of the vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"mul","realm":"sh","param":{"1":"n","n":"Scalar to multiply with."},"name":"vec_methods:mul","description":"\nScalar Multiplication of the vector. Self-Modifies."},"dot":{"summary":"\nDot product is the cosine of the angle between both vectors multiplied by their lengths.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"dot","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:dot","description":"\nDot product is the cosine of the angle between both vectors multiplied by their lengths. A.B = ||A||||B||cosA."},"setX":{"summary":"\nSet's the vector's x coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setX","realm":"sh","param":{"1":"x","x":"The x coordinate"},"name":"vec_methods:setX","description":"\nSet's the vector's x coordinate and returns it."},"setZero":{"summary":"\nSet's all vector fields to 0.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"setZero","realm":"sh","param":[],"name":"vec_methods:setZero","description":"\nSet's all vector fields to 0."},"getLength":{"summary":"\nGet the vector's Length.","ret":"number Length.","class":"function","private":false,"classlib":"Vector","fname":"getLength","realm":"sh","param":[],"name":"vec_methods:getLength","description":"\nGet the vector's Length."},"getLengthSqr":{"summary":"\nGet the vector's length squared ( Saves computation by skipping the square root ).","ret":"number length squared.","class":"function","private":false,"classlib":"Vector","fname":"getLengthSqr","realm":"sh","param":[],"name":"vec_methods:getLengthSqr","description":"\nGet the vector's length squared ( Saves computation by skipping the square root )."},"getAngle":{"summary":"\nGet the vector's angle.","ret":"Angle","class":"function","private":false,"classlib":"Vector","fname":"getAngle","realm":"sh","param":[],"name":"vec_methods:getAngle","description":"\nGet the vector's angle."},"vmul":{"summary":"\nMultiply self with a Vector.","class":"function","private":false,"param":{"1":"v","v":"Vector to multiply with"},"fname":"vmul","realm":"sh","name":"vec_methods:vmul","classlib":"Vector","description":"\nMultiply self with a Vector. Self-Modifies. ( convenience function )"},"getLength2DSqr":{"summary":"\nReturns the length squared of the vector in two dimensions, without the Z axis.","ret":"number length squared.","class":"function","private":false,"classlib":"Vector","fname":"getLength2DSqr","realm":"sh","param":[],"name":"vec_methods:getLength2DSqr","description":"\nReturns the length squared of the vector in two dimensions, without the Z axis. ( Saves computation by skipping the square root )"},"vdiv":{"summary":"\nDivide self by a Vector.","class":"function","private":false,"param":{"1":"v","v":"Vector to divide by"},"fname":"vdiv","realm":"sh","name":"vec_methods:vdiv","classlib":"Vector","description":"\nDivide self by a Vector. Self-Modifies. ( convenience function )"},"cross":{"summary":"\nCalculates the cross product of the 2 vectors, creates a unique perpendicular vector to both input vectors.","ret":"Vector","class":"function","private":false,"classlib":"Vector","fname":"cross","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:cross","description":"\nCalculates the cross product of the 2 vectors, creates a unique perpendicular vector to both input vectors."},"isInWorld":{"server":true,"ret":"bool True/False.","class":"function","classlib":"Vector","private":false,"summary":"\nReturns whether the vector is in world ","fname":"isInWorld","realm":"sv","param":[],"name":"vec_methods:isInWorld","description":"\nReturns whether the vector is in world"},"isZero":{"summary":"\nAre all fields zero.","ret":"bool True/False","class":"function","private":false,"classlib":"Vector","fname":"isZero","realm":"sh","param":[],"name":"vec_methods:isZero","description":"\nAre all fields zero."},"rotate":{"summary":"\nRotate the vector by Angle b.","ret":"nil.","class":"function","private":false,"classlib":"Vector","fname":"rotate","realm":"sh","param":{"1":"b","b":"Angle to rotate by."},"name":"vec_methods:rotate","description":"\nRotate the vector by Angle b. Self-Modifies."},"getDistance":{"summary":"\nReturns the pythagorean distance between the vector and the other vector.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"getDistance","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getDistance","description":"\nReturns the pythagorean distance between the vector and the other vector."},"getAngleEx":{"summary":"\nReturns the vector's euler angle with respect to the other vector as if it were the new vertical axis.","ret":"Angle","class":"function","private":false,"classlib":"Vector","fname":"getAngleEx","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getAngleEx","description":"\nReturns the vector's euler angle with respect to the other vector as if it were the new vertical axis."},"normalize":{"summary":"\nNormalise the vector, same direction, length 1.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"normalize","realm":"sh","param":[],"name":"vec_methods:normalize","description":"\nNormalise the vector, same direction, length 1. Self-Modifies."}},"class":"class","client":true,"summary":"\nVector type ","fields":[],"server":true,"typtbl":"vec_methods","name":"Vector","description":"\nVector type"},"Sound":{"methods":{"1":"destroy","2":"isPlaying","3":"play","4":"setPitch","5":"setSoundLevel","6":"setVolume","7":"stop","stop":{"summary":"\nStops the sound from being played.","class":"function","private":false,"param":{"1":"fade","fade":"Time in seconds to fade out, if nil or 0 the sound stops instantly."},"fname":"stop","realm":"sh","name":"sound_methods:stop","classlib":"Sound","description":"\nStops the sound from being played."},"setVolume":{"summary":"\nSets the volume of the sound.","class":"function","private":false,"param":{"1":"vol","2":"fade","vol":"Volume to set to, between 0 and 1.","fade":"Time in seconds to transition to this new volume."},"fname":"setVolume","realm":"sh","name":"sound_methods:setVolume","classlib":"Sound","description":"\nSets the volume of the sound."},"isPlaying":{"summary":"\nReturns whether the sound is being played.","class":"function","private":false,"param":[],"fname":"isPlaying","realm":"sh","name":"sound_methods:isPlaying","classlib":"Sound","description":"\nReturns whether the sound is being played."},"setPitch":{"summary":"\nSets the pitch of the sound.","class":"function","private":false,"param":{"1":"pitch","2":"fade","pitch":"Pitch to set to, between 0 and 255.","fade":"Time in seconds to transition to this new pitch."},"fname":"setPitch","realm":"sh","name":"sound_methods:setPitch","classlib":"Sound","description":"\nSets the pitch of the sound."},"play":{"summary":"\nStarts to play the sound.","class":"function","private":false,"param":[],"fname":"play","realm":"sh","name":"sound_methods:play","classlib":"Sound","description":"\nStarts to play the sound."},"setSoundLevel":{"summary":"\nSets the sound level in dB.","class":"function","private":false,"param":{"1":"level","level":"dB level, see <a href='https://developer.valvesoftware.com/wiki/Soundscripts#SoundLevel'> Vale Dev Wiki</a>, for information on the value to use."},"fname":"setSoundLevel","realm":"sh","name":"sound_methods:setSoundLevel","classlib":"Sound","description":"\nSets the sound level in dB."},"destroy":{"summary":"\nRemoves the sound from the game so new one can be created if limit is reached ","class":"function","private":false,"param":[],"fname":"destroy","realm":"sh","name":"sound_methods:destroy","classlib":"Sound","description":"\nRemoves the sound from the game so new one can be created if limit is reached"}},"class":"class","client":true,"summary":"\nSound type ","fields":[],"server":true,"typtbl":"sound_methods","name":"Sound","description":"\nSound type"},"Hologram":{"methods":{"1":"getScale","2":"remove","3":"setAngVel","4":"setAngles","5":"setAnimation","6":"setClip","7":"setFilterMag","8":"setFilterMin","9":"setModel","10":"setParent","11":"setPos","12":"setRenderMatrix","13":"setScale","14":"setVel","15":"suppressEngineLighting","setAngVel":{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nSets the hologram's angular velocity.","fname":"setAngVel","realm":"sv","param":{"1":"angvel","angvel":"*Vector* angular velocity."},"name":"hologram_methods:setAngVel","description":"\nSets the hologram's angular velocity."},"setAngles":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram's angles.","fname":"setAngles","realm":"sh","param":{"1":"ang","ang":"New angles"},"name":"hologram_methods:setAngles","description":"\nSets the hologram's angles."},"setVel":{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nSets the hologram linear velocity ","fname":"setVel","realm":"sv","param":{"1":"vel","vel":"New velocity"},"name":"hologram_methods:setVel","description":"\nSets the hologram linear velocity"},"setScale":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram scale.","fname":"setScale","realm":"sh","param":{"1":"scale","scale":"Vector new scale"},"name":"hologram_methods:setScale","description":"\nSets the hologram scale. Basically the same as setRenderMatrix() with a scaled matrix"},"setModel":{"summary":"\nSets the model of a hologram ","class":"function","private":false,"param":{"1":"model","model":"string model path"},"fname":"setModel","realm":"sh","name":"hologram_methods:setModel","classlib":"Hologram","description":"\nSets the model of a hologram"},"getScale":{"server":true,"ret":"Vector scale","class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nGets the hologram scale.","fname":"getScale","realm":"sh","param":[],"name":"hologram_methods:getScale","description":"\nGets the hologram scale."},"setFilterMag":{"summary":"\nSets the texture filtering function when viewing a close texture ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setFilterMag","realm":"cl","param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"name":"hologram_methods:setFilterMag","description":"\nSets the texture filtering function when viewing a close texture"},"setParent":{"summary":"\nParents a hologram ","class":"function","private":false,"param":{"1":"ent","2":"attachment","attachment":"Optional attachment ID","ent":"Entity parent (nil to unparent)"},"fname":"setParent","realm":"sh","name":"hologram_methods:setParent","classlib":"Hologram","description":"\nParents a hologram"},"setClip":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nUpdates a clip plane ","fname":"setClip","realm":"sh","param":{"1":"index","2":"enabled","3":"origin","4":"normal","5":"entity","normal":"The the direction of the clip plane in world coordinates, or local to entity if it is specified","origin":"The center of the clip plane in world coordinates, or local to entity if it is specified","entity":"(Optional) The entity to make coordinates local to, otherwise the world is used","enabled":"Whether the clip is enabled","index":"Whatever number you want the clip to be"},"name":"hologram_methods:setClip","description":"\nUpdates a clip plane"},"remove":{"summary":"\nRemoves a hologram ","class":"function","private":false,"param":[],"fname":"remove","realm":"sh","name":"hologram_methods:remove","classlib":"Hologram","description":"\nRemoves a hologram"},"suppressEngineLighting":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSuppress Engine Lighting of a hologram.","fname":"suppressEngineLighting","realm":"sh","param":{"1":"suppress","suppress":"Boolean to represent if shading should be set or not."},"name":"hologram_methods:suppressEngineLighting","description":"\nSuppress Engine Lighting of a hologram. Disabled by default."},"setRenderMatrix":{"summary":"\nSets a hologram entity's rendermatrix ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setRenderMatrix","realm":"cl","param":{"1":"mat","mat":"Starfall matrix to use"},"name":"hologram_methods:setRenderMatrix","description":"\nSets a hologram entity's rendermatrix"},"setPos":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram's position.","fname":"setPos","realm":"sh","param":{"1":"vec","vec":"New position"},"name":"hologram_methods:setPos","description":"\nSets the hologram's position."},"setAnimation":{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nAnimates a hologram ","fname":"setAnimation","realm":"sv","param":{"1":"animation","2":"frame","3":"rate","animation":"number or string name","rate":"Frame speed. (1 is normal)","frame":"The starting frame number"},"name":"hologram_methods:setAnimation","description":"\nAnimates a hologram"},"setFilterMin":{"summary":"\nSets the texture filtering function when viewing a far texture ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setFilterMin","realm":"cl","param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"name":"hologram_methods:setFilterMin","description":"\nSets the texture filtering function when viewing a far texture"}},"class":"class","fields":[],"summary":"\nHologram type ","typtbl":"hologram_methods","name":"Hologram","description":"\nHologram type"},"Material":{"methods":{"1":"destroy","2":"getColor","3":"getFloat","4":"getHeight","5":"getInt","6":"getKeyValues","7":"getMatrix","8":"getName","9":"getShader","10":"getString","11":"getTexture","12":"getVector","13":"getVectorLinear","14":"getWidth","15":"recompute","16":"setFloat","17":"setInt","18":"setMatrix","19":"setString","20":"setTexture","21":"setTextureRenderTarget","22":"setTextureURL","23":"setUndefined","24":"setVector","getFloat":{"summary":"\nReturns a float keyvalue ","ret":"The float value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getFloat","realm":"cl","param":{"1":"key","key":"The key to get the float from"},"name":"material_methods:getFloat","description":"\nReturns a float keyvalue"},"recompute":{"summary":"\nRefreshes the material.","class":"function","private":false,"param":[],"fname":"recompute","realm":"cl","name":"material_methods:recompute","classlib":"Material","description":"\nRefreshes the material. Sometimes needed for certain parameters to update"},"getMatrix":{"summary":"\nReturns a matrix keyvalue ","ret":"The matrix value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getMatrix","realm":"cl","param":{"1":"key","key":"The key to get the matrix from"},"name":"material_methods:getMatrix","description":"\nReturns a matrix keyvalue"},"getColor":{"summary":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material.","ret":"The color value","class":"function","private":false,"classlib":"Material","fname":"getColor","realm":"cl","param":{"1":"x","2":"y","y":"The y coordinate of the pixel","x":"The x coordinate of the pixel"},"name":"material_methods:getColor","description":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material."},"getShader":{"summary":"\nReturns the shader name of the material ","ret":"The shader name of the material","class":"function","private":false,"classlib":"Material","fname":"getShader","realm":"cl","param":[],"name":"material_methods:getShader","description":"\nReturns the shader name of the material"},"setInt":{"summary":"\nSets an int keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setInt","realm":"cl","name":"material_methods:setInt","classlib":"Material","description":"\nSets an int keyvalue"},"getTexture":{"summary":"\nReturns a texture id keyvalue ","ret":"The string id of the texture or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getTexture","realm":"cl","param":{"1":"key","key":"The key to get the texture from"},"name":"material_methods:getTexture","description":"\nReturns a texture id keyvalue"},"setFloat":{"summary":"\nSets a float keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setFloat","realm":"cl","name":"material_methods:setFloat","classlib":"Material","description":"\nSets a float keyvalue"},"setTexture":{"summary":"\nSets a texture keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set. $basetexture is the key name for most purposes.","v":"The texture name to set it to."},"fname":"setTexture","realm":"cl","name":"material_methods:setTexture","classlib":"Material","description":"\nSets a texture keyvalue"},"setUndefined":{"summary":"\nSets a keyvalue to be undefined ","class":"function","private":false,"param":{"1":"key","key":"The key name to set"},"fname":"setUndefined","realm":"cl","name":"material_methods:setUndefined","classlib":"Material","description":"\nSets a keyvalue to be undefined"},"getInt":{"summary":"\nReturns an int keyvalue ","ret":"The int value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getInt","realm":"cl","param":{"1":"key","key":"The key to get the int from"},"name":"material_methods:getInt","description":"\nReturns an int keyvalue"},"getVectorLinear":{"summary":"\nReturns a linear color-corrected vector keyvalue ","ret":"The vector value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getVectorLinear","realm":"cl","param":{"1":"key","key":"The key to get the vector from"},"name":"material_methods:getVectorLinear","description":"\nReturns a linear color-corrected vector keyvalue"},"setTextureURL":{"summary":"\nLoads an online image or base64 data to the specified texture key ","class":"function","private":false,"param":{"1":"key","2":"url","3":"cb","4":"done","url":"The url or base64 data","done":"An optional callback called when the image is done loading. Passes the material, url","key":"The key name to set. $basetexture is the key name for most purposes.","cb":"An optional callback called when image is loaded. Passes nil if it fails or Passes the material, url, width, height, and layout function which can be called with x, y, w, h to reposition the image in the texture"},"fname":"setTextureURL","realm":"cl","name":"material_methods:setTextureURL","classlib":"Material","description":"\nLoads an online image or base64 data to the specified texture key"},"getKeyValues":{"summary":"\nReturns a table of material keyvalues ","ret":"The table of keyvalues","class":"function","private":false,"classlib":"Material","fname":"getKeyValues","realm":"cl","param":[],"name":"material_methods:getKeyValues","description":"\nReturns a table of material keyvalues"},"getName":{"summary":"\nReturns the material's engine name ","ret":"The name of the material. If this material is user created, add ! to the beginning of this to use it with entity.setMaterial","class":"function","private":false,"classlib":"Material","fname":"getName","realm":"cl","param":[],"name":"material_methods:getName","description":"\nReturns the material's engine name"},"destroy":{"summary":"\nFree's a user created material allowing you to create others ","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"material_methods:destroy","classlib":"Material","description":"\nFree's a user created material allowing you to create others"},"setVector":{"summary":"\nSets a vector keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setVector","realm":"cl","name":"material_methods:setVector","classlib":"Material","description":"\nSets a vector keyvalue"},"setString":{"summary":"\nSets a string keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setString","realm":"cl","name":"material_methods:setString","classlib":"Material","description":"\nSets a string keyvalue"},"setMatrix":{"summary":"\nSets a matrix keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setMatrix","realm":"cl","name":"material_methods:setMatrix","classlib":"Material","description":"\nSets a matrix keyvalue"},"getString":{"summary":"\nReturns a string keyvalue ","ret":"The string value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getString","realm":"cl","param":{"1":"key","key":"The key to get the string from"},"name":"material_methods:getString","description":"\nReturns a string keyvalue"},"getVector":{"summary":"\nReturns a vector keyvalue ","ret":"The string id of the texture","class":"function","private":false,"classlib":"Material","fname":"getVector","realm":"cl","param":{"1":"key","key":"The key to get the vector from"},"name":"material_methods:getVector","description":"\nReturns a vector keyvalue"},"setTextureRenderTarget":{"summary":"\nSets a rendertarget texture to the specified texture key ","class":"function","private":false,"param":{"1":"key","2":"name","key":"The key name to set. $basetexture is the key name for most purposes.","name":"The name of the rendertarget"},"fname":"setTextureRenderTarget","realm":"cl","name":"material_methods:setTextureRenderTarget","classlib":"Material","description":"\nSets a rendertarget texture to the specified texture key"},"getWidth":{"summary":"\nGets the base texture set to the material's width ","ret":"The basetexture's width","class":"function","private":false,"classlib":"Material","fname":"getWidth","realm":"cl","param":[],"name":"material_methods:getWidth","description":"\nGets the base texture set to the material's width"},"getHeight":{"summary":"\nGets the base texture set to the material's height ","ret":"The basetexture's height","class":"function","private":false,"classlib":"Material","fname":"getHeight","realm":"cl","param":[],"name":"material_methods:getHeight","description":"\nGets the base texture set to the material's height"}},"class":"class","client":true,"fields":[],"summary":"\nThe `Material` type is used to control shaders in rendering.","typtbl":"material_methods","name":"Material","description":"\nThe `Material` type is used to control shaders in rendering. \nFor a list of shader parameters, see https://developer.valvesoftware.com/wiki/Category:List_of_Shader_Parameters \nFor a list of $flags and $flags2, see https://developer.valvesoftware.com/wiki/Material_Flags"},"File":{"methods":{"1":"close","2":"flush","3":"read","4":"readBool","5":"readByte","6":"readDouble","7":"readFloat","8":"readLine","9":"readLong","10":"readShort","11":"seek","12":"size","13":"skip","14":"tell","15":"write","16":"writeBool","17":"writeByte","18":"writeDouble","19":"writeFloat","20":"writeLong","21":"writeShort","write":{"summary":"\nWrites a string to the file and advances the file position ","class":"function","private":false,"param":{"1":"str","str":"The data to write"},"fname":"write","realm":"cl","name":"file_methods:write","classlib":"File","description":"\nWrites a string to the file and advances the file position"},"read":{"summary":"\nReads a certain length of the file's bytes ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"read","realm":"cl","param":{"1":"n","n":"The length to read"},"name":"file_methods:read","description":"\nReads a certain length of the file's bytes"},"writeFloat":{"summary":"\nWrites a float and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The float to write"},"fname":"writeFloat","realm":"cl","name":"file_methods:writeFloat","classlib":"File","description":"\nWrites a float and advances the file position"},"seek":{"summary":"\nSets the file position ","class":"function","private":false,"param":{"1":"n","n":"The position to set it to"},"fname":"seek","realm":"cl","name":"file_methods:seek","classlib":"File","description":"\nSets the file position"},"writeLong":{"summary":"\nWrites a long and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The long to write"},"fname":"writeLong","realm":"cl","name":"file_methods:writeLong","classlib":"File","description":"\nWrites a long and advances the file position"},"flush":{"summary":"\nWait until all changes to the file are complete ","class":"function","private":false,"param":[],"fname":"flush","realm":"cl","name":"file_methods:flush","classlib":"File","description":"\nWait until all changes to the file are complete"},"writeDouble":{"summary":"\nWrites a double and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The double to write"},"fname":"writeDouble","realm":"cl","name":"file_methods:writeDouble","classlib":"File","description":"\nWrites a double and advances the file position"},"readLine":{"summary":"\nReads a line and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readLine","realm":"cl","param":[],"name":"file_methods:readLine","description":"\nReads a line and advances the file position"},"readBool":{"summary":"\nReads a boolean and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readBool","realm":"cl","param":[],"name":"file_methods:readBool","description":"\nReads a boolean and advances the file position"},"size":{"summary":"\nReturns the file's size in bytes ","ret":"The file's size","class":"function","private":false,"classlib":"File","fname":"size","realm":"cl","param":[],"name":"file_methods:size","description":"\nReturns the file's size in bytes"},"readByte":{"summary":"\nReads a byte and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readByte","realm":"cl","param":[],"name":"file_methods:readByte","description":"\nReads a byte and advances the file position"},"close":{"summary":"\nFlushes and closes the file.","class":"function","private":false,"param":[],"fname":"close","realm":"cl","name":"file_methods:close","classlib":"File","description":"\nFlushes and closes the file. The file must be opened again to use a new file object."},"writeByte":{"summary":"\nWrites a byte and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The byte to write"},"fname":"writeByte","realm":"cl","name":"file_methods:writeByte","classlib":"File","description":"\nWrites a byte and advances the file position"},"readLong":{"summary":"\nReads a long and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readLong","realm":"cl","param":[],"name":"file_methods:readLong","description":"\nReads a long and advances the file position"},"readDouble":{"summary":"\nReads a double and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readDouble","realm":"cl","param":[],"name":"file_methods:readDouble","description":"\nReads a double and advances the file position"},"readFloat":{"summary":"\nReads a float and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readFloat","realm":"cl","param":[],"name":"file_methods:readFloat","description":"\nReads a float and advances the file position"},"skip":{"summary":"\nMoves the file position relative to its current position ","ret":"The resulting position","class":"function","private":false,"classlib":"File","fname":"skip","realm":"cl","param":{"1":"n","n":"How much to move the position"},"name":"file_methods:skip","description":"\nMoves the file position relative to its current position"},"writeShort":{"summary":"\nWrites a short and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The short to write"},"fname":"writeShort","realm":"cl","name":"file_methods:writeShort","classlib":"File","description":"\nWrites a short and advances the file position"},"tell":{"summary":"\nReturns the current file position ","ret":"The current file position","class":"function","private":false,"classlib":"File","fname":"tell","realm":"cl","param":[],"name":"file_methods:tell","description":"\nReturns the current file position"},"readShort":{"summary":"\nReads a short and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readShort","realm":"cl","param":[],"name":"file_methods:readShort","description":"\nReads a short and advances the file position"},"writeBool":{"summary":"\nWrites a boolean and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The boolean to write"},"fname":"writeBool","realm":"cl","name":"file_methods:writeBool","classlib":"File","description":"\nWrites a boolean and advances the file position"}},"class":"class","client":true,"fields":[],"summary":"\nFile type ","typtbl":"file_methods","name":"File","description":"\nFile type"},"Quaternion":{"methods":{"1":"clone","2":"conj","3":"forward","4":"i","5":"j","6":"k","7":"r","8":"real","9":"right","10":"set","11":"up","real":{"summary":"\nReturns the real component of the quaternion ","class":"function","private":false,"param":[],"fname":"real","realm":"sh","name":"quat_methods:real","classlib":"Quaternion","description":"\nReturns the real component of the quaternion"},"set":{"summary":"\nCopies a quaternion to another.","ret":"nil","class":"function","private":false,"classlib":"Quaternion","fname":"set","realm":"sh","param":{"1":"b","b":"The quaternion to copy from."},"name":"quat_methods:set","description":"\nCopies a quaternion to another."},"conj":{"summary":"\nReturns the conj of self ","class":"function","private":false,"param":[],"fname":"conj","realm":"sh","name":"quat_methods:conj","classlib":"Quaternion","description":"\nReturns the conj of self"},"up":{"summary":"\nReturns vector pointing up for <this> ","class":"function","private":false,"param":[],"fname":"up","realm":"sh","name":"quat_methods:up","classlib":"Quaternion","description":"\nReturns vector pointing up for <this>"},"k":{"summary":"\nReturns the k component of the quaternion ","class":"function","private":false,"param":[],"fname":"k","realm":"sh","name":"quat_methods:k","classlib":"Quaternion","description":"\nReturns the k component of the quaternion"},"j":{"summary":"\nReturns the j component of the quaternion ","class":"function","private":false,"param":[],"fname":"j","realm":"sh","name":"quat_methods:j","classlib":"Quaternion","description":"\nReturns the j component of the quaternion"},"right":{"summary":"\nReturns vector pointing right for <this> ","class":"function","private":false,"param":[],"fname":"right","realm":"sh","name":"quat_methods:right","classlib":"Quaternion","description":"\nReturns vector pointing right for <this>"},"r":{"summary":"\nAlias for :real() as r is easier ","class":"function","private":false,"param":[],"fname":"r","realm":"sh","name":"quat_methods:r","classlib":"Quaternion","description":"\nAlias for :real() as r is easier"},"forward":{"summary":"\nReturns vector pointing forward for <this> ","class":"function","private":false,"param":[],"fname":"forward","realm":"sh","name":"quat_methods:forward","classlib":"Quaternion","description":"\nReturns vector pointing forward for <this>"},"i":{"summary":"\nReturns the i component of the quaternion ","class":"function","private":false,"param":[],"fname":"i","realm":"sh","name":"quat_methods:i","classlib":"Quaternion","description":"\nReturns the i component of the quaternion"},"clone":{"summary":"\nCopies from quaternion and returns a new quaternion ","ret":"The copy of the quaternion","class":"function","private":false,"classlib":"Quaternion","fname":"clone","realm":"sh","param":[],"name":"quat_methods:clone","description":"\nCopies from quaternion and returns a new quaternion"}},"class":"class","fields":[],"summary":"\nQuaternion type ","typtbl":"quat_methods","name":"Quaternion","description":"\nQuaternion type"},"Effect":{"methods":{"1":"getAngles","2":"getAttachment","3":"getColor","4":"getDamageType","5":"getEntIndex","6":"getEntity","7":"getFlags","8":"getHitBox","9":"getMagnitude","10":"getMaterialIndex","11":"getNormal","12":"getOrigin","13":"getRadius","14":"getScale","15":"getStart","16":"getSurfaceProp","17":"play","18":"setAngles","19":"setAttachment","20":"setColor","21":"setDamageType","22":"setEntIndex","23":"setEntity","24":"setFlags","25":"setHitBox","26":"setMagnitude","27":"setMaterialIndex","28":"setNormal","29":"setOrigin","30":"setRadius","31":"setScale","32":"setStart","33":"setSurfaceProp","setAttachment":{"summary":"\nSets the effect's attachment ","class":"function","private":false,"param":{"1":"attachment","attachment":"The attachment"},"fname":"setAttachment","realm":"sh","name":"effect_methods:setAttachment","classlib":"Effect","description":"\nSets the effect's attachment"},"setRadius":{"summary":"\nSets the effect's radius ","class":"function","private":false,"param":{"1":"radius","radius":"The radius"},"fname":"setRadius","realm":"sh","name":"effect_methods:setRadius","classlib":"Effect","description":"\nSets the effect's radius"},"getAttachment":{"summary":"\nReturns the effect's attachment ","ret":"the effect's attachment","class":"function","private":false,"classlib":"Effect","fname":"getAttachment","realm":"sh","param":[],"name":"effect_methods:getAttachment","description":"\nReturns the effect's attachment"},"getRadius":{"summary":"\nReturns the effect's radius ","ret":"the effect's radius","class":"function","private":false,"classlib":"Effect","fname":"getRadius","realm":"sh","param":[],"name":"effect_methods:getRadius","description":"\nReturns the effect's radius"},"getScale":{"summary":"\nReturns the effect's scale ","ret":"the effect's scale","class":"function","private":false,"classlib":"Effect","fname":"getScale","realm":"sh","param":[],"name":"effect_methods:getScale","description":"\nReturns the effect's scale"},"getSurfaceProp":{"summary":"\nReturns the effect's surface prop ","ret":"the effect's surface prop","class":"function","private":false,"classlib":"Effect","fname":"getSurfaceProp","realm":"sh","param":[],"name":"effect_methods:getSurfaceProp","description":"\nReturns the effect's surface prop"},"getFlags":{"summary":"\nReturns the effect's flags ","ret":"the effect's flags","class":"function","private":false,"classlib":"Effect","fname":"getFlags","realm":"sh","param":[],"name":"effect_methods:getFlags","description":"\nReturns the effect's flags"},"setColor":{"summary":"\nSets the effect's color ","class":"function","private":false,"param":{"1":"color","color":"The color represented by a byte 0-255. wtf?"},"fname":"setColor","realm":"sh","name":"effect_methods:setColor","classlib":"Effect","description":"\nSets the effect's color"},"getEntIndex":{"summary":"\nReturns the effect's entindex ","ret":"the effect's entindex","class":"function","private":false,"classlib":"Effect","fname":"getEntIndex","realm":"sh","param":[],"name":"effect_methods:getEntIndex","description":"\nReturns the effect's entindex"},"setMaterialIndex":{"summary":"\nSets the effect's material index ","class":"function","private":false,"param":{"1":"mat","mat":"The material index"},"fname":"setMaterialIndex","realm":"sh","name":"effect_methods:setMaterialIndex","classlib":"Effect","description":"\nSets the effect's material index"},"setSurfaceProp":{"summary":"\nSets the effect's surface property ","class":"function","private":false,"param":{"1":"prop","prop":"The surface property"},"fname":"setSurfaceProp","realm":"sh","name":"effect_methods:setSurfaceProp","classlib":"Effect","description":"\nSets the effect's surface property"},"getStart":{"summary":"\nReturns the effect's start position ","ret":"the effect's start position","class":"function","private":false,"classlib":"Effect","fname":"getStart","realm":"sh","param":[],"name":"effect_methods:getStart","description":"\nReturns the effect's start position"},"setHitBox":{"summary":"\nSets the effect's hitbox ","class":"function","private":false,"param":{"1":"hitbox","hitbox":"The hitbox"},"fname":"setHitBox","realm":"sh","name":"effect_methods:setHitBox","classlib":"Effect","description":"\nSets the effect's hitbox"},"setNormal":{"summary":"\nSets the effect's normal ","class":"function","private":false,"param":{"1":"normal","normal":"The vector normal"},"fname":"setNormal","realm":"sh","name":"effect_methods:setNormal","classlib":"Effect","description":"\nSets the effect's normal"},"getColor":{"summary":"\nReturns the effect's color ","ret":"the effect's color","class":"function","private":false,"classlib":"Effect","fname":"getColor","realm":"sh","param":[],"name":"effect_methods:getColor","description":"\nReturns the effect's color"},"getOrigin":{"summary":"\nReturns the effect's origin ","ret":"the effect's origin","class":"function","private":false,"classlib":"Effect","fname":"getOrigin","realm":"sh","param":[],"name":"effect_methods:getOrigin","description":"\nReturns the effect's origin"},"setEntIndex":{"summary":"\nSets the effect's entity index ","class":"function","private":false,"param":{"1":"index","index":"The entity index"},"fname":"setEntIndex","realm":"sh","name":"effect_methods:setEntIndex","classlib":"Effect","description":"\nSets the effect's entity index"},"setStart":{"summary":"\nSets the effect's start ","class":"function","private":false,"param":{"1":"start","start":"The vector start"},"fname":"setStart","realm":"sh","name":"effect_methods:setStart","classlib":"Effect","description":"\nSets the effect's start"},"play":{"summary":"\nPlays the effect ","class":"function","private":false,"param":{"1":"eff","eff":"The effect type to play"},"fname":"play","realm":"sh","name":"effect_methods:play","classlib":"Effect","description":"\nPlays the effect"},"setMagnitude":{"summary":"\nSets the effect's magnitude ","class":"function","private":false,"param":{"1":"magnitude","magnitude":"The magnitude"},"fname":"setMagnitude","realm":"sh","name":"effect_methods:setMagnitude","classlib":"Effect","description":"\nSets the effect's magnitude"},"setAngles":{"summary":"\nSets the effect's angles ","class":"function","private":false,"param":{"1":"ang","ang":"The angles"},"fname":"setAngles","realm":"sh","name":"effect_methods:setAngles","classlib":"Effect","description":"\nSets the effect's angles"},"getEntity":{"summary":"\nReturns the effect's entity ","ret":"the effect's entity","class":"function","private":false,"classlib":"Effect","fname":"getEntity","realm":"sh","param":[],"name":"effect_methods:getEntity","description":"\nReturns the effect's entity"},"setScale":{"summary":"\nSets the effect's scale ","class":"function","private":false,"param":{"1":"scale","scale":"The number scale"},"fname":"setScale","realm":"sh","name":"effect_methods:setScale","classlib":"Effect","description":"\nSets the effect's scale"},"getHitBox":{"summary":"\nReturns the effect's hitbox ","ret":"the effect's hitbox","class":"function","private":false,"classlib":"Effect","fname":"getHitBox","realm":"sh","param":[],"name":"effect_methods:getHitBox","description":"\nReturns the effect's hitbox"},"setDamageType":{"summary":"\nSets the effect's damage type ","class":"function","private":false,"param":{"1":"dmgtype","dmgtype":"The damage type"},"fname":"setDamageType","realm":"sh","name":"effect_methods:setDamageType","classlib":"Effect","description":"\nSets the effect's damage type"},"getNormal":{"summary":"\nReturns the effect's normal ","ret":"the effect's normal","class":"function","private":false,"classlib":"Effect","fname":"getNormal","realm":"sh","param":[],"name":"effect_methods:getNormal","description":"\nReturns the effect's normal"},"getMaterialIndex":{"summary":"\nReturns the effect's material index ","ret":"the effect's material index","class":"function","private":false,"classlib":"Effect","fname":"getMaterialIndex","realm":"sh","param":[],"name":"effect_methods:getMaterialIndex","description":"\nReturns the effect's material index"},"setEntity":{"summary":"\nSets the effect's entity ","class":"function","private":false,"param":{"1":"ent","ent":"The entity"},"fname":"setEntity","realm":"sh","name":"effect_methods:setEntity","classlib":"Effect","description":"\nSets the effect's entity"},"setFlags":{"summary":"\nSets the effect's flags ","class":"function","private":false,"param":{"1":"flags","flags":"The flags"},"fname":"setFlags","realm":"sh","name":"effect_methods:setFlags","classlib":"Effect","description":"\nSets the effect's flags"},"getMagnitude":{"summary":"\nReturns the effect's magnitude ","ret":"the effect's magnitude","class":"function","private":false,"classlib":"Effect","fname":"getMagnitude","realm":"sh","param":[],"name":"effect_methods:getMagnitude","description":"\nReturns the effect's magnitude"},"setOrigin":{"summary":"\nSets the effect's origin ","class":"function","private":false,"param":{"1":"origin","origin":"The vector origin"},"fname":"setOrigin","realm":"sh","name":"effect_methods:setOrigin","classlib":"Effect","description":"\nSets the effect's origin"},"getDamageType":{"summary":"\nReturns the effect's damagetype ","ret":"the effect's damagetype","class":"function","private":false,"classlib":"Effect","fname":"getDamageType","realm":"sh","param":[],"name":"effect_methods:getDamageType","description":"\nReturns the effect's damagetype"},"getAngles":{"summary":"\nReturns the effect's angle ","ret":"the effect's angle","class":"function","private":false,"classlib":"Effect","fname":"getAngles","realm":"sh","param":[],"name":"effect_methods:getAngles","description":"\nReturns the effect's angle"}},"class":"class","client":true,"summary":"\nEffect type ","fields":[],"server":true,"typtbl":"effect_methods","name":"Effect","description":"\nEffect type"},"Weapon":{"methods":{"1":"clip1","2":"clip2","3":"getActivity","4":"getHoldType","5":"getNextPrimaryFire","6":"getNextSecondaryFire","7":"getPrimaryAmmoType","8":"getPrintName","9":"getSecondaryAmmoType","10":"getToolMode","11":"isCarriedByLocalPlayer","12":"isWeaponVisible","13":"lastShootTime","getNextSecondaryFire":{"server":true,"ret":"The time, relative to CurTime","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the next time the weapon can secondary fire.","fname":"getNextSecondaryFire","realm":"sh","param":[],"name":"weapon_methods:getNextSecondaryFire","description":"\nGets the next time the weapon can secondary fire."},"lastShootTime":{"server":true,"ret":"Time the weapon was last shot","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the time since a weapon was last fired at a float variable ","fname":"lastShootTime","realm":"sh","param":[],"name":"weapon_methods:lastShootTime","description":"\nReturns the time since a weapon was last fired at a float variable"},"clip1":{"server":true,"ret":"amount of ammo","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns Ammo in primary clip ","fname":"clip1","realm":"sh","param":[],"name":"weapon_methods:clip1","description":"\nReturns Ammo in primary clip"},"getActivity":{"server":true,"ret":"number Current activity","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the sequence enumeration number that the weapon is playing.","fname":"getActivity","realm":"sh","param":[],"name":"weapon_methods:getActivity","description":"\nReturns the sequence enumeration number that the weapon is playing. Must be used on a view model."},"getSecondaryAmmoType":{"server":true,"ret":"Ammo number type","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the secondary ammo type of the given weapon.","fname":"getSecondaryAmmoType","realm":"sh","param":[],"name":"weapon_methods:getSecondaryAmmoType","description":"\nGets the secondary ammo type of the given weapon."},"getNextPrimaryFire":{"server":true,"ret":"The time, relative to CurTime","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the next time the weapon can primary fire.","fname":"getNextPrimaryFire","realm":"sh","param":[],"name":"weapon_methods:getNextPrimaryFire","description":"\nGets the next time the weapon can primary fire."},"isCarriedByLocalPlayer":{"summary":"\nReturns if the weapon is carried by the local player.","ret":"whether or not the weapon is carried by the local player","class":"function","client":true,"private":false,"classlib":"Weapon","fname":"isCarriedByLocalPlayer","realm":"cl","param":[],"name":"weapon_methods:isCarriedByLocalPlayer","description":"\nReturns if the weapon is carried by the local player."},"getPrintName":{"summary":"\nGets Display name of weapon ","ret":"string Display name of weapon","class":"function","client":true,"private":false,"classlib":"Weapon","fname":"getPrintName","realm":"cl","param":[],"name":"weapon_methods:getPrintName","description":"\nGets Display name of weapon"},"getToolMode":{"server":true,"ret":"The tool mode of the toolgun","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the tool mode of the toolgun ","fname":"getToolMode","realm":"sh","param":[],"name":"weapon_methods:getToolMode","description":"\nReturns the tool mode of the toolgun"},"clip2":{"server":true,"ret":"amount of ammo","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns Ammo in secondary clip ","fname":"clip2","realm":"sh","param":[],"name":"weapon_methods:clip2","description":"\nReturns Ammo in secondary clip"},"isWeaponVisible":{"server":true,"ret":"Whether the weapon is visble or not","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns whether the weapon is visible ","fname":"isWeaponVisible","realm":"sh","param":[],"name":"weapon_methods:isWeaponVisible","description":"\nReturns whether the weapon is visible"},"getHoldType":{"server":true,"ret":"string Holdtype","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the hold type of the weapon.","fname":"getHoldType","realm":"sh","param":[],"name":"weapon_methods:getHoldType","description":"\nReturns the hold type of the weapon."},"getPrimaryAmmoType":{"server":true,"ret":"Ammo number type","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the primary ammo type of the given weapon.","fname":"getPrimaryAmmoType","realm":"sh","param":[],"name":"weapon_methods:getPrimaryAmmoType","description":"\nGets the primary ammo type of the given weapon."}},"class":"class","fields":[],"summary":"\nWeapon type ","typtbl":"weapon_methods","name":"Weapon","description":"\nWeapon type"},"Particle":{"methods":{"1":"destroy","2":"isFinished","3":"isValid","4":"restart","5":"setControlPoint","6":"setControlPointEntity","7":"setControlPointParent","8":"setForwardVector","9":"setRightVector","10":"setSortOrigin","11":"setUpVector","12":"startEmission","13":"stopEmission","setSortOrigin":{"summary":"\nSets the sort origin for given particle system.","class":"function","private":false,"param":{"1":"origin","2":"vector","vector":"Sort Origin"},"fname":"setSortOrigin","realm":"cl","name":"particle_methods:setSortOrigin","classlib":"Particle","description":"\nSets the sort origin for given particle system. This is used as a helper to determine which particles are in front of which."},"restart":{"summary":"\nRestarts emission of the particle.","class":"function","private":false,"param":[],"fname":"restart","realm":"cl","name":"particle_methods:restart","classlib":"Particle","description":"\nRestarts emission of the particle."},"stopEmission":{"summary":"\nStops emission of the particle.","class":"function","private":false,"param":[],"fname":"stopEmission","realm":"cl","name":"particle_methods:stopEmission","classlib":"Particle","description":"\nStops emission of the particle."},"setControlPointEntity":{"summary":"\nEssentially makes child control point follow the parent entity.","class":"function","private":false,"param":{"1":"id","2":"entity","3":"number","number":"Child Control Point ID (0-63)","entity":"Entity parent"},"fname":"setControlPointEntity","realm":"cl","name":"particle_methods:setControlPointEntity","classlib":"Particle","description":"\nEssentially makes child control point follow the parent entity."},"destroy":{"summary":"\nStops emission of the particle and destroys the object.","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"particle_methods:destroy","classlib":"Particle","description":"\nStops emission of the particle and destroys the object."},"setControlPointParent":{"summary":"\nSets the forward direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","number":"Parent"},"fname":"setControlPointParent","realm":"cl","name":"particle_methods:setControlPointParent","classlib":"Particle","description":"\nSets the forward direction for given control point."},"setControlPoint":{"summary":"\nSets a value for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Value"},"fname":"setControlPoint","realm":"cl","name":"particle_methods:setControlPoint","classlib":"Particle","description":"\nSets a value for given control point."},"setUpVector":{"summary":"\nSets the right direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Right"},"fname":"setUpVector","realm":"cl","name":"particle_methods:setUpVector","classlib":"Particle","description":"\nSets the right direction for given control point."},"isFinished":{"summary":"\nRestarts emission of the particle.","ret":"bool finished","class":"function","private":false,"classlib":"Particle","fname":"isFinished","realm":"cl","param":[],"name":"particle_methods:isFinished","description":"\nRestarts emission of the particle."},"setForwardVector":{"summary":"\nSets the forward direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Forward"},"fname":"setForwardVector","realm":"cl","name":"particle_methods:setForwardVector","classlib":"Particle","description":"\nSets the forward direction for given control point."},"startEmission":{"summary":"\nStarts emission of the particle.","class":"function","private":false,"param":[],"fname":"startEmission","realm":"cl","name":"particle_methods:startEmission","classlib":"Particle","description":"\nStarts emission of the particle."},"setRightVector":{"summary":"\nSets the right direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Right"},"fname":"setRightVector","realm":"cl","name":"particle_methods:setRightVector","classlib":"Particle","description":"\nSets the right direction for given control point."},"isValid":{"summary":"\nGets if the particle is valid or not.","ret":"Is valid or not","class":"function","private":false,"classlib":"Particle","fname":"isValid","realm":"cl","param":[],"name":"particle_methods:isValid","description":"\nGets if the particle is valid or not."}},"class":"class","client":true,"fields":[],"summary":"\nParticle type ","typtbl":"particle_methods","name":"Particle","description":"\nParticle type"},"Entity":{"methods":{"1":"addAngleVelocity","2":"addCollisionListener","3":"applyAngForce","4":"applyDamage","5":"applyForceCenter","6":"applyForceOffset","7":"applyTorque","8":"breakEnt","9":"emitSound","10":"enableDrag","11":"enableGravity","12":"enableMotion","13":"enableSphere","14":"entIndex","15":"extinguish","16":"getAllConstrained","17":"getAngleVelocity","18":"getAngleVelocityAngle","19":"getAngles","20":"getAttachment","21":"getAttachmentParent","22":"getAttachments","23":"getBoneCount","24":"getBoneMatrix","25":"getBoneName","26":"getBoneParent","27":"getBonePosition","28":"getChildren","29":"getChipName","30":"getClass","31":"getClipping","32":"getColor","33":"getCreationID","34":"getCreationTime","35":"getEyeAngles","36":"getEyePos","37":"getFlexScale","38":"getFlexWeight","39":"getFlexes","40":"getForward","41":"getHealth","42":"getInertia","43":"getLinkedComponents","44":"getMass","45":"getMassCenter","46":"getMassCenterW","47":"getMaterial","48":"getMaterials","49":"getMatrix","50":"getMaxHealth","51":"getModel","52":"getOwner","53":"getParent","54":"getPhysMaterial","55":"getPhysicsObject","56":"getPhysicsObjectCount","57":"getPhysicsObjectNum","58":"getPos","59":"getPose","60":"getRight","61":"getSkin","62":"getSubMaterial","63":"getUp","64":"getVelocity","65":"getWaterLevel","66":"ignite","67":"isFrozen","68":"isNPC","69":"isOnFire","70":"isOnGround","71":"isPlayer","72":"isPlayerHolding","73":"isValid","74":"isValidPhys","75":"isVehicle","76":"isWeapon","77":"isWeldedTo","78":"linkComponent","79":"localToWorld","80":"localToWorldAngles","81":"lookupAttachment","82":"lookupBone","83":"lookupSequence","84":"manipulateBoneAngles","85":"manipulateBonePosition","86":"manipulateBoneScale","87":"obbCenter","88":"obbCenterW","89":"obbMaxs","90":"obbMins","91":"obbSize","92":"remove","93":"removeCollisionListener","94":"removeTrails","95":"sequenceDuration","96":"setAngleVelocity","97":"setAngles","98":"setBodygroup","99":"setColor","100":"setComponentLocksControls","101":"setCustomPropForces","102":"setDrawShadow","103":"setFlexScale","104":"setFlexWeight","105":"setFrozen","106":"setInertia","107":"setMass","108":"setMaterial","109":"setMesh","110":"setMeshMaterial","111":"setNoDraw","112":"setNocollideAll","113":"setParent","114":"setPhysMaterial","115":"setPos","116":"setPose","117":"setRenderBounds","118":"setRenderFX","119":"setRenderMode","120":"setSkin","121":"setSolid","122":"setSubMaterial","123":"setTrails","124":"setUnbreakable","125":"setVelocity","126":"stopSound","127":"testPVS","128":"toHologram","129":"translateBoneToPhysBone","130":"translatePhysBoneToBone","131":"unparent","132":"worldSpaceAABB","133":"worldToLocal","134":"worldToLocalAngles","localToWorld":{"server":true,"ret":"data as world space vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts a vector in entity local space to world space ","fname":"localToWorld","realm":"sh","param":{"1":"data","data":"Local space vector"},"name":"ents_methods:localToWorld","description":"\nConverts a vector in entity local space to world space"},"setVelocity":{"summary":"\nSets the entity's linear velocity ","class":"function","private":false,"param":{"1":"vel","vel":"New velocity"},"fname":"setVelocity","realm":"sv","name":"ents_methods:setVelocity","classlib":"Entity","description":"\nSets the entity's linear velocity"},"obbMins":{"server":true,"ret":"The min bounding box vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns min local bounding box vector of the entity ","fname":"obbMins","realm":"sh","param":[],"name":"ents_methods:obbMins","description":"\nReturns min local bounding box vector of the entity"},"getForward":{"server":true,"ret":"Vector forward","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's forward vector ","fname":"getForward","realm":"sh","param":[],"name":"ents_methods:getForward","description":"\nGets the entity's forward vector"},"emitSound":{"summary":"\nPlays a sound on the entity ","class":"function","private":false,"param":{"1":"snd","2":"lvl","3":"pitch","4":"volume","5":"channel","snd":"string Sound path","channel":"channel=CHAN_AUTO","pitch":"pitchPercent=100","volume":"volume=1","lvl":"number soundLevel=75"},"fname":"emitSound","realm":"sh","name":"ents_methods:emitSound","classlib":"Entity","description":"\nPlays a sound on the entity"},"getCreationTime":{"server":true,"ret":"Seconds relative to server map start","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the timer.curtime() time the entity was created on ","fname":"getCreationTime","realm":"sh","param":[],"name":"ents_methods:getCreationTime","description":"\nReturns the timer.curtime() time the entity was created on"},"setTrails":{"summary":"\nAdds a trail to the entity with the specified attributes.","class":"function","private":false,"param":{"1":"startSize","2":"endSize","3":"length","4":"material","5":"color","6":"attachmentID","7":"additive","attachmentID":"Optional attachmentid the trail should attach to","material":"The material of the trail","additive":"If the trail's rendering is additive","color":"The color of the trail","length":"The length size of the trail","startSize":"The start size of the trail","endSize":"The end size of the trail"},"fname":"setTrails","realm":"sv","name":"ents_methods:setTrails","classlib":"Entity","description":"\nAdds a trail to the entity with the specified attributes."},"setUnbreakable":{"summary":"\nSets a prop_physics to be unbreakable ","class":"function","private":false,"param":{"1":"on","on":"Whether to make the prop unbreakable"},"fname":"setUnbreakable","realm":"sv","name":"ents_methods:setUnbreakable","classlib":"Entity","description":"\nSets a prop_physics to be unbreakable"},"addCollisionListener":{"summary":"\nAllows detecting collisions on an entity.","class":"function","private":false,"param":{"1":"func","func":"The callback function with argument, table collsiondata, http://wiki.garrysmod.com/page/Structures/CollisionData"},"fname":"addCollisionListener","realm":"sv","name":"ents_methods:addCollisionListener","classlib":"Entity","description":"\nAllows detecting collisions on an entity. You can only do this once for the entity's entire lifespan so use it wisely."},"getLinkedComponents":{"summary":"\nReturns a list of entities linked to a processor ","ret":"A list of components linked to the entity","class":"function","private":false,"classlib":"Entity","fname":"getLinkedComponents","realm":"sv","param":[],"name":"ents_methods:getLinkedComponents","description":"\nReturns a list of entities linked to a processor"},"getVelocity":{"server":true,"ret":"The velocity vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the velocity of the entity ","fname":"getVelocity","realm":"sh","param":[],"name":"ents_methods:getVelocity","description":"\nReturns the velocity of the entity"},"getAngleVelocityAngle":{"server":true,"ret":"The angular velocity as an angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angular velocity of the entity ","fname":"getAngleVelocityAngle","realm":"sh","param":[],"name":"ents_methods:getAngleVelocityAngle","description":"\nReturns the angular velocity of the entity"},"getMaterials":{"server":true,"classForced":true,"ret":"Material","class":"function","client":true,"summary":"\nGets an entities' material list ","private":false,"fname":"getMaterials","classlib":"Entity","realm":"sh","param":[],"name":"ents_methods:getMaterials","description":"\nGets an entities' material list"},"enableGravity":{"summary":"\nSets entity gravity ","class":"function","private":false,"param":{"1":"grav","grav":"Bool should the entity respect gravity?"},"fname":"enableGravity","realm":"sv","name":"ents_methods:enableGravity","classlib":"Entity","description":"\nSets entity gravity"},"setMesh":{"summary":"\nSets a hologram or custom_prop model to a custom Mesh ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setMesh","realm":"cl","param":{"1":"mesh","mesh":"The mesh to set it to or nil to set back to normal"},"name":"ents_methods:setMesh","description":"\nSets a hologram or custom_prop model to a custom Mesh"},"setComponentLocksControls":{"summary":"\nSets a component's ability to lock a player's controls ","class":"function","private":false,"param":{"1":"enable","enable":"Whether the component will lock the player's controls when used"},"fname":"setComponentLocksControls","realm":"sv","name":"ents_methods:setComponentLocksControls","classlib":"Entity","description":"\nSets a component's ability to lock a player's controls"},"setDrawShadow":{"summary":"\nSets whether an entity's shadow should be drawn ","class":"function","private":false,"param":{"1":"draw","2":"ply","ply":"Optional player argument to set only for that player. Can also be table of players."},"fname":"setDrawShadow","realm":"sv","name":"ents_methods:setDrawShadow","classlib":"Entity","description":"\nSets whether an entity's shadow should be drawn"},"getBonePosition":{"server":true,"ret":["Position of the bone","Angle of the bone"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the bone's position and angle in world coordinates ","fname":"getBonePosition","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBonePosition","description":"\nReturns the bone's position and angle in world coordinates"},"extinguish":{"summary":"\nExtinguishes an entity ","class":"function","private":false,"param":[],"fname":"extinguish","realm":"sv","name":"ents_methods:extinguish","classlib":"Entity","description":"\nExtinguishes an entity"},"getInertia":{"server":true,"ret":"The principle moments of inertia as a vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the principle moments of inertia of the entity ","fname":"getInertia","realm":"sh","param":[],"name":"ents_methods:getInertia","description":"\nReturns the principle moments of inertia of the entity"},"isPlayerHolding":{"server":true,"ret":"Boolean if the entity is being held or not","class":"function","classlib":"Entity","private":false,"summary":"\nReturns true if the entity is being held by a player.","fname":"isPlayerHolding","realm":"sv","param":[],"name":"ents_methods:isPlayerHolding","description":"\nReturns true if the entity is being held by a player. Either by Physics gun, Gravity gun or Use-key."},"getUp":{"server":true,"ret":"Vector up","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's up vector ","fname":"getUp","realm":"sh","param":[],"name":"ents_methods:getUp","description":"\nGets the entity's up vector"},"getMatrix":{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world transform matrix of the entity ","fname":"getMatrix","realm":"sh","param":[],"name":"ents_methods:getMatrix","description":"\nReturns the world transform matrix of the entity"},"setNocollideAll":{"summary":"\nSet's the entity to collide with nothing but the world ","class":"function","private":false,"param":{"1":"nocollide","nocollide":"Whether to collide with nothing except world or not."},"fname":"setNocollideAll","realm":"sv","name":"ents_methods:setNocollideAll","classlib":"Entity","description":"\nSet's the entity to collide with nothing but the world"},"getAttachmentParent":{"server":true,"ret":"number index of the attachment the entity is parented to or 0","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the attachment index the entity is parented to ","fname":"getAttachmentParent","realm":"sh","param":[],"name":"ents_methods:getAttachmentParent","description":"\nGets the attachment index the entity is parented to"},"isOnGround":{"server":true,"ret":"Boolean if it's flag is set or not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if the entity ONGROUND flag is set ","fname":"isOnGround","realm":"sh","param":[],"name":"ents_methods:isOnGround","description":"\nChecks if the entity ONGROUND flag is set"},"getCreationID":{"summary":"\nReturns entity's creation ID (similar to entIndex, but increments monotonically) ","ret":"The creation ID","class":"function","private":false,"classlib":"Entity","fname":"getCreationID","realm":"sv","param":[],"name":"ents_methods:getCreationID","description":"\nReturns entity's creation ID (similar to entIndex, but increments monotonically)"},"getFlexScale":{"summary":"\nGets the scale of the entity flexes ","ret":"The scale of the flexes","class":"function","private":false,"classlib":"Entity","fname":"getFlexScale","realm":"sh","param":[],"name":"ents_methods:getFlexScale","description":"\nGets the scale of the entity flexes"},"getPhysicsObjectNum":{"summary":"\nGets a physics objects of an entity ","ret":"The physics object of the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObjectNum","realm":"sh","param":{"1":"id","id":"The physics object id (starts at 0)"},"name":"ents_methods:getPhysicsObjectNum","description":"\nGets a physics objects of an entity"},"isVehicle":{"server":true,"ret":"True if vehicle, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a vehicle.","fname":"isVehicle","realm":"sh","param":[],"name":"ents_methods:isVehicle","description":"\nChecks if an entity is a vehicle."},"toHologram":{"server":true,"ret":"Hologram type","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nCasts a hologram entity into the hologram type ","fname":"toHologram","realm":"sh","param":[],"name":"ents_methods:toHologram","description":"\nCasts a hologram entity into the hologram type"},"setRenderBounds":{"summary":"\nSets a hologram or custom_prop's renderbounds ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setRenderBounds","realm":"cl","param":{"1":"mins","2":"maxs","mins":"The lower bounding corner coordinate local to the hologram","maxs":"The upper bounding corner coordinate local to the hologram"},"name":"ents_methods:setRenderBounds","description":"\nSets a hologram or custom_prop's renderbounds"},"getRight":{"server":true,"ret":"Vector right","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's right vector ","fname":"getRight","realm":"sh","param":[],"name":"ents_methods:getRight","description":"\nGets the entity's right vector"},"lookupSequence":{"summary":"\nGets the animation number from the animation name ","ret":"Animation index or -1 if invalid","class":"function","private":false,"classlib":"Entity","fname":"lookupSequence","realm":"sh","param":{"1":"animation","animation":"Name of the animation"},"name":"ents_methods:lookupSequence","description":"\nGets the animation number from the animation name"},"setFlexScale":{"summary":"\nSets the scale of the entity flexes ","class":"function","private":false,"param":{"1":"scale","scale":"The scale of the flexes to set"},"fname":"setFlexScale","realm":"sh","name":"ents_methods:setFlexScale","classlib":"Entity","description":"\nSets the scale of the entity flexes"},"getClass":{"server":true,"ret":"The string class name","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the class of the entity ","fname":"getClass","realm":"sh","param":[],"name":"ents_methods:getClass","description":"\nReturns the class of the entity"},"getMassCenterW":{"server":true,"ret":"The position vector of the mass center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world position of the entity's mass center ","fname":"getMassCenterW","realm":"sh","param":[],"name":"ents_methods:getMassCenterW","description":"\nReturns the world position of the entity's mass center"},"setBodygroup":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the bodygroup of the entity ","fname":"setBodygroup","realm":"sh","param":{"1":"bodygroup","2":"value","value":"Number, The value you're setting the bodygroup to.","bodygroup":"Number, The ID of the bodygroup you're setting."},"name":"ents_methods:setBodygroup","description":"\nSets the bodygroup of the entity"},"getPhysicsObjectCount":{"summary":"\nGets the number of physicsobjects of an entity ","ret":"The number of physics objects on the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObjectCount","realm":"sh","param":[],"name":"ents_methods:getPhysicsObjectCount","description":"\nGets the number of physicsobjects of an entity"},"getColor":{"server":true,"ret":"Color","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the color of an entity ","fname":"getColor","realm":"sh","param":[],"name":"ents_methods:getColor","description":"\nGets the color of an entity"},"ignite":{"summary":"\nIgnites an entity ","class":"function","private":false,"param":{"1":"length","2":"radius","radius":"(optional) How large the fire hitbox is (entity obb is the max)","length":"How long the fire lasts"},"fname":"ignite","realm":"sv","name":"ents_methods:ignite","classlib":"Entity","description":"\nIgnites an entity"},"getModel":{"server":true,"ret":"Model of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the model of an entity ","fname":"getModel","realm":"sh","param":[],"name":"ents_methods:getModel","description":"\nGets the model of an entity"},"getBoneCount":{"server":true,"ret":"Number of bones","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the number of an entity's bones ","fname":"getBoneCount","realm":"sh","param":[],"name":"ents_methods:getBoneCount","description":"\nReturns the number of an entity's bones"},"isOnFire":{"server":true,"ret":"Boolean if the entity is on fire or not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns if the entity is ignited ","fname":"isOnFire","realm":"sh","param":[],"name":"ents_methods:isOnFire","description":"\nReturns if the entity is ignited"},"enableSphere":{"summary":"\nSets the physics of an entity to be a sphere ","class":"function","private":false,"param":{"1":"enabled","enabled":"Bool should the entity be spherical?"},"fname":"enableSphere","realm":"sv","name":"ents_methods:enableSphere","classlib":"Entity","description":"\nSets the physics of an entity to be a sphere"},"obbMaxs":{"server":true,"ret":"The max bounding box vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns max local bounding box vector of the entity ","fname":"obbMaxs","realm":"sh","param":[],"name":"ents_methods:obbMaxs","description":"\nReturns max local bounding box vector of the entity"},"getHealth":{"server":true,"ret":"Health of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the health of an entity ","fname":"getHealth","realm":"sh","param":[],"name":"ents_methods:getHealth","description":"\nGets the health of an entity"},"isWeapon":{"server":true,"ret":"True if weapon, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a weapon.","fname":"isWeapon","realm":"sh","param":[],"name":"ents_methods:isWeapon","description":"\nChecks if an entity is a weapon."},"lookupAttachment":{"server":true,"ret":"number of the attachment index, or 0 if it doesn't exist","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the attachment index via the entity and it's attachment name ","fname":"lookupAttachment","realm":"sh","param":{"1":"name","name":""},"name":"ents_methods:lookupAttachment","description":"\nGets the attachment index via the entity and it's attachment name"},"setRenderFX":{"server":true,"classForced":true,"class":"function","client":true,"summary":"\nSets the renderfx of the entity ","private":false,"fname":"setRenderFX","classlib":"Entity","realm":"sh","param":{"1":"renderfx","renderfx":"Number, renderfx to use. http://wiki.garrysmod.com/page/Enums/kRenderFx"},"name":"ents_methods:setRenderFX","description":"\nSets the renderfx of the entity"},"removeCollisionListener":{"summary":"\nRemoves a collision listening hook from the entity so that a new one can be added ","class":"function","private":false,"param":[],"fname":"removeCollisionListener","realm":"sv","name":"ents_methods:removeCollisionListener","classlib":"Entity","description":"\nRemoves a collision listening hook from the entity so that a new one can be added"},"getAttachment":{"server":true,"ret":"vector position, and angle orientation or nil if the attachment doesn't exist","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the position and angle of an attachment ","fname":"getAttachment","realm":"sh","param":{"1":"index","index":"The index of the attachment"},"name":"ents_methods:getAttachment","description":"\nGets the position and angle of an attachment"},"getAngles":{"server":true,"ret":"The angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angle of the entity ","fname":"getAngles","realm":"sh","param":[],"name":"ents_methods:getAngles","description":"\nReturns the angle of the entity"},"setParent":{"summary":"\nParents the entity to another entity ","class":"function","private":false,"param":{"1":"parent","2":"attachment","parent":"Entity to parent to. nil to unparent","attachment":"Optional string attachment name to parent to"},"fname":"setParent","realm":"sv","name":"ents_methods:setParent","classlib":"Entity","description":"\nParents the entity to another entity"},"translatePhysBoneToBone":{"summary":"\nConverts a physobject id to the corresponding ragdoll bone id ","ret":"The ragdoll bone id","class":"function","private":false,"classlib":"Entity","fname":"translatePhysBoneToBone","realm":"sh","param":{"1":"boneid","boneid":"The physobject id"},"name":"ents_methods:translatePhysBoneToBone","description":"\nConverts a physobject id to the corresponding ragdoll bone id"},"getEyePos":{"server":true,"ret":["Eye position of the entity","In case of a ragdoll, the position of the second eye"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's eye position ","fname":"getEyePos","realm":"sh","param":[],"name":"ents_methods:getEyePos","description":"\nGets the entity's eye position"},"setSkin":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the skin of the entity ","fname":"setSkin","realm":"sh","param":{"1":"skinIndex","skinIndex":"Number, Index of the skin to use."},"name":"ents_methods:setSkin","description":"\nSets the skin of the entity"},"setSubMaterial":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the submaterial of the entity ","fname":"setSubMaterial","realm":"sh","param":{"1":"index","2":"material","material":", string, New material name.","index":", number, submaterial index."},"name":"ents_methods:setSubMaterial","description":"\nSets the submaterial of the entity"},"getClipping":{"server":true,"ret":"Table containing the clipdata","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the clipping of an entity ","fname":"getClipping","realm":"sh","param":[],"name":"ents_methods:getClipping","description":"\nGets the clipping of an entity"},"worldToLocal":{"server":true,"ret":"data as local space vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts a vector in world space to entity local space ","fname":"worldToLocal","realm":"sh","param":{"1":"data","data":"World space vector"},"name":"ents_methods:worldToLocal","description":"\nConverts a vector in world space to entity local space"},"getBoneMatrix":{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the matrix of the entity's bone.","fname":"getBoneMatrix","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneMatrix","description":"\nReturns the matrix of the entity's bone. Note: this method is slow/doesnt work well if the entity isn't animated."},"manipulateBonePosition":{"summary":"\nAllows manipulation of an entity's bones' positions ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBonePosition","realm":"cl","param":{"1":"bone","2":"vec","vec":"The position it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBonePosition","description":"\nAllows manipulation of an entity's bones' positions"},"removeTrails":{"summary":"\nRemoves trails from the entity ","class":"function","private":false,"param":[],"fname":"removeTrails","realm":"sv","name":"ents_methods:removeTrails","classlib":"Entity","description":"\nRemoves trails from the entity"},"setMaterial":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the material of the entity ","fname":"setMaterial","realm":"sh","param":{"1":"material","material":", string, New material name."},"name":"ents_methods:setMaterial","description":"\nSets the material of the entity"},"testPVS":{"summary":"\nCheck if the given Entity or Vector is within this entity's PVS (Potentially Visible Set).","ret":"bool True/False","class":"function","private":false,"classlib":"Entity","fname":"testPVS","realm":"sv","param":{"1":"other","other":"Entity or Vector to test"},"name":"ents_methods:testPVS","description":"\nCheck if the given Entity or Vector is within this entity's PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},"isNPC":{"server":true,"ret":"True if npc, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is an npc.","fname":"isNPC","realm":"sh","param":[],"name":"ents_methods:isNPC","description":"\nChecks if an entity is an npc."},"worldToLocalAngles":{"server":true,"ret":"data as local space angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts an angle in world space to entity local space ","fname":"worldToLocalAngles","realm":"sh","param":{"1":"data","data":"World space angle"},"name":"ents_methods:worldToLocalAngles","description":"\nConverts an angle in world space to entity local space"},"setInertia":{"summary":"\nSets the entity's inertia ","class":"function","private":false,"param":{"1":"vec","vec":"Inertia tensor"},"fname":"setInertia","realm":"sv","name":"ents_methods:setInertia","classlib":"Entity","description":"\nSets the entity's inertia"},"sequenceDuration":{"summary":"\nGet the length of an animation ","ret":"Length of the animation in seconds","class":"function","private":false,"classlib":"Entity","fname":"sequenceDuration","realm":"sh","param":{"1":"id","id":"(Optional) The id of the sequence, or will default to the currently playing sequence"},"name":"ents_methods:sequenceDuration","description":"\nGet the length of an animation"},"getMaterial":{"server":true,"classForced":true,"ret":"String material","class":"function","client":true,"summary":"\nGets an entities' material ","private":false,"fname":"getMaterial","classlib":"Entity","realm":"sh","param":[],"name":"ents_methods:getMaterial","description":"\nGets an entities' material"},"translateBoneToPhysBone":{"summary":"\nConverts a ragdoll bone id to the corresponding physobject id ","ret":"The physobj id","class":"function","private":false,"classlib":"Entity","fname":"translateBoneToPhysBone","realm":"sh","param":{"1":"boneid","boneid":"The ragdoll boneid"},"name":"ents_methods:translateBoneToPhysBone","description":"\nConverts a ragdoll bone id to the corresponding physobject id"},"enableDrag":{"summary":"\nSets the entity drag state ","class":"function","private":false,"param":{"1":"drag","drag":"Bool should the entity have air resistence?"},"fname":"enableDrag","realm":"sv","name":"ents_methods:enableDrag","classlib":"Entity","description":"\nSets the entity drag state"},"setFrozen":{"summary":"\nSets the entity frozen state ","class":"function","private":false,"param":{"1":"freeze","freeze":"Should the entity be frozen?"},"fname":"setFrozen","realm":"sv","name":"ents_methods:setFrozen","classlib":"Entity","description":"\nSets the entity frozen state"},"getBoneName":{"server":true,"ret":"Name of the bone","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the name of an entity's bone ","fname":"getBoneName","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneName","description":"\nReturns the name of an entity's bone"},"setAngleVelocity":{"summary":"\nSet the angular velocity of an object ","class":"function","private":false,"param":{"1":"angvel","angvel":"The local angvel vector to set"},"fname":"setAngleVelocity","realm":"sv","name":"ents_methods:setAngleVelocity","classlib":"Entity","description":"\nSet the angular velocity of an object"},"getPos":{"server":true,"ret":"The position vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the position of the entity ","fname":"getPos","realm":"sh","param":[],"name":"ents_methods:getPos","description":"\nReturns the position of the entity"},"getPhysicsObject":{"summary":"\nGets the main physics objects of an entity ","ret":"The main physics object of the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObject","realm":"sh","param":[],"name":"ents_methods:getPhysicsObject","description":"\nGets the main physics objects of an entity"},"getChipName":{"summary":"\nReturns the chip's name of E2s or starfalls ","class":"function","private":false,"param":[],"fname":"getChipName","realm":"sh","name":"ents_methods:getChipName","classlib":"Entity","description":"\nReturns the chip's name of E2s or starfalls"},"remove":{"summary":"\nRemoves an entity ","class":"function","private":false,"param":[],"fname":"remove","realm":"sv","name":"ents_methods:remove","classlib":"Entity","description":"\nRemoves an entity"},"setMass":{"summary":"\nSets the entity's mass ","class":"function","private":false,"param":{"1":"mass","mass":"number mass"},"fname":"setMass","realm":"sv","name":"ents_methods:setMass","classlib":"Entity","description":"\nSets the entity's mass"},"getMassCenter":{"server":true,"ret":"The position vector of the mass center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the local position of the entity's mass center ","fname":"getMassCenter","realm":"sh","param":[],"name":"ents_methods:getMassCenter","description":"\nReturns the local position of the entity's mass center"},"enableMotion":{"summary":"\nSets the entity movement state ","class":"function","private":false,"param":{"1":"move","move":"Bool should the entity move?"},"fname":"enableMotion","realm":"sv","name":"ents_methods:enableMotion","classlib":"Entity","description":"\nSets the entity movement state"},"manipulateBoneScale":{"summary":"\nAllows manipulation of an entity's bones' scale ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBoneScale","realm":"cl","param":{"1":"bone","2":"vec","vec":"The scale it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBoneScale","description":"\nAllows manipulation of an entity's bones' scale"},"setPos":{"summary":"\nSets the entitiy's position.","class":"function","private":false,"param":{"1":"vec","vec":"New position"},"fname":"setPos","realm":"sv","name":"ents_methods:setPos","classlib":"Entity","description":"\nSets the entitiy's position. No interpolation will occur clientside, use physobj.setPos to have interpolation."},"applyAngForce":{"summary":"\nApplies angular force to the entity ","class":"function","private":false,"param":{"1":"ang","ang":"The force angle"},"fname":"applyAngForce","realm":"sv","name":"ents_methods:applyAngForce","classlib":"Entity","description":"\nApplies angular force to the entity"},"setMeshMaterial":{"summary":"\nSets a hologram or custom_prop's custom mesh material ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setMeshMaterial","realm":"cl","param":{"1":"material","material":"The material to set it to or nil to set back to default"},"name":"ents_methods:setMeshMaterial","description":"\nSets a hologram or custom_prop's custom mesh material"},"setPhysMaterial":{"summary":"\nSets the physical material of the entity ","class":"function","private":false,"param":{"1":"mat","mat":"Material to use"},"fname":"setPhysMaterial","realm":"sv","name":"ents_methods:setPhysMaterial","classlib":"Entity","description":"\nSets the physical material of the entity"},"getMass":{"server":true,"ret":"The numerical mass","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the mass of the entity ","fname":"getMass","realm":"sh","param":[],"name":"ents_methods:getMass","description":"\nReturns the mass of the entity"},"unparent":{"summary":"\nUnparents the entity from another entity ","class":"function","private":false,"param":[],"fname":"unparent","realm":"sv","name":"ents_methods:unparent","classlib":"Entity","description":"\nUnparents the entity from another entity"},"breakEnt":{"summary":"\nInvokes the entity's breaking animation and removes it.","class":"function","private":false,"param":[],"fname":"breakEnt","realm":"sv","name":"ents_methods:breakEnt","classlib":"Entity","description":"\nInvokes the entity's breaking animation and removes it."},"applyTorque":{"summary":"\nApplies torque ","class":"function","private":false,"param":{"1":"torque","torque":"The torque vector"},"fname":"applyTorque","realm":"sv","name":"ents_methods:applyTorque","classlib":"Entity","description":"\nApplies torque"},"setSolid":{"summary":"\nSets the entity to be Solid or not.","class":"function","private":false,"param":{"1":"solid","solid":"Boolean, Should the entity be solid?"},"fname":"setSolid","realm":"sv","name":"ents_methods:setSolid","classlib":"Entity","description":"\nSets the entity to be Solid or not. \nFor more information please refer to GLua function http://wiki.garrysmod.com/page/Entity/SetNotSolid"},"worldSpaceAABB":{"server":true,"ret":["The min bounding box vector","The max bounding box vector"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns Entity axis aligned bounding box in world coordinates ","fname":"worldSpaceAABB","realm":"sh","param":[],"name":"ents_methods:worldSpaceAABB","description":"\nReturns Entity axis aligned bounding box in world coordinates"},"stopSound":{"summary":"\nStops a sound on the entity ","class":"function","private":false,"param":{"1":"snd","snd":"string Soundscript path. See http://wiki.garrysmod.com/page/Entity/StopSound"},"fname":"stopSound","realm":"sh","name":"ents_methods:stopSound","classlib":"Entity","description":"\nStops a sound on the entity"},"getAttachments":{"server":true,"ret":"table of attachment id and attachment name or nil","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns a table of attachments ","fname":"getAttachments","realm":"sh","param":[],"name":"ents_methods:getAttachments","description":"\nReturns a table of attachments"},"getOwner":{"summary":"\nGets the owner of the entity ","ret":"Owner","class":"function","private":false,"classlib":"Entity","fname":"getOwner","realm":"sh","param":[],"name":"ents_methods:getOwner","description":"\nGets the owner of the entity"},"obbSize":{"server":true,"ret":"The outer bounding box size","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the x, y, z size of the entity's outer bounding box (local to the entity) ","fname":"obbSize","realm":"sh","param":[],"name":"ents_methods:obbSize","description":"\nReturns the x, y, z size of the entity's outer bounding box (local to the entity)"},"getSkin":{"server":true,"ret":"Skin number","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the skin number of the entity ","fname":"getSkin","realm":"sh","param":[],"name":"ents_methods:getSkin","description":"\nGets the skin number of the entity"},"isWeldedTo":{"summary":"\nGets what the entity is welded to.","ret":"The first welded/parent entity","class":"function","private":false,"classlib":"Entity","fname":"isWeldedTo","realm":"sv","param":[],"name":"ents_methods:isWeldedTo","description":"\nGets what the entity is welded to. If the entity is parented, returns the parent."},"getBoneParent":{"server":true,"ret":"Parent index of the bone","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the parent index of an entity's bone ","fname":"getBoneParent","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneParent","description":"\nReturns the parent index of an entity's bone"},"isValid":{"server":true,"ret":"True if valid, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is valid.","fname":"isValid","realm":"sh","param":[],"name":"ents_methods:isValid","description":"\nChecks if an entity is valid."},"getPose":{"summary":"\nGet the pose value of an animation ","ret":"Value of the pose parameter","class":"function","private":false,"classlib":"Entity","fname":"getPose","realm":"sh","param":{"1":"pose","pose":"Pose parameter name"},"name":"ents_methods:getPose","description":"\nGet the pose value of an animation"},"addAngleVelocity":{"summary":"\nApplys a angular velocity to an object ","class":"function","private":false,"param":{"1":"angvel","angvel":"The local angvel vector to apply"},"fname":"addAngleVelocity","realm":"sv","name":"ents_methods:addAngleVelocity","classlib":"Entity","description":"\nApplys a angular velocity to an object"},"linkComponent":{"summary":"\nLinks starfall components to a starfall processor or vehicle.","class":"function","private":false,"param":{"1":"e","e":"Entity to link the component to. nil to clear links."},"fname":"linkComponent","realm":"sv","name":"ents_methods:linkComponent","classlib":"Entity","description":"\nLinks starfall components to a starfall processor or vehicle. Screen can only connect to processor. HUD can connect to processor and vehicle."},"getChildren":{"server":true,"ret":"table of parented children","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the children (the parented entities) of an entity ","fname":"getChildren","realm":"sh","param":[],"name":"ents_methods:getChildren","description":"\nGets the children (the parented entities) of an entity"},"applyForceOffset":{"summary":"\nApplies linear force to the entity with an offset ","class":"function","private":false,"param":{"1":"vec","2":"offset","vec":"The force vector","offset":"An optional offset position"},"fname":"applyForceOffset","realm":"sv","name":"ents_methods:applyForceOffset","classlib":"Entity","description":"\nApplies linear force to the entity with an offset"},"obbCenterW":{"server":true,"ret":"The position vector of the outer bounding box center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world position of the entity's outer bounding box ","fname":"obbCenterW","realm":"sh","param":[],"name":"ents_methods:obbCenterW","description":"\nReturns the world position of the entity's outer bounding box"},"entIndex":{"server":true,"ret":"The numerical index of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the EntIndex of the entity ","fname":"entIndex","realm":"sh","param":[],"name":"ents_methods:entIndex","description":"\nReturns the EntIndex of the entity"},"setFlexWeight":{"summary":"\nSets the weight (value) of a flex.","class":"function","private":false,"param":{"1":"flexid","2":"weight","weight":"The weight of the flex","flexid":"The id of the flex"},"fname":"setFlexWeight","realm":"sh","name":"ents_methods:setFlexWeight","classlib":"Entity","description":"\nSets the weight (value) of a flex."},"setCustomPropForces":{"summary":"\nSets a custom prop's physics simulation forces.","class":"function","private":false,"param":{"1":"ang","2":"lin","3":"mode","ang":"Angular Force (Torque)","mode":"The physics mode to use. 0 = Off, 1 = Local acceleration, 2 = Local force, 3 = Global Acceleration, 4 = Global force","lin":"Linear Force"},"fname":"setCustomPropForces","realm":"sv","name":"ents_methods:setCustomPropForces","classlib":"Entity","description":"\nSets a custom prop's physics simulation forces. Thrusters and balloons use this."},"getWaterLevel":{"server":true,"ret":"The water level. 0 none, 1 slightly, 2 at least halfway, 3 all the way","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns how submerged the entity is in water ","fname":"getWaterLevel","realm":"sh","param":[],"name":"ents_methods:getWaterLevel","description":"\nReturns how submerged the entity is in water"},"setNoDraw":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the whether an entity should be drawn or not ","fname":"setNoDraw","realm":"sh","param":{"1":"draw","draw":"Whether to draw the entity or not."},"name":"ents_methods:setNoDraw","description":"\nSets the whether an entity should be drawn or not"},"getFlexes":{"summary":"\nReturns a table of flexname -> flexid pairs for use in flex functions.","class":"function","private":false,"param":[],"fname":"getFlexes","realm":"sh","name":"ents_methods:getFlexes","classlib":"Entity","description":"\nReturns a table of flexname -> flexid pairs for use in flex functions."},"getParent":{"server":true,"ret":"Entity's parent or nil","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the parent of an entity ","fname":"getParent","realm":"sh","param":[],"name":"ents_methods:getParent","description":"\nGets the parent of an entity"},"getFlexWeight":{"summary":"\nGets the weight (value) of a flex.","ret":"The weight of the flex","class":"function","private":false,"classlib":"Entity","fname":"getFlexWeight","realm":"sh","param":{"1":"flexid","flexid":"The id of the flex"},"name":"ents_methods:getFlexWeight","description":"\nGets the weight (value) of a flex."},"applyForceCenter":{"summary":"\nApplies linear force to the entity ","class":"function","private":false,"param":{"1":"vec","vec":"The force vector"},"fname":"applyForceCenter","realm":"sv","name":"ents_methods:applyForceCenter","classlib":"Entity","description":"\nApplies linear force to the entity"},"applyDamage":{"summary":"\nApplies damage to an entity ","class":"function","private":false,"param":{"1":"amt","2":"attacker","3":"inflictor","inflictor":"damage inflictor","amt":"damage amount","attacker":"damage attacker"},"fname":"applyDamage","realm":"sv","name":"ents_methods:applyDamage","classlib":"Entity","description":"\nApplies damage to an entity"},"setPose":{"summary":"\nSet the pose value of an animation.","class":"function","private":false,"param":{"1":"pose","2":"value","value":"Value to set it to.","pose":"Name of the pose parameter"},"fname":"setPose","realm":"sh","name":"ents_methods:setPose","classlib":"Entity","description":"\nSet the pose value of an animation. Turret/Head angles for example."},"getAngleVelocity":{"server":true,"ret":"The angular velocity as a vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angular velocity of the entity ","fname":"getAngleVelocity","realm":"sh","param":[],"name":"ents_methods:getAngleVelocity","description":"\nReturns the angular velocity of the entity"},"localToWorldAngles":{"server":true,"ret":"data as world space angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts an angle in entity local space to world space ","fname":"localToWorldAngles","realm":"sh","param":{"1":"data","data":"Local space angle"},"name":"ents_methods:localToWorldAngles","description":"\nConverts an angle in entity local space to world space"},"setAngles":{"summary":"\nSets the entity's angles ","class":"function","private":false,"param":{"1":"ang","ang":"New angles"},"fname":"setAngles","realm":"sv","name":"ents_methods:setAngles","classlib":"Entity","description":"\nSets the entity's angles"},"isValidPhys":{"summary":"\nChecks whether entity has physics ","ret":"True if entity has physics","class":"function","private":false,"classlib":"Entity","fname":"isValidPhys","realm":"sv","param":[],"name":"ents_methods:isValidPhys","description":"\nChecks whether entity has physics"},"setColor":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the color of the entity ","fname":"setColor","realm":"sh","param":{"1":"clr","clr":"New color"},"name":"ents_methods:setColor","description":"\nSets the color of the entity"},"manipulateBoneAngles":{"summary":"\nAllows manipulation of an entity's bones' angles ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBoneAngles","realm":"cl","param":{"1":"bone","2":"ang","ang":"The angle it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBoneAngles","description":"\nAllows manipulation of an entity's bones' angles"},"obbCenter":{"server":true,"ret":"The position vector of the outer bounding box center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the local position of the entity's outer bounding box ","fname":"obbCenter","realm":"sh","param":[],"name":"ents_methods:obbCenter","description":"\nReturns the local position of the entity's outer bounding box"},"getPhysMaterial":{"summary":"\nGet the physical material of the entity ","ret":"the physical material","class":"function","private":false,"classlib":"Entity","fname":"getPhysMaterial","realm":"sv","param":[],"name":"ents_methods:getPhysMaterial","description":"\nGet the physical material of the entity"},"setRenderMode":{"server":true,"classForced":true,"class":"function","client":true,"summary":"\nSets the render mode of the entity ","private":false,"fname":"setRenderMode","classlib":"Entity","realm":"sh","param":{"1":"rendermode","rendermode":"Number, rendermode to use. http://wiki.garrysmod.com/page/Enums/RENDERMODE"},"name":"ents_methods:setRenderMode","description":"\nSets the render mode of the entity"},"getMaxHealth":{"server":true,"ret":"Max Health of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the max health of an entity ","fname":"getMaxHealth","realm":"sh","param":[],"name":"ents_methods:getMaxHealth","description":"\nGets the max health of an entity"},"lookupBone":{"server":true,"ret":"The bone index","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the ragdoll bone index given a bone name ","fname":"lookupBone","realm":"sh","param":{"1":"name","name":"The bone's string name"},"name":"ents_methods:lookupBone","description":"\nReturns the ragdoll bone index given a bone name"},"getEyeAngles":{"server":true,"ret":"Angles of the entity's eyes","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entitiy's eye angles ","fname":"getEyeAngles","realm":"sh","param":[],"name":"ents_methods:getEyeAngles","description":"\nGets the entitiy's eye angles"},"isFrozen":{"summary":"\nChecks the entities frozen state ","ret":"True if entity is frozen","class":"function","private":false,"classlib":"Entity","fname":"isFrozen","realm":"sv","param":[],"name":"ents_methods:isFrozen","description":"\nChecks the entities frozen state"},"getAllConstrained":{"summary":"\nGets a table of all constrained entities to each other ","class":"function","private":false,"param":{"1":"filter","filter":"Optional constraint type filter table where keys are the type name and values are 'true'. \"Wire\" and \"Parent\" are used for wires and parents."},"fname":"getAllConstrained","realm":"sv","name":"ents_methods:getAllConstrained","classlib":"Entity","description":"\nGets a table of all constrained entities to each other"},"isPlayer":{"server":true,"ret":"True if player, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a player.","fname":"isPlayer","realm":"sh","param":[],"name":"ents_methods:isPlayer","description":"\nChecks if an entity is a player."},"getSubMaterial":{"server":true,"classForced":true,"ret":"String material","class":"function","client":true,"summary":"\nGets an entities' submaterial ","private":false,"fname":"getSubMaterial","classlib":"Entity","realm":"sh","param":["index"],"name":"ents_methods:getSubMaterial","description":"\nGets an entities' submaterial"}},"class":"class","client":true,"summary":"\nEntity type ","fields":[],"server":true,"typtbl":"ents_methods","name":"Entity","description":"\nEntity type"},"Vehicle":{"methods":{"1":"ejectDriver","2":"getDriver","3":"getPassenger","4":"killDriver","5":"lock","6":"stripDriver","7":"unlock","getDriver":{"server":true,"ret":"Driver of vehicle","class":"function","classlib":"Vehicle","private":false,"summary":"\nReturns the driver of the vehicle ","fname":"getDriver","realm":"sv","param":[],"name":"vehicle_methods:getDriver","description":"\nReturns the driver of the vehicle"},"getPassenger":{"server":true,"ret":"The passenger or NULL if empty","class":"function","classlib":"Vehicle","private":false,"summary":"\nReturns a passenger of a vehicle ","fname":"getPassenger","realm":"sv","param":{"1":"n","n":"The index of the passenger to get"},"name":"vehicle_methods:getPassenger","description":"\nReturns a passenger of a vehicle"},"ejectDriver":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nEjects the driver of the vehicle ","fname":"ejectDriver","realm":"sv","param":[],"name":"vehicle_methods:ejectDriver","description":"\nEjects the driver of the vehicle"},"unlock":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nWill unlock the vehicle.","fname":"unlock","realm":"sv","param":[],"name":"vehicle_methods:unlock","description":"\nWill unlock the vehicle."},"lock":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nWill lock the vehicle preventing players from entering or exiting the vehicle.","fname":"lock","realm":"sv","param":[],"name":"vehicle_methods:lock","description":"\nWill lock the vehicle preventing players from entering or exiting the vehicle."},"killDriver":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nKills the driver of the vehicle ","fname":"killDriver","realm":"sv","param":[],"name":"vehicle_methods:killDriver","description":"\nKills the driver of the vehicle"},"stripDriver":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nStrips weapons of the driver ","fname":"stripDriver","realm":"sv","param":{"1":"class","class":"Optional weapon class to strip. Otherwise all are stripped."},"name":"vehicle_methods:stripDriver","description":"\nStrips weapons of the driver"}},"class":"class","fields":[],"summary":"\nVehicle type ","typtbl":"vehicle_methods","name":"Vehicle","description":"\nVehicle type"},"Angle":{"methods":{"1":"clone","2":"getForward","3":"getNormalized","4":"getRight","5":"getUp","6":"isZero","7":"normalize","8":"rotateAroundAxis","9":"set","10":"setP","11":"setR","12":"setY","13":"setZero","getNormalized":{"summary":"\nReturnes a normalized angle ","ret":"Normalized angle table","class":"function","private":false,"classlib":"Angle","fname":"getNormalized","realm":"sh","param":[],"name":"ang_methods:getNormalized","description":"\nReturnes a normalized angle"},"clone":{"summary":"\nCopies p,y,r from angle and returns a new angle ","ret":"The copy of the angle","class":"function","private":false,"classlib":"Angle","fname":"clone","realm":"sh","param":[],"name":"ang_methods:clone","description":"\nCopies p,y,r from angle and returns a new angle"},"setY":{"summary":"\nSet's the angle's yaw and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setY","realm":"sh","param":{"1":"y","y":"The yaw"},"name":"ang_methods:setY","description":"\nSet's the angle's yaw and returns it."},"getRight":{"summary":"\nReturn the Right Vector relative to the angle dir.","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getRight","realm":"sh","param":[],"name":"ang_methods:getRight","description":"\nReturn the Right Vector relative to the angle dir."},"setP":{"summary":"\nSet's the angle's pitch and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setP","realm":"sh","param":{"1":"p","p":"The pitch"},"name":"ang_methods:setP","description":"\nSet's the angle's pitch and returns it."},"set":{"summary":"\nCopies p,y,r from angle to another.","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"set","realm":"sh","param":{"1":"b","b":"The angle to copy from."},"name":"ang_methods:set","description":"\nCopies p,y,r from angle to another."},"getForward":{"summary":"\nReturn the Forward Vector ( direction the angle points ).","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getForward","realm":"sh","param":[],"name":"ang_methods:getForward","description":"\nReturn the Forward Vector ( direction the angle points )."},"getUp":{"summary":"\nReturn the Up Vector relative to the angle dir.","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getUp","realm":"sh","param":[],"name":"ang_methods:getUp","description":"\nReturn the Up Vector relative to the angle dir."},"isZero":{"summary":"\nReturns if p,y,r are all 0.","ret":"boolean","class":"function","private":false,"classlib":"Angle","fname":"isZero","realm":"sh","param":[],"name":"ang_methods:isZero","description":"\nReturns if p,y,r are all 0."},"rotateAroundAxis":{"summary":"\nReturn Rotated angle around the specified axis.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"rotateAroundAxis","realm":"sh","param":{"1":"v","2":"deg","3":"rad","deg":"Number of degrees or nil if radians.","v":"Vector axis","rad":"Number of radians or nil if degrees."},"name":"ang_methods:rotateAroundAxis","description":"\nReturn Rotated angle around the specified axis."},"setZero":{"summary":"\nSets p,y,r to 0.","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"setZero","realm":"sh","param":[],"name":"ang_methods:setZero","description":"\nSets p,y,r to 0. This is faster than doing it manually."},"setR":{"summary":"\nSet's the angle's roll and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setR","realm":"sh","param":{"1":"r","r":"The roll"},"name":"ang_methods:setR","description":"\nSet's the angle's roll and returns it."},"normalize":{"summary":"\nNormalise angles eg (0,181,1) -> (0,-179,1).","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"normalize","realm":"sh","param":[],"name":"ang_methods:normalize","description":"\nNormalise angles eg (0,181,1) -> (0,-179,1)."}},"class":"class","client":true,"summary":"\nAngle Type ","fields":[],"server":true,"typtbl":"ang_methods","name":"Angle","description":"\nAngle Type"},"Npc":{"methods":{"1":"addEntityRelationship","2":"addRelationship","3":"attackMelee","4":"attackRange","5":"getEnemy","6":"getRelationship","7":"giveWeapon","8":"goRun","9":"goWalk","10":"setEnemy","11":"stop","setEnemy":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nTell the npc to fight this ","fname":"setEnemy","realm":"sv","param":{"1":"ent","ent":"Target entity"},"name":"npc_methods:setEnemy","description":"\nTell the npc to fight this"},"goRun":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc run to a destination ","fname":"goRun","realm":"sv","param":{"1":"vec","vec":"The position of the destination"},"name":"npc_methods:goRun","description":"\nMakes the npc run to a destination"},"getEnemy":{"server":true,"ret":"Entity the npc is fighting","class":"function","classlib":"Npc","private":false,"summary":"\nGets what the npc is fighting ","fname":"getEnemy","realm":"sv","param":[],"name":"npc_methods:getEnemy","description":"\nGets what the npc is fighting"},"getRelationship":{"server":true,"ret":"string relationship of the npc with the target","class":"function","classlib":"Npc","private":false,"summary":"\nGets the npc's relationship to the target ","fname":"getRelationship","realm":"sv","param":{"1":"ent","ent":"Target entity"},"name":"npc_methods:getRelationship","description":"\nGets the npc's relationship to the target"},"giveWeapon":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nGives the npc a weapon ","fname":"giveWeapon","realm":"sv","param":{"1":"wep","wep":"The classname of the weapon"},"name":"npc_methods:giveWeapon","description":"\nGives the npc a weapon"},"attackMelee":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc do a melee attack ","fname":"attackMelee","realm":"sv","param":[],"name":"npc_methods:attackMelee","description":"\nMakes the npc do a melee attack"},"goWalk":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc walk to a destination ","fname":"goWalk","realm":"sv","param":{"1":"vec","vec":"The position of the destination"},"name":"npc_methods:goWalk","description":"\nMakes the npc walk to a destination"},"attackRange":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc do a ranged attack ","fname":"attackRange","realm":"sv","param":[],"name":"npc_methods:attackRange","description":"\nMakes the npc do a ranged attack"},"stop":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nStops the npc ","fname":"stop","realm":"sv","param":[],"name":"npc_methods:stop","description":"\nStops the npc"},"addEntityRelationship":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nAdds a relationship to the npc with an entity ","fname":"addEntityRelationship","realm":"sv","param":{"1":"ent","2":"disp","3":"priority","priority":"number how strong the relationship is. Higher number is stronger","disp":"String of the relationship. (hate fear like neutral)","ent":"The target entity"},"name":"npc_methods:addEntityRelationship","description":"\nAdds a relationship to the npc with an entity"},"addRelationship":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nAdds a relationship to the npc ","fname":"addRelationship","realm":"sv","param":{"1":"str","str":"The relationship string. http://wiki.garrysmod.com/page/NPC/AddRelationship"},"name":"npc_methods:addRelationship","description":"\nAdds a relationship to the npc"}},"class":"class","fields":[],"summary":"\nNpc type ","typtbl":"npc_methods","name":"Npc","description":"\nNpc type"},"VMatrix":{"methods":{"1":"clone","2":"getAngles","3":"getAxisAngle","4":"getField","5":"getForward","6":"getInverse","7":"getInverseTR","8":"getRight","9":"getScale","10":"getTranslation","11":"getTransposed","12":"getUp","13":"invert","14":"invertTR","15":"isIdentity","16":"isRotationMatrix","17":"rotate","18":"scale","19":"scaleTranslation","20":"set","21":"setAngles","22":"setAxisAngle","23":"setField","24":"setForward","25":"setIdentity","26":"setRight","27":"setScale","28":"setTranslation","29":"setUp","30":"toTable","31":"translate","32":"transpose","transpose":{"summary":"\nTransposes the matrix ","class":"function","private":false,"param":[],"fname":"transpose","realm":"sh","name":"vmatrix_methods:transpose","classlib":"VMatrix","description":"\nTransposes the matrix"},"scale":{"summary":"\nScale the matrix ","class":"function","private":false,"param":{"1":"vec","vec":"Vector to scale by"},"fname":"scale","realm":"sh","name":"vmatrix_methods:scale","classlib":"VMatrix","description":"\nScale the matrix"},"invert":{"summary":"\nInverts the matrix.","ret":"bool Whether the matrix was inverted or not","class":"function","private":false,"classlib":"VMatrix","fname":"invert","realm":"sh","param":[],"name":"vmatrix_methods:invert","description":"\nInverts the matrix. Inverting the matrix will fail if its determinant is 0 or close to 0"},"getTransposed":{"summary":"\nReturns the transposed matrix ","ret":"Transposed matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getTransposed","realm":"sh","param":[],"name":"vmatrix_methods:getTransposed","description":"\nReturns the transposed matrix"},"getInverse":{"summary":"\nReturns an inverted matrix.","ret":"Inverted matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getInverse","realm":"sh","param":[],"name":"vmatrix_methods:getInverse","description":"\nReturns an inverted matrix. Inverting the matrix will fail if its determinant is 0 or close to 0"},"setForward":{"summary":"\nSets the forward direction of the matrix.","class":"function","private":false,"param":{"1":"forward","forward":"The forward vector"},"fname":"setForward","realm":"sh","name":"vmatrix_methods:setForward","classlib":"VMatrix","description":"\nSets the forward direction of the matrix. First column"},"getAngles":{"summary":"\nReturns angles ","ret":"Angles","class":"function","private":false,"classlib":"VMatrix","fname":"getAngles","realm":"sh","param":[],"name":"vmatrix_methods:getAngles","description":"\nReturns angles"},"getAxisAngle":{"summary":"\nGets the rotation axis and angle of rotation of the rotation matrix ","ret":["The axis of rotation","The angle of rotation"],"class":"function","private":false,"classlib":"VMatrix","fname":"getAxisAngle","realm":"sh","param":[],"name":"vmatrix_methods:getAxisAngle","description":"\nGets the rotation axis and angle of rotation of the rotation matrix"},"getScale":{"summary":"\nReturns scale ","ret":"Scale","class":"function","private":false,"classlib":"VMatrix","fname":"getScale","realm":"sh","param":[],"name":"vmatrix_methods:getScale","description":"\nReturns scale"},"getForward":{"summary":"\nReturns forward vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getForward","realm":"sh","param":[],"name":"vmatrix_methods:getForward","description":"\nReturns forward vector of matrix. First matrix column"},"isRotationMatrix":{"summary":"\nReturns whether the matrix is a rotation matrix or not.","ret":"bool True/False","class":"function","private":false,"classlib":"VMatrix","fname":"isRotationMatrix","realm":"sh","param":[],"name":"vmatrix_methods:isRotationMatrix","description":"\nReturns whether the matrix is a rotation matrix or not. Checks if the forward, right and up vectors are orthogonal and normalized."},"toTable":{"summary":"\nConverts the matrix to a 4x4 table ","ret":"The 4x4 table","class":"function","private":false,"classlib":"VMatrix","fname":"toTable","realm":"sh","param":[],"name":"vmatrix_methods:toTable","description":"\nConverts the matrix to a 4x4 table"},"clone":{"summary":"\nCopies The matrix and returns a new matrix ","ret":"The copy of the matrix","class":"function","private":false,"classlib":"VMatrix","fname":"clone","realm":"sh","param":[],"name":"vmatrix_methods:clone","description":"\nCopies The matrix and returns a new matrix"},"setRight":{"summary":"\nSets the right direction of the matrix.","class":"function","private":false,"param":{"1":"right","right":"The right vector"},"fname":"setRight","realm":"sh","name":"vmatrix_methods:setRight","classlib":"VMatrix","description":"\nSets the right direction of the matrix. Negated second column"},"setAxisAngle":{"summary":"\nSets the rotation or the matrix to the rotation by an axis and angle ","class":"function","private":false,"param":{"1":"axis","2":"ang","3":"angle","axis":"The normalized axis of rotation","angle":"The angle of rotation in radians"},"fname":"setAxisAngle","realm":"sh","name":"vmatrix_methods:setAxisAngle","classlib":"VMatrix","description":"\nSets the rotation or the matrix to the rotation by an axis and angle"},"set":{"summary":"\nCopies the values from the second matrix to the first matrix.","class":"function","private":false,"param":{"1":"src","src":"Second matrix"},"fname":"set","realm":"sh","name":"vmatrix_methods:set","classlib":"VMatrix","description":"\nCopies the values from the second matrix to the first matrix. Self-Modifies"},"setIdentity":{"summary":"\nInitializes the matrix as Identity matrix ","class":"function","private":false,"param":[],"fname":"setIdentity","realm":"sh","name":"vmatrix_methods:setIdentity","classlib":"VMatrix","description":"\nInitializes the matrix as Identity matrix"},"isIdentity":{"summary":"\nReturns whether the matrix is equal to Identity matrix or not ","ret":"bool True/False","class":"function","private":false,"classlib":"VMatrix","fname":"isIdentity","realm":"sh","param":[],"name":"vmatrix_methods:isIdentity","description":"\nReturns whether the matrix is equal to Identity matrix or not"},"getTranslation":{"summary":"\nReturns translation ","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getTranslation","realm":"sh","param":[],"name":"vmatrix_methods:getTranslation","description":"\nReturns translation"},"setUp":{"summary":"\nSets the up direction of the matrix.","class":"function","private":false,"param":{"1":"up","up":"The up vector"},"fname":"setUp","realm":"sh","name":"vmatrix_methods:setUp","classlib":"VMatrix","description":"\nSets the up direction of the matrix. Third column"},"translate":{"summary":"\nTranslate the matrix ","class":"function","private":false,"param":{"1":"vec","vec":"Vector to translate by"},"fname":"translate","realm":"sh","name":"vmatrix_methods:translate","classlib":"VMatrix","description":"\nTranslate the matrix"},"getRight":{"summary":"\nReturns right vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getRight","realm":"sh","param":[],"name":"vmatrix_methods:getRight","description":"\nReturns right vector of matrix. Negated second matrix column"},"setTranslation":{"summary":"\nSets the translation ","class":"function","private":false,"param":{"1":"vec","vec":"New translation"},"fname":"setTranslation","realm":"sh","name":"vmatrix_methods:setTranslation","classlib":"VMatrix","description":"\nSets the translation"},"getField":{"summary":"\nReturns a specific field in the matrix ","ret":"Value of the specified field","class":"function","private":false,"classlib":"VMatrix","fname":"getField","realm":"sh","param":{"1":"row","2":"column","column":"A number from 1 to 4","row":"A number from 1 to 4"},"name":"vmatrix_methods:getField","description":"\nReturns a specific field in the matrix"},"invertTR":{"summary":"\nInverts the matrix efficiently for translations and rotations ","class":"function","private":false,"param":[],"fname":"invertTR","realm":"sh","name":"vmatrix_methods:invertTR","classlib":"VMatrix","description":"\nInverts the matrix efficiently for translations and rotations"},"getInverseTR":{"summary":"\nReturns an inverted matrix.","ret":"Inverted matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getInverseTR","realm":"sh","param":[],"name":"vmatrix_methods:getInverseTR","description":"\nReturns an inverted matrix. Efficiently for translations and rotations"},"getUp":{"summary":"\nReturns up vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getUp","realm":"sh","param":[],"name":"vmatrix_methods:getUp","description":"\nReturns up vector of matrix. Third matrix column"},"setScale":{"summary":"\nSets the scale ","class":"function","private":false,"param":{"1":"vec","vec":"New scale"},"fname":"setScale","realm":"sh","name":"vmatrix_methods:setScale","classlib":"VMatrix","description":"\nSets the scale"},"rotate":{"summary":"\nRotate the matrix ","class":"function","private":false,"param":{"1":"ang","ang":"Angle to rotate by"},"fname":"rotate","realm":"sh","name":"vmatrix_methods:rotate","classlib":"VMatrix","description":"\nRotate the matrix"},"setAngles":{"summary":"\nSets the angles ","class":"function","private":false,"param":{"1":"ang","ang":"New angles"},"fname":"setAngles","realm":"sh","name":"vmatrix_methods:setAngles","classlib":"VMatrix","description":"\nSets the angles"},"setField":{"summary":"\nSets a specific field in the matrix ","class":"function","private":false,"param":{"1":"row","2":"column","3":"value","value":"Value to set","column":"A number from 1 to 4","row":"A number from 1 to 4"},"fname":"setField","realm":"sh","name":"vmatrix_methods:setField","classlib":"VMatrix","description":"\nSets a specific field in the matrix"},"scaleTranslation":{"summary":"\nScales the absolute translation ","class":"function","private":false,"param":{"1":"num","num":"Amount to scale by"},"fname":"scaleTranslation","realm":"sh","name":"vmatrix_methods:scaleTranslation","classlib":"VMatrix","description":"\nScales the absolute translation"}},"class":"class","fields":[],"summary":"\nVMatrix type ","typtbl":"vmatrix_methods","name":"VMatrix","description":"\nVMatrix type"},"StringStream":{"methods":{"1":"getBuffer","2":"getString","3":"read","4":"readDouble","5":"readFloat","6":"readInt16","7":"readInt32","8":"readInt8","9":"readString","10":"readUInt16","11":"readUInt32","12":"readUInt8","13":"readUntil","14":"seek","15":"setEndian","16":"size","17":"skip","18":"tell","19":"write","20":"writeDouble","21":"writeFloat","22":"writeInt16","23":"writeInt32","24":"writeInt8","25":"writeString","writeInt32":{"summary":"\nWrites an int to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int32 to write"},"fname":"writeInt32","realm":"sh","name":"ss_methods:writeInt32","classlib":"StringStream","description":"\nWrites an int to the buffer and advances the buffer pointer."},"readUInt32":{"summary":"\nReads an unsigned 32 bit (four byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt32","realm":"sh","param":[],"name":"ss_methods:readUInt32","description":"\nReads an unsigned 32 bit (four byte) integer from the byte stream and advances the buffer pointer."},"readUInt16":{"summary":"\nReads an unsigned 16 bit (two byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint16 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt16","realm":"sh","param":[],"name":"ss_methods:readUInt16","description":"\nReads an unsigned 16 bit (two byte) integer from the byte stream and advances the buffer pointer."},"read":{"summary":"\nReads the specified number of bytes from the buffer and advances the buffer pointer.","ret":"A string containing the bytes","class":"function","private":false,"classlib":"StringStream","fname":"read","realm":"sh","param":{"1":"n","n":"How many bytes to read"},"name":"ss_methods:read","description":"\nReads the specified number of bytes from the buffer and advances the buffer pointer."},"writeFloat":{"summary":"\nWrites a 4 byte IEEE754 float to the byte stream and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"The float to write"},"fname":"writeFloat","realm":"sh","name":"ss_methods:writeFloat","classlib":"StringStream","description":"\nWrites a 4 byte IEEE754 float to the byte stream and advances the buffer pointer."},"readString":{"summary":"\nreturns a null terminated string, reads until \"\\x00\" and advances the buffer pointer.","ret":"The string of bytes read","class":"function","private":false,"classlib":"StringStream","fname":"readString","realm":"sh","param":[],"name":"ss_methods:readString","description":"\nreturns a null terminated string, reads until \"\\x00\" and advances the buffer pointer."},"getString":{"summary":"\nReturns the buffer as a string ","ret":"The buffer as a string","class":"function","private":false,"classlib":"StringStream","fname":"getString","realm":"sh","param":[],"name":"ss_methods:getString","description":"\nReturns the buffer as a string"},"writeDouble":{"summary":"\nWrites a 8 byte IEEE754 double to the byte stream and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"The double to write"},"fname":"writeDouble","realm":"sh","name":"ss_methods:writeDouble","classlib":"StringStream","description":"\nWrites a 8 byte IEEE754 double to the byte stream and advances the buffer pointer."},"readInt8":{"summary":"\nReads a signed 8-bit (one byte) integer from the byte stream and advances the buffer pointer.","ret":"The int8 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt8","realm":"sh","param":[],"name":"ss_methods:readInt8","description":"\nReads a signed 8-bit (one byte) integer from the byte stream and advances the buffer pointer."},"getBuffer":{"summary":"\nReturns the internal buffer ","ret":"The buffer table","class":"function","private":false,"classlib":"StringStream","fname":"getBuffer","realm":"sh","param":[],"name":"ss_methods:getBuffer","description":"\nReturns the internal buffer"},"readInt16":{"summary":"\nReads a signed 16-bit (two byte) integer from the byte stream and advances the buffer pointer.","ret":"The int16 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt16","realm":"sh","param":[],"name":"ss_methods:readInt16","description":"\nReads a signed 16-bit (two byte) integer from the byte stream and advances the buffer pointer."},"setEndian":{"summary":"\nSets the endianness of the string stream ","class":"function","private":false,"param":{"1":"endian","endian":"The endianness of number types. \"big\" or \"little\" (default \"little\")"},"fname":"setEndian","realm":"sh","name":"ss_methods:setEndian","classlib":"StringStream","description":"\nSets the endianness of the string stream"},"readUntil":{"summary":"\nReads until the given byte and advances the buffer pointer.","ret":"The string of bytes read","class":"function","private":false,"classlib":"StringStream","fname":"readUntil","realm":"sh","param":{"1":"byte","byte":"The byte to read until (in number form)"},"name":"ss_methods:readUntil","description":"\nReads until the given byte and advances the buffer pointer."},"readUInt8":{"summary":"\nReads an unsigned 8-bit (one byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint8 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt8","realm":"sh","param":[],"name":"ss_methods:readUInt8","description":"\nReads an unsigned 8-bit (one byte) integer from the byte stream and advances the buffer pointer."},"writeInt16":{"summary":"\nWrites a short to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int16 to write"},"fname":"writeInt16","realm":"sh","name":"ss_methods:writeInt16","classlib":"StringStream","description":"\nWrites a short to the buffer and advances the buffer pointer."},"writeInt8":{"summary":"\nWrites a byte to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int8 to write"},"fname":"writeInt8","realm":"sh","name":"ss_methods:writeInt8","classlib":"StringStream","description":"\nWrites a byte to the buffer and advances the buffer pointer."},"write":{"summary":"\nWrites the given string and advances the buffer pointer.","class":"function","private":false,"param":{"1":"bytes","bytes":"A string of bytes to write"},"fname":"write","realm":"sh","name":"ss_methods:write","classlib":"StringStream","description":"\nWrites the given string and advances the buffer pointer."},"readFloat":{"summary":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer.","ret":"The float32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readFloat","realm":"sh","param":[],"name":"ss_methods:readFloat","description":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer."},"readDouble":{"summary":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer.","ret":"The float32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readDouble","realm":"sh","param":[],"name":"ss_methods:readDouble","description":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer."},"readInt32":{"summary":"\nReads a signed 32-bit (four byte) integer from the byte stream and advances the buffer pointer.","ret":"The int32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt32","realm":"sh","param":[],"name":"ss_methods:readInt32","description":"\nReads a signed 32-bit (four byte) integer from the byte stream and advances the buffer pointer."},"skip":{"summary":"\nMove the internal pointer by amount i ","class":"function","private":false,"param":{"1":"i","i":"The offset"},"fname":"skip","realm":"sh","name":"ss_methods:skip","classlib":"StringStream","description":"\nMove the internal pointer by amount i"},"writeString":{"summary":"\nWrites a string to the buffer putting a null at the end and advances the buffer pointer.","class":"function","private":false,"param":{"1":"string","string":"The string of bytes to write"},"fname":"writeString","realm":"sh","name":"ss_methods:writeString","classlib":"StringStream","description":"\nWrites a string to the buffer putting a null at the end and advances the buffer pointer."},"tell":{"summary":"\nReturns the internal position of the byte reader.","ret":"The buffer position","class":"function","private":false,"classlib":"StringStream","fname":"tell","realm":"sh","param":[],"name":"ss_methods:tell","description":"\nReturns the internal position of the byte reader."},"seek":{"summary":"\nSets internal pointer to i.","class":"function","private":false,"param":{"1":"i","i":"The position"},"fname":"seek","realm":"sh","name":"ss_methods:seek","classlib":"StringStream","description":"\nSets internal pointer to i. The position will be clamped to [1, buffersize+1]"},"size":{"summary":"\nTells the size of the byte stream.","ret":"The buffer size","class":"function","private":false,"classlib":"StringStream","fname":"size","realm":"sh","param":[],"name":"ss_methods:size","description":"\nTells the size of the byte stream."}},"class":"class","fields":[],"summary":"\nStringStream type ","typtbl":"ss_methods","name":"StringStream","description":"\nStringStream type"},"Light":{"methods":{"1":"draw","2":"setBrightness","3":"setColor","4":"setDecay","5":"setDieTime","6":"setDirection","7":"setInnerAngle","8":"setMinLight","9":"setNoModel","10":"setNoWorld","11":"setOuterAngle","12":"setPos","13":"setSize","14":"setStyle","setNoWorld":{"summary":"\nSets whether the light should cast onto the world or not ","class":"function","private":false,"param":{"1":"on","on":"Whether the light shouldn't cast onto the world"},"fname":"setNoWorld","realm":"cl","name":"light_methods:setNoWorld","classlib":"Light","description":"\nSets whether the light should cast onto the world or not"},"setOuterAngle":{"summary":"\nSets the light outer angle (used with setDirection and setInnerAngle) ","class":"function","private":false,"param":{"1":"ang","ang":"Number outer angle of the light"},"fname":"setOuterAngle","realm":"cl","name":"light_methods:setOuterAngle","classlib":"Light","description":"\nSets the light outer angle (used with setDirection and setInnerAngle)"},"setInnerAngle":{"summary":"\nSets the light inner angle (used with setDirection and setOuterAngle) ","class":"function","private":false,"param":{"1":"ang","ang":"Number inner angle of the light"},"fname":"setInnerAngle","realm":"cl","name":"light_methods:setInnerAngle","classlib":"Light","description":"\nSets the light inner angle (used with setDirection and setOuterAngle)"},"setStyle":{"summary":"\nSets the flicker style of the light https://developer.valvesoftware.com/wiki/Light_dynamic#Appearances ","class":"function","private":false,"param":{"1":"style","style":"The number of the flicker style"},"fname":"setStyle","realm":"cl","name":"light_methods:setStyle","classlib":"Light","description":"\nSets the flicker style of the light https://developer.valvesoftware.com/wiki/Light_dynamic#Appearances"},"setColor":{"summary":"\nSets the color of the light ","class":"function","private":false,"param":{"1":"color","color":"The color of the light"},"fname":"setColor","realm":"cl","name":"light_methods:setColor","classlib":"Light","description":"\nSets the color of the light"},"setBrightness":{"summary":"\nSets the light brightness ","class":"function","private":false,"param":{"1":"brightness","brightness":"The light's brightness"},"fname":"setBrightness","realm":"cl","name":"light_methods:setBrightness","classlib":"Light","description":"\nSets the light brightness"},"setDieTime":{"summary":"\nSets the light lifespan (Required for fade effect i.e.","class":"function","private":false,"param":{"1":"dietime","dietime":"The how long the light will stay alive after turning it off."},"fname":"setDieTime","realm":"cl","name":"light_methods:setDieTime","classlib":"Light","description":"\nSets the light lifespan (Required for fade effect i.e. decay)"},"draw":{"summary":"\nDraws the light.","class":"function","private":false,"param":[],"fname":"draw","realm":"cl","name":"light_methods:draw","classlib":"Light","description":"\nDraws the light. Typically used in the think hook. Will throw an error if it fails (use pcall)"},"setSize":{"summary":"\nSets the size of the light (max is sf_light_maxsize) ","class":"function","private":false,"param":{"1":"size","size":"The size of the light"},"fname":"setSize","realm":"cl","name":"light_methods:setSize","classlib":"Light","description":"\nSets the size of the light (max is sf_light_maxsize)"},"setMinLight":{"summary":"\nSets the minimum light amount ","class":"function","private":false,"param":{"1":"min","min":"The minimum light"},"fname":"setMinLight","realm":"cl","name":"light_methods:setMinLight","classlib":"Light","description":"\nSets the minimum light amount"},"setDecay":{"summary":"\nSets the light decay speed in thousandths per second.","class":"function","private":false,"param":{"1":"decay","decay":"The light's decay speed"},"fname":"setDecay","realm":"cl","name":"light_methods:setDecay","classlib":"Light","description":"\nSets the light decay speed in thousandths per second. 1000 lasts for 1 second, 2000 lasts for 0.5 seconds"},"setPos":{"summary":"\nSets the light position ","class":"function","private":false,"param":{"1":"pos","pos":"The position of the light"},"fname":"setPos","realm":"cl","name":"light_methods:setPos","classlib":"Light","description":"\nSets the light position"},"setNoModel":{"summary":"\nSets whether the light should cast onto models or not ","class":"function","private":false,"param":{"1":"on","on":"Whether the light shouldn't cast onto the models"},"fname":"setNoModel","realm":"cl","name":"light_methods:setNoModel","classlib":"Light","description":"\nSets whether the light should cast onto models or not"},"setDirection":{"summary":"\nSets the light direction (used with setInnerAngle and setOuterAngle) ","class":"function","private":false,"param":{"1":"dir","dir":"Direction of the light"},"fname":"setDirection","realm":"cl","name":"light_methods:setDirection","classlib":"Light","description":"\nSets the light direction (used with setInnerAngle and setOuterAngle)"}},"class":"class","client":true,"fields":[],"summary":"\nLight type ","typtbl":"light_methods","name":"Light","description":"\nLight type"},"Color":{"methods":{"1":"clone","2":"hsvToRGB","3":"rgbToHSV","4":"set","5":"setA","6":"setB","7":"setG","8":"setR","set":{"summary":"\nCopies r,g,b,a from color to another.","ret":"nil","class":"function","private":false,"classlib":"Color","fname":"set","realm":"sh","param":{"1":"b","b":"The color to copy from."},"name":"color_methods:set","description":"\nCopies r,g,b,a from color to another."},"setG":{"summary":"\nSet's the color's green and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setG","realm":"sh","param":{"1":"g","g":"The green"},"name":"color_methods:setG","description":"\nSet's the color's green and returns it."},"setB":{"summary":"\nSet's the color's blue and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setB","realm":"sh","param":{"1":"b","b":"The blue"},"name":"color_methods:setB","description":"\nSet's the color's blue and returns it."},"clone":{"summary":"\nCopies r,g,b,a from color and returns a new color ","ret":"The copy of the color","class":"function","private":false,"classlib":"Color","fname":"clone","realm":"sh","param":[],"name":"color_methods:clone","description":"\nCopies r,g,b,a from color and returns a new color"},"setR":{"summary":"\nSet's the color's red channel and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setR","realm":"sh","param":{"1":"r","r":"The red"},"name":"color_methods:setR","description":"\nSet's the color's red channel and returns it."},"rgbToHSV":{"server":true,"ret":"A triplet of numbers representing HSV.","class":"function","client":true,"classlib":"Color","private":false,"summary":"\nConverts the color from RGB to HSV.","fname":"rgbToHSV","realm":"sh","param":[],"name":"color_methods:rgbToHSV","description":"\nConverts the color from RGB to HSV."},"hsvToRGB":{"server":true,"ret":"A triplet of numbers representing HSV.","class":"function","client":true,"classlib":"Color","private":false,"summary":"\nConverts the color from HSV to RGB.","fname":"hsvToRGB","realm":"sh","param":[],"name":"color_methods:hsvToRGB","description":"\nConverts the color from HSV to RGB."},"setA":{"summary":"\nSet's the color's alpha and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setA","realm":"sh","param":{"1":"a","a":"The alpha"},"name":"color_methods:setA","description":"\nSet's the color's alpha and returns it."}},"class":"class","client":true,"summary":"\nColor type ","fields":[],"server":true,"typtbl":"color_methods","name":"Color","description":"\nColor type"},"PhysObj":{"methods":{"1":"addAngleVelocity","2":"addGameFlags","3":"applyForceCenter","4":"applyForceOffset","5":"applyTorque","6":"clearGameFlags","7":"enableDrag","8":"enableGravity","9":"enableMotion","10":"getAABB","11":"getAngleVelocity","12":"getAngles","13":"getDamping","14":"getEntity","15":"getInertia","16":"getMass","17":"getMassCenter","18":"getMaterial","19":"getMatrix","20":"getMesh","21":"getMeshConvexes","22":"getPos","23":"getVelocity","24":"getVelocityAtPoint","25":"hasGameFlags","26":"isAsleep","27":"isDragEnabled","28":"isValid","29":"localToWorld","30":"localToWorldVector","31":"setAngleDragCoefficient","32":"setAngleVelocity","33":"setAngles","34":"setBuoyancyRatio","35":"setDamping","36":"setDragCoefficient","37":"setInertia","38":"setMass","39":"setMaterial","40":"setPos","41":"setVelocity","42":"sleep","43":"wake","44":"worldToLocal","45":"worldToLocalVector","localToWorld":{"summary":"\nReturns a vector in the reference frame of the world from the local frame of the physicsobject ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"localToWorld","realm":"sh","param":{"1":"vec","vec":"The vector to transform"},"name":"physobj_methods:localToWorld","description":"\nReturns a vector in the reference frame of the world from the local frame of the physicsobject"},"setDamping":{"summary":"\nSets the movement damping of the bone.","class":"function","private":false,"param":{"1":"linear","2":"angular","linear":"Number of the linear damping","angular":"Number of the angular damping"},"fname":"setDamping","realm":"sh","name":"physobj_methods:setDamping","classlib":"PhysObj","description":"\nSets the movement damping of the bone. Unlike air drag, it doesn't take into account the cross-section of the object."},"getMatrix":{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nReturns the world transform matrix of the physobj ","fname":"getMatrix","realm":"sh","param":[],"name":"physobj_methods:getMatrix","description":"\nReturns the world transform matrix of the physobj"},"setAngleVelocity":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the angular velocity of an object ","fname":"setAngleVelocity","realm":"sv","param":{"1":"angvel","angvel":"The local angvel vector to set"},"name":"physobj_methods:setAngleVelocity","description":"\nSets the angular velocity of an object"},"getPos":{"server":true,"ret":"Vector position of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the position of the physics object ","fname":"getPos","realm":"sh","param":[],"name":"physobj_methods:getPos","description":"\nGets the position of the physics object"},"getAngles":{"server":true,"ret":"Angle angles of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the angles of the physics object ","fname":"getAngles","realm":"sh","param":[],"name":"physobj_methods:getAngles","description":"\nGets the angles of the physics object"},"addGameFlags":{"summary":"\nAdds game flags to the physics object.","class":"function","private":false,"param":{"1":"flags","flags":"The flags to add. FVPHYSICS enum. Can be:<br> \nFVPHYSICS.DMG_DISSOLVE<br> \nFVPHYSICS.DMG_SLICE<br> \nFVPHYSICS.HEAVY_OBJECT<br> \nFVPHYSICS.NO_IMPACT_DMG<br> \nFVPHYSICS.NO_NPC_IMPACT_DMG<br> \nFVPHYSICS.NO_PLAYER_PICKUP<br>"},"fname":"addGameFlags","realm":"sh","name":"physobj_methods:addGameFlags","classlib":"PhysObj","description":"\nAdds game flags to the physics object. Some flags cannot be modified"},"enableMotion":{"summary":"\nSets the bone movement state ","class":"function","private":false,"param":{"1":"move","move":"Bool should the bone move?"},"fname":"enableMotion","realm":"sh","name":"physobj_methods:enableMotion","classlib":"PhysObj","description":"\nSets the bone movement state"},"setPos":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the position of the physics object.","fname":"setPos","realm":"sv","param":{"1":"pos","pos":"The position vector to set it to"},"name":"physobj_methods:setPos","description":"\nSets the position of the physics object. Will cause interpolation of the entity in clientside, use entity.setPos to avoid this."},"isDragEnabled":{"summary":"\nCheck if bone is affected by air resistance ","ret":"boolean If bone is affected by drag","class":"function","private":false,"classlib":"PhysObj","fname":"isDragEnabled","realm":"sh","param":[],"name":"physobj_methods:isDragEnabled","description":"\nCheck if bone is affected by air resistance"},"setAngleDragCoefficient":{"summary":"\nSets coefficient of air resistance affecting the bone when rotating.","class":"function","private":false,"param":{"1":"coeff","coeff":"Number how much drag affects the bone when rotating"},"fname":"setAngleDragCoefficient","realm":"sh","name":"physobj_methods:setAngleDragCoefficient","classlib":"PhysObj","description":"\nSets coefficient of air resistance affecting the bone when rotating. Air resistance depends on the cross-section of the object."},"applyTorque":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a torque to a physics object ","fname":"applyTorque","realm":"sv","param":{"1":"torque","torque":"The world torque vector to apply"},"name":"physobj_methods:applyTorque","description":"\nApplys a torque to a physics object"},"getVelocity":{"server":true,"ret":"Vector velocity of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the velocity of the physics object ","fname":"getVelocity","realm":"sh","param":[],"name":"physobj_methods:getVelocity","description":"\nGets the velocity of the physics object"},"worldToLocal":{"summary":"\nReturns a vector in the local reference frame of the physicsobject from the world frame ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"worldToLocal","realm":"sh","param":{"1":"vec","vec":"The vector to transform"},"name":"physobj_methods:worldToLocal","description":"\nReturns a vector in the local reference frame of the physicsobject from the world frame"},"getMassCenter":{"server":true,"ret":"Center of mass vector in the physobject's local reference frame.","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the center of mass of the physics object in the local reference frame.","fname":"getMassCenter","realm":"sh","param":[],"name":"physobj_methods:getMassCenter","description":"\nGets the center of mass of the physics object in the local reference frame."},"isValid":{"server":true,"ret":"boolean if the physics object is valid","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nChecks if the physics object is valid ","fname":"isValid","realm":"sh","param":[],"name":"physobj_methods:isValid","description":"\nChecks if the physics object is valid"},"addAngleVelocity":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a angular velocity to an object ","fname":"addAngleVelocity","realm":"sv","param":{"1":"angvel","angvel":"The local angvel vector to apply"},"name":"physobj_methods:addAngleVelocity","description":"\nApplys a angular velocity to an object"},"worldToLocalVector":{"summary":"\nReturns a normal vector in the local reference frame of the physicsobject from the world frame ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"worldToLocalVector","realm":"sh","param":{"1":"vec","vec":"The normal vector to transform"},"name":"physobj_methods:worldToLocalVector","description":"\nReturns a normal vector in the local reference frame of the physicsobject from the world frame"},"applyForceOffset":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys an offset force to a physics object ","fname":"applyForceOffset","realm":"sv","param":{"1":"force","2":"position","position":"The position in world coordinates","force":"The force vector to apply"},"name":"physobj_methods:applyForceOffset","description":"\nApplys an offset force to a physics object"},"setBuoyancyRatio":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the buoyancy ratio of a physobject ","fname":"setBuoyancyRatio","realm":"sv","param":{"1":"ratio","ratio":"The buoyancy ratio to use"},"name":"physobj_methods:setBuoyancyRatio","description":"\nSets the buoyancy ratio of a physobject"},"setMaterial":{"summary":"\nSets the physical material of a physics object ","class":"function","private":false,"param":{"1":"material","material":"The physical material to set it to"},"fname":"setMaterial","realm":"sh","name":"physobj_methods:setMaterial","classlib":"PhysObj","description":"\nSets the physical material of a physics object"},"setMass":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the mass of a physics object ","fname":"setMass","realm":"sv","param":{"1":"mass","mass":"The mass to set it to"},"name":"physobj_methods:setMass","description":"\nSets the mass of a physics object"},"wake":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nMakes a sleeping physobj wakeup ","fname":"wake","realm":"sv","param":[],"name":"physobj_methods:wake","description":"\nMakes a sleeping physobj wakeup"},"localToWorldVector":{"summary":"\nReturns a normal vector in the reference frame of the world from the local frame of the physicsobject ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"localToWorldVector","realm":"sh","param":{"1":"vec","vec":"The normal vector to transform"},"name":"physobj_methods:localToWorldVector","description":"\nReturns a normal vector in the reference frame of the world from the local frame of the physicsobject"},"sleep":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nMakes a physobj go to sleep.","fname":"sleep","realm":"sv","param":[],"name":"physobj_methods:sleep","description":"\nMakes a physobj go to sleep. (like it's frozen but interacting wakes it back up)"},"clearGameFlags":{"summary":"\nClears game flags from the physics object.","class":"function","private":false,"param":{"1":"flags","flags":"The flags to add. FVPHYSICS enum. Can be:<br> \nFVPHYSICS.DMG_DISSOLVE<br> \nFVPHYSICS.DMG_SLICE<br> \nFVPHYSICS.HEAVY_OBJECT<br> \nFVPHYSICS.NO_IMPACT_DMG<br> \nFVPHYSICS.NO_NPC_IMPACT_DMG<br> \nFVPHYSICS.NO_PLAYER_PICKUP<br>"},"fname":"clearGameFlags","realm":"sh","name":"physobj_methods:clearGameFlags","classlib":"PhysObj","description":"\nClears game flags from the physics object. Some flags cannot be modified"},"applyForceCenter":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a force to the center of the physics object ","fname":"applyForceCenter","realm":"sv","param":{"1":"force","force":"The force vector to apply"},"name":"physobj_methods:applyForceCenter","description":"\nApplys a force to the center of the physics object"},"getVelocityAtPoint":{"server":true,"ret":"Vector Local velocity of the physics object at the point","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the velocity of the physics object at an arbitrary point in its local reference frame \nThis includes velocity at the point induced by rotational velocity ","fname":"getVelocityAtPoint","realm":"sh","param":{"1":"vec","vec":"The point to get velocity of in local reference frame"},"name":"physobj_methods:getVelocityAtPoint","description":"\nGets the velocity of the physics object at an arbitrary point in its local reference frame \nThis includes velocity at the point induced by rotational velocity"},"isAsleep":{"server":true,"ret":"boolean if the physobj is asleep","class":"function","classlib":"PhysObj","private":false,"summary":"\nReturns whether the physobj is asleep ","fname":"isAsleep","realm":"sv","param":[],"name":"physobj_methods:isAsleep","description":"\nReturns whether the physobj is asleep"},"getAngleVelocity":{"server":true,"ret":"Vector angular velocity of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the angular velocity of the physics object ","fname":"getAngleVelocity","realm":"sh","param":[],"name":"physobj_methods:getAngleVelocity","description":"\nGets the angular velocity of the physics object"},"setInertia":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the inertia of a physics object ","fname":"setInertia","realm":"sv","param":{"1":"inertia","inertia":"The inertia vector to set it to"},"name":"physobj_methods:setInertia","description":"\nSets the inertia of a physics object"},"setAngles":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the angles of the physics object.","fname":"setAngles","realm":"sv","param":{"1":"ang","ang":"The angle to set it to"},"name":"physobj_methods:setAngles","description":"\nSets the angles of the physics object. Will cause interpolation of the entity in clientside, use entity.setAngles to avoid this."},"getEntity":{"server":true,"ret":"The entity attached to the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the entity attached to the physics object ","fname":"getEntity","realm":"sh","param":[],"name":"physobj_methods:getEntity","description":"\nGets the entity attached to the physics object"},"setDragCoefficient":{"summary":"\nSets coefficient of air resistance affecting the bone.","class":"function","private":false,"param":{"1":"coeff","coeff":"Number how much drag affects the bone"},"fname":"setDragCoefficient","realm":"sh","name":"physobj_methods:setDragCoefficient","classlib":"PhysObj","description":"\nSets coefficient of air resistance affecting the bone. Air resistance depends on the cross-section of the object."},"getDamping":{"summary":"\nReturns Movement damping of the bone.","ret":["Linear damping","Angular damping"],"class":"function","private":false,"classlib":"PhysObj","fname":"getDamping","realm":"sh","param":[],"name":"physobj_methods:getDamping","description":"\nReturns Movement damping of the bone."},"enableDrag":{"summary":"\nSets the bone drag state ","class":"function","private":false,"param":{"1":"drag","drag":"Bool should the bone have air resistence?"},"fname":"enableDrag","realm":"sh","name":"physobj_methods:enableDrag","classlib":"PhysObj","description":"\nSets the bone drag state"},"enableGravity":{"summary":"\nSets bone gravity ","class":"function","private":false,"param":{"1":"grav","grav":"Bool should the bone respect gravity?"},"fname":"enableGravity","realm":"sh","name":"physobj_methods:enableGravity","classlib":"PhysObj","description":"\nSets bone gravity"},"hasGameFlags":{"summary":"\nReturns whether the game flags of the physics object are set.","ret":"boolean If the flags are set","class":"function","private":false,"classlib":"PhysObj","fname":"hasGameFlags","realm":"sh","param":{"1":"flags","flags":"The flags to test. FVPHYSICS enum."},"name":"physobj_methods:hasGameFlags","description":"\nReturns whether the game flags of the physics object are set."},"getMaterial":{"server":true,"ret":"The physics material of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the material of the physics object ","fname":"getMaterial","realm":"sh","param":[],"name":"physobj_methods:getMaterial","description":"\nGets the material of the physics object"},"getMesh":{"summary":"\nReturns a table of MeshVertex structures where each 3 vertices represent a triangle.","ret":"table of MeshVertex structures","class":"function","private":false,"classlib":"PhysObj","fname":"getMesh","realm":"sh","param":[],"name":"physobj_methods:getMesh","description":"\nReturns a table of MeshVertex structures where each 3 vertices represent a triangle. See: http://wiki.garrysmod.com/page/Structures/MeshVertex"},"getAABB":{"server":true,"ret":["The mins of the AABB","The maxs of the AABB"],"class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the axis aligned bounding box of the physics object ","fname":"getAABB","realm":"sh","param":[],"name":"physobj_methods:getAABB","description":"\nGets the axis aligned bounding box of the physics object"},"getInertia":{"server":true,"ret":"Vector Inertia of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the inertia of the physics object ","fname":"getInertia","realm":"sh","param":[],"name":"physobj_methods:getInertia","description":"\nGets the inertia of the physics object"},"getMeshConvexes":{"summary":"\nReturns a structured table, the physics mesh of the physics object.","ret":"table of MeshVertex structures","class":"function","private":false,"classlib":"PhysObj","fname":"getMeshConvexes","realm":"sh","param":[],"name":"physobj_methods:getMeshConvexes","description":"\nReturns a structured table, the physics mesh of the physics object. See: http://wiki.garrysmod.com/page/Structures/MeshVertex"},"setVelocity":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the velocity of the physics object ","fname":"setVelocity","realm":"sv","param":{"1":"vel","vel":"The velocity vector to set it to"},"name":"physobj_methods:setVelocity","description":"\nSets the velocity of the physics object"},"getMass":{"server":true,"ret":"mass of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the mass of the physics object ","fname":"getMass","realm":"sh","param":[],"name":"physobj_methods:getMass","description":"\nGets the mass of the physics object"}},"class":"class","client":true,"summary":"\nPhysObj Type ","fields":[],"server":true,"typtbl":"physobj_methods","name":"PhysObj","description":"\nPhysObj Type"},"Wirelink":{"methods":{"1":"entity","2":"getWiredTo","3":"getWiredToName","4":"inputType","5":"inputs","6":"isValid","7":"isWired","8":"outputType","9":"outputs","isWired":{"summary":"\nChecks if an input is wired.","class":"function","private":false,"param":{"1":"name","name":"Name of the input to check"},"fname":"isWired","realm":"sv","name":"wirelink_methods:isWired","classlib":"Wirelink","description":"\nChecks if an input is wired."},"entity":{"summary":"\nReturns the entity that the wirelink represents ","class":"function","private":false,"param":[],"fname":"entity","realm":"sv","name":"wirelink_methods:entity","classlib":"Wirelink","description":"\nReturns the entity that the wirelink represents"},"getWiredToName":{"summary":"\nReturns the name of the output an input of the wirelink is wired to.","ret":"String name of the output that the input is wired to.","class":"function","private":false,"classlib":"Wirelink","fname":"getWiredToName","realm":"sv","param":{"1":"name","name":"Name of the input of the wirelink."},"name":"wirelink_methods:getWiredToName","description":"\nReturns the name of the output an input of the wirelink is wired to."},"inputs":{"summary":"\nReturns a table of all of the wirelink's inputs ","class":"function","private":false,"param":[],"fname":"inputs","realm":"sv","name":"wirelink_methods:inputs","classlib":"Wirelink","description":"\nReturns a table of all of the wirelink's inputs"},"getWiredTo":{"summary":"\nReturns what an input of the wirelink is wired to.","ret":"The entity the wirelink is wired to","class":"function","private":false,"classlib":"Wirelink","fname":"getWiredTo","realm":"sv","param":{"1":"name","name":"Name of the input"},"name":"wirelink_methods:getWiredTo","description":"\nReturns what an input of the wirelink is wired to."},"outputType":{"summary":"\nReturns the type of output name, or nil if it doesn't exist ","class":"function","private":false,"param":["name"],"fname":"outputType","realm":"sv","name":"wirelink_methods:outputType","classlib":"Wirelink","description":"\nReturns the type of output name, or nil if it doesn't exist"},"outputs":{"summary":"\nReturns a table of all of the wirelink's outputs ","class":"function","private":false,"param":[],"fname":"outputs","realm":"sv","name":"wirelink_methods:outputs","classlib":"Wirelink","description":"\nReturns a table of all of the wirelink's outputs"},"inputType":{"summary":"\nReturns the type of input name, or nil if it doesn't exist ","class":"function","private":false,"param":["name"],"fname":"inputType","realm":"sv","name":"wirelink_methods:inputType","classlib":"Wirelink","description":"\nReturns the type of input name, or nil if it doesn't exist"},"isValid":{"summary":"\nChecks if a wirelink is valid.","class":"function","private":false,"param":[],"fname":"isValid","realm":"sv","name":"wirelink_methods:isValid","classlib":"Wirelink","description":"\nChecks if a wirelink is valid. (ie. doesn't point to an invalid entity)"}},"class":"class","summary":"\nWirelink type ","fields":[],"server":true,"typtbl":"wirelink_methods","name":"Wirelink","description":"\nWirelink type"},"Bass":{"methods":{"1":"destroy","2":"getFFT","3":"getLength","4":"getLevels","5":"getTime","6":"isOnline","7":"isValid","8":"pause","9":"play","10":"setFade","11":"setLooping","12":"setPitch","13":"setPos","14":"setTime","15":"setVolume","16":"stop","stop":{"summary":"\nStops playing the sound.","class":"function","private":false,"param":[],"fname":"stop","realm":"cl","name":"bass_methods:stop","classlib":"Bass","description":"\nStops playing the sound."},"getLevels":{"summary":"\nGets the left and right levels of the audio channel ","ret":["The left sound level, a value between 0 and 1.","The right sound level, a value between 0 and 1."],"class":"function","private":false,"classlib":"Bass","fname":"getLevels","realm":"cl","param":[],"name":"bass_methods:getLevels","description":"\nGets the left and right levels of the audio channel"},"setFade":{"summary":"\nSets the fade distance of the sound in 3D space.","class":"function","private":false,"param":{"1":"min","2":"max","min":"The channel's volume is at maximum when the listener is within this distance","max":"The channel's volume stops decreasing when the listener is beyond this distance."},"fname":"setFade","realm":"cl","name":"bass_methods:setFade","classlib":"Bass","description":"\nSets the fade distance of the sound in 3D space. Must have `3d` flag to get this work on."},"getLength":{"summary":"\nGets the length of a sound channel.","ret":"Sound channel length in seconds.","class":"function","private":false,"classlib":"Bass","fname":"getLength","realm":"cl","param":[],"name":"bass_methods:getLength","description":"\nGets the length of a sound channel."},"setPitch":{"summary":"\nSets the pitch of the sound channel.","class":"function","private":false,"param":{"1":"pitch","pitch":"Pitch to set to, between 0 and 3."},"fname":"setPitch","realm":"cl","name":"bass_methods:setPitch","classlib":"Bass","description":"\nSets the pitch of the sound channel."},"setLooping":{"summary":"\nSets whether the sound channel should loop.","class":"function","private":false,"param":{"1":"loop","loop":"Boolean of whether the sound channel should loop."},"fname":"setLooping","realm":"cl","name":"bass_methods:setLooping","classlib":"Bass","description":"\nSets whether the sound channel should loop. Requires the 'noblock' flag"},"pause":{"summary":"\nPauses the sound.","class":"function","private":false,"param":[],"fname":"pause","realm":"cl","name":"bass_methods:pause","classlib":"Bass","description":"\nPauses the sound."},"destroy":{"summary":"\nRemoves the sound from the game so new one can be created if limit is reached ","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"bass_methods:destroy","classlib":"Bass","description":"\nRemoves the sound from the game so new one can be created if limit is reached"},"play":{"summary":"\nStarts to play the sound.","class":"function","private":false,"param":[],"fname":"play","realm":"cl","name":"bass_methods:play","classlib":"Bass","description":"\nStarts to play the sound."},"getFFT":{"summary":"\nPerform fast Fourier transform algorithm to compute the DFT of the sound channel.","ret":"Table containing DFT magnitudes, each between 0 and 1.","class":"function","private":false,"classlib":"Bass","fname":"getFFT","realm":"cl","param":{"1":"n","n":"Number of consecutive audio samples, between 0 and 7. Depending on this parameter you will get 256*2^n samples."},"name":"bass_methods:getFFT","description":"\nPerform fast Fourier transform algorithm to compute the DFT of the sound channel."},"setVolume":{"summary":"\nSets the volume of the sound channel.","class":"function","private":false,"param":{"1":"vol","vol":"Volume multiplier (1 is normal), between 0x and 10x."},"fname":"setVolume","realm":"cl","name":"bass_methods:setVolume","classlib":"Bass","description":"\nSets the volume of the sound channel."},"getTime":{"summary":"\nGets the current playback time of the sound channel.","ret":"Sound channel playback time in seconds.","class":"function","private":false,"classlib":"Bass","fname":"getTime","realm":"cl","param":[],"name":"bass_methods:getTime","description":"\nGets the current playback time of the sound channel. Requires the 'noblock' flag"},"setTime":{"summary":"\nSets the current playback time of the sound channel.","class":"function","private":false,"param":{"1":"time","time":"Sound channel playback time in seconds."},"fname":"setTime","realm":"cl","name":"bass_methods:setTime","classlib":"Bass","description":"\nSets the current playback time of the sound channel. Requires the 'noblock' flag"},"setPos":{"summary":"\nSets the position of the sound in 3D space.","class":"function","private":false,"param":{"1":"pos","pos":"Where to position the sound."},"fname":"setPos","realm":"cl","name":"bass_methods:setPos","classlib":"Bass","description":"\nSets the position of the sound in 3D space. Must have `3d` flag to get this work on."},"isOnline":{"summary":"\nGets whether the sound channel is streamed online.","ret":"Boolean of whether the sound channel is streamed online.","class":"function","private":false,"classlib":"Bass","fname":"isOnline","realm":"cl","param":[],"name":"bass_methods:isOnline","description":"\nGets whether the sound channel is streamed online."},"isValid":{"summary":"\nGets whether the bass is valid.","ret":"Boolean of whether the bass is valid.","class":"function","private":false,"classlib":"Bass","fname":"isValid","realm":"cl","param":[],"name":"bass_methods:isValid","description":"\nGets whether the bass is valid."}},"class":"class","client":true,"fields":[],"summary":"\nFor playing music there is `Bass` type.","typtbl":"bass_methods","name":"Bass","description":"\nFor playing music there is `Bass` type. You can pause and set current playback time in it. If you're looking to apply DSP effects on present game sounds, use `Sound` instead."}},"files":{"1":"editor/docs.lua","2":"editor/editor.lua","3":"editor/sfderma.lua","4":"editor/sfframe.lua","5":"editor/sfhelper.lua","6":"editor/syntaxmodes/starfall.lua","7":"editor/tabhandlers/tab_ace.lua","8":"editor/tabhandlers/tab_helper.lua","9":"editor/tabhandlers/tab_settings.lua","10":"editor/tabhandlers/tab_wire.lua","11":"editor/themes.lua","12":"editor/xml.lua","13":"instance.lua","14":"libs_cl/bass.lua","15":"libs_cl/file.lua","16":"libs_cl/joystick.lua","17":"libs_cl/light.lua","18":"libs_cl/material.lua","19":"libs_cl/notification.lua","20":"libs_cl/particle.lua","21":"libs_cl/render.lua","22":"libs_cl/sql.lua","23":"libs_cl/xinput.lua","24":"libs_sh/angles.lua","25":"libs_sh/bit.lua","26":"libs_sh/builtins.lua","27":"libs_sh/color.lua","28":"libs_sh/coroutine.lua","29":"libs_sh/effect.lua","30":"libs_sh/entities.lua","31":"libs_sh/fastlz.lua","32":"libs_sh/find.lua","33":"libs_sh/game.lua","34":"libs_sh/holograms.lua","35":"libs_sh/hook.lua","36":"libs_sh/http.lua","37":"libs_sh/input.lua","38":"libs_sh/json.lua","39":"libs_sh/mesh.lua","40":"libs_sh/net.lua","41":"libs_sh/npc.lua","42":"libs_sh/physenv.lua","43":"libs_sh/physobj.lua","44":"libs_sh/players.lua","45":"libs_sh/quaternion.lua","46":"libs_sh/sounds.lua","47":"libs_sh/team.lua","48":"libs_sh/timer.lua","49":"libs_sh/trace.lua","50":"libs_sh/vectors.lua","51":"libs_sh/vehicles.lua","52":"libs_sh/vmatrix.lua","53":"libs_sh/von.lua","54":"libs_sh/weapons.lua","55":"libs_sv/constraint.lua","56":"libs_sv/entities.lua","57":"libs_sv/prop.lua","58":"libs_sv/wire.lua","59":"netstream.lua","60":"permissions/core.lua","61":"permissions/providers_cl/client.lua","62":"permissions/providers_sh/entity.lua","63":"permissions/providers_sh/url_whitelist.lua","64":"permissions/providers_sv/usergroups.lua","65":"preprocessor.lua","66":"sflib.lua","67":"transfer.lua","libs_cl/notification.lua":{"summary":"\n \nNotification functions \n ","tables":[],"functions":{"1":"notification_library.addLegacy","2":"notification_library.addProgress","3":"notification_library.kill","notification_library.addProgress":{"summary":"\nDisplays a notification with an animated progress bar, will persist unless killed or chip is removed.","class":"function","private":false,"param":{"1":"id","2":"text","text":"The text to display","id":"String index of the notification"},"fname":"addProgress","realm":"cl","description":"\nDisplays a notification with an animated progress bar, will persist unless killed or chip is removed.","name":"notification_library.addProgress","library":"notification"},"notification_library.kill":{"summary":"\nRemoves the notification with the given index after 0.8 seconds ","class":"function","private":false,"param":{"1":"id","id":"String index of the notification to kill"},"fname":"kill","realm":"cl","description":"\nRemoves the notification with the given index after 0.8 seconds","name":"notification_library.kill","library":"notification"},"notification_library.addLegacy":{"summary":"\nDisplays a standard notification.","class":"function","private":false,"param":{"1":"text","2":"type","3":"length","type":"Determines the notification method. \nNOTIFY.GENERIC \nNOTIFY.ERROR \nNOTIFY.UNDO \nNOTIFY.HINT \nNOTIFY.CLEANUP","length":"Time in seconds to display the notification (Max length of 30)","text":"The text to display"},"fname":"addLegacy","realm":"cl","description":"\nDisplays a standard notification.","name":"notification_library.addLegacy","library":"notification"}},"libraries":{"1":"notification","notification":{"summary":"\nNotification library.","tables":[],"client":true,"libtbl":"notification_library","fields":[],"class":"library","functions":{"1":"addLegacy","2":"addProgress","3":"kill","addProgress":{"summary":"\nDisplays a notification with an animated progress bar, will persist unless killed or chip is removed.","class":"function","private":false,"param":{"1":"id","2":"text","text":"The text to display","id":"String index of the notification"},"fname":"addProgress","realm":"cl","description":"\nDisplays a notification with an animated progress bar, will persist unless killed or chip is removed.","name":"notification_library.addProgress","library":"notification"},"kill":{"summary":"\nRemoves the notification with the given index after 0.8 seconds ","class":"function","private":false,"param":{"1":"id","id":"String index of the notification to kill"},"fname":"kill","realm":"cl","description":"\nRemoves the notification with the given index after 0.8 seconds","name":"notification_library.kill","library":"notification"},"addLegacy":{"summary":"\nDisplays a standard notification.","class":"function","private":false,"param":{"1":"text","2":"type","3":"length","type":"Determines the notification method. \nNOTIFY.GENERIC \nNOTIFY.ERROR \nNOTIFY.UNDO \nNOTIFY.HINT \nNOTIFY.CLEANUP","length":"Time in seconds to display the notification (Max length of 30)","text":"The text to display"},"fname":"addLegacy","realm":"cl","description":"\nDisplays a standard notification.","name":"notification_library.addLegacy","library":"notification"}},"name":"notification","description":"\nNotification library. Allows the user to display hints on the bottom right of their screen"}},"type":"file","doc":[{"summary":"\n \nNotification functions \n ","param":[],"description":"\n \nNotification functions \n"},{"summary":"\nNotification library.","tables":[],"client":true,"libtbl":"notification_library","fields":[],"class":"library","functions":{"1":"addLegacy","2":"addProgress","3":"kill","addProgress":{"summary":"\nDisplays a notification with an animated progress bar, will persist unless killed or chip is removed.","class":"function","private":false,"param":{"1":"id","2":"text","text":"The text to display","id":"String index of the notification"},"fname":"addProgress","realm":"cl","description":"\nDisplays a notification with an animated progress bar, will persist unless killed or chip is removed.","name":"notification_library.addProgress","library":"notification"},"kill":{"summary":"\nRemoves the notification with the given index after 0.8 seconds ","class":"function","private":false,"param":{"1":"id","id":"String index of the notification to kill"},"fname":"kill","realm":"cl","description":"\nRemoves the notification with the given index after 0.8 seconds","name":"notification_library.kill","library":"notification"},"addLegacy":{"summary":"\nDisplays a standard notification.","class":"function","private":false,"param":{"1":"text","2":"type","3":"length","type":"Determines the notification method. \nNOTIFY.GENERIC \nNOTIFY.ERROR \nNOTIFY.UNDO \nNOTIFY.HINT \nNOTIFY.CLEANUP","length":"Time in seconds to display the notification (Max length of 30)","text":"The text to display"},"fname":"addLegacy","realm":"cl","description":"\nDisplays a standard notification.","name":"notification_library.addLegacy","library":"notification"}},"name":"notification","description":"\nNotification library. Allows the user to display hints on the bottom right of their screen"},{"summary":"\nDisplays a standard notification.","class":"function","private":false,"param":{"1":"text","2":"type","3":"length","type":"Determines the notification method. \nNOTIFY.GENERIC \nNOTIFY.ERROR \nNOTIFY.UNDO \nNOTIFY.HINT \nNOTIFY.CLEANUP","length":"Time in seconds to display the notification (Max length of 30)","text":"The text to display"},"fname":"addLegacy","realm":"cl","description":"\nDisplays a standard notification.","name":"notification_library.addLegacy","library":"notification"},{"summary":"\nDisplays a notification with an animated progress bar, will persist unless killed or chip is removed.","class":"function","private":false,"param":{"1":"id","2":"text","text":"The text to display","id":"String index of the notification"},"fname":"addProgress","realm":"cl","description":"\nDisplays a notification with an animated progress bar, will persist unless killed or chip is removed.","name":"notification_library.addProgress","library":"notification"},{"summary":"\nRemoves the notification with the given index after 0.8 seconds ","class":"function","private":false,"param":{"1":"id","id":"String index of the notification to kill"},"fname":"kill","realm":"cl","description":"\nRemoves the notification with the given index after 0.8 seconds","name":"notification_library.kill","library":"notification"}],"name":"libs_cl/notification.lua","description":"\n \nNotification functions \n"},"editor/themes.lua":{"summary":"\nParses a TextMate XML theme file.","tables":[],"functions":{"1":"SF.Editor.Themes.ParseTextMate","SF.Editor.Themes.ParseTextMate":{"summary":"\nParses a TextMate XML theme file.","ret":["Theme table that can be used with SF.Editor.Themes.AddTheme, nil if there was an error","Sanitized string identifier for the theme - a lowercase string without whitespace, nil if there was an error","Parsing error string"],"class":"function","private":false,"realm":"r/","param":{"1":"text","text":"The contents of XML file"},"name":"SF.Editor.Themes.ParseTextMate","description":"\nParses a TextMate XML theme file."}},"libraries":[],"type":"file","doc":[{"summary":"\nParses a TextMate XML theme file.","ret":["Theme table that can be used with SF.Editor.Themes.AddTheme, nil if there was an error","Sanitized string identifier for the theme - a lowercase string without whitespace, nil if there was an error","Parsing error string"],"class":"function","private":false,"realm":"r/","param":{"1":"text","text":"The contents of XML file"},"name":"SF.Editor.Themes.ParseTextMate","description":"\nParses a TextMate XML theme file."}],"name":"editor/themes.lua","description":"\nParses a TextMate XML theme file."},"editor/tabhandlers/tab_settings.lua":{"summary":"\n \nHandler part (Tab Handler) \n ","tables":[],"functions":{"1":"PANEL:Init","2":"TabHandler:Init","PANEL:Init":{"private":false,"param":[],"realm":"r/","summary":"\n \nVGUI part (content) \n ","class":"function","name":"PANEL:Init","description":"\n \nVGUI part (content) \n"},"TabHandler:Init":{"private":false,"param":[],"realm":"r/","summary":"\n \nHandler part (Tab Handler) \n ","class":"function","name":"TabHandler:Init","description":"\n \nHandler part (Tab Handler) \n"}},"libraries":[],"type":"file","doc":[{"private":false,"param":[],"realm":"r/","summary":"\n \nHandler part (Tab Handler) \n ","class":"function","name":"TabHandler:Init","description":"\n \nHandler part (Tab Handler) \n"},{"private":false,"param":[],"realm":"r/","summary":"\n \nVGUI part (content) \n ","class":"function","name":"PANEL:Init","description":"\n \nVGUI part (content) \n"},{"summary":"\n \nWe're done \n ","param":[],"description":"\n \nWe're done \n"}],"name":"editor/tabhandlers/tab_settings.lua","description":"\n \nHandler part (Tab Handler) \n"},"libs_sh/angles.lua":{"summary":"\nAngle Type ","tables":[],"functions":{"1":"ang_metamethods.__add","2":"ang_metamethods.__div","3":"ang_metamethods.__eq","4":"ang_metamethods.__index","5":"ang_metamethods.__mul","6":"ang_metamethods.__newindex","7":"ang_metamethods.__sub","8":"ang_metamethods.__tostring","9":"ang_metamethods.__unm","10":"ang_methods:clone","11":"ang_methods:getForward","12":"ang_methods:getNormalized","13":"ang_methods:getRight","14":"ang_methods:getUp","15":"ang_methods:isZero","16":"ang_methods:normalize","17":"ang_methods:rotateAroundAxis","18":"ang_methods:set","19":"ang_methods:setP","20":"ang_methods:setR","21":"ang_methods:setY","22":"ang_methods:setZero","ang_methods:setR":{"summary":"\nSet's the angle's roll and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setR","realm":"sh","param":{"1":"r","r":"The roll"},"name":"ang_methods:setR","description":"\nSet's the angle's roll and returns it."},"ang_metamethods.__index":{"private":false,"param":["t","k"],"realm":"sh","summary":"\n__index metamethod ","class":"function","name":"ang_metamethods.__index","description":"\n__index metamethod"},"ang_metamethods.__eq":{"summary":"\n__eq metamethod ang1 == ang2.","ret":"bool","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","a":"Angle to check against."},"name":"ang_metamethods.__eq","description":"\n__eq metamethod ang1 == ang2."},"ang_methods:setZero":{"summary":"\nSets p,y,r to 0.","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"setZero","realm":"sh","param":[],"name":"ang_methods:setZero","description":"\nSets p,y,r to 0. This is faster than doing it manually."},"ang_metamethods.__mul":{"summary":"\n__mul metamethod ang1 * n.","ret":"resultant angle.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"n","n":"Number to multiply by."},"name":"ang_metamethods.__mul","description":"\n__mul metamethod ang1 * n."},"ang_metamethods.__newindex":{"private":false,"param":["t","k","v"],"realm":"sh","summary":"\n__newindex metamethod ","class":"function","name":"ang_metamethods.__newindex","description":"\n__newindex metamethod"},"ang_methods:setY":{"summary":"\nSet's the angle's yaw and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setY","realm":"sh","param":{"1":"y","y":"The yaw"},"name":"ang_methods:setY","description":"\nSet's the angle's yaw and returns it."},"ang_methods:getUp":{"summary":"\nReturn the Up Vector relative to the angle dir.","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getUp","realm":"sh","param":[],"name":"ang_methods:getUp","description":"\nReturn the Up Vector relative to the angle dir."},"ang_methods:isZero":{"summary":"\nReturns if p,y,r are all 0.","ret":"boolean","class":"function","private":false,"classlib":"Angle","fname":"isZero","realm":"sh","param":[],"name":"ang_methods:isZero","description":"\nReturns if p,y,r are all 0."},"ang_methods:normalize":{"summary":"\nNormalise angles eg (0,181,1) -> (0,-179,1).","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"normalize","realm":"sh","param":[],"name":"ang_methods:normalize","description":"\nNormalise angles eg (0,181,1) -> (0,-179,1)."},"ang_metamethods.__tostring":{"summary":"\ntostring metamethod ","ret":"string representing the angle.","class":"function","private":false,"realm":"sh","param":["a"],"name":"ang_metamethods.__tostring","description":"\ntostring metamethod"},"ang_methods:setP":{"summary":"\nSet's the angle's pitch and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setP","realm":"sh","param":{"1":"p","p":"The pitch"},"name":"ang_methods:setP","description":"\nSet's the angle's pitch and returns it."},"ang_metamethods.__unm":{"summary":"\n__unm metamethod -ang.","ret":"resultant angle.","class":"function","private":false,"realm":"sh","param":["a"],"name":"ang_metamethods.__unm","description":"\n__unm metamethod -ang."},"ang_methods:getForward":{"summary":"\nReturn the Forward Vector ( direction the angle points ).","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getForward","realm":"sh","param":[],"name":"ang_methods:getForward","description":"\nReturn the Forward Vector ( direction the angle points )."},"ang_methods:getRight":{"summary":"\nReturn the Right Vector relative to the angle dir.","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getRight","realm":"sh","param":[],"name":"ang_methods:getRight","description":"\nReturn the Right Vector relative to the angle dir."},"ang_methods:getNormalized":{"summary":"\nReturnes a normalized angle ","ret":"Normalized angle table","class":"function","private":false,"classlib":"Angle","fname":"getNormalized","realm":"sh","param":[],"name":"ang_methods:getNormalized","description":"\nReturnes a normalized angle"},"ang_methods:set":{"summary":"\nCopies p,y,r from angle to another.","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"set","realm":"sh","param":{"1":"b","b":"The angle to copy from."},"name":"ang_methods:set","description":"\nCopies p,y,r from angle to another."},"ang_methods:rotateAroundAxis":{"summary":"\nReturn Rotated angle around the specified axis.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"rotateAroundAxis","realm":"sh","param":{"1":"v","2":"deg","3":"rad","deg":"Number of degrees or nil if radians.","v":"Vector axis","rad":"Number of radians or nil if degrees."},"name":"ang_methods:rotateAroundAxis","description":"\nReturn Rotated angle around the specified axis."},"ang_methods:clone":{"summary":"\nCopies p,y,r from angle and returns a new angle ","ret":"The copy of the angle","class":"function","private":false,"classlib":"Angle","fname":"clone","realm":"sh","param":[],"name":"ang_methods:clone","description":"\nCopies p,y,r from angle and returns a new angle"},"ang_metamethods.__sub":{"summary":"\n__sub metamethod ang1 - ang2.","ret":"resultant angle.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","a":"Angle to subtract."},"name":"ang_metamethods.__sub","description":"\n__sub metamethod ang1 - ang2."},"ang_metamethods.__div":{"summary":"\n__div metamethod ang1 / n.","ret":"resultant angle.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"n","n":"Number to divided by."},"name":"ang_metamethods.__div","description":"\n__div metamethod ang1 / n."},"ang_metamethods.__add":{"summary":"\n__add metamethod ang1 + ang2.","ret":"resultant angle.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","a":"Angle to add."},"name":"ang_metamethods.__add","description":"\n__add metamethod ang1 + ang2."}},"libraries":[],"type":"file","doc":[{"methods":{"1":"clone","2":"getForward","3":"getNormalized","4":"getRight","5":"getUp","6":"isZero","7":"normalize","8":"rotateAroundAxis","9":"set","10":"setP","11":"setR","12":"setY","13":"setZero","getNormalized":{"summary":"\nReturnes a normalized angle ","ret":"Normalized angle table","class":"function","private":false,"classlib":"Angle","fname":"getNormalized","realm":"sh","param":[],"name":"ang_methods:getNormalized","description":"\nReturnes a normalized angle"},"clone":{"summary":"\nCopies p,y,r from angle and returns a new angle ","ret":"The copy of the angle","class":"function","private":false,"classlib":"Angle","fname":"clone","realm":"sh","param":[],"name":"ang_methods:clone","description":"\nCopies p,y,r from angle and returns a new angle"},"setY":{"summary":"\nSet's the angle's yaw and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setY","realm":"sh","param":{"1":"y","y":"The yaw"},"name":"ang_methods:setY","description":"\nSet's the angle's yaw and returns it."},"getRight":{"summary":"\nReturn the Right Vector relative to the angle dir.","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getRight","realm":"sh","param":[],"name":"ang_methods:getRight","description":"\nReturn the Right Vector relative to the angle dir."},"setP":{"summary":"\nSet's the angle's pitch and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setP","realm":"sh","param":{"1":"p","p":"The pitch"},"name":"ang_methods:setP","description":"\nSet's the angle's pitch and returns it."},"set":{"summary":"\nCopies p,y,r from angle to another.","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"set","realm":"sh","param":{"1":"b","b":"The angle to copy from."},"name":"ang_methods:set","description":"\nCopies p,y,r from angle to another."},"getForward":{"summary":"\nReturn the Forward Vector ( direction the angle points ).","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getForward","realm":"sh","param":[],"name":"ang_methods:getForward","description":"\nReturn the Forward Vector ( direction the angle points )."},"getUp":{"summary":"\nReturn the Up Vector relative to the angle dir.","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getUp","realm":"sh","param":[],"name":"ang_methods:getUp","description":"\nReturn the Up Vector relative to the angle dir."},"isZero":{"summary":"\nReturns if p,y,r are all 0.","ret":"boolean","class":"function","private":false,"classlib":"Angle","fname":"isZero","realm":"sh","param":[],"name":"ang_methods:isZero","description":"\nReturns if p,y,r are all 0."},"rotateAroundAxis":{"summary":"\nReturn Rotated angle around the specified axis.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"rotateAroundAxis","realm":"sh","param":{"1":"v","2":"deg","3":"rad","deg":"Number of degrees or nil if radians.","v":"Vector axis","rad":"Number of radians or nil if degrees."},"name":"ang_methods:rotateAroundAxis","description":"\nReturn Rotated angle around the specified axis."},"setZero":{"summary":"\nSets p,y,r to 0.","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"setZero","realm":"sh","param":[],"name":"ang_methods:setZero","description":"\nSets p,y,r to 0. This is faster than doing it manually."},"setR":{"summary":"\nSet's the angle's roll and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setR","realm":"sh","param":{"1":"r","r":"The roll"},"name":"ang_methods:setR","description":"\nSet's the angle's roll and returns it."},"normalize":{"summary":"\nNormalise angles eg (0,181,1) -> (0,-179,1).","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"normalize","realm":"sh","param":[],"name":"ang_methods:normalize","description":"\nNormalise angles eg (0,181,1) -> (0,-179,1)."}},"class":"class","client":true,"summary":"\nAngle Type ","fields":[],"server":true,"typtbl":"ang_methods","name":"Angle","description":"\nAngle Type"},{"private":false,"param":["t","k","v"],"realm":"sh","summary":"\n__newindex metamethod ","class":"function","name":"ang_metamethods.__newindex","description":"\n__newindex metamethod"},{"private":false,"param":["t","k"],"realm":"sh","summary":"\n__index metamethod ","class":"function","name":"ang_metamethods.__index","description":"\n__index metamethod"},{"summary":"\ntostring metamethod ","ret":"string representing the angle.","class":"function","private":false,"realm":"sh","param":["a"],"name":"ang_metamethods.__tostring","description":"\ntostring metamethod"},{"summary":"\n__mul metamethod ang1 * n.","ret":"resultant angle.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"n","n":"Number to multiply by."},"name":"ang_metamethods.__mul","description":"\n__mul metamethod ang1 * n."},{"summary":"\n__div metamethod ang1 / n.","ret":"resultant angle.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"n","n":"Number to divided by."},"name":"ang_metamethods.__div","description":"\n__div metamethod ang1 / n."},{"summary":"\n__unm metamethod -ang.","ret":"resultant angle.","class":"function","private":false,"realm":"sh","param":["a"],"name":"ang_metamethods.__unm","description":"\n__unm metamethod -ang."},{"summary":"\n__eq metamethod ang1 == ang2.","ret":"bool","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","a":"Angle to check against."},"name":"ang_metamethods.__eq","description":"\n__eq metamethod ang1 == ang2."},{"summary":"\n__add metamethod ang1 + ang2.","ret":"resultant angle.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","a":"Angle to add."},"name":"ang_metamethods.__add","description":"\n__add metamethod ang1 + ang2."},{"summary":"\n__sub metamethod ang1 - ang2.","ret":"resultant angle.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","a":"Angle to subtract."},"name":"ang_metamethods.__sub","description":"\n__sub metamethod ang1 - ang2."},{"summary":"\nReturns if p,y,r are all 0.","ret":"boolean","class":"function","private":false,"classlib":"Angle","fname":"isZero","realm":"sh","param":[],"name":"ang_methods:isZero","description":"\nReturns if p,y,r are all 0."},{"summary":"\nNormalise angles eg (0,181,1) -> (0,-179,1).","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"normalize","realm":"sh","param":[],"name":"ang_methods:normalize","description":"\nNormalise angles eg (0,181,1) -> (0,-179,1)."},{"summary":"\nReturnes a normalized angle ","ret":"Normalized angle table","class":"function","private":false,"classlib":"Angle","fname":"getNormalized","realm":"sh","param":[],"name":"ang_methods:getNormalized","description":"\nReturnes a normalized angle"},{"summary":"\nReturn the Forward Vector ( direction the angle points ).","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getForward","realm":"sh","param":[],"name":"ang_methods:getForward","description":"\nReturn the Forward Vector ( direction the angle points )."},{"summary":"\nReturn the Right Vector relative to the angle dir.","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getRight","realm":"sh","param":[],"name":"ang_methods:getRight","description":"\nReturn the Right Vector relative to the angle dir."},{"summary":"\nReturn the Up Vector relative to the angle dir.","ret":"vector normalised.","class":"function","private":false,"classlib":"Angle","fname":"getUp","realm":"sh","param":[],"name":"ang_methods:getUp","description":"\nReturn the Up Vector relative to the angle dir."},{"summary":"\nReturn Rotated angle around the specified axis.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"rotateAroundAxis","realm":"sh","param":{"1":"v","2":"deg","3":"rad","deg":"Number of degrees or nil if radians.","v":"Vector axis","rad":"Number of radians or nil if degrees."},"name":"ang_methods:rotateAroundAxis","description":"\nReturn Rotated angle around the specified axis."},{"summary":"\nCopies p,y,r from angle and returns a new angle ","ret":"The copy of the angle","class":"function","private":false,"classlib":"Angle","fname":"clone","realm":"sh","param":[],"name":"ang_methods:clone","description":"\nCopies p,y,r from angle and returns a new angle"},{"summary":"\nCopies p,y,r from angle to another.","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"set","realm":"sh","param":{"1":"b","b":"The angle to copy from."},"name":"ang_methods:set","description":"\nCopies p,y,r from angle to another."},{"summary":"\nSets p,y,r to 0.","ret":"nil","class":"function","private":false,"classlib":"Angle","fname":"setZero","realm":"sh","param":[],"name":"ang_methods:setZero","description":"\nSets p,y,r to 0. This is faster than doing it manually."},{"summary":"\nSet's the angle's pitch and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setP","realm":"sh","param":{"1":"p","p":"The pitch"},"name":"ang_methods:setP","description":"\nSet's the angle's pitch and returns it."},{"summary":"\nSet's the angle's yaw and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setY","realm":"sh","param":{"1":"y","y":"The yaw"},"name":"ang_methods:setY","description":"\nSet's the angle's yaw and returns it."},{"summary":"\nSet's the angle's roll and returns it.","ret":"The modified angle","class":"function","private":false,"classlib":"Angle","fname":"setR","realm":"sh","param":{"1":"r","r":"The roll"},"name":"ang_methods:setR","description":"\nSet's the angle's roll and returns it."}],"name":"libs_sh/angles.lua","description":"\nAngle Type"},"permissions/providers_sh/url_whitelist.lua":{"summary":"\nProvides permissions for URLs ","tables":[],"functions":[],"libraries":[],"type":"file","doc":[{"summary":"\nProvides permissions for URLs ","param":[],"description":"\nProvides permissions for URLs"},{"summary":"\n \nhttps://github.com/Metastruct/gurl/ -- \n ","param":[],"description":"\n \nhttps://github.com/Metastruct/gurl/ -- \n"},{"summary":"\nExamples: \nhttps://dl.dropboxusercontent.com/u/12345/abc123/abc123.bin \nhttps://www.dropbox.com/s/abcd123/efg123.txt?dl=0 \nhttps://dl.dropboxusercontent.com/content_link/abc123/file?dl=1 ","param":[],"description":"\nExamples: \nhttps://dl.dropboxusercontent.com/u/12345/abc123/abc123.bin \nhttps://www.dropbox.com/s/abcd123/efg123.txt?dl=0 \nhttps://dl.dropboxusercontent.com/content_link/abc123/file?dl=1"},{"summary":"\nExamples: \nhttps://onedrive.live.com/redir?resid=123!178&authkey=!gweg&v=3&ithint=abcd%2cefg ","param":[],"description":"\nExamples: \nhttps://onedrive.live.com/redir?resid=123!178&authkey=!gweg&v=3&ithint=abcd%2cefg"},{"summary":"\nExamples: \nhttps://docs.google.com/uc?export=download&confirm=UYyi&id=0BxUpZqVaDxVPeENDM1RtZDRvaTA ","param":[],"description":"\nExamples: \nhttps://docs.google.com/uc?export=download&confirm=UYyi&id=0BxUpZqVaDxVPeENDM1RtZDRvaTA"},{"summary":"\nExamples: \nhttp://i.imgur.com/abcd123.xxx ","param":[],"description":"\nExamples: \nhttp://i.imgur.com/abcd123.xxx"},{"summary":"\nExamples: \nhttp://pastebin.com/abcdef ","param":[],"description":"\nExamples: \nhttp://pastebin.com/abcdef"},{"summary":"\nExamples: \nhttps://gist.githubusercontent.com/LUModder/f2b1c0c9bf98224f9679/raw/5644006aae8f0a8b930ac312324f46dd43839189/sh_sbdc.lua \nhttps://raw.githubusercontent.com/LUModder/FWP/master/weapon_template.txt ","param":[],"description":"\nExamples: \nhttps://gist.githubusercontent.com/LUModder/f2b1c0c9bf98224f9679/raw/5644006aae8f0a8b930ac312324f46dd43839189/sh_sbdc.lua \nhttps://raw.githubusercontent.com/LUModder/FWP/master/weapon_template.txt"},{"summary":"\nExamples: \nhttp://i68.tinypic.com/24b3was.gif ","param":[],"description":"\nExamples: \nhttp://i68.tinypic.com/24b3was.gif"},{"summary":"\nExamples: \nhttps://paste.ee/r/J3jle ","param":[],"description":"\nExamples: \nhttps://paste.ee/r/J3jle"},{"summary":"\nExamples: \nhttp://hastebin.com/icuvacogig.txt ","param":[],"description":"\nExamples: \nhttp://hastebin.com/icuvacogig.txt"},{"summary":"\nExamples: \nhttp://puu.sh/asd/qwe.obj ","param":[],"description":"\nExamples: \nhttp://puu.sh/asd/qwe.obj"},{"summary":"\nExamples: \nhttp://images.akamai.steamusercontent.com/ugc/367407720941694853/74457889F41A19BD66800C71663E9077FA440664/ \nhttps://steamcdn-a.akamaihd.net/steamcommunity/public/images/apps/4000/dca12980667e32ab072d79f5dbe91884056a03a2.jpg ","param":[],"description":"\nExamples: \nhttp://images.akamai.steamusercontent.com/ugc/367407720941694853/74457889F41A19BD66800C71663E9077FA440664/ \nhttps://steamcdn-a.akamaihd.net/steamcommunity/public/images/apps/4000/dca12980667e32ab072d79f5dbe91884056a03a2.jpg"},{"summary":"\n \nEnd of GURL -- \n ","param":[],"description":"\n \nEnd of GURL -- \n"},{"summary":"\nExamples: \nhttps://cdn.discordapp.com/attachments/269175189382758400/421572398689550338/unknown.png \nhttps://images-ext-2.discordapp.net/external/UVPTeOLUWSiDXGwwtZ68cofxU1uaA2vMb2ZCjRY8XXU/https/i.imgur.com/j0QGfKN.jpg?width=1202&height=677 ","param":[],"description":"\nExamples: \nhttps://cdn.discordapp.com/attachments/269175189382758400/421572398689550338/unknown.png \nhttps://images-ext-2.discordapp.net/external/UVPTeOLUWSiDXGwwtZ68cofxU1uaA2vMb2ZCjRY8XXU/https/i.imgur.com/j0QGfKN.jpg?width=1202&height=677"},{"summary":"\nExamples: \nhttps://i.redd.it/u46wumt13an01.jpg \nhttps://i.redditmedia.com/RowF7of6hQJAdnJPfgsA-o7ioo_uUzhwX96bPmnLo0I.jpg?w=320&s=116b72a949b6e4b8ac6c42487ffb9ad2 ","param":[],"description":"\nExamples: \nhttps://i.redd.it/u46wumt13an01.jpg \nhttps://i.redditmedia.com/RowF7of6hQJAdnJPfgsA-o7ioo_uUzhwX96bPmnLo0I.jpg?w=320&s=116b72a949b6e4b8ac6c42487ffb9ad2"},{"summary":"\nExamples: \nyou don't even wanna know ","param":[],"description":"\nExamples: \nyou don't even wanna know"},{"summary":"\nExamples: \nhttps://ipfs.io/ipfs/QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco/I/m/Ellis_Sigil.jpg ","param":[],"description":"\nExamples: \nhttps://ipfs.io/ipfs/QmXoypizjW3WknFiJnKLwHCnL72vedxjQkDDP1mXWo6uco/I/m/Ellis_Sigil.jpg"},{"summary":"\nExamples: \nhttps://fauux.neocities.org/LainDressSlow.gif ","param":[],"description":"\nExamples: \nhttps://fauux.neocities.org/LainDressSlow.gif"}],"name":"permissions/providers_sh/url_whitelist.lua","description":"\nProvides permissions for URLs"},"preprocessor.lua":{"summary":"\n \nSF Preprocessor.","tables":[],"functions":{"1":"SF.Preprocessor.ParseDirectives","2":"SF.Preprocessor.SetGlobalDirective","SF.Preprocessor.SetGlobalDirective":{"private":false,"param":{"1":"directive","2":"func","directive":"The directive to set.","func":"The callback. Takes the directive arguments, the file name, and instance.data"},"realm":"oc","summary":"\nSets a global preprocessor directive.","class":"function","name":"SF.Preprocessor.SetGlobalDirective","description":"\nSets a global preprocessor directive."},"SF.Preprocessor.ParseDirectives":{"private":false,"param":{"1":"filename","2":"source","3":"data","filename":"The file name of the source code","source":"The source code to parse.","data":"The data table passed to the directives."},"realm":"oc","summary":"\nParses a source file for directives.","class":"function","name":"SF.Preprocessor.ParseDirectives","description":"\nParses a source file for directives."}},"libraries":[],"type":"file","doc":[{"summary":"\n \nSF Preprocessor.","param":[],"description":"\n \nSF Preprocessor. \nProcesses code for compile time directives. \n"},{"private":false,"param":{"1":"directive","2":"func","directive":"The directive to set.","func":"The callback. Takes the directive arguments, the file name, and instance.data"},"realm":"oc","summary":"\nSets a global preprocessor directive.","class":"function","name":"SF.Preprocessor.SetGlobalDirective","description":"\nSets a global preprocessor directive."},{"private":false,"param":{"1":"filename","2":"source","3":"data","filename":"The file name of the source code","source":"The source code to parse.","data":"The data table passed to the directives."},"realm":"oc","summary":"\nParses a source file for directives.","class":"function","name":"SF.Preprocessor.ParseDirectives","description":"\nParses a source file for directives."},{"summary":"\nMark a file to be included in the upload.","classForced":true,"class":"directive","usage":"\n--@include lib/someLibrary.txt \n \nrequire( \"lib/someLibrary.txt\" ) \n-- CODE","description":"\nMark a file to be included in the upload. \nThis is required to use the file in require() and dofile()","name":"include","param":{"1":"path","path":"Path to the file"}},{"summary":"\nMark a directory to be included in the upload.","classForced":true,"class":"directive","usage":"\n--@includedir lib \n \nrequire( \"lib/someLibraryInLib.txt\" ) \nrequire( \"lib/someOtherLibraryInLib.txt\" ) \n-- CODE","description":"\nMark a directory to be included in the upload. \nThis is optional to include all files in the directory in require() and dofile()","name":"includedir","param":{"1":"path","path":"Path to the directory"}},{"summary":"\nSet the name of the script.","classForced":true,"class":"directive","usage":"\n--@name Awesome script \n-- CODE","description":"\nSet the name of the script. \nThis will become the name of the tab and will show on the overlay of the processor","name":"name","param":{"1":"name","name":"Name of the script"}},{"summary":"\nSet the author of the script.","classForced":true,"class":"directive","usage":"\n--@author TheAuthor \n-- CODE","description":"\nSet the author of the script. \nThis will set the author that will be shown on the overlay of the processor","name":"author","param":{"1":"author","author":"Author of the script"}},{"summary":"\nSet the model of the processor entity.","classForced":true,"class":"directive","usage":"\n--@model models/props_junk/watermelon01.mdl \n-- CODE","description":"\nSet the model of the processor entity.","name":"model","param":{"1":"model","model":"String of the model"}},{"summary":"\nSet the current file to only run on the server.","classForced":true,"class":"directive","usage":"\n--@server \n-- CODE","description":"\nSet the current file to only run on the server. Shared is default","name":"server","param":[]},{"summary":"\nSet the current file to only run on the client.","classForced":true,"class":"directive","usage":"\n--@client \n-- CODE","description":"\nSet the current file to only run on the client. Shared is default","name":"client","param":[]},{"summary":"\nSet the client file to run as main.","classForced":true,"class":"directive","usage":"\n--@clientmain somefile.txt \n-- CODE","description":"\nSet the client file to run as main. Can only be used in the main file.","name":"clientmain","param":[]}],"name":"preprocessor.lua","description":"\n \nSF Preprocessor. \nProcesses code for compile time directives. \n"},"libs_sv/entities.lua":{"summary":"\n \nServerside Entity functions \n ","tables":[],"functions":{"1":"ents_methods:addAngleVelocity","2":"ents_methods:addCollisionListener","3":"ents_methods:applyAngForce","4":"ents_methods:applyDamage","5":"ents_methods:applyForceCenter","6":"ents_methods:applyForceOffset","7":"ents_methods:applyTorque","8":"ents_methods:breakEnt","9":"ents_methods:enableDrag","10":"ents_methods:enableGravity","11":"ents_methods:enableMotion","12":"ents_methods:enableSphere","13":"ents_methods:extinguish","14":"ents_methods:getAllConstrained","15":"ents_methods:getCreationID","16":"ents_methods:getLinkedComponents","17":"ents_methods:getPhysMaterial","18":"ents_methods:ignite","19":"ents_methods:isFrozen","20":"ents_methods:isPlayerHolding","21":"ents_methods:isValidPhys","22":"ents_methods:isWeldedTo","23":"ents_methods:linkComponent","24":"ents_methods:remove","25":"ents_methods:removeCollisionListener","26":"ents_methods:removeTrails","27":"ents_methods:setAngleVelocity","28":"ents_methods:setAngles","29":"ents_methods:setComponentLocksControls","30":"ents_methods:setCustomPropForces","31":"ents_methods:setDrawShadow","32":"ents_methods:setFrozen","33":"ents_methods:setInertia","34":"ents_methods:setMass","35":"ents_methods:setNocollideAll","36":"ents_methods:setParent","37":"ents_methods:setPhysMaterial","38":"ents_methods:setPos","39":"ents_methods:setSolid","40":"ents_methods:setTrails","41":"ents_methods:setUnbreakable","42":"ents_methods:setVelocity","43":"ents_methods:testPVS","44":"ents_methods:unparent","ents_methods:removeTrails":{"summary":"\nRemoves trails from the entity ","class":"function","private":false,"param":[],"fname":"removeTrails","realm":"sv","name":"ents_methods:removeTrails","classlib":"Entity","description":"\nRemoves trails from the entity"},"ents_methods:setParent":{"summary":"\nParents the entity to another entity ","class":"function","private":false,"param":{"1":"parent","2":"attachment","parent":"Entity to parent to. nil to unparent","attachment":"Optional string attachment name to parent to"},"fname":"setParent","realm":"sv","name":"ents_methods:setParent","classlib":"Entity","description":"\nParents the entity to another entity"},"ents_methods:getCreationID":{"summary":"\nReturns entity's creation ID (similar to entIndex, but increments monotonically) ","ret":"The creation ID","class":"function","private":false,"classlib":"Entity","fname":"getCreationID","realm":"sv","param":[],"name":"ents_methods:getCreationID","description":"\nReturns entity's creation ID (similar to entIndex, but increments monotonically)"},"ents_methods:breakEnt":{"summary":"\nInvokes the entity's breaking animation and removes it.","class":"function","private":false,"param":[],"fname":"breakEnt","realm":"sv","name":"ents_methods:breakEnt","classlib":"Entity","description":"\nInvokes the entity's breaking animation and removes it."},"ents_methods:unparent":{"summary":"\nUnparents the entity from another entity ","class":"function","private":false,"param":[],"fname":"unparent","realm":"sv","name":"ents_methods:unparent","classlib":"Entity","description":"\nUnparents the entity from another entity"},"ents_methods:setVelocity":{"summary":"\nSets the entity's linear velocity ","class":"function","private":false,"param":{"1":"vel","vel":"New velocity"},"fname":"setVelocity","realm":"sv","name":"ents_methods:setVelocity","classlib":"Entity","description":"\nSets the entity's linear velocity"},"ents_methods:setCustomPropForces":{"summary":"\nSets a custom prop's physics simulation forces.","class":"function","private":false,"param":{"1":"ang","2":"lin","3":"mode","ang":"Angular Force (Torque)","mode":"The physics mode to use. 0 = Off, 1 = Local acceleration, 2 = Local force, 3 = Global Acceleration, 4 = Global force","lin":"Linear Force"},"fname":"setCustomPropForces","realm":"sv","name":"ents_methods:setCustomPropForces","classlib":"Entity","description":"\nSets a custom prop's physics simulation forces. Thrusters and balloons use this."},"ents_methods:getPhysMaterial":{"summary":"\nGet the physical material of the entity ","ret":"the physical material","class":"function","private":false,"classlib":"Entity","fname":"getPhysMaterial","realm":"sv","param":[],"name":"ents_methods:getPhysMaterial","description":"\nGet the physical material of the entity"},"ents_methods:isValidPhys":{"summary":"\nChecks whether entity has physics ","ret":"True if entity has physics","class":"function","private":false,"classlib":"Entity","fname":"isValidPhys","realm":"sv","param":[],"name":"ents_methods:isValidPhys","description":"\nChecks whether entity has physics"},"ents_methods:setAngles":{"summary":"\nSets the entity's angles ","class":"function","private":false,"param":{"1":"ang","ang":"New angles"},"fname":"setAngles","realm":"sv","name":"ents_methods:setAngles","classlib":"Entity","description":"\nSets the entity's angles"},"ents_methods:applyForceCenter":{"summary":"\nApplies linear force to the entity ","class":"function","private":false,"param":{"1":"vec","vec":"The force vector"},"fname":"applyForceCenter","realm":"sv","name":"ents_methods:applyForceCenter","classlib":"Entity","description":"\nApplies linear force to the entity"},"ents_methods:extinguish":{"summary":"\nExtinguishes an entity ","class":"function","private":false,"param":[],"fname":"extinguish","realm":"sv","name":"ents_methods:extinguish","classlib":"Entity","description":"\nExtinguishes an entity"},"ents_methods:getAllConstrained":{"summary":"\nGets a table of all constrained entities to each other ","class":"function","private":false,"param":{"1":"filter","filter":"Optional constraint type filter table where keys are the type name and values are 'true'. \"Wire\" and \"Parent\" are used for wires and parents."},"fname":"getAllConstrained","realm":"sv","name":"ents_methods:getAllConstrained","classlib":"Entity","description":"\nGets a table of all constrained entities to each other"},"ents_methods:enableDrag":{"summary":"\nSets the entity drag state ","class":"function","private":false,"param":{"1":"drag","drag":"Bool should the entity have air resistence?"},"fname":"enableDrag","realm":"sv","name":"ents_methods:enableDrag","classlib":"Entity","description":"\nSets the entity drag state"},"ents_methods:isFrozen":{"summary":"\nChecks the entities frozen state ","ret":"True if entity is frozen","class":"function","private":false,"classlib":"Entity","fname":"isFrozen","realm":"sv","param":[],"name":"ents_methods:isFrozen","description":"\nChecks the entities frozen state"},"ents_methods:setMass":{"summary":"\nSets the entity's mass ","class":"function","private":false,"param":{"1":"mass","mass":"number mass"},"fname":"setMass","realm":"sv","name":"ents_methods:setMass","classlib":"Entity","description":"\nSets the entity's mass"},"ents_methods:applyTorque":{"summary":"\nApplies torque ","class":"function","private":false,"param":{"1":"torque","torque":"The torque vector"},"fname":"applyTorque","realm":"sv","name":"ents_methods:applyTorque","classlib":"Entity","description":"\nApplies torque"},"ents_methods:setAngleVelocity":{"summary":"\nSet the angular velocity of an object ","class":"function","private":false,"param":{"1":"angvel","angvel":"The local angvel vector to set"},"fname":"setAngleVelocity","realm":"sv","name":"ents_methods:setAngleVelocity","classlib":"Entity","description":"\nSet the angular velocity of an object"},"ents_methods:applyDamage":{"summary":"\nApplies damage to an entity ","class":"function","private":false,"param":{"1":"amt","2":"attacker","3":"inflictor","inflictor":"damage inflictor","amt":"damage amount","attacker":"damage attacker"},"fname":"applyDamage","realm":"sv","name":"ents_methods:applyDamage","classlib":"Entity","description":"\nApplies damage to an entity"},"ents_methods:linkComponent":{"summary":"\nLinks starfall components to a starfall processor or vehicle.","class":"function","private":false,"param":{"1":"e","e":"Entity to link the component to. nil to clear links."},"fname":"linkComponent","realm":"sv","name":"ents_methods:linkComponent","classlib":"Entity","description":"\nLinks starfall components to a starfall processor or vehicle. Screen can only connect to processor. HUD can connect to processor and vehicle."},"ents_methods:testPVS":{"summary":"\nCheck if the given Entity or Vector is within this entity's PVS (Potentially Visible Set).","ret":"bool True/False","class":"function","private":false,"classlib":"Entity","fname":"testPVS","realm":"sv","param":{"1":"other","other":"Entity or Vector to test"},"name":"ents_methods:testPVS","description":"\nCheck if the given Entity or Vector is within this entity's PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},"ents_methods:setUnbreakable":{"summary":"\nSets a prop_physics to be unbreakable ","class":"function","private":false,"param":{"1":"on","on":"Whether to make the prop unbreakable"},"fname":"setUnbreakable","realm":"sv","name":"ents_methods:setUnbreakable","classlib":"Entity","description":"\nSets a prop_physics to be unbreakable"},"ents_methods:addCollisionListener":{"summary":"\nAllows detecting collisions on an entity.","class":"function","private":false,"param":{"1":"func","func":"The callback function with argument, table collsiondata, http://wiki.garrysmod.com/page/Structures/CollisionData"},"fname":"addCollisionListener","realm":"sv","name":"ents_methods:addCollisionListener","classlib":"Entity","description":"\nAllows detecting collisions on an entity. You can only do this once for the entity's entire lifespan so use it wisely."},"ents_methods:setTrails":{"summary":"\nAdds a trail to the entity with the specified attributes.","class":"function","private":false,"param":{"1":"startSize","2":"endSize","3":"length","4":"material","5":"color","6":"attachmentID","7":"additive","attachmentID":"Optional attachmentid the trail should attach to","material":"The material of the trail","additive":"If the trail's rendering is additive","color":"The color of the trail","length":"The length size of the trail","startSize":"The start size of the trail","endSize":"The end size of the trail"},"fname":"setTrails","realm":"sv","name":"ents_methods:setTrails","classlib":"Entity","description":"\nAdds a trail to the entity with the specified attributes."},"ents_methods:setComponentLocksControls":{"summary":"\nSets a component's ability to lock a player's controls ","class":"function","private":false,"param":{"1":"enable","enable":"Whether the component will lock the player's controls when used"},"fname":"setComponentLocksControls","realm":"sv","name":"ents_methods:setComponentLocksControls","classlib":"Entity","description":"\nSets a component's ability to lock a player's controls"},"ents_methods:isWeldedTo":{"summary":"\nGets what the entity is welded to.","ret":"The first welded/parent entity","class":"function","private":false,"classlib":"Entity","fname":"isWeldedTo","realm":"sv","param":[],"name":"ents_methods:isWeldedTo","description":"\nGets what the entity is welded to. If the entity is parented, returns the parent."},"ents_methods:setInertia":{"summary":"\nSets the entity's inertia ","class":"function","private":false,"param":{"1":"vec","vec":"Inertia tensor"},"fname":"setInertia","realm":"sv","name":"ents_methods:setInertia","classlib":"Entity","description":"\nSets the entity's inertia"},"ents_methods:addAngleVelocity":{"summary":"\nApplys a angular velocity to an object ","class":"function","private":false,"param":{"1":"angvel","angvel":"The local angvel vector to apply"},"fname":"addAngleVelocity","realm":"sv","name":"ents_methods:addAngleVelocity","classlib":"Entity","description":"\nApplys a angular velocity to an object"},"ents_methods:enableSphere":{"summary":"\nSets the physics of an entity to be a sphere ","class":"function","private":false,"param":{"1":"enabled","enabled":"Bool should the entity be spherical?"},"fname":"enableSphere","realm":"sv","name":"ents_methods:enableSphere","classlib":"Entity","description":"\nSets the physics of an entity to be a sphere"},"ents_methods:ignite":{"summary":"\nIgnites an entity ","class":"function","private":false,"param":{"1":"length","2":"radius","radius":"(optional) How large the fire hitbox is (entity obb is the max)","length":"How long the fire lasts"},"fname":"ignite","realm":"sv","name":"ents_methods:ignite","classlib":"Entity","description":"\nIgnites an entity"},"ents_methods:setPhysMaterial":{"summary":"\nSets the physical material of the entity ","class":"function","private":false,"param":{"1":"mat","mat":"Material to use"},"fname":"setPhysMaterial","realm":"sv","name":"ents_methods:setPhysMaterial","classlib":"Entity","description":"\nSets the physical material of the entity"},"ents_methods:enableGravity":{"summary":"\nSets entity gravity ","class":"function","private":false,"param":{"1":"grav","grav":"Bool should the entity respect gravity?"},"fname":"enableGravity","realm":"sv","name":"ents_methods:enableGravity","classlib":"Entity","description":"\nSets entity gravity"},"ents_methods:isPlayerHolding":{"server":true,"ret":"Boolean if the entity is being held or not","class":"function","classlib":"Entity","private":false,"summary":"\nReturns true if the entity is being held by a player.","fname":"isPlayerHolding","realm":"sv","param":[],"name":"ents_methods:isPlayerHolding","description":"\nReturns true if the entity is being held by a player. Either by Physics gun, Gravity gun or Use-key."},"ents_methods:setNocollideAll":{"summary":"\nSet's the entity to collide with nothing but the world ","class":"function","private":false,"param":{"1":"nocollide","nocollide":"Whether to collide with nothing except world or not."},"fname":"setNocollideAll","realm":"sv","name":"ents_methods:setNocollideAll","classlib":"Entity","description":"\nSet's the entity to collide with nothing but the world"},"ents_methods:setPos":{"summary":"\nSets the entitiy's position.","class":"function","private":false,"param":{"1":"vec","vec":"New position"},"fname":"setPos","realm":"sv","name":"ents_methods:setPos","classlib":"Entity","description":"\nSets the entitiy's position. No interpolation will occur clientside, use physobj.setPos to have interpolation."},"ents_methods:getLinkedComponents":{"summary":"\nReturns a list of entities linked to a processor ","ret":"A list of components linked to the entity","class":"function","private":false,"classlib":"Entity","fname":"getLinkedComponents","realm":"sv","param":[],"name":"ents_methods:getLinkedComponents","description":"\nReturns a list of entities linked to a processor"},"ents_methods:removeCollisionListener":{"summary":"\nRemoves a collision listening hook from the entity so that a new one can be added ","class":"function","private":false,"param":[],"fname":"removeCollisionListener","realm":"sv","name":"ents_methods:removeCollisionListener","classlib":"Entity","description":"\nRemoves a collision listening hook from the entity so that a new one can be added"},"ents_methods:setDrawShadow":{"summary":"\nSets whether an entity's shadow should be drawn ","class":"function","private":false,"param":{"1":"draw","2":"ply","ply":"Optional player argument to set only for that player. Can also be table of players."},"fname":"setDrawShadow","realm":"sv","name":"ents_methods:setDrawShadow","classlib":"Entity","description":"\nSets whether an entity's shadow should be drawn"},"ents_methods:setFrozen":{"summary":"\nSets the entity frozen state ","class":"function","private":false,"param":{"1":"freeze","freeze":"Should the entity be frozen?"},"fname":"setFrozen","realm":"sv","name":"ents_methods:setFrozen","classlib":"Entity","description":"\nSets the entity frozen state"},"ents_methods:applyForceOffset":{"summary":"\nApplies linear force to the entity with an offset ","class":"function","private":false,"param":{"1":"vec","2":"offset","vec":"The force vector","offset":"An optional offset position"},"fname":"applyForceOffset","realm":"sv","name":"ents_methods:applyForceOffset","classlib":"Entity","description":"\nApplies linear force to the entity with an offset"},"ents_methods:setSolid":{"summary":"\nSets the entity to be Solid or not.","class":"function","private":false,"param":{"1":"solid","solid":"Boolean, Should the entity be solid?"},"fname":"setSolid","realm":"sv","name":"ents_methods:setSolid","classlib":"Entity","description":"\nSets the entity to be Solid or not. \nFor more information please refer to GLua function http://wiki.garrysmod.com/page/Entity/SetNotSolid"},"ents_methods:enableMotion":{"summary":"\nSets the entity movement state ","class":"function","private":false,"param":{"1":"move","move":"Bool should the entity move?"},"fname":"enableMotion","realm":"sv","name":"ents_methods:enableMotion","classlib":"Entity","description":"\nSets the entity movement state"},"ents_methods:applyAngForce":{"summary":"\nApplies angular force to the entity ","class":"function","private":false,"param":{"1":"ang","ang":"The force angle"},"fname":"applyAngForce","realm":"sv","name":"ents_methods:applyAngForce","classlib":"Entity","description":"\nApplies angular force to the entity"},"ents_methods:remove":{"summary":"\nRemoves an entity ","class":"function","private":false,"param":[],"fname":"remove","realm":"sv","name":"ents_methods:remove","classlib":"Entity","description":"\nRemoves an entity"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nServerside Entity functions \n ","param":[],"description":"\n \nServerside Entity functions \n"},{"methods":{"1":"setParent","2":"unparent","3":"linkComponent","4":"setComponentLocksControls","5":"getLinkedComponents","6":"applyDamage","7":"setCustomPropForces","8":"setAngleVelocity","9":"addAngleVelocity","10":"applyForceCenter","11":"applyForceOffset","12":"applyAngForce","13":"applyTorque","14":"addCollisionListener","15":"removeCollisionListener","16":"setNocollideAll","17":"setDrawShadow","18":"setPos","19":"setAngles","20":"setVelocity","21":"remove","22":"breakEnt","23":"ignite","24":"extinguish","25":"setFrozen","26":"isFrozen","27":"setSolid","28":"setMass","29":"setInertia","30":"setPhysMaterial","31":"getPhysMaterial","32":"isValidPhys","33":"isPlayerHolding","34":"enableGravity","35":"enableDrag","36":"enableMotion","37":"enableSphere","38":"isWeldedTo","39":"getAllConstrained","40":"setTrails","41":"removeTrails","42":"setUnbreakable","43":"testPVS","44":"getCreationID","removeCollisionListener":{"summary":"\nRemoves a collision listening hook from the entity so that a new one can be added ","class":"function","private":false,"param":[],"fname":"removeCollisionListener","realm":"sv","name":"ents_methods:removeCollisionListener","classlib":"Entity","description":"\nRemoves a collision listening hook from the entity so that a new one can be added"},"setVelocity":{"summary":"\nSets the entity's linear velocity ","class":"function","private":false,"param":{"1":"vel","vel":"New velocity"},"fname":"setVelocity","realm":"sv","name":"ents_methods:setVelocity","classlib":"Entity","description":"\nSets the entity's linear velocity"},"setNocollideAll":{"summary":"\nSet's the entity to collide with nothing but the world ","class":"function","private":false,"param":{"1":"nocollide","nocollide":"Whether to collide with nothing except world or not."},"fname":"setNocollideAll","realm":"sv","name":"ents_methods:setNocollideAll","classlib":"Entity","description":"\nSet's the entity to collide with nothing but the world"},"getPhysMaterial":{"summary":"\nGet the physical material of the entity ","ret":"the physical material","class":"function","private":false,"classlib":"Entity","fname":"getPhysMaterial","realm":"sv","param":[],"name":"ents_methods:getPhysMaterial","description":"\nGet the physical material of the entity"},"setParent":{"summary":"\nParents the entity to another entity ","class":"function","private":false,"param":{"1":"parent","2":"attachment","parent":"Entity to parent to. nil to unparent","attachment":"Optional string attachment name to parent to"},"fname":"setParent","realm":"sv","name":"ents_methods:setParent","classlib":"Entity","description":"\nParents the entity to another entity"},"setSolid":{"summary":"\nSets the entity to be Solid or not.","class":"function","private":false,"param":{"1":"solid","solid":"Boolean, Should the entity be solid?"},"fname":"setSolid","realm":"sv","name":"ents_methods:setSolid","classlib":"Entity","description":"\nSets the entity to be Solid or not. \nFor more information please refer to GLua function http://wiki.garrysmod.com/page/Entity/SetNotSolid"},"enableMotion":{"summary":"\nSets the entity movement state ","class":"function","private":false,"param":{"1":"move","move":"Bool should the entity move?"},"fname":"enableMotion","realm":"sv","name":"ents_methods:enableMotion","classlib":"Entity","description":"\nSets the entity movement state"},"getCreationID":{"summary":"\nReturns entity's creation ID (similar to entIndex, but increments monotonically) ","ret":"The creation ID","class":"function","private":false,"classlib":"Entity","fname":"getCreationID","realm":"sv","param":[],"name":"ents_methods:getCreationID","description":"\nReturns entity's creation ID (similar to entIndex, but increments monotonically)"},"setPos":{"summary":"\nSets the entitiy's position.","class":"function","private":false,"param":{"1":"vec","vec":"New position"},"fname":"setPos","realm":"sv","name":"ents_methods:setPos","classlib":"Entity","description":"\nSets the entitiy's position. No interpolation will occur clientside, use physobj.setPos to have interpolation."},"applyAngForce":{"summary":"\nApplies angular force to the entity ","class":"function","private":false,"param":{"1":"ang","ang":"The force angle"},"fname":"applyAngForce","realm":"sv","name":"ents_methods:applyAngForce","classlib":"Entity","description":"\nApplies angular force to the entity"},"breakEnt":{"summary":"\nInvokes the entity's breaking animation and removes it.","class":"function","private":false,"param":[],"fname":"breakEnt","realm":"sv","name":"ents_methods:breakEnt","classlib":"Entity","description":"\nInvokes the entity's breaking animation and removes it."},"isWeldedTo":{"summary":"\nGets what the entity is welded to.","ret":"The first welded/parent entity","class":"function","private":false,"classlib":"Entity","fname":"isWeldedTo","realm":"sv","param":[],"name":"ents_methods:isWeldedTo","description":"\nGets what the entity is welded to. If the entity is parented, returns the parent."},"addCollisionListener":{"summary":"\nAllows detecting collisions on an entity.","class":"function","private":false,"param":{"1":"func","func":"The callback function with argument, table collsiondata, http://wiki.garrysmod.com/page/Structures/CollisionData"},"fname":"addCollisionListener","realm":"sv","name":"ents_methods:addCollisionListener","classlib":"Entity","description":"\nAllows detecting collisions on an entity. You can only do this once for the entity's entire lifespan so use it wisely."},"unparent":{"summary":"\nUnparents the entity from another entity ","class":"function","private":false,"param":[],"fname":"unparent","realm":"sv","name":"ents_methods:unparent","classlib":"Entity","description":"\nUnparents the entity from another entity"},"getLinkedComponents":{"summary":"\nReturns a list of entities linked to a processor ","ret":"A list of components linked to the entity","class":"function","private":false,"classlib":"Entity","fname":"getLinkedComponents","realm":"sv","param":[],"name":"ents_methods:getLinkedComponents","description":"\nReturns a list of entities linked to a processor"},"applyDamage":{"summary":"\nApplies damage to an entity ","class":"function","private":false,"param":{"1":"amt","2":"attacker","3":"inflictor","inflictor":"damage inflictor","amt":"damage amount","attacker":"damage attacker"},"fname":"applyDamage","realm":"sv","name":"ents_methods:applyDamage","classlib":"Entity","description":"\nApplies damage to an entity"},"setPhysMaterial":{"summary":"\nSets the physical material of the entity ","class":"function","private":false,"param":{"1":"mat","mat":"Material to use"},"fname":"setPhysMaterial","realm":"sv","name":"ents_methods:setPhysMaterial","classlib":"Entity","description":"\nSets the physical material of the entity"},"enableGravity":{"summary":"\nSets entity gravity ","class":"function","private":false,"param":{"1":"grav","grav":"Bool should the entity respect gravity?"},"fname":"enableGravity","realm":"sv","name":"ents_methods:enableGravity","classlib":"Entity","description":"\nSets entity gravity"},"setComponentLocksControls":{"summary":"\nSets a component's ability to lock a player's controls ","class":"function","private":false,"param":{"1":"enable","enable":"Whether the component will lock the player's controls when used"},"fname":"setComponentLocksControls","realm":"sv","name":"ents_methods:setComponentLocksControls","classlib":"Entity","description":"\nSets a component's ability to lock a player's controls"},"setCustomPropForces":{"summary":"\nSets a custom prop's physics simulation forces.","class":"function","private":false,"param":{"1":"ang","2":"lin","3":"mode","ang":"Angular Force (Torque)","mode":"The physics mode to use. 0 = Off, 1 = Local acceleration, 2 = Local force, 3 = Global Acceleration, 4 = Global force","lin":"Linear Force"},"fname":"setCustomPropForces","realm":"sv","name":"ents_methods:setCustomPropForces","classlib":"Entity","description":"\nSets a custom prop's physics simulation forces. Thrusters and balloons use this."},"applyForceOffset":{"summary":"\nApplies linear force to the entity with an offset ","class":"function","private":false,"param":{"1":"vec","2":"offset","vec":"The force vector","offset":"An optional offset position"},"fname":"applyForceOffset","realm":"sv","name":"ents_methods:applyForceOffset","classlib":"Entity","description":"\nApplies linear force to the entity with an offset"},"ignite":{"summary":"\nIgnites an entity ","class":"function","private":false,"param":{"1":"length","2":"radius","radius":"(optional) How large the fire hitbox is (entity obb is the max)","length":"How long the fire lasts"},"fname":"ignite","realm":"sv","name":"ents_methods:ignite","classlib":"Entity","description":"\nIgnites an entity"},"linkComponent":{"summary":"\nLinks starfall components to a starfall processor or vehicle.","class":"function","private":false,"param":{"1":"e","e":"Entity to link the component to. nil to clear links."},"fname":"linkComponent","realm":"sv","name":"ents_methods:linkComponent","classlib":"Entity","description":"\nLinks starfall components to a starfall processor or vehicle. Screen can only connect to processor. HUD can connect to processor and vehicle."},"testPVS":{"summary":"\nCheck if the given Entity or Vector is within this entity's PVS (Potentially Visible Set).","ret":"bool True/False","class":"function","private":false,"classlib":"Entity","fname":"testPVS","realm":"sv","param":{"1":"other","other":"Entity or Vector to test"},"name":"ents_methods:testPVS","description":"\nCheck if the given Entity or Vector is within this entity's PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},"setUnbreakable":{"summary":"\nSets a prop_physics to be unbreakable ","class":"function","private":false,"param":{"1":"on","on":"Whether to make the prop unbreakable"},"fname":"setUnbreakable","realm":"sv","name":"ents_methods:setUnbreakable","classlib":"Entity","description":"\nSets a prop_physics to be unbreakable"},"applyForceCenter":{"summary":"\nApplies linear force to the entity ","class":"function","private":false,"param":{"1":"vec","vec":"The force vector"},"fname":"applyForceCenter","realm":"sv","name":"ents_methods:applyForceCenter","classlib":"Entity","description":"\nApplies linear force to the entity"},"removeTrails":{"summary":"\nRemoves trails from the entity ","class":"function","private":false,"param":[],"fname":"removeTrails","realm":"sv","name":"ents_methods:removeTrails","classlib":"Entity","description":"\nRemoves trails from the entity"},"setTrails":{"summary":"\nAdds a trail to the entity with the specified attributes.","class":"function","private":false,"param":{"1":"startSize","2":"endSize","3":"length","4":"material","5":"color","6":"attachmentID","7":"additive","attachmentID":"Optional attachmentid the trail should attach to","material":"The material of the trail","additive":"If the trail's rendering is additive","color":"The color of the trail","length":"The length size of the trail","startSize":"The start size of the trail","endSize":"The end size of the trail"},"fname":"setTrails","realm":"sv","name":"ents_methods:setTrails","classlib":"Entity","description":"\nAdds a trail to the entity with the specified attributes."},"getAllConstrained":{"summary":"\nGets a table of all constrained entities to each other ","class":"function","private":false,"param":{"1":"filter","filter":"Optional constraint type filter table where keys are the type name and values are 'true'. \"Wire\" and \"Parent\" are used for wires and parents."},"fname":"getAllConstrained","realm":"sv","name":"ents_methods:getAllConstrained","classlib":"Entity","description":"\nGets a table of all constrained entities to each other"},"setInertia":{"summary":"\nSets the entity's inertia ","class":"function","private":false,"param":{"1":"vec","vec":"Inertia tensor"},"fname":"setInertia","realm":"sv","name":"ents_methods:setInertia","classlib":"Entity","description":"\nSets the entity's inertia"},"setAngles":{"summary":"\nSets the entity's angles ","class":"function","private":false,"param":{"1":"ang","ang":"New angles"},"fname":"setAngles","realm":"sv","name":"ents_methods:setAngles","classlib":"Entity","description":"\nSets the entity's angles"},"isValidPhys":{"summary":"\nChecks whether entity has physics ","ret":"True if entity has physics","class":"function","private":false,"classlib":"Entity","fname":"isValidPhys","realm":"sv","param":[],"name":"ents_methods:isValidPhys","description":"\nChecks whether entity has physics"},"enableSphere":{"summary":"\nSets the physics of an entity to be a sphere ","class":"function","private":false,"param":{"1":"enabled","enabled":"Bool should the entity be spherical?"},"fname":"enableSphere","realm":"sv","name":"ents_methods:enableSphere","classlib":"Entity","description":"\nSets the physics of an entity to be a sphere"},"isFrozen":{"summary":"\nChecks the entities frozen state ","ret":"True if entity is frozen","class":"function","private":false,"classlib":"Entity","fname":"isFrozen","realm":"sv","param":[],"name":"ents_methods:isFrozen","description":"\nChecks the entities frozen state"},"isPlayerHolding":{"server":true,"ret":"Boolean if the entity is being held or not","class":"function","classlib":"Entity","private":false,"summary":"\nReturns true if the entity is being held by a player.","fname":"isPlayerHolding","realm":"sv","param":[],"name":"ents_methods:isPlayerHolding","description":"\nReturns true if the entity is being held by a player. Either by Physics gun, Gravity gun or Use-key."},"setMass":{"summary":"\nSets the entity's mass ","class":"function","private":false,"param":{"1":"mass","mass":"number mass"},"fname":"setMass","realm":"sv","name":"ents_methods:setMass","classlib":"Entity","description":"\nSets the entity's mass"},"extinguish":{"summary":"\nExtinguishes an entity ","class":"function","private":false,"param":[],"fname":"extinguish","realm":"sv","name":"ents_methods:extinguish","classlib":"Entity","description":"\nExtinguishes an entity"},"setFrozen":{"summary":"\nSets the entity frozen state ","class":"function","private":false,"param":{"1":"freeze","freeze":"Should the entity be frozen?"},"fname":"setFrozen","realm":"sv","name":"ents_methods:setFrozen","classlib":"Entity","description":"\nSets the entity frozen state"},"remove":{"summary":"\nRemoves an entity ","class":"function","private":false,"param":[],"fname":"remove","realm":"sv","name":"ents_methods:remove","classlib":"Entity","description":"\nRemoves an entity"},"enableDrag":{"summary":"\nSets the entity drag state ","class":"function","private":false,"param":{"1":"drag","drag":"Bool should the entity have air resistence?"},"fname":"enableDrag","realm":"sv","name":"ents_methods:enableDrag","classlib":"Entity","description":"\nSets the entity drag state"},"setDrawShadow":{"summary":"\nSets whether an entity's shadow should be drawn ","class":"function","private":false,"param":{"1":"draw","2":"ply","ply":"Optional player argument to set only for that player. Can also be table of players."},"fname":"setDrawShadow","realm":"sv","name":"ents_methods:setDrawShadow","classlib":"Entity","description":"\nSets whether an entity's shadow should be drawn"},"applyTorque":{"summary":"\nApplies torque ","class":"function","private":false,"param":{"1":"torque","torque":"The torque vector"},"fname":"applyTorque","realm":"sv","name":"ents_methods:applyTorque","classlib":"Entity","description":"\nApplies torque"},"setAngleVelocity":{"summary":"\nSet the angular velocity of an object ","class":"function","private":false,"param":{"1":"angvel","angvel":"The local angvel vector to set"},"fname":"setAngleVelocity","realm":"sv","name":"ents_methods:setAngleVelocity","classlib":"Entity","description":"\nSet the angular velocity of an object"},"addAngleVelocity":{"summary":"\nApplys a angular velocity to an object ","class":"function","private":false,"param":{"1":"angvel","angvel":"The local angvel vector to apply"},"fname":"addAngleVelocity","realm":"sv","name":"ents_methods:addAngleVelocity","classlib":"Entity","description":"\nApplys a angular velocity to an object"}},"class":"class","client":true,"summary":"\nEntity type ","fields":[],"server":true,"typtbl":"ents_methods","name":"Entity","description":"\nEntity type"},{"summary":"\nParents the entity to another entity ","class":"function","private":false,"param":{"1":"parent","2":"attachment","parent":"Entity to parent to. nil to unparent","attachment":"Optional string attachment name to parent to"},"fname":"setParent","realm":"sv","name":"ents_methods:setParent","classlib":"Entity","description":"\nParents the entity to another entity"},{"summary":"\nUnparents the entity from another entity ","class":"function","private":false,"param":[],"fname":"unparent","realm":"sv","name":"ents_methods:unparent","classlib":"Entity","description":"\nUnparents the entity from another entity"},{"summary":"\nLinks starfall components to a starfall processor or vehicle.","class":"function","private":false,"param":{"1":"e","e":"Entity to link the component to. nil to clear links."},"fname":"linkComponent","realm":"sv","name":"ents_methods:linkComponent","classlib":"Entity","description":"\nLinks starfall components to a starfall processor or vehicle. Screen can only connect to processor. HUD can connect to processor and vehicle."},{"summary":"\nSets a component's ability to lock a player's controls ","class":"function","private":false,"param":{"1":"enable","enable":"Whether the component will lock the player's controls when used"},"fname":"setComponentLocksControls","realm":"sv","name":"ents_methods:setComponentLocksControls","classlib":"Entity","description":"\nSets a component's ability to lock a player's controls"},{"summary":"\nReturns a list of entities linked to a processor ","ret":"A list of components linked to the entity","class":"function","private":false,"classlib":"Entity","fname":"getLinkedComponents","realm":"sv","param":[],"name":"ents_methods:getLinkedComponents","description":"\nReturns a list of entities linked to a processor"},{"summary":"\nApplies damage to an entity ","class":"function","private":false,"param":{"1":"amt","2":"attacker","3":"inflictor","inflictor":"damage inflictor","amt":"damage amount","attacker":"damage attacker"},"fname":"applyDamage","realm":"sv","name":"ents_methods:applyDamage","classlib":"Entity","description":"\nApplies damage to an entity"},{"summary":"\nSets a custom prop's physics simulation forces.","class":"function","private":false,"param":{"1":"ang","2":"lin","3":"mode","ang":"Angular Force (Torque)","mode":"The physics mode to use. 0 = Off, 1 = Local acceleration, 2 = Local force, 3 = Global Acceleration, 4 = Global force","lin":"Linear Force"},"fname":"setCustomPropForces","realm":"sv","name":"ents_methods:setCustomPropForces","classlib":"Entity","description":"\nSets a custom prop's physics simulation forces. Thrusters and balloons use this."},{"summary":"\nSet the angular velocity of an object ","class":"function","private":false,"param":{"1":"angvel","angvel":"The local angvel vector to set"},"fname":"setAngleVelocity","realm":"sv","name":"ents_methods:setAngleVelocity","classlib":"Entity","description":"\nSet the angular velocity of an object"},{"summary":"\nApplys a angular velocity to an object ","class":"function","private":false,"param":{"1":"angvel","angvel":"The local angvel vector to apply"},"fname":"addAngleVelocity","realm":"sv","name":"ents_methods:addAngleVelocity","classlib":"Entity","description":"\nApplys a angular velocity to an object"},{"summary":"\nApplies linear force to the entity ","class":"function","private":false,"param":{"1":"vec","vec":"The force vector"},"fname":"applyForceCenter","realm":"sv","name":"ents_methods:applyForceCenter","classlib":"Entity","description":"\nApplies linear force to the entity"},{"summary":"\nApplies linear force to the entity with an offset ","class":"function","private":false,"param":{"1":"vec","2":"offset","vec":"The force vector","offset":"An optional offset position"},"fname":"applyForceOffset","realm":"sv","name":"ents_methods:applyForceOffset","classlib":"Entity","description":"\nApplies linear force to the entity with an offset"},{"summary":"\nApplies angular force to the entity ","class":"function","private":false,"param":{"1":"ang","ang":"The force angle"},"fname":"applyAngForce","realm":"sv","name":"ents_methods:applyAngForce","classlib":"Entity","description":"\nApplies angular force to the entity"},{"summary":"\nApplies torque ","class":"function","private":false,"param":{"1":"torque","torque":"The torque vector"},"fname":"applyTorque","realm":"sv","name":"ents_methods:applyTorque","classlib":"Entity","description":"\nApplies torque"},{"summary":"\nAllows detecting collisions on an entity.","class":"function","private":false,"param":{"1":"func","func":"The callback function with argument, table collsiondata, http://wiki.garrysmod.com/page/Structures/CollisionData"},"fname":"addCollisionListener","realm":"sv","name":"ents_methods:addCollisionListener","classlib":"Entity","description":"\nAllows detecting collisions on an entity. You can only do this once for the entity's entire lifespan so use it wisely."},{"summary":"\nRemoves a collision listening hook from the entity so that a new one can be added ","class":"function","private":false,"param":[],"fname":"removeCollisionListener","realm":"sv","name":"ents_methods:removeCollisionListener","classlib":"Entity","description":"\nRemoves a collision listening hook from the entity so that a new one can be added"},{"summary":"\nSet's the entity to collide with nothing but the world ","class":"function","private":false,"param":{"1":"nocollide","nocollide":"Whether to collide with nothing except world or not."},"fname":"setNocollideAll","realm":"sv","name":"ents_methods:setNocollideAll","classlib":"Entity","description":"\nSet's the entity to collide with nothing but the world"},{"summary":"\nSets whether an entity's shadow should be drawn ","class":"function","private":false,"param":{"1":"draw","2":"ply","ply":"Optional player argument to set only for that player. Can also be table of players."},"fname":"setDrawShadow","realm":"sv","name":"ents_methods:setDrawShadow","classlib":"Entity","description":"\nSets whether an entity's shadow should be drawn"},{"summary":"\nSets the entitiy's position.","class":"function","private":false,"param":{"1":"vec","vec":"New position"},"fname":"setPos","realm":"sv","name":"ents_methods:setPos","classlib":"Entity","description":"\nSets the entitiy's position. No interpolation will occur clientside, use physobj.setPos to have interpolation."},{"summary":"\nSets the entity's angles ","class":"function","private":false,"param":{"1":"ang","ang":"New angles"},"fname":"setAngles","realm":"sv","name":"ents_methods:setAngles","classlib":"Entity","description":"\nSets the entity's angles"},{"summary":"\nSets the entity's linear velocity ","class":"function","private":false,"param":{"1":"vel","vel":"New velocity"},"fname":"setVelocity","realm":"sv","name":"ents_methods:setVelocity","classlib":"Entity","description":"\nSets the entity's linear velocity"},{"summary":"\nRemoves an entity ","class":"function","private":false,"param":[],"fname":"remove","realm":"sv","name":"ents_methods:remove","classlib":"Entity","description":"\nRemoves an entity"},{"summary":"\nInvokes the entity's breaking animation and removes it.","class":"function","private":false,"param":[],"fname":"breakEnt","realm":"sv","name":"ents_methods:breakEnt","classlib":"Entity","description":"\nInvokes the entity's breaking animation and removes it."},{"summary":"\nIgnites an entity ","class":"function","private":false,"param":{"1":"length","2":"radius","radius":"(optional) How large the fire hitbox is (entity obb is the max)","length":"How long the fire lasts"},"fname":"ignite","realm":"sv","name":"ents_methods:ignite","classlib":"Entity","description":"\nIgnites an entity"},{"summary":"\nExtinguishes an entity ","class":"function","private":false,"param":[],"fname":"extinguish","realm":"sv","name":"ents_methods:extinguish","classlib":"Entity","description":"\nExtinguishes an entity"},{"summary":"\nSets the entity frozen state ","class":"function","private":false,"param":{"1":"freeze","freeze":"Should the entity be frozen?"},"fname":"setFrozen","realm":"sv","name":"ents_methods:setFrozen","classlib":"Entity","description":"\nSets the entity frozen state"},{"summary":"\nChecks the entities frozen state ","ret":"True if entity is frozen","class":"function","private":false,"classlib":"Entity","fname":"isFrozen","realm":"sv","param":[],"name":"ents_methods:isFrozen","description":"\nChecks the entities frozen state"},{"summary":"\nSets the entity to be Solid or not.","class":"function","private":false,"param":{"1":"solid","solid":"Boolean, Should the entity be solid?"},"fname":"setSolid","realm":"sv","name":"ents_methods:setSolid","classlib":"Entity","description":"\nSets the entity to be Solid or not. \nFor more information please refer to GLua function http://wiki.garrysmod.com/page/Entity/SetNotSolid"},{"summary":"\nSets the entity's mass ","class":"function","private":false,"param":{"1":"mass","mass":"number mass"},"fname":"setMass","realm":"sv","name":"ents_methods:setMass","classlib":"Entity","description":"\nSets the entity's mass"},{"summary":"\nSets the entity's inertia ","class":"function","private":false,"param":{"1":"vec","vec":"Inertia tensor"},"fname":"setInertia","realm":"sv","name":"ents_methods:setInertia","classlib":"Entity","description":"\nSets the entity's inertia"},{"summary":"\nSets the physical material of the entity ","class":"function","private":false,"param":{"1":"mat","mat":"Material to use"},"fname":"setPhysMaterial","realm":"sv","name":"ents_methods:setPhysMaterial","classlib":"Entity","description":"\nSets the physical material of the entity"},{"summary":"\nGet the physical material of the entity ","ret":"the physical material","class":"function","private":false,"classlib":"Entity","fname":"getPhysMaterial","realm":"sv","param":[],"name":"ents_methods:getPhysMaterial","description":"\nGet the physical material of the entity"},{"summary":"\nChecks whether entity has physics ","ret":"True if entity has physics","class":"function","private":false,"classlib":"Entity","fname":"isValidPhys","realm":"sv","param":[],"name":"ents_methods:isValidPhys","description":"\nChecks whether entity has physics"},{"server":true,"ret":"Boolean if the entity is being held or not","class":"function","classlib":"Entity","private":false,"summary":"\nReturns true if the entity is being held by a player.","fname":"isPlayerHolding","realm":"sv","param":[],"name":"ents_methods:isPlayerHolding","description":"\nReturns true if the entity is being held by a player. Either by Physics gun, Gravity gun or Use-key."},{"summary":"\nSets entity gravity ","class":"function","private":false,"param":{"1":"grav","grav":"Bool should the entity respect gravity?"},"fname":"enableGravity","realm":"sv","name":"ents_methods:enableGravity","classlib":"Entity","description":"\nSets entity gravity"},{"summary":"\nSets the entity drag state ","class":"function","private":false,"param":{"1":"drag","drag":"Bool should the entity have air resistence?"},"fname":"enableDrag","realm":"sv","name":"ents_methods:enableDrag","classlib":"Entity","description":"\nSets the entity drag state"},{"summary":"\nSets the entity movement state ","class":"function","private":false,"param":{"1":"move","move":"Bool should the entity move?"},"fname":"enableMotion","realm":"sv","name":"ents_methods:enableMotion","classlib":"Entity","description":"\nSets the entity movement state"},{"summary":"\nSets the physics of an entity to be a sphere ","class":"function","private":false,"param":{"1":"enabled","enabled":"Bool should the entity be spherical?"},"fname":"enableSphere","realm":"sv","name":"ents_methods:enableSphere","classlib":"Entity","description":"\nSets the physics of an entity to be a sphere"},{"summary":"\nGets what the entity is welded to.","ret":"The first welded/parent entity","class":"function","private":false,"classlib":"Entity","fname":"isWeldedTo","realm":"sv","param":[],"name":"ents_methods:isWeldedTo","description":"\nGets what the entity is welded to. If the entity is parented, returns the parent."},{"summary":"\nGets a table of all constrained entities to each other ","class":"function","private":false,"param":{"1":"filter","filter":"Optional constraint type filter table where keys are the type name and values are 'true'. \"Wire\" and \"Parent\" are used for wires and parents."},"fname":"getAllConstrained","realm":"sv","name":"ents_methods:getAllConstrained","classlib":"Entity","description":"\nGets a table of all constrained entities to each other"},{"summary":"\nAdds a trail to the entity with the specified attributes.","class":"function","private":false,"param":{"1":"startSize","2":"endSize","3":"length","4":"material","5":"color","6":"attachmentID","7":"additive","attachmentID":"Optional attachmentid the trail should attach to","material":"The material of the trail","additive":"If the trail's rendering is additive","color":"The color of the trail","length":"The length size of the trail","startSize":"The start size of the trail","endSize":"The end size of the trail"},"fname":"setTrails","realm":"sv","name":"ents_methods:setTrails","classlib":"Entity","description":"\nAdds a trail to the entity with the specified attributes."},{"summary":"\nRemoves trails from the entity ","class":"function","private":false,"param":[],"fname":"removeTrails","realm":"sv","name":"ents_methods:removeTrails","classlib":"Entity","description":"\nRemoves trails from the entity"},{"summary":"\nSets a prop_physics to be unbreakable ","class":"function","private":false,"param":{"1":"on","on":"Whether to make the prop unbreakable"},"fname":"setUnbreakable","realm":"sv","name":"ents_methods:setUnbreakable","classlib":"Entity","description":"\nSets a prop_physics to be unbreakable"},{"summary":"\nCheck if the given Entity or Vector is within this entity's PVS (Potentially Visible Set).","ret":"bool True/False","class":"function","private":false,"classlib":"Entity","fname":"testPVS","realm":"sv","param":{"1":"other","other":"Entity or Vector to test"},"name":"ents_methods:testPVS","description":"\nCheck if the given Entity or Vector is within this entity's PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},{"summary":"\nReturns entity's creation ID (similar to entIndex, but increments monotonically) ","ret":"The creation ID","class":"function","private":false,"classlib":"Entity","fname":"getCreationID","realm":"sv","param":[],"name":"ents_methods:getCreationID","description":"\nReturns entity's creation ID (similar to entIndex, but increments monotonically)"}],"name":"libs_sv/entities.lua","description":"\n \nServerside Entity functions \n"},"libs_sh/input.lua":{"summary":"\nInput library.","tables":{"1":"SF.DefaultEnvironment.KEY","2":"SF.DefaultEnvironment.MOUSE","SF.DefaultEnvironment.KEY":{"summary":"\nENUMs of keyboard keys for use with input library: \nFIRST, \nNONE, \n0, \n1, \n2, \n3, \n4, \n5, \n6, \n7, \n8, \n9, \nA, \nB, \nC, \nD, \nE, \nF, \nG, \nH, \nI, \nJ, \nK, \nL, \nM, \nN, \nO, \nP, \nQ, \nR, \nS, \nT, \nU, \nV, \nW, \nX, \nY, \nZ, \nKP_INS, \nPAD_0, \nKP_END, \nPAD_1, \nKP_DOWNARROW , \nPAD_2, \nKP_PGDN, \nPAD_3, \nKP_LEFTARROW, \nPAD_4, \nKP_5 , \nPAD_5, \nKP_RIGHTARROW, \nPAD_6, \nKP_HOME, \nPAD_7, \nKP_UPARROW, \nPAD_8, \nKP_PGUP, \nPAD_9, \nPAD_DIVIDE, \nKP_SLASH, \nKP_MULTIPLY, \nPAD_MULTIPLY, \nKP_MINUS, \nPAD_MINUS, \nKP_PLUS, \nPAD_PLUS, \nKP_ENTER, \nPAD_ENTER, \nKP_DEL, \nPAD_DECIMAL, \nLBRACKET, \nRBRACKET, \nSEMICOLON, \nAPOSTROPHE, \nBACKQUOTE, \nCOMMA, \nPERIOD, \nSLASH, \nBACKSLASH, \nMINUS, \nEQUAL, \nENTER, \nSPACE, \nBACKSPACE, \nTAB, \nCAPSLOCK, \nNUMLOCK, \nESCAPE, \nSCROLLLOCK, \nINS, \nINSERT, \nDEL, \nDELETE, \nHOME, \nEND, \nPGUP, \nPAGEUP, \nPGDN, \nPAGEDOWN, \nPAUSE, \nBREAK, \nSHIFT, \nLSHIFT, \nRSHIFT, \nALT, \nLALT, \nRALT, \nCTRL, \nLCONTROL, \nRCTRL, \nRCONTROL, \nLWIN, \nRWIN, \nAPP, \nUPARROW, \nUP, \nLEFTARROW, \nLEFT, \nDOWNARROW, \nDOWN, \nRIGHTARROW, \nRIGHT, \nF1, \nF2, \nF3, \nF4, \nF5, \nF6, \nF7, \nF8, \nF9, \nF10, \nF11, \nF12, \nCAPSLOCKTOGGLE, \nNUMLOCKTOGGLE, \nSCROLLLOCKTOGGLE, \nLAST, \nCOUNT ","classForced":true,"class":"table","param":[],"name":"SF.DefaultEnvironment.KEY","description":"\nENUMs of keyboard keys for use with input library: \nFIRST, \nNONE, \n0, \n1, \n2, \n3, \n4, \n5, \n6, \n7, \n8, \n9, \nA, \nB, \nC, \nD, \nE, \nF, \nG, \nH, \nI, \nJ, \nK, \nL, \nM, \nN, \nO, \nP, \nQ, \nR, \nS, \nT, \nU, \nV, \nW, \nX, \nY, \nZ, \nKP_INS, \nPAD_0, \nKP_END, \nPAD_1, \nKP_DOWNARROW , \nPAD_2, \nKP_PGDN, \nPAD_3, \nKP_LEFTARROW, \nPAD_4, \nKP_5 , \nPAD_5, \nKP_RIGHTARROW, \nPAD_6, \nKP_HOME, \nPAD_7, \nKP_UPARROW, \nPAD_8, \nKP_PGUP, \nPAD_9, \nPAD_DIVIDE, \nKP_SLASH, \nKP_MULTIPLY, \nPAD_MULTIPLY, \nKP_MINUS, \nPAD_MINUS, \nKP_PLUS, \nPAD_PLUS, \nKP_ENTER, \nPAD_ENTER, \nKP_DEL, \nPAD_DECIMAL, \nLBRACKET, \nRBRACKET, \nSEMICOLON, \nAPOSTROPHE, \nBACKQUOTE, \nCOMMA, \nPERIOD, \nSLASH, \nBACKSLASH, \nMINUS, \nEQUAL, \nENTER, \nSPACE, \nBACKSPACE, \nTAB, \nCAPSLOCK, \nNUMLOCK, \nESCAPE, \nSCROLLLOCK, \nINS, \nINSERT, \nDEL, \nDELETE, \nHOME, \nEND, \nPGUP, \nPAGEUP, \nPGDN, \nPAGEDOWN, \nPAUSE, \nBREAK, \nSHIFT, \nLSHIFT, \nRSHIFT, \nALT, \nLALT, \nRALT, \nCTRL, \nLCONTROL, \nRCTRL, \nRCONTROL, \nLWIN, \nRWIN, \nAPP, \nUPARROW, \nUP, \nLEFTARROW, \nLEFT, \nDOWNARROW, \nDOWN, \nRIGHTARROW, \nRIGHT, \nF1, \nF2, \nF3, \nF4, \nF5, \nF6, \nF7, \nF8, \nF9, \nF10, \nF11, \nF12, \nCAPSLOCKTOGGLE, \nNUMLOCKTOGGLE, \nSCROLLLOCKTOGGLE, \nLAST, \nCOUNT"},"SF.DefaultEnvironment.MOUSE":{"summary":"\nENUMs of mouse buttons for use with input library: \nMOUSE1, \nLEFT, \nMOUSE2, \nRIGHT, \nMOUSE3, \nMIDDLE, \nMOUSE4, \n4, \nMOUSE5, \n5, \nMWHEELUP, \nWHEEL_UP, \nMWHEELDOWN, \nWHEEL_DOWN, \nCOUNT, \nFIRST, \nLAST ","classForced":true,"class":"table","param":[],"name":"SF.DefaultEnvironment.MOUSE","description":"\nENUMs of mouse buttons for use with input library: \nMOUSE1, \nLEFT, \nMOUSE2, \nRIGHT, \nMOUSE3, \nMIDDLE, \nMOUSE4, \n4, \nMOUSE5, \n5, \nMWHEELUP, \nWHEEL_UP, \nMWHEELDOWN, \nWHEEL_DOWN, \nCOUNT, \nFIRST, \nLAST"}},"functions":{"1":"input_methods.canLockControls","2":"input_methods.enableCursor","3":"input_methods.getCursorPos","4":"input_methods.getCursorVisible","5":"input_methods.getKeyName","6":"input_methods.isControlDown","7":"input_methods.isControlLocked","8":"input_methods.isKeyDown","9":"input_methods.isShiftDown","10":"input_methods.lockControls","11":"input_methods.lookupBinding","12":"input_methods.screenToVector","13":"input_methods.selectWeapon","input_methods.lookupBinding":{"summary":"\nGets the first key that is bound to the command passed ","ret":["The id of the first key bound","The name of the first key bound"],"class":"function","client":true,"private":false,"library":"input","fname":"lookupBinding","realm":"cl","param":{"1":"binding","binding":"The name of the bind"},"name":"input_methods.lookupBinding","description":"\nGets the first key that is bound to the command passed"},"input_methods.isKeyDown":{"summary":"\nGets whether a key is down ","ret":"True if the key is down","class":"function","client":true,"private":false,"library":"input","fname":"isKeyDown","realm":"cl","param":{"1":"key","key":"The key id, see input"},"name":"input_methods.isKeyDown","description":"\nGets whether a key is down"},"input_methods.canLockControls":{"summary":"\nGets whether the player's control can be locked ","ret":"Whether the player's control can be locked","class":"function","client":true,"private":false,"library":"input","fname":"canLockControls","realm":"cl","param":[],"name":"input_methods.canLockControls","description":"\nGets whether the player's control can be locked"},"input_methods.lockControls":{"summary":"\nLocks game controls for typing purposes.","class":"function","client":true,"private":false,"library":"input","fname":"lockControls","realm":"cl","param":{"1":"enabled","enabled":"Whether to lock or unlock the controls"},"name":"input_methods.lockControls","description":"\nLocks game controls for typing purposes. Alt will unlock the controls. Has a 10 second cooldown."},"input_methods.getCursorVisible":{"summary":"\nGets whether the cursor is visible on the screen ","ret":"The cursor's visibility","class":"function","client":true,"private":false,"library":"input","fname":"getCursorVisible","realm":"cl","param":[],"name":"input_methods.getCursorVisible","description":"\nGets whether the cursor is visible on the screen"},"input_methods.isControlLocked":{"summary":"\nGets whether the player's control is currenty locked ","ret":"Whether the player's control is locked","class":"function","client":true,"private":false,"library":"input","fname":"isControlLocked","realm":"cl","param":[],"name":"input_methods.isControlLocked","description":"\nGets whether the player's control is currenty locked"},"input_methods.selectWeapon":{"summary":"\nMakes the local player select a weapon ","class":"function","client":true,"private":false,"library":"input","fname":"selectWeapon","realm":"cl","param":{"1":"weapon","weapon":"The weapon entity to select"},"name":"input_methods.selectWeapon","description":"\nMakes the local player select a weapon"},"input_methods.enableCursor":{"summary":"\nSets the state of the mouse cursor ","class":"function","client":true,"private":false,"library":"input","fname":"enableCursor","realm":"cl","param":{"1":"enabled","enabled":"Whether or not the cursor should be enabled"},"name":"input_methods.enableCursor","description":"\nSets the state of the mouse cursor"},"input_methods.screenToVector":{"summary":"\nTranslates position on player's screen to aim vector ","ret":"Aim vector","class":"function","client":true,"private":false,"library":"input","fname":"screenToVector","realm":"cl","param":{"1":"x","2":"y","y":"Y coordinate on the screen","x":"X coordinate on the screen"},"name":"input_methods.screenToVector","description":"\nTranslates position on player's screen to aim vector"},"input_methods.isControlDown":{"summary":"\nGets whether the control key is down ","ret":"True if the control key is down","class":"function","client":true,"private":false,"library":"input","fname":"isControlDown","realm":"cl","param":[],"name":"input_methods.isControlDown","description":"\nGets whether the control key is down"},"input_methods.getKeyName":{"summary":"\nGets the name of a key from the id ","ret":"The name of the key","class":"function","client":true,"private":false,"library":"input","fname":"getKeyName","realm":"cl","param":{"1":"key","key":"The key id, see input"},"name":"input_methods.getKeyName","description":"\nGets the name of a key from the id"},"input_methods.getCursorPos":{"summary":"\nGets the position of the mouse ","ret":["The x position of the mouse","The y position of the mouse"],"class":"function","client":true,"private":false,"library":"input","fname":"getCursorPos","realm":"cl","param":[],"name":"input_methods.getCursorPos","description":"\nGets the position of the mouse"},"input_methods.isShiftDown":{"summary":"\nGets whether the shift key is down ","ret":"True if the shift key is down","class":"function","client":true,"private":false,"library":"input","fname":"isShiftDown","realm":"cl","param":[],"name":"input_methods.isShiftDown","description":"\nGets whether the shift key is down"}},"libraries":{"1":"input","input":{"summary":"\nInput library.","tables":[],"client":true,"libtbl":"input_methods","fields":[],"class":"library","functions":{"1":"canLockControls","2":"enableCursor","3":"getCursorPos","4":"getCursorVisible","5":"getKeyName","6":"isControlDown","7":"isControlLocked","8":"isKeyDown","9":"isShiftDown","10":"lockControls","11":"lookupBinding","12":"screenToVector","13":"selectWeapon","isControlLocked":{"summary":"\nGets whether the player's control is currenty locked ","ret":"Whether the player's control is locked","class":"function","client":true,"private":false,"library":"input","fname":"isControlLocked","realm":"cl","param":[],"name":"input_methods.isControlLocked","description":"\nGets whether the player's control is currenty locked"},"isKeyDown":{"summary":"\nGets whether a key is down ","ret":"True if the key is down","class":"function","client":true,"private":false,"library":"input","fname":"isKeyDown","realm":"cl","param":{"1":"key","key":"The key id, see input"},"name":"input_methods.isKeyDown","description":"\nGets whether a key is down"},"enableCursor":{"summary":"\nSets the state of the mouse cursor ","class":"function","client":true,"private":false,"library":"input","fname":"enableCursor","realm":"cl","param":{"1":"enabled","enabled":"Whether or not the cursor should be enabled"},"name":"input_methods.enableCursor","description":"\nSets the state of the mouse cursor"},"lockControls":{"summary":"\nLocks game controls for typing purposes.","class":"function","client":true,"private":false,"library":"input","fname":"lockControls","realm":"cl","param":{"1":"enabled","enabled":"Whether to lock or unlock the controls"},"name":"input_methods.lockControls","description":"\nLocks game controls for typing purposes. Alt will unlock the controls. Has a 10 second cooldown."},"screenToVector":{"summary":"\nTranslates position on player's screen to aim vector ","ret":"Aim vector","class":"function","client":true,"private":false,"library":"input","fname":"screenToVector","realm":"cl","param":{"1":"x","2":"y","y":"Y coordinate on the screen","x":"X coordinate on the screen"},"name":"input_methods.screenToVector","description":"\nTranslates position on player's screen to aim vector"},"getKeyName":{"summary":"\nGets the name of a key from the id ","ret":"The name of the key","class":"function","client":true,"private":false,"library":"input","fname":"getKeyName","realm":"cl","param":{"1":"key","key":"The key id, see input"},"name":"input_methods.getKeyName","description":"\nGets the name of a key from the id"},"isShiftDown":{"summary":"\nGets whether the shift key is down ","ret":"True if the shift key is down","class":"function","client":true,"private":false,"library":"input","fname":"isShiftDown","realm":"cl","param":[],"name":"input_methods.isShiftDown","description":"\nGets whether the shift key is down"},"getCursorPos":{"summary":"\nGets the position of the mouse ","ret":["The x position of the mouse","The y position of the mouse"],"class":"function","client":true,"private":false,"library":"input","fname":"getCursorPos","realm":"cl","param":[],"name":"input_methods.getCursorPos","description":"\nGets the position of the mouse"},"canLockControls":{"summary":"\nGets whether the player's control can be locked ","ret":"Whether the player's control can be locked","class":"function","client":true,"private":false,"library":"input","fname":"canLockControls","realm":"cl","param":[],"name":"input_methods.canLockControls","description":"\nGets whether the player's control can be locked"},"getCursorVisible":{"summary":"\nGets whether the cursor is visible on the screen ","ret":"The cursor's visibility","class":"function","client":true,"private":false,"library":"input","fname":"getCursorVisible","realm":"cl","param":[],"name":"input_methods.getCursorVisible","description":"\nGets whether the cursor is visible on the screen"},"selectWeapon":{"summary":"\nMakes the local player select a weapon ","class":"function","client":true,"private":false,"library":"input","fname":"selectWeapon","realm":"cl","param":{"1":"weapon","weapon":"The weapon entity to select"},"name":"input_methods.selectWeapon","description":"\nMakes the local player select a weapon"},"isControlDown":{"summary":"\nGets whether the control key is down ","ret":"True if the control key is down","class":"function","client":true,"private":false,"library":"input","fname":"isControlDown","realm":"cl","param":[],"name":"input_methods.isControlDown","description":"\nGets whether the control key is down"},"lookupBinding":{"summary":"\nGets the first key that is bound to the command passed ","ret":["The id of the first key bound","The name of the first key bound"],"class":"function","client":true,"private":false,"library":"input","fname":"lookupBinding","realm":"cl","param":{"1":"binding","binding":"The name of the bind"},"name":"input_methods.lookupBinding","description":"\nGets the first key that is bound to the command passed"}},"name":"input","description":"\nInput library."}},"type":"file","doc":[{"summary":"\nInput library.","tables":[],"client":true,"libtbl":"input_methods","fields":[],"class":"library","functions":{"1":"canLockControls","2":"enableCursor","3":"getCursorPos","4":"getCursorVisible","5":"getKeyName","6":"isControlDown","7":"isControlLocked","8":"isKeyDown","9":"isShiftDown","10":"lockControls","11":"lookupBinding","12":"screenToVector","13":"selectWeapon","isControlLocked":{"summary":"\nGets whether the player's control is currenty locked ","ret":"Whether the player's control is locked","class":"function","client":true,"private":false,"library":"input","fname":"isControlLocked","realm":"cl","param":[],"name":"input_methods.isControlLocked","description":"\nGets whether the player's control is currenty locked"},"isKeyDown":{"summary":"\nGets whether a key is down ","ret":"True if the key is down","class":"function","client":true,"private":false,"library":"input","fname":"isKeyDown","realm":"cl","param":{"1":"key","key":"The key id, see input"},"name":"input_methods.isKeyDown","description":"\nGets whether a key is down"},"enableCursor":{"summary":"\nSets the state of the mouse cursor ","class":"function","client":true,"private":false,"library":"input","fname":"enableCursor","realm":"cl","param":{"1":"enabled","enabled":"Whether or not the cursor should be enabled"},"name":"input_methods.enableCursor","description":"\nSets the state of the mouse cursor"},"lockControls":{"summary":"\nLocks game controls for typing purposes.","class":"function","client":true,"private":false,"library":"input","fname":"lockControls","realm":"cl","param":{"1":"enabled","enabled":"Whether to lock or unlock the controls"},"name":"input_methods.lockControls","description":"\nLocks game controls for typing purposes. Alt will unlock the controls. Has a 10 second cooldown."},"screenToVector":{"summary":"\nTranslates position on player's screen to aim vector ","ret":"Aim vector","class":"function","client":true,"private":false,"library":"input","fname":"screenToVector","realm":"cl","param":{"1":"x","2":"y","y":"Y coordinate on the screen","x":"X coordinate on the screen"},"name":"input_methods.screenToVector","description":"\nTranslates position on player's screen to aim vector"},"getKeyName":{"summary":"\nGets the name of a key from the id ","ret":"The name of the key","class":"function","client":true,"private":false,"library":"input","fname":"getKeyName","realm":"cl","param":{"1":"key","key":"The key id, see input"},"name":"input_methods.getKeyName","description":"\nGets the name of a key from the id"},"isShiftDown":{"summary":"\nGets whether the shift key is down ","ret":"True if the shift key is down","class":"function","client":true,"private":false,"library":"input","fname":"isShiftDown","realm":"cl","param":[],"name":"input_methods.isShiftDown","description":"\nGets whether the shift key is down"},"getCursorPos":{"summary":"\nGets the position of the mouse ","ret":["The x position of the mouse","The y position of the mouse"],"class":"function","client":true,"private":false,"library":"input","fname":"getCursorPos","realm":"cl","param":[],"name":"input_methods.getCursorPos","description":"\nGets the position of the mouse"},"canLockControls":{"summary":"\nGets whether the player's control can be locked ","ret":"Whether the player's control can be locked","class":"function","client":true,"private":false,"library":"input","fname":"canLockControls","realm":"cl","param":[],"name":"input_methods.canLockControls","description":"\nGets whether the player's control can be locked"},"getCursorVisible":{"summary":"\nGets whether the cursor is visible on the screen ","ret":"The cursor's visibility","class":"function","client":true,"private":false,"library":"input","fname":"getCursorVisible","realm":"cl","param":[],"name":"input_methods.getCursorVisible","description":"\nGets whether the cursor is visible on the screen"},"selectWeapon":{"summary":"\nMakes the local player select a weapon ","class":"function","client":true,"private":false,"library":"input","fname":"selectWeapon","realm":"cl","param":{"1":"weapon","weapon":"The weapon entity to select"},"name":"input_methods.selectWeapon","description":"\nMakes the local player select a weapon"},"isControlDown":{"summary":"\nGets whether the control key is down ","ret":"True if the control key is down","class":"function","client":true,"private":false,"library":"input","fname":"isControlDown","realm":"cl","param":[],"name":"input_methods.isControlDown","description":"\nGets whether the control key is down"},"lookupBinding":{"summary":"\nGets the first key that is bound to the command passed ","ret":["The id of the first key bound","The name of the first key bound"],"class":"function","client":true,"private":false,"library":"input","fname":"lookupBinding","realm":"cl","param":{"1":"binding","binding":"The name of the bind"},"name":"input_methods.lookupBinding","description":"\nGets the first key that is bound to the command passed"}},"name":"input","description":"\nInput library."},{"summary":"\nGets the first key that is bound to the command passed ","ret":["The id of the first key bound","The name of the first key bound"],"class":"function","client":true,"private":false,"library":"input","fname":"lookupBinding","realm":"cl","param":{"1":"binding","binding":"The name of the bind"},"name":"input_methods.lookupBinding","description":"\nGets the first key that is bound to the command passed"},{"summary":"\nGets whether a key is down ","ret":"True if the key is down","class":"function","client":true,"private":false,"library":"input","fname":"isKeyDown","realm":"cl","param":{"1":"key","key":"The key id, see input"},"name":"input_methods.isKeyDown","description":"\nGets whether a key is down"},{"summary":"\nGets the name of a key from the id ","ret":"The name of the key","class":"function","client":true,"private":false,"library":"input","fname":"getKeyName","realm":"cl","param":{"1":"key","key":"The key id, see input"},"name":"input_methods.getKeyName","description":"\nGets the name of a key from the id"},{"summary":"\nGets whether the shift key is down ","ret":"True if the shift key is down","class":"function","client":true,"private":false,"library":"input","fname":"isShiftDown","realm":"cl","param":[],"name":"input_methods.isShiftDown","description":"\nGets whether the shift key is down"},{"summary":"\nGets whether the control key is down ","ret":"True if the control key is down","class":"function","client":true,"private":false,"library":"input","fname":"isControlDown","realm":"cl","param":[],"name":"input_methods.isControlDown","description":"\nGets whether the control key is down"},{"summary":"\nGets the position of the mouse ","ret":["The x position of the mouse","The y position of the mouse"],"class":"function","client":true,"private":false,"library":"input","fname":"getCursorPos","realm":"cl","param":[],"name":"input_methods.getCursorPos","description":"\nGets the position of the mouse"},{"summary":"\nGets whether the cursor is visible on the screen ","ret":"The cursor's visibility","class":"function","client":true,"private":false,"library":"input","fname":"getCursorVisible","realm":"cl","param":[],"name":"input_methods.getCursorVisible","description":"\nGets whether the cursor is visible on the screen"},{"summary":"\nTranslates position on player's screen to aim vector ","ret":"Aim vector","class":"function","client":true,"private":false,"library":"input","fname":"screenToVector","realm":"cl","param":{"1":"x","2":"y","y":"Y coordinate on the screen","x":"X coordinate on the screen"},"name":"input_methods.screenToVector","description":"\nTranslates position on player's screen to aim vector"},{"summary":"\nSets the state of the mouse cursor ","class":"function","client":true,"private":false,"library":"input","fname":"enableCursor","realm":"cl","param":{"1":"enabled","enabled":"Whether or not the cursor should be enabled"},"name":"input_methods.enableCursor","description":"\nSets the state of the mouse cursor"},{"summary":"\nMakes the local player select a weapon ","class":"function","client":true,"private":false,"library":"input","fname":"selectWeapon","realm":"cl","param":{"1":"weapon","weapon":"The weapon entity to select"},"name":"input_methods.selectWeapon","description":"\nMakes the local player select a weapon"},{"summary":"\nLocks game controls for typing purposes.","class":"function","client":true,"private":false,"library":"input","fname":"lockControls","realm":"cl","param":{"1":"enabled","enabled":"Whether to lock or unlock the controls"},"name":"input_methods.lockControls","description":"\nLocks game controls for typing purposes. Alt will unlock the controls. Has a 10 second cooldown."},{"summary":"\nGets whether the player's control is currenty locked ","ret":"Whether the player's control is locked","class":"function","client":true,"private":false,"library":"input","fname":"isControlLocked","realm":"cl","param":[],"name":"input_methods.isControlLocked","description":"\nGets whether the player's control is currenty locked"},{"summary":"\nGets whether the player's control can be locked ","ret":"Whether the player's control can be locked","class":"function","client":true,"private":false,"library":"input","fname":"canLockControls","realm":"cl","param":[],"name":"input_methods.canLockControls","description":"\nGets whether the player's control can be locked"},{"summary":"\nCalled when a button is pressed ","classForced":true,"class":"hook","client":true,"description":"\nCalled when a button is pressed","realm":"cl","name":"inputPressed","param":{"1":"button","button":"Number of the button"}},{"summary":"\nCalled when a button is released ","classForced":true,"class":"hook","client":true,"description":"\nCalled when a button is released","realm":"cl","name":"inputReleased","param":{"1":"button","button":"Number of the button"}},{"summary":"\nCalled when the mouse is moved ","classForced":true,"class":"hook","client":true,"description":"\nCalled when the mouse is moved","realm":"cl","name":"mousemoved","param":{"1":"x","2":"y","y":"Y coordinate moved","x":"X coordinate moved"}},{"summary":"\nCalled when the mouse wheel is rotated ","classForced":true,"class":"hook","client":true,"description":"\nCalled when the mouse wheel is rotated","realm":"cl","name":"mouseWheeled","param":{"1":"delta","delta":"Rotate delta"}},{"summary":"\nENUMs of keyboard keys for use with input library: \nFIRST, \nNONE, \n0, \n1, \n2, \n3, \n4, \n5, \n6, \n7, \n8, \n9, \nA, \nB, \nC, \nD, \nE, \nF, \nG, \nH, \nI, \nJ, \nK, \nL, \nM, \nN, \nO, \nP, \nQ, \nR, \nS, \nT, \nU, \nV, \nW, \nX, \nY, \nZ, \nKP_INS, \nPAD_0, \nKP_END, \nPAD_1, \nKP_DOWNARROW , \nPAD_2, \nKP_PGDN, \nPAD_3, \nKP_LEFTARROW, \nPAD_4, \nKP_5 , \nPAD_5, \nKP_RIGHTARROW, \nPAD_6, \nKP_HOME, \nPAD_7, \nKP_UPARROW, \nPAD_8, \nKP_PGUP, \nPAD_9, \nPAD_DIVIDE, \nKP_SLASH, \nKP_MULTIPLY, \nPAD_MULTIPLY, \nKP_MINUS, \nPAD_MINUS, \nKP_PLUS, \nPAD_PLUS, \nKP_ENTER, \nPAD_ENTER, \nKP_DEL, \nPAD_DECIMAL, \nLBRACKET, \nRBRACKET, \nSEMICOLON, \nAPOSTROPHE, \nBACKQUOTE, \nCOMMA, \nPERIOD, \nSLASH, \nBACKSLASH, \nMINUS, \nEQUAL, \nENTER, \nSPACE, \nBACKSPACE, \nTAB, \nCAPSLOCK, \nNUMLOCK, \nESCAPE, \nSCROLLLOCK, \nINS, \nINSERT, \nDEL, \nDELETE, \nHOME, \nEND, \nPGUP, \nPAGEUP, \nPGDN, \nPAGEDOWN, \nPAUSE, \nBREAK, \nSHIFT, \nLSHIFT, \nRSHIFT, \nALT, \nLALT, \nRALT, \nCTRL, \nLCONTROL, \nRCTRL, \nRCONTROL, \nLWIN, \nRWIN, \nAPP, \nUPARROW, \nUP, \nLEFTARROW, \nLEFT, \nDOWNARROW, \nDOWN, \nRIGHTARROW, \nRIGHT, \nF1, \nF2, \nF3, \nF4, \nF5, \nF6, \nF7, \nF8, \nF9, \nF10, \nF11, \nF12, \nCAPSLOCKTOGGLE, \nNUMLOCKTOGGLE, \nSCROLLLOCKTOGGLE, \nLAST, \nCOUNT ","classForced":true,"class":"table","param":[],"name":"SF.DefaultEnvironment.KEY","description":"\nENUMs of keyboard keys for use with input library: \nFIRST, \nNONE, \n0, \n1, \n2, \n3, \n4, \n5, \n6, \n7, \n8, \n9, \nA, \nB, \nC, \nD, \nE, \nF, \nG, \nH, \nI, \nJ, \nK, \nL, \nM, \nN, \nO, \nP, \nQ, \nR, \nS, \nT, \nU, \nV, \nW, \nX, \nY, \nZ, \nKP_INS, \nPAD_0, \nKP_END, \nPAD_1, \nKP_DOWNARROW , \nPAD_2, \nKP_PGDN, \nPAD_3, \nKP_LEFTARROW, \nPAD_4, \nKP_5 , \nPAD_5, \nKP_RIGHTARROW, \nPAD_6, \nKP_HOME, \nPAD_7, \nKP_UPARROW, \nPAD_8, \nKP_PGUP, \nPAD_9, \nPAD_DIVIDE, \nKP_SLASH, \nKP_MULTIPLY, \nPAD_MULTIPLY, \nKP_MINUS, \nPAD_MINUS, \nKP_PLUS, \nPAD_PLUS, \nKP_ENTER, \nPAD_ENTER, \nKP_DEL, \nPAD_DECIMAL, \nLBRACKET, \nRBRACKET, \nSEMICOLON, \nAPOSTROPHE, \nBACKQUOTE, \nCOMMA, \nPERIOD, \nSLASH, \nBACKSLASH, \nMINUS, \nEQUAL, \nENTER, \nSPACE, \nBACKSPACE, \nTAB, \nCAPSLOCK, \nNUMLOCK, \nESCAPE, \nSCROLLLOCK, \nINS, \nINSERT, \nDEL, \nDELETE, \nHOME, \nEND, \nPGUP, \nPAGEUP, \nPGDN, \nPAGEDOWN, \nPAUSE, \nBREAK, \nSHIFT, \nLSHIFT, \nRSHIFT, \nALT, \nLALT, \nRALT, \nCTRL, \nLCONTROL, \nRCTRL, \nRCONTROL, \nLWIN, \nRWIN, \nAPP, \nUPARROW, \nUP, \nLEFTARROW, \nLEFT, \nDOWNARROW, \nDOWN, \nRIGHTARROW, \nRIGHT, \nF1, \nF2, \nF3, \nF4, \nF5, \nF6, \nF7, \nF8, \nF9, \nF10, \nF11, \nF12, \nCAPSLOCKTOGGLE, \nNUMLOCKTOGGLE, \nSCROLLLOCKTOGGLE, \nLAST, \nCOUNT"},{"summary":"\nENUMs of mouse buttons for use with input library: \nMOUSE1, \nLEFT, \nMOUSE2, \nRIGHT, \nMOUSE3, \nMIDDLE, \nMOUSE4, \n4, \nMOUSE5, \n5, \nMWHEELUP, \nWHEEL_UP, \nMWHEELDOWN, \nWHEEL_DOWN, \nCOUNT, \nFIRST, \nLAST ","classForced":true,"class":"table","param":[],"name":"SF.DefaultEnvironment.MOUSE","description":"\nENUMs of mouse buttons for use with input library: \nMOUSE1, \nLEFT, \nMOUSE2, \nRIGHT, \nMOUSE3, \nMIDDLE, \nMOUSE4, \n4, \nMOUSE5, \n5, \nMWHEELUP, \nWHEEL_UP, \nMWHEELDOWN, \nWHEEL_DOWN, \nCOUNT, \nFIRST, \nLAST"}],"name":"libs_sh/input.lua","description":"\nInput library."},"transfer.lua":{"tables":[],"libraries":[],"type":"file","doc":[],"name":"transfer.lua","functions":[]},"libs_sh/vmatrix.lua":{"summary":"\nVMatrix type ","tables":[],"functions":{"1":"SF.DefaultEnvironment.Matrix","2":"vmatrix_metamethods:__tostring","3":"vmatrix_methods:clone","4":"vmatrix_methods:getAngles","5":"vmatrix_methods:getAxisAngle","6":"vmatrix_methods:getField","7":"vmatrix_methods:getForward","8":"vmatrix_methods:getInverse","9":"vmatrix_methods:getInverseTR","10":"vmatrix_methods:getRight","11":"vmatrix_methods:getScale","12":"vmatrix_methods:getTranslation","13":"vmatrix_methods:getTransposed","14":"vmatrix_methods:getUp","15":"vmatrix_methods:invert","16":"vmatrix_methods:invertTR","17":"vmatrix_methods:isIdentity","18":"vmatrix_methods:isRotationMatrix","19":"vmatrix_methods:rotate","20":"vmatrix_methods:scale","21":"vmatrix_methods:scaleTranslation","22":"vmatrix_methods:set","23":"vmatrix_methods:setAngles","24":"vmatrix_methods:setAxisAngle","25":"vmatrix_methods:setField","26":"vmatrix_methods:setForward","27":"vmatrix_methods:setIdentity","28":"vmatrix_methods:setRight","29":"vmatrix_methods:setScale","30":"vmatrix_methods:setTranslation","31":"vmatrix_methods:setUp","32":"vmatrix_methods:toTable","33":"vmatrix_methods:translate","34":"vmatrix_methods:transpose","vmatrix_methods:setIdentity":{"summary":"\nInitializes the matrix as Identity matrix ","class":"function","private":false,"param":[],"fname":"setIdentity","realm":"sh","name":"vmatrix_methods:setIdentity","classlib":"VMatrix","description":"\nInitializes the matrix as Identity matrix"},"vmatrix_methods:rotate":{"summary":"\nRotate the matrix ","class":"function","private":false,"param":{"1":"ang","ang":"Angle to rotate by"},"fname":"rotate","realm":"sh","name":"vmatrix_methods:rotate","classlib":"VMatrix","description":"\nRotate the matrix"},"SF.DefaultEnvironment.Matrix":{"summary":"\nReturns a new VMatrix ","ret":"New VMatrix","class":"function","private":false,"realm":"sh","param":["t"],"name":"SF.DefaultEnvironment.Matrix","description":"\nReturns a new VMatrix"},"vmatrix_methods:isRotationMatrix":{"summary":"\nReturns whether the matrix is a rotation matrix or not.","ret":"bool True/False","class":"function","private":false,"classlib":"VMatrix","fname":"isRotationMatrix","realm":"sh","param":[],"name":"vmatrix_methods:isRotationMatrix","description":"\nReturns whether the matrix is a rotation matrix or not. Checks if the forward, right and up vectors are orthogonal and normalized."},"vmatrix_metamethods:__tostring":{"summary":"\ntostring metamethod ","ret":"string representing the matrix.","class":"function","private":false,"realm":"sh","param":[],"name":"vmatrix_metamethods:__tostring","description":"\ntostring metamethod"},"vmatrix_methods:isIdentity":{"summary":"\nReturns whether the matrix is equal to Identity matrix or not ","ret":"bool True/False","class":"function","private":false,"classlib":"VMatrix","fname":"isIdentity","realm":"sh","param":[],"name":"vmatrix_methods:isIdentity","description":"\nReturns whether the matrix is equal to Identity matrix or not"},"vmatrix_methods:invert":{"summary":"\nInverts the matrix.","ret":"bool Whether the matrix was inverted or not","class":"function","private":false,"classlib":"VMatrix","fname":"invert","realm":"sh","param":[],"name":"vmatrix_methods:invert","description":"\nInverts the matrix. Inverting the matrix will fail if its determinant is 0 or close to 0"},"vmatrix_methods:transpose":{"summary":"\nTransposes the matrix ","class":"function","private":false,"param":[],"fname":"transpose","realm":"sh","name":"vmatrix_methods:transpose","classlib":"VMatrix","description":"\nTransposes the matrix"},"vmatrix_methods:getField":{"summary":"\nReturns a specific field in the matrix ","ret":"Value of the specified field","class":"function","private":false,"classlib":"VMatrix","fname":"getField","realm":"sh","param":{"1":"row","2":"column","column":"A number from 1 to 4","row":"A number from 1 to 4"},"name":"vmatrix_methods:getField","description":"\nReturns a specific field in the matrix"},"vmatrix_methods:getRight":{"summary":"\nReturns right vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getRight","realm":"sh","param":[],"name":"vmatrix_methods:getRight","description":"\nReturns right vector of matrix. Negated second matrix column"},"vmatrix_methods:setAxisAngle":{"summary":"\nSets the rotation or the matrix to the rotation by an axis and angle ","class":"function","private":false,"param":{"1":"axis","2":"ang","3":"angle","axis":"The normalized axis of rotation","angle":"The angle of rotation in radians"},"fname":"setAxisAngle","realm":"sh","name":"vmatrix_methods:setAxisAngle","classlib":"VMatrix","description":"\nSets the rotation or the matrix to the rotation by an axis and angle"},"vmatrix_methods:getForward":{"summary":"\nReturns forward vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getForward","realm":"sh","param":[],"name":"vmatrix_methods:getForward","description":"\nReturns forward vector of matrix. First matrix column"},"vmatrix_methods:clone":{"summary":"\nCopies The matrix and returns a new matrix ","ret":"The copy of the matrix","class":"function","private":false,"classlib":"VMatrix","fname":"clone","realm":"sh","param":[],"name":"vmatrix_methods:clone","description":"\nCopies The matrix and returns a new matrix"},"vmatrix_methods:getScale":{"summary":"\nReturns scale ","ret":"Scale","class":"function","private":false,"classlib":"VMatrix","fname":"getScale","realm":"sh","param":[],"name":"vmatrix_methods:getScale","description":"\nReturns scale"},"vmatrix_methods:scaleTranslation":{"summary":"\nScales the absolute translation ","class":"function","private":false,"param":{"1":"num","num":"Amount to scale by"},"fname":"scaleTranslation","realm":"sh","name":"vmatrix_methods:scaleTranslation","classlib":"VMatrix","description":"\nScales the absolute translation"},"vmatrix_methods:setTranslation":{"summary":"\nSets the translation ","class":"function","private":false,"param":{"1":"vec","vec":"New translation"},"fname":"setTranslation","realm":"sh","name":"vmatrix_methods:setTranslation","classlib":"VMatrix","description":"\nSets the translation"},"vmatrix_methods:invertTR":{"summary":"\nInverts the matrix efficiently for translations and rotations ","class":"function","private":false,"param":[],"fname":"invertTR","realm":"sh","name":"vmatrix_methods:invertTR","classlib":"VMatrix","description":"\nInverts the matrix efficiently for translations and rotations"},"vmatrix_methods:getTransposed":{"summary":"\nReturns the transposed matrix ","ret":"Transposed matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getTransposed","realm":"sh","param":[],"name":"vmatrix_methods:getTransposed","description":"\nReturns the transposed matrix"},"vmatrix_methods:getTranslation":{"summary":"\nReturns translation ","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getTranslation","realm":"sh","param":[],"name":"vmatrix_methods:getTranslation","description":"\nReturns translation"},"vmatrix_methods:translate":{"summary":"\nTranslate the matrix ","class":"function","private":false,"param":{"1":"vec","vec":"Vector to translate by"},"fname":"translate","realm":"sh","name":"vmatrix_methods:translate","classlib":"VMatrix","description":"\nTranslate the matrix"},"vmatrix_methods:setScale":{"summary":"\nSets the scale ","class":"function","private":false,"param":{"1":"vec","vec":"New scale"},"fname":"setScale","realm":"sh","name":"vmatrix_methods:setScale","classlib":"VMatrix","description":"\nSets the scale"},"vmatrix_methods:setAngles":{"summary":"\nSets the angles ","class":"function","private":false,"param":{"1":"ang","ang":"New angles"},"fname":"setAngles","realm":"sh","name":"vmatrix_methods:setAngles","classlib":"VMatrix","description":"\nSets the angles"},"vmatrix_methods:getUp":{"summary":"\nReturns up vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getUp","realm":"sh","param":[],"name":"vmatrix_methods:getUp","description":"\nReturns up vector of matrix. Third matrix column"},"vmatrix_methods:getAngles":{"summary":"\nReturns angles ","ret":"Angles","class":"function","private":false,"classlib":"VMatrix","fname":"getAngles","realm":"sh","param":[],"name":"vmatrix_methods:getAngles","description":"\nReturns angles"},"vmatrix_methods:getInverse":{"summary":"\nReturns an inverted matrix.","ret":"Inverted matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getInverse","realm":"sh","param":[],"name":"vmatrix_methods:getInverse","description":"\nReturns an inverted matrix. Inverting the matrix will fail if its determinant is 0 or close to 0"},"vmatrix_methods:set":{"summary":"\nCopies the values from the second matrix to the first matrix.","class":"function","private":false,"param":{"1":"src","src":"Second matrix"},"fname":"set","realm":"sh","name":"vmatrix_methods:set","classlib":"VMatrix","description":"\nCopies the values from the second matrix to the first matrix. Self-Modifies"},"vmatrix_methods:getInverseTR":{"summary":"\nReturns an inverted matrix.","ret":"Inverted matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getInverseTR","realm":"sh","param":[],"name":"vmatrix_methods:getInverseTR","description":"\nReturns an inverted matrix. Efficiently for translations and rotations"},"vmatrix_methods:setUp":{"summary":"\nSets the up direction of the matrix.","class":"function","private":false,"param":{"1":"up","up":"The up vector"},"fname":"setUp","realm":"sh","name":"vmatrix_methods:setUp","classlib":"VMatrix","description":"\nSets the up direction of the matrix. Third column"},"vmatrix_methods:setForward":{"summary":"\nSets the forward direction of the matrix.","class":"function","private":false,"param":{"1":"forward","forward":"The forward vector"},"fname":"setForward","realm":"sh","name":"vmatrix_methods:setForward","classlib":"VMatrix","description":"\nSets the forward direction of the matrix. First column"},"vmatrix_methods:getAxisAngle":{"summary":"\nGets the rotation axis and angle of rotation of the rotation matrix ","ret":["The axis of rotation","The angle of rotation"],"class":"function","private":false,"classlib":"VMatrix","fname":"getAxisAngle","realm":"sh","param":[],"name":"vmatrix_methods:getAxisAngle","description":"\nGets the rotation axis and angle of rotation of the rotation matrix"},"vmatrix_methods:setRight":{"summary":"\nSets the right direction of the matrix.","class":"function","private":false,"param":{"1":"right","right":"The right vector"},"fname":"setRight","realm":"sh","name":"vmatrix_methods:setRight","classlib":"VMatrix","description":"\nSets the right direction of the matrix. Negated second column"},"vmatrix_methods:setField":{"summary":"\nSets a specific field in the matrix ","class":"function","private":false,"param":{"1":"row","2":"column","3":"value","value":"Value to set","column":"A number from 1 to 4","row":"A number from 1 to 4"},"fname":"setField","realm":"sh","name":"vmatrix_methods:setField","classlib":"VMatrix","description":"\nSets a specific field in the matrix"},"vmatrix_methods:toTable":{"summary":"\nConverts the matrix to a 4x4 table ","ret":"The 4x4 table","class":"function","private":false,"classlib":"VMatrix","fname":"toTable","realm":"sh","param":[],"name":"vmatrix_methods:toTable","description":"\nConverts the matrix to a 4x4 table"},"vmatrix_methods:scale":{"summary":"\nScale the matrix ","class":"function","private":false,"param":{"1":"vec","vec":"Vector to scale by"},"fname":"scale","realm":"sh","name":"vmatrix_methods:scale","classlib":"VMatrix","description":"\nScale the matrix"}},"libraries":[],"type":"file","doc":[{"methods":{"1":"clone","2":"getAngles","3":"getAxisAngle","4":"getField","5":"getForward","6":"getInverse","7":"getInverseTR","8":"getRight","9":"getScale","10":"getTranslation","11":"getTransposed","12":"getUp","13":"invert","14":"invertTR","15":"isIdentity","16":"isRotationMatrix","17":"rotate","18":"scale","19":"scaleTranslation","20":"set","21":"setAngles","22":"setAxisAngle","23":"setField","24":"setForward","25":"setIdentity","26":"setRight","27":"setScale","28":"setTranslation","29":"setUp","30":"toTable","31":"translate","32":"transpose","transpose":{"summary":"\nTransposes the matrix ","class":"function","private":false,"param":[],"fname":"transpose","realm":"sh","name":"vmatrix_methods:transpose","classlib":"VMatrix","description":"\nTransposes the matrix"},"scale":{"summary":"\nScale the matrix ","class":"function","private":false,"param":{"1":"vec","vec":"Vector to scale by"},"fname":"scale","realm":"sh","name":"vmatrix_methods:scale","classlib":"VMatrix","description":"\nScale the matrix"},"invert":{"summary":"\nInverts the matrix.","ret":"bool Whether the matrix was inverted or not","class":"function","private":false,"classlib":"VMatrix","fname":"invert","realm":"sh","param":[],"name":"vmatrix_methods:invert","description":"\nInverts the matrix. Inverting the matrix will fail if its determinant is 0 or close to 0"},"getTransposed":{"summary":"\nReturns the transposed matrix ","ret":"Transposed matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getTransposed","realm":"sh","param":[],"name":"vmatrix_methods:getTransposed","description":"\nReturns the transposed matrix"},"getInverse":{"summary":"\nReturns an inverted matrix.","ret":"Inverted matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getInverse","realm":"sh","param":[],"name":"vmatrix_methods:getInverse","description":"\nReturns an inverted matrix. Inverting the matrix will fail if its determinant is 0 or close to 0"},"setForward":{"summary":"\nSets the forward direction of the matrix.","class":"function","private":false,"param":{"1":"forward","forward":"The forward vector"},"fname":"setForward","realm":"sh","name":"vmatrix_methods:setForward","classlib":"VMatrix","description":"\nSets the forward direction of the matrix. First column"},"getAngles":{"summary":"\nReturns angles ","ret":"Angles","class":"function","private":false,"classlib":"VMatrix","fname":"getAngles","realm":"sh","param":[],"name":"vmatrix_methods:getAngles","description":"\nReturns angles"},"getAxisAngle":{"summary":"\nGets the rotation axis and angle of rotation of the rotation matrix ","ret":["The axis of rotation","The angle of rotation"],"class":"function","private":false,"classlib":"VMatrix","fname":"getAxisAngle","realm":"sh","param":[],"name":"vmatrix_methods:getAxisAngle","description":"\nGets the rotation axis and angle of rotation of the rotation matrix"},"getScale":{"summary":"\nReturns scale ","ret":"Scale","class":"function","private":false,"classlib":"VMatrix","fname":"getScale","realm":"sh","param":[],"name":"vmatrix_methods:getScale","description":"\nReturns scale"},"getForward":{"summary":"\nReturns forward vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getForward","realm":"sh","param":[],"name":"vmatrix_methods:getForward","description":"\nReturns forward vector of matrix. First matrix column"},"isRotationMatrix":{"summary":"\nReturns whether the matrix is a rotation matrix or not.","ret":"bool True/False","class":"function","private":false,"classlib":"VMatrix","fname":"isRotationMatrix","realm":"sh","param":[],"name":"vmatrix_methods:isRotationMatrix","description":"\nReturns whether the matrix is a rotation matrix or not. Checks if the forward, right and up vectors are orthogonal and normalized."},"toTable":{"summary":"\nConverts the matrix to a 4x4 table ","ret":"The 4x4 table","class":"function","private":false,"classlib":"VMatrix","fname":"toTable","realm":"sh","param":[],"name":"vmatrix_methods:toTable","description":"\nConverts the matrix to a 4x4 table"},"clone":{"summary":"\nCopies The matrix and returns a new matrix ","ret":"The copy of the matrix","class":"function","private":false,"classlib":"VMatrix","fname":"clone","realm":"sh","param":[],"name":"vmatrix_methods:clone","description":"\nCopies The matrix and returns a new matrix"},"setRight":{"summary":"\nSets the right direction of the matrix.","class":"function","private":false,"param":{"1":"right","right":"The right vector"},"fname":"setRight","realm":"sh","name":"vmatrix_methods:setRight","classlib":"VMatrix","description":"\nSets the right direction of the matrix. Negated second column"},"setAxisAngle":{"summary":"\nSets the rotation or the matrix to the rotation by an axis and angle ","class":"function","private":false,"param":{"1":"axis","2":"ang","3":"angle","axis":"The normalized axis of rotation","angle":"The angle of rotation in radians"},"fname":"setAxisAngle","realm":"sh","name":"vmatrix_methods:setAxisAngle","classlib":"VMatrix","description":"\nSets the rotation or the matrix to the rotation by an axis and angle"},"set":{"summary":"\nCopies the values from the second matrix to the first matrix.","class":"function","private":false,"param":{"1":"src","src":"Second matrix"},"fname":"set","realm":"sh","name":"vmatrix_methods:set","classlib":"VMatrix","description":"\nCopies the values from the second matrix to the first matrix. Self-Modifies"},"setIdentity":{"summary":"\nInitializes the matrix as Identity matrix ","class":"function","private":false,"param":[],"fname":"setIdentity","realm":"sh","name":"vmatrix_methods:setIdentity","classlib":"VMatrix","description":"\nInitializes the matrix as Identity matrix"},"isIdentity":{"summary":"\nReturns whether the matrix is equal to Identity matrix or not ","ret":"bool True/False","class":"function","private":false,"classlib":"VMatrix","fname":"isIdentity","realm":"sh","param":[],"name":"vmatrix_methods:isIdentity","description":"\nReturns whether the matrix is equal to Identity matrix or not"},"getTranslation":{"summary":"\nReturns translation ","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getTranslation","realm":"sh","param":[],"name":"vmatrix_methods:getTranslation","description":"\nReturns translation"},"setUp":{"summary":"\nSets the up direction of the matrix.","class":"function","private":false,"param":{"1":"up","up":"The up vector"},"fname":"setUp","realm":"sh","name":"vmatrix_methods:setUp","classlib":"VMatrix","description":"\nSets the up direction of the matrix. Third column"},"translate":{"summary":"\nTranslate the matrix ","class":"function","private":false,"param":{"1":"vec","vec":"Vector to translate by"},"fname":"translate","realm":"sh","name":"vmatrix_methods:translate","classlib":"VMatrix","description":"\nTranslate the matrix"},"getRight":{"summary":"\nReturns right vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getRight","realm":"sh","param":[],"name":"vmatrix_methods:getRight","description":"\nReturns right vector of matrix. Negated second matrix column"},"setTranslation":{"summary":"\nSets the translation ","class":"function","private":false,"param":{"1":"vec","vec":"New translation"},"fname":"setTranslation","realm":"sh","name":"vmatrix_methods:setTranslation","classlib":"VMatrix","description":"\nSets the translation"},"getField":{"summary":"\nReturns a specific field in the matrix ","ret":"Value of the specified field","class":"function","private":false,"classlib":"VMatrix","fname":"getField","realm":"sh","param":{"1":"row","2":"column","column":"A number from 1 to 4","row":"A number from 1 to 4"},"name":"vmatrix_methods:getField","description":"\nReturns a specific field in the matrix"},"invertTR":{"summary":"\nInverts the matrix efficiently for translations and rotations ","class":"function","private":false,"param":[],"fname":"invertTR","realm":"sh","name":"vmatrix_methods:invertTR","classlib":"VMatrix","description":"\nInverts the matrix efficiently for translations and rotations"},"getInverseTR":{"summary":"\nReturns an inverted matrix.","ret":"Inverted matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getInverseTR","realm":"sh","param":[],"name":"vmatrix_methods:getInverseTR","description":"\nReturns an inverted matrix. Efficiently for translations and rotations"},"getUp":{"summary":"\nReturns up vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getUp","realm":"sh","param":[],"name":"vmatrix_methods:getUp","description":"\nReturns up vector of matrix. Third matrix column"},"setScale":{"summary":"\nSets the scale ","class":"function","private":false,"param":{"1":"vec","vec":"New scale"},"fname":"setScale","realm":"sh","name":"vmatrix_methods:setScale","classlib":"VMatrix","description":"\nSets the scale"},"rotate":{"summary":"\nRotate the matrix ","class":"function","private":false,"param":{"1":"ang","ang":"Angle to rotate by"},"fname":"rotate","realm":"sh","name":"vmatrix_methods:rotate","classlib":"VMatrix","description":"\nRotate the matrix"},"setAngles":{"summary":"\nSets the angles ","class":"function","private":false,"param":{"1":"ang","ang":"New angles"},"fname":"setAngles","realm":"sh","name":"vmatrix_methods:setAngles","classlib":"VMatrix","description":"\nSets the angles"},"setField":{"summary":"\nSets a specific field in the matrix ","class":"function","private":false,"param":{"1":"row","2":"column","3":"value","value":"Value to set","column":"A number from 1 to 4","row":"A number from 1 to 4"},"fname":"setField","realm":"sh","name":"vmatrix_methods:setField","classlib":"VMatrix","description":"\nSets a specific field in the matrix"},"scaleTranslation":{"summary":"\nScales the absolute translation ","class":"function","private":false,"param":{"1":"num","num":"Amount to scale by"},"fname":"scaleTranslation","realm":"sh","name":"vmatrix_methods:scaleTranslation","classlib":"VMatrix","description":"\nScales the absolute translation"}},"class":"class","fields":[],"summary":"\nVMatrix type ","typtbl":"vmatrix_methods","name":"VMatrix","description":"\nVMatrix type"},{"summary":"\nReturns a new VMatrix ","ret":"New VMatrix","class":"function","private":false,"realm":"sh","param":["t"],"name":"SF.DefaultEnvironment.Matrix","description":"\nReturns a new VMatrix"},{"summary":"\ntostring metamethod ","ret":"string representing the matrix.","class":"function","private":false,"realm":"sh","param":[],"name":"vmatrix_metamethods:__tostring","description":"\ntostring metamethod"},{"summary":"\nReturns angles ","ret":"Angles","class":"function","private":false,"classlib":"VMatrix","fname":"getAngles","realm":"sh","param":[],"name":"vmatrix_methods:getAngles","description":"\nReturns angles"},{"summary":"\nReturns scale ","ret":"Scale","class":"function","private":false,"classlib":"VMatrix","fname":"getScale","realm":"sh","param":[],"name":"vmatrix_methods:getScale","description":"\nReturns scale"},{"summary":"\nReturns translation ","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getTranslation","realm":"sh","param":[],"name":"vmatrix_methods:getTranslation","description":"\nReturns translation"},{"summary":"\nReturns a specific field in the matrix ","ret":"Value of the specified field","class":"function","private":false,"classlib":"VMatrix","fname":"getField","realm":"sh","param":{"1":"row","2":"column","column":"A number from 1 to 4","row":"A number from 1 to 4"},"name":"vmatrix_methods:getField","description":"\nReturns a specific field in the matrix"},{"summary":"\nRotate the matrix ","class":"function","private":false,"param":{"1":"ang","ang":"Angle to rotate by"},"fname":"rotate","realm":"sh","name":"vmatrix_methods:rotate","classlib":"VMatrix","description":"\nRotate the matrix"},{"summary":"\nReturns an inverted matrix.","ret":"Inverted matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getInverse","realm":"sh","param":[],"name":"vmatrix_methods:getInverse","description":"\nReturns an inverted matrix. Inverting the matrix will fail if its determinant is 0 or close to 0"},{"summary":"\nReturns an inverted matrix.","ret":"Inverted matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getInverseTR","realm":"sh","param":[],"name":"vmatrix_methods:getInverseTR","description":"\nReturns an inverted matrix. Efficiently for translations and rotations"},{"summary":"\nReturns forward vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getForward","realm":"sh","param":[],"name":"vmatrix_methods:getForward","description":"\nReturns forward vector of matrix. First matrix column"},{"summary":"\nReturns right vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getRight","realm":"sh","param":[],"name":"vmatrix_methods:getRight","description":"\nReturns right vector of matrix. Negated second matrix column"},{"summary":"\nReturns up vector of matrix.","ret":"Translation","class":"function","private":false,"classlib":"VMatrix","fname":"getUp","realm":"sh","param":[],"name":"vmatrix_methods:getUp","description":"\nReturns up vector of matrix. Third matrix column"},{"summary":"\nSets the scale ","class":"function","private":false,"param":{"1":"vec","vec":"New scale"},"fname":"setScale","realm":"sh","name":"vmatrix_methods:setScale","classlib":"VMatrix","description":"\nSets the scale"},{"summary":"\nScale the matrix ","class":"function","private":false,"param":{"1":"vec","vec":"Vector to scale by"},"fname":"scale","realm":"sh","name":"vmatrix_methods:scale","classlib":"VMatrix","description":"\nScale the matrix"},{"summary":"\nScales the absolute translation ","class":"function","private":false,"param":{"1":"num","num":"Amount to scale by"},"fname":"scaleTranslation","realm":"sh","name":"vmatrix_methods:scaleTranslation","classlib":"VMatrix","description":"\nScales the absolute translation"},{"summary":"\nSets the angles ","class":"function","private":false,"param":{"1":"ang","ang":"New angles"},"fname":"setAngles","realm":"sh","name":"vmatrix_methods:setAngles","classlib":"VMatrix","description":"\nSets the angles"},{"summary":"\nSets the translation ","class":"function","private":false,"param":{"1":"vec","vec":"New translation"},"fname":"setTranslation","realm":"sh","name":"vmatrix_methods:setTranslation","classlib":"VMatrix","description":"\nSets the translation"},{"summary":"\nSets the forward direction of the matrix.","class":"function","private":false,"param":{"1":"forward","forward":"The forward vector"},"fname":"setForward","realm":"sh","name":"vmatrix_methods:setForward","classlib":"VMatrix","description":"\nSets the forward direction of the matrix. First column"},{"summary":"\nSets the right direction of the matrix.","class":"function","private":false,"param":{"1":"right","right":"The right vector"},"fname":"setRight","realm":"sh","name":"vmatrix_methods:setRight","classlib":"VMatrix","description":"\nSets the right direction of the matrix. Negated second column"},{"summary":"\nSets the up direction of the matrix.","class":"function","private":false,"param":{"1":"up","up":"The up vector"},"fname":"setUp","realm":"sh","name":"vmatrix_methods:setUp","classlib":"VMatrix","description":"\nSets the up direction of the matrix. Third column"},{"summary":"\nSets a specific field in the matrix ","class":"function","private":false,"param":{"1":"row","2":"column","3":"value","value":"Value to set","column":"A number from 1 to 4","row":"A number from 1 to 4"},"fname":"setField","realm":"sh","name":"vmatrix_methods:setField","classlib":"VMatrix","description":"\nSets a specific field in the matrix"},{"summary":"\nCopies The matrix and returns a new matrix ","ret":"The copy of the matrix","class":"function","private":false,"classlib":"VMatrix","fname":"clone","realm":"sh","param":[],"name":"vmatrix_methods:clone","description":"\nCopies The matrix and returns a new matrix"},{"summary":"\nCopies the values from the second matrix to the first matrix.","class":"function","private":false,"param":{"1":"src","src":"Second matrix"},"fname":"set","realm":"sh","name":"vmatrix_methods:set","classlib":"VMatrix","description":"\nCopies the values from the second matrix to the first matrix. Self-Modifies"},{"summary":"\nInitializes the matrix as Identity matrix ","class":"function","private":false,"param":[],"fname":"setIdentity","realm":"sh","name":"vmatrix_methods:setIdentity","classlib":"VMatrix","description":"\nInitializes the matrix as Identity matrix"},{"summary":"\nReturns whether the matrix is equal to Identity matrix or not ","ret":"bool True/False","class":"function","private":false,"classlib":"VMatrix","fname":"isIdentity","realm":"sh","param":[],"name":"vmatrix_methods:isIdentity","description":"\nReturns whether the matrix is equal to Identity matrix or not"},{"summary":"\nReturns whether the matrix is a rotation matrix or not.","ret":"bool True/False","class":"function","private":false,"classlib":"VMatrix","fname":"isRotationMatrix","realm":"sh","param":[],"name":"vmatrix_methods:isRotationMatrix","description":"\nReturns whether the matrix is a rotation matrix or not. Checks if the forward, right and up vectors are orthogonal and normalized."},{"summary":"\nInverts the matrix.","ret":"bool Whether the matrix was inverted or not","class":"function","private":false,"classlib":"VMatrix","fname":"invert","realm":"sh","param":[],"name":"vmatrix_methods:invert","description":"\nInverts the matrix. Inverting the matrix will fail if its determinant is 0 or close to 0"},{"summary":"\nInverts the matrix efficiently for translations and rotations ","class":"function","private":false,"param":[],"fname":"invertTR","realm":"sh","name":"vmatrix_methods:invertTR","classlib":"VMatrix","description":"\nInverts the matrix efficiently for translations and rotations"},{"summary":"\nTranslate the matrix ","class":"function","private":false,"param":{"1":"vec","vec":"Vector to translate by"},"fname":"translate","realm":"sh","name":"vmatrix_methods:translate","classlib":"VMatrix","description":"\nTranslate the matrix"},{"summary":"\nConverts the matrix to a 4x4 table ","ret":"The 4x4 table","class":"function","private":false,"classlib":"VMatrix","fname":"toTable","realm":"sh","param":[],"name":"vmatrix_methods:toTable","description":"\nConverts the matrix to a 4x4 table"},{"summary":"\nSets the rotation or the matrix to the rotation by an axis and angle ","class":"function","private":false,"param":{"1":"axis","2":"ang","3":"angle","axis":"The normalized axis of rotation","angle":"The angle of rotation in radians"},"fname":"setAxisAngle","realm":"sh","name":"vmatrix_methods:setAxisAngle","classlib":"VMatrix","description":"\nSets the rotation or the matrix to the rotation by an axis and angle"},{"summary":"\nGets the rotation axis and angle of rotation of the rotation matrix ","ret":["The axis of rotation","The angle of rotation"],"class":"function","private":false,"classlib":"VMatrix","fname":"getAxisAngle","realm":"sh","param":[],"name":"vmatrix_methods:getAxisAngle","description":"\nGets the rotation axis and angle of rotation of the rotation matrix"},{"summary":"\nReturns the transposed matrix ","ret":"Transposed matrix","class":"function","private":false,"classlib":"VMatrix","fname":"getTransposed","realm":"sh","param":[],"name":"vmatrix_methods:getTransposed","description":"\nReturns the transposed matrix"},{"summary":"\nTransposes the matrix ","class":"function","private":false,"param":[],"fname":"transpose","realm":"sh","name":"vmatrix_methods:transpose","classlib":"VMatrix","description":"\nTransposes the matrix"}],"name":"libs_sh/vmatrix.lua","description":"\nVMatrix type"},"permissions/providers_cl/client.lua":{"summary":"\nProvides permissions for clients ","tables":[],"functions":[],"libraries":[],"type":"file","doc":[{"summary":"\nProvides permissions for clients ","param":[],"description":"\nProvides permissions for clients"}],"name":"permissions/providers_cl/client.lua","description":"\nProvides permissions for clients"},"netstream.lua":{"tables":[],"libraries":[],"type":"file","doc":[],"name":"netstream.lua","functions":[]},"libs_sv/prop.lua":{"summary":"\nLibrary for creating and manipulating physics-less models AKA \"Props\".","tables":[],"functions":{"1":"props_library.canSpawn","2":"props_library.create","3":"props_library.createComponent","4":"props_library.createCustom","5":"props_library.createSent","6":"props_library.propsLeft","7":"props_library.setPropClean","8":"props_library.setPropUndo","9":"props_library.spawnRate","props_library.setPropUndo":{"summary":"\nSets whether the props should be undo-able ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the props should be undo-able"},"fname":"setPropUndo","realm":"sv","description":"\nSets whether the props should be undo-able","name":"props_library.setPropUndo","library":"prop"},"props_library.createCustom":{"server":true,"ret":"The prop object","class":"function","library":"prop","private":false,"summary":"\nCreates a custom prop.","fname":"createCustom","realm":"sv","param":{"1":"pos","2":"ang","3":"vertices","4":"frozen","ang":"The angles to spawn the prop","pos":"The position to spawn the prop","frozen":"Whether the prop starts frozen"},"name":"props_library.createCustom","description":"\nCreates a custom prop."},"props_library.createSent":{"server":true,"ret":"The sent object","class":"function","library":"prop","private":false,"summary":"\nCreates a sent.","fname":"createSent","realm":"sv","param":{"1":"pos","2":"ang","3":"class","4":"frozen","ang":"Angle of created sent","pos":"Position of created sent","frozen":"True to spawn frozen","class":"Class of created sent"},"name":"props_library.createSent","description":"\nCreates a sent."},"props_library.setPropClean":{"summary":"\nSets whether the chip should remove created props when the chip is removed ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the props should be cleaned or not"},"fname":"setPropClean","realm":"sv","description":"\nSets whether the chip should remove created props when the chip is removed","name":"props_library.setPropClean","library":"prop"},"props_library.spawnRate":{"server":true,"ret":"Number of props per second the user can spawn","class":"function","library":"prop","private":false,"summary":"\nReturns how many props per second the user can spawn ","fname":"spawnRate","realm":"sv","param":[],"name":"props_library.spawnRate","description":"\nReturns how many props per second the user can spawn"},"props_library.propsLeft":{"server":true,"ret":"number of props able to be spawned","class":"function","library":"prop","private":false,"summary":"\nChecks how many props can be spawned ","fname":"propsLeft","realm":"sv","param":[],"name":"props_library.propsLeft","description":"\nChecks how many props can be spawned"},"props_library.create":{"server":true,"ret":"The prop object","class":"function","library":"prop","private":false,"summary":"\nCreates a prop.","fname":"create","realm":"sv","param":["pos","ang","model","frozen"],"name":"props_library.create","description":"\nCreates a prop."},"props_library.createComponent":{"server":true,"ret":"Component entity","class":"function","library":"prop","private":false,"summary":"\nCreates starfall component.\\n Allowed components:\\n starfall_hud\\n starfall_screen ","fname":"createComponent","realm":"sv","param":{"1":"pos","2":"ang","3":"class","4":"model","5":"frozen","pos":"Position of created component","ang":"Angle of created component","model":"Model of created component","frozen":"True to spawn frozen","class":"Class of created component"},"name":"props_library.createComponent","description":"\nCreates starfall component.\\n Allowed components:\\n starfall_hud\\n starfall_screen"},"props_library.canSpawn":{"server":true,"ret":"True if user can spawn props, False if not.","class":"function","library":"prop","private":false,"summary":"\nChecks if a user can spawn anymore props.","fname":"canSpawn","realm":"sv","param":[],"name":"props_library.canSpawn","description":"\nChecks if a user can spawn anymore props."}},"libraries":{"1":"prop","prop":{"server":true,"tables":[],"client":true,"summary":"\nLibrary for creating and manipulating physics-less models AKA \"Props\".","libtbl":"props_library","fields":[],"class":"library","functions":{"1":"canSpawn","2":"create","3":"createComponent","4":"createCustom","5":"createSent","6":"propsLeft","7":"setPropClean","8":"setPropUndo","9":"spawnRate","spawnRate":{"server":true,"ret":"Number of props per second the user can spawn","class":"function","library":"prop","private":false,"summary":"\nReturns how many props per second the user can spawn ","fname":"spawnRate","realm":"sv","param":[],"name":"props_library.spawnRate","description":"\nReturns how many props per second the user can spawn"},"setPropUndo":{"summary":"\nSets whether the props should be undo-able ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the props should be undo-able"},"fname":"setPropUndo","realm":"sv","description":"\nSets whether the props should be undo-able","name":"props_library.setPropUndo","library":"prop"},"createSent":{"server":true,"ret":"The sent object","class":"function","library":"prop","private":false,"summary":"\nCreates a sent.","fname":"createSent","realm":"sv","param":{"1":"pos","2":"ang","3":"class","4":"frozen","ang":"Angle of created sent","pos":"Position of created sent","frozen":"True to spawn frozen","class":"Class of created sent"},"name":"props_library.createSent","description":"\nCreates a sent."},"create":{"server":true,"ret":"The prop object","class":"function","library":"prop","private":false,"summary":"\nCreates a prop.","fname":"create","realm":"sv","param":["pos","ang","model","frozen"],"name":"props_library.create","description":"\nCreates a prop."},"createComponent":{"server":true,"ret":"Component entity","class":"function","library":"prop","private":false,"summary":"\nCreates starfall component.\\n Allowed components:\\n starfall_hud\\n starfall_screen ","fname":"createComponent","realm":"sv","param":{"1":"pos","2":"ang","3":"class","4":"model","5":"frozen","pos":"Position of created component","ang":"Angle of created component","model":"Model of created component","frozen":"True to spawn frozen","class":"Class of created component"},"name":"props_library.createComponent","description":"\nCreates starfall component.\\n Allowed components:\\n starfall_hud\\n starfall_screen"},"propsLeft":{"server":true,"ret":"number of props able to be spawned","class":"function","library":"prop","private":false,"summary":"\nChecks how many props can be spawned ","fname":"propsLeft","realm":"sv","param":[],"name":"props_library.propsLeft","description":"\nChecks how many props can be spawned"},"setPropClean":{"summary":"\nSets whether the chip should remove created props when the chip is removed ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the props should be cleaned or not"},"fname":"setPropClean","realm":"sv","description":"\nSets whether the chip should remove created props when the chip is removed","name":"props_library.setPropClean","library":"prop"},"createCustom":{"server":true,"ret":"The prop object","class":"function","library":"prop","private":false,"summary":"\nCreates a custom prop.","fname":"createCustom","realm":"sv","param":{"1":"pos","2":"ang","3":"vertices","4":"frozen","ang":"The angles to spawn the prop","pos":"The position to spawn the prop","frozen":"Whether the prop starts frozen"},"name":"props_library.createCustom","description":"\nCreates a custom prop."},"canSpawn":{"server":true,"ret":"True if user can spawn props, False if not.","class":"function","library":"prop","private":false,"summary":"\nChecks if a user can spawn anymore props.","fname":"canSpawn","realm":"sv","param":[],"name":"props_library.canSpawn","description":"\nChecks if a user can spawn anymore props."}},"name":"prop","description":"\nLibrary for creating and manipulating physics-less models AKA \"Props\"."}},"type":"file","doc":[{"server":true,"tables":[],"client":true,"summary":"\nLibrary for creating and manipulating physics-less models AKA \"Props\".","libtbl":"props_library","fields":[],"class":"library","functions":{"1":"canSpawn","2":"create","3":"createComponent","4":"createCustom","5":"createSent","6":"propsLeft","7":"setPropClean","8":"setPropUndo","9":"spawnRate","spawnRate":{"server":true,"ret":"Number of props per second the user can spawn","class":"function","library":"prop","private":false,"summary":"\nReturns how many props per second the user can spawn ","fname":"spawnRate","realm":"sv","param":[],"name":"props_library.spawnRate","description":"\nReturns how many props per second the user can spawn"},"setPropUndo":{"summary":"\nSets whether the props should be undo-able ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the props should be undo-able"},"fname":"setPropUndo","realm":"sv","description":"\nSets whether the props should be undo-able","name":"props_library.setPropUndo","library":"prop"},"createSent":{"server":true,"ret":"The sent object","class":"function","library":"prop","private":false,"summary":"\nCreates a sent.","fname":"createSent","realm":"sv","param":{"1":"pos","2":"ang","3":"class","4":"frozen","ang":"Angle of created sent","pos":"Position of created sent","frozen":"True to spawn frozen","class":"Class of created sent"},"name":"props_library.createSent","description":"\nCreates a sent."},"create":{"server":true,"ret":"The prop object","class":"function","library":"prop","private":false,"summary":"\nCreates a prop.","fname":"create","realm":"sv","param":["pos","ang","model","frozen"],"name":"props_library.create","description":"\nCreates a prop."},"createComponent":{"server":true,"ret":"Component entity","class":"function","library":"prop","private":false,"summary":"\nCreates starfall component.\\n Allowed components:\\n starfall_hud\\n starfall_screen ","fname":"createComponent","realm":"sv","param":{"1":"pos","2":"ang","3":"class","4":"model","5":"frozen","pos":"Position of created component","ang":"Angle of created component","model":"Model of created component","frozen":"True to spawn frozen","class":"Class of created component"},"name":"props_library.createComponent","description":"\nCreates starfall component.\\n Allowed components:\\n starfall_hud\\n starfall_screen"},"propsLeft":{"server":true,"ret":"number of props able to be spawned","class":"function","library":"prop","private":false,"summary":"\nChecks how many props can be spawned ","fname":"propsLeft","realm":"sv","param":[],"name":"props_library.propsLeft","description":"\nChecks how many props can be spawned"},"setPropClean":{"summary":"\nSets whether the chip should remove created props when the chip is removed ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the props should be cleaned or not"},"fname":"setPropClean","realm":"sv","description":"\nSets whether the chip should remove created props when the chip is removed","name":"props_library.setPropClean","library":"prop"},"createCustom":{"server":true,"ret":"The prop object","class":"function","library":"prop","private":false,"summary":"\nCreates a custom prop.","fname":"createCustom","realm":"sv","param":{"1":"pos","2":"ang","3":"vertices","4":"frozen","ang":"The angles to spawn the prop","pos":"The position to spawn the prop","frozen":"Whether the prop starts frozen"},"name":"props_library.createCustom","description":"\nCreates a custom prop."},"canSpawn":{"server":true,"ret":"True if user can spawn props, False if not.","class":"function","library":"prop","private":false,"summary":"\nChecks if a user can spawn anymore props.","fname":"canSpawn","realm":"sv","param":[],"name":"props_library.canSpawn","description":"\nChecks if a user can spawn anymore props."}},"name":"prop","description":"\nLibrary for creating and manipulating physics-less models AKA \"Props\"."},{"server":true,"ret":"The prop object","class":"function","library":"prop","private":false,"summary":"\nCreates a prop.","fname":"create","realm":"sv","param":["pos","ang","model","frozen"],"name":"props_library.create","description":"\nCreates a prop."},{"server":true,"ret":"The prop object","class":"function","library":"prop","private":false,"summary":"\nCreates a custom prop.","fname":"createCustom","realm":"sv","param":{"1":"pos","2":"ang","3":"vertices","4":"frozen","ang":"The angles to spawn the prop","pos":"The position to spawn the prop","frozen":"Whether the prop starts frozen"},"name":"props_library.createCustom","description":"\nCreates a custom prop."},{"server":true,"ret":"Component entity","class":"function","library":"prop","private":false,"summary":"\nCreates starfall component.\\n Allowed components:\\n starfall_hud\\n starfall_screen ","fname":"createComponent","realm":"sv","param":{"1":"pos","2":"ang","3":"class","4":"model","5":"frozen","pos":"Position of created component","ang":"Angle of created component","model":"Model of created component","frozen":"True to spawn frozen","class":"Class of created component"},"name":"props_library.createComponent","description":"\nCreates starfall component.\\n Allowed components:\\n starfall_hud\\n starfall_screen"},{"server":true,"ret":"The sent object","class":"function","library":"prop","private":false,"summary":"\nCreates a sent.","fname":"createSent","realm":"sv","param":{"1":"pos","2":"ang","3":"class","4":"frozen","ang":"Angle of created sent","pos":"Position of created sent","frozen":"True to spawn frozen","class":"Class of created sent"},"name":"props_library.createSent","description":"\nCreates a sent."},{"server":true,"ret":"True if user can spawn props, False if not.","class":"function","library":"prop","private":false,"summary":"\nChecks if a user can spawn anymore props.","fname":"canSpawn","realm":"sv","param":[],"name":"props_library.canSpawn","description":"\nChecks if a user can spawn anymore props."},{"server":true,"ret":"number of props able to be spawned","class":"function","library":"prop","private":false,"summary":"\nChecks how many props can be spawned ","fname":"propsLeft","realm":"sv","param":[],"name":"props_library.propsLeft","description":"\nChecks how many props can be spawned"},{"server":true,"ret":"Number of props per second the user can spawn","class":"function","library":"prop","private":false,"summary":"\nReturns how many props per second the user can spawn ","fname":"spawnRate","realm":"sv","param":[],"name":"props_library.spawnRate","description":"\nReturns how many props per second the user can spawn"},{"summary":"\nSets whether the chip should remove created props when the chip is removed ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the props should be cleaned or not"},"fname":"setPropClean","realm":"sv","description":"\nSets whether the chip should remove created props when the chip is removed","name":"props_library.setPropClean","library":"prop"},{"summary":"\nSets whether the props should be undo-able ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the props should be undo-able"},"fname":"setPropUndo","realm":"sv","description":"\nSets whether the props should be undo-able","name":"props_library.setPropUndo","library":"prop"}],"name":"libs_sv/prop.lua","description":"\nLibrary for creating and manipulating physics-less models AKA \"Props\"."},"libs_sh/fastlz.lua":{"summary":"\nFastLZ library ","tables":[],"functions":{"1":"fastlz_library.compress","2":"fastlz_library.decompress","fastlz_library.compress":{"summary":"\nCompress string using FastLZ ","ret":"FastLZ compressed string","class":"function","private":false,"library":"fastlz","fname":"compress","realm":"sh","param":{"1":"s","s":"String to compress"},"name":"fastlz_library.compress","description":"\nCompress string using FastLZ"},"fastlz_library.decompress":{"summary":"\nDecompress using FastLZ ","ret":"Decompressed string","class":"function","private":false,"library":"fastlz","fname":"decompress","realm":"sh","param":{"1":"s","s":"FastLZ compressed string to decode"},"name":"fastlz_library.decompress","description":"\nDecompress using FastLZ"}},"libraries":{"1":"fastlz","fastlz":{"server":true,"tables":[],"client":true,"summary":"\nFastLZ library ","libtbl":"fastlz_library","fields":[],"class":"library","functions":{"1":"compress","2":"decompress","compress":{"summary":"\nCompress string using FastLZ ","ret":"FastLZ compressed string","class":"function","private":false,"library":"fastlz","fname":"compress","realm":"sh","param":{"1":"s","s":"String to compress"},"name":"fastlz_library.compress","description":"\nCompress string using FastLZ"},"decompress":{"summary":"\nDecompress using FastLZ ","ret":"Decompressed string","class":"function","private":false,"library":"fastlz","fname":"decompress","realm":"sh","param":{"1":"s","s":"FastLZ compressed string to decode"},"name":"fastlz_library.decompress","description":"\nDecompress using FastLZ"}},"name":"fastlz","description":"\nFastLZ library"}},"type":"file","doc":[{"server":true,"tables":[],"client":true,"summary":"\nFastLZ library ","libtbl":"fastlz_library","fields":[],"class":"library","functions":{"1":"compress","2":"decompress","compress":{"summary":"\nCompress string using FastLZ ","ret":"FastLZ compressed string","class":"function","private":false,"library":"fastlz","fname":"compress","realm":"sh","param":{"1":"s","s":"String to compress"},"name":"fastlz_library.compress","description":"\nCompress string using FastLZ"},"decompress":{"summary":"\nDecompress using FastLZ ","ret":"Decompressed string","class":"function","private":false,"library":"fastlz","fname":"decompress","realm":"sh","param":{"1":"s","s":"FastLZ compressed string to decode"},"name":"fastlz_library.decompress","description":"\nDecompress using FastLZ"}},"name":"fastlz","description":"\nFastLZ library"},{"summary":"\nCompress string using FastLZ ","ret":"FastLZ compressed string","class":"function","private":false,"library":"fastlz","fname":"compress","realm":"sh","param":{"1":"s","s":"String to compress"},"name":"fastlz_library.compress","description":"\nCompress string using FastLZ"},{"summary":"\nDecompress using FastLZ ","ret":"Decompressed string","class":"function","private":false,"library":"fastlz","fname":"decompress","realm":"sh","param":{"1":"s","s":"FastLZ compressed string to decode"},"name":"fastlz_library.decompress","description":"\nDecompress using FastLZ"}],"name":"libs_sh/fastlz.lua","description":"\nFastLZ library"},"libs_sv/constraint.lua":{"summary":"\nLibrary for creating and manipulating constraints.","tables":[],"functions":{"1":"constraint_library.axis","2":"constraint_library.ballsocket","3":"constraint_library.ballsocketadv","4":"constraint_library.breakAll","5":"constraint_library.breakType","6":"constraint_library.constraintsLeft","7":"constraint_library.elastic","8":"constraint_library.getTable","9":"constraint_library.nocollide","10":"constraint_library.rope","11":"constraint_library.setConstraintClean","12":"constraint_library.setElasticLength","13":"constraint_library.setRopeLength","14":"constraint_library.slider","15":"constraint_library.weld","constraint_library.rope":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nRopes two entities ","fname":"rope","realm":"sv","param":["index","e1","e2","bone1","bone2","v1","v2","length","addlength","force_lim","width","material","rigid"],"name":"constraint_library.rope","description":"\nRopes two entities"},"constraint_library.elastic":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nElastic two entities ","fname":"elastic","realm":"sv","param":["index","e1","e2","bone1","bone2","v1","v2","const","damp","rdamp","width","strech"],"name":"constraint_library.elastic","description":"\nElastic two entities"},"constraint_library.setConstraintClean":{"summary":"\nSets whether the chip should remove created constraints when the chip is removed ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the constraints should be cleaned or not"},"fname":"setConstraintClean","realm":"sv","description":"\nSets whether the chip should remove created constraints when the chip is removed","name":"constraint_library.setConstraintClean","library":"constraint"},"constraint_library.getTable":{"summary":"\nReturns the table of constraints on an entity ","ret":"Table of entity constraints","class":"function","private":false,"library":"constraint","fname":"getTable","realm":"sv","param":{"1":"ent","ent":"The entity"},"name":"constraint_library.getTable","description":"\nReturns the table of constraints on an entity"},"constraint_library.breakType":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBreaks all constraints of a certain type on an entity ","fname":"breakType","realm":"sv","param":["e","typename"],"name":"constraint_library.breakType","description":"\nBreaks all constraints of a certain type on an entity"},"constraint_library.constraintsLeft":{"server":true,"ret":"number of constraints able to be spawned","class":"function","library":"constraint","private":false,"summary":"\nChecks how many constraints can be spawned ","fname":"constraintsLeft","realm":"sv","param":[],"name":"constraint_library.constraintsLeft","description":"\nChecks how many constraints can be spawned"},"constraint_library.weld":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nWelds two entities ","fname":"weld","realm":"sv","param":{"1":"e1","2":"e2","3":"bone1","4":"bone2","5":"force_lim","6":"nocollide","nocollide":"Bool whether or not to nocollide the two entities","bone1":"Number bone of the first entity","e1":"The first entity","e2":"The second entity","force_lim":"Max force the weld can take before breaking","bone2":"Number bone of the second entity"},"name":"constraint_library.weld","description":"\nWelds two entities"},"constraint_library.axis":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nAxis two entities ","fname":"axis","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","force_lim","torque_lim","friction","nocollide","laxis"],"name":"constraint_library.axis","description":"\nAxis two entities"},"constraint_library.ballsocket":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBallsocket two entities ","fname":"ballsocket","realm":"sv","param":["e1","e2","bone1","bone2","v1","force_lim","torque_lim","nocollide"],"name":"constraint_library.ballsocket","description":"\nBallsocket two entities"},"constraint_library.slider":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSliders two entities ","fname":"slider","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","width"],"name":"constraint_library.slider","description":"\nSliders two entities"},"constraint_library.setElasticLength":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSets the length of an elastic attached to the entity ","fname":"setElasticLength","realm":"sv","param":["index","e","length"],"name":"constraint_library.setElasticLength","description":"\nSets the length of an elastic attached to the entity"},"constraint_library.setRopeLength":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSets the length of a rope attached to the entity ","fname":"setRopeLength","realm":"sv","param":["index","e","length"],"name":"constraint_library.setRopeLength","description":"\nSets the length of a rope attached to the entity"},"constraint_library.ballsocketadv":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nAdvanced Ballsocket two entities ","fname":"ballsocketadv","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","force_lim","torque_lim","minv","maxv","frictionv","rotateonly","nocollide"],"name":"constraint_library.ballsocketadv","description":"\nAdvanced Ballsocket two entities"},"constraint_library.breakAll":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBreaks all constraints on an entity ","fname":"breakAll","realm":"sv","param":["e"],"name":"constraint_library.breakAll","description":"\nBreaks all constraints on an entity"},"constraint_library.nocollide":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nNocollides two entities ","fname":"nocollide","realm":"sv","param":["e1","e2","bone1","bone2"],"name":"constraint_library.nocollide","description":"\nNocollides two entities"}},"libraries":{"1":"constraint","constraint":{"server":true,"tables":[],"summary":"\nLibrary for creating and manipulating constraints.","libtbl":"constraint_library","fields":[],"class":"library","functions":{"1":"axis","2":"ballsocket","3":"ballsocketadv","4":"breakAll","5":"breakType","6":"constraintsLeft","7":"elastic","8":"getTable","9":"nocollide","10":"rope","11":"setConstraintClean","12":"setElasticLength","13":"setRopeLength","14":"slider","15":"weld","rope":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nRopes two entities ","fname":"rope","realm":"sv","param":["index","e1","e2","bone1","bone2","v1","v2","length","addlength","force_lim","width","material","rigid"],"name":"constraint_library.rope","description":"\nRopes two entities"},"ballsocket":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBallsocket two entities ","fname":"ballsocket","realm":"sv","param":["e1","e2","bone1","bone2","v1","force_lim","torque_lim","nocollide"],"name":"constraint_library.ballsocket","description":"\nBallsocket two entities"},"setRopeLength":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSets the length of a rope attached to the entity ","fname":"setRopeLength","realm":"sv","param":["index","e","length"],"name":"constraint_library.setRopeLength","description":"\nSets the length of a rope attached to the entity"},"constraintsLeft":{"server":true,"ret":"number of constraints able to be spawned","class":"function","library":"constraint","private":false,"summary":"\nChecks how many constraints can be spawned ","fname":"constraintsLeft","realm":"sv","param":[],"name":"constraint_library.constraintsLeft","description":"\nChecks how many constraints can be spawned"},"setElasticLength":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSets the length of an elastic attached to the entity ","fname":"setElasticLength","realm":"sv","param":["index","e","length"],"name":"constraint_library.setElasticLength","description":"\nSets the length of an elastic attached to the entity"},"slider":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSliders two entities ","fname":"slider","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","width"],"name":"constraint_library.slider","description":"\nSliders two entities"},"setConstraintClean":{"summary":"\nSets whether the chip should remove created constraints when the chip is removed ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the constraints should be cleaned or not"},"fname":"setConstraintClean","realm":"sv","description":"\nSets whether the chip should remove created constraints when the chip is removed","name":"constraint_library.setConstraintClean","library":"constraint"},"ballsocketadv":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nAdvanced Ballsocket two entities ","fname":"ballsocketadv","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","force_lim","torque_lim","minv","maxv","frictionv","rotateonly","nocollide"],"name":"constraint_library.ballsocketadv","description":"\nAdvanced Ballsocket two entities"},"breakAll":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBreaks all constraints on an entity ","fname":"breakAll","realm":"sv","param":["e"],"name":"constraint_library.breakAll","description":"\nBreaks all constraints on an entity"},"breakType":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBreaks all constraints of a certain type on an entity ","fname":"breakType","realm":"sv","param":["e","typename"],"name":"constraint_library.breakType","description":"\nBreaks all constraints of a certain type on an entity"},"weld":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nWelds two entities ","fname":"weld","realm":"sv","param":{"1":"e1","2":"e2","3":"bone1","4":"bone2","5":"force_lim","6":"nocollide","nocollide":"Bool whether or not to nocollide the two entities","bone1":"Number bone of the first entity","e1":"The first entity","e2":"The second entity","force_lim":"Max force the weld can take before breaking","bone2":"Number bone of the second entity"},"name":"constraint_library.weld","description":"\nWelds two entities"},"axis":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nAxis two entities ","fname":"axis","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","force_lim","torque_lim","friction","nocollide","laxis"],"name":"constraint_library.axis","description":"\nAxis two entities"},"getTable":{"summary":"\nReturns the table of constraints on an entity ","ret":"Table of entity constraints","class":"function","private":false,"library":"constraint","fname":"getTable","realm":"sv","param":{"1":"ent","ent":"The entity"},"name":"constraint_library.getTable","description":"\nReturns the table of constraints on an entity"},"nocollide":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nNocollides two entities ","fname":"nocollide","realm":"sv","param":["e1","e2","bone1","bone2"],"name":"constraint_library.nocollide","description":"\nNocollides two entities"},"elastic":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nElastic two entities ","fname":"elastic","realm":"sv","param":["index","e1","e2","bone1","bone2","v1","v2","const","damp","rdamp","width","strech"],"name":"constraint_library.elastic","description":"\nElastic two entities"}},"name":"constraint","description":"\nLibrary for creating and manipulating constraints."}},"type":"file","doc":[{"server":true,"tables":[],"summary":"\nLibrary for creating and manipulating constraints.","libtbl":"constraint_library","fields":[],"class":"library","functions":{"1":"axis","2":"ballsocket","3":"ballsocketadv","4":"breakAll","5":"breakType","6":"constraintsLeft","7":"elastic","8":"getTable","9":"nocollide","10":"rope","11":"setConstraintClean","12":"setElasticLength","13":"setRopeLength","14":"slider","15":"weld","rope":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nRopes two entities ","fname":"rope","realm":"sv","param":["index","e1","e2","bone1","bone2","v1","v2","length","addlength","force_lim","width","material","rigid"],"name":"constraint_library.rope","description":"\nRopes two entities"},"ballsocket":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBallsocket two entities ","fname":"ballsocket","realm":"sv","param":["e1","e2","bone1","bone2","v1","force_lim","torque_lim","nocollide"],"name":"constraint_library.ballsocket","description":"\nBallsocket two entities"},"setRopeLength":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSets the length of a rope attached to the entity ","fname":"setRopeLength","realm":"sv","param":["index","e","length"],"name":"constraint_library.setRopeLength","description":"\nSets the length of a rope attached to the entity"},"constraintsLeft":{"server":true,"ret":"number of constraints able to be spawned","class":"function","library":"constraint","private":false,"summary":"\nChecks how many constraints can be spawned ","fname":"constraintsLeft","realm":"sv","param":[],"name":"constraint_library.constraintsLeft","description":"\nChecks how many constraints can be spawned"},"setElasticLength":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSets the length of an elastic attached to the entity ","fname":"setElasticLength","realm":"sv","param":["index","e","length"],"name":"constraint_library.setElasticLength","description":"\nSets the length of an elastic attached to the entity"},"slider":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSliders two entities ","fname":"slider","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","width"],"name":"constraint_library.slider","description":"\nSliders two entities"},"setConstraintClean":{"summary":"\nSets whether the chip should remove created constraints when the chip is removed ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the constraints should be cleaned or not"},"fname":"setConstraintClean","realm":"sv","description":"\nSets whether the chip should remove created constraints when the chip is removed","name":"constraint_library.setConstraintClean","library":"constraint"},"ballsocketadv":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nAdvanced Ballsocket two entities ","fname":"ballsocketadv","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","force_lim","torque_lim","minv","maxv","frictionv","rotateonly","nocollide"],"name":"constraint_library.ballsocketadv","description":"\nAdvanced Ballsocket two entities"},"breakAll":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBreaks all constraints on an entity ","fname":"breakAll","realm":"sv","param":["e"],"name":"constraint_library.breakAll","description":"\nBreaks all constraints on an entity"},"breakType":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBreaks all constraints of a certain type on an entity ","fname":"breakType","realm":"sv","param":["e","typename"],"name":"constraint_library.breakType","description":"\nBreaks all constraints of a certain type on an entity"},"weld":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nWelds two entities ","fname":"weld","realm":"sv","param":{"1":"e1","2":"e2","3":"bone1","4":"bone2","5":"force_lim","6":"nocollide","nocollide":"Bool whether or not to nocollide the two entities","bone1":"Number bone of the first entity","e1":"The first entity","e2":"The second entity","force_lim":"Max force the weld can take before breaking","bone2":"Number bone of the second entity"},"name":"constraint_library.weld","description":"\nWelds two entities"},"axis":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nAxis two entities ","fname":"axis","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","force_lim","torque_lim","friction","nocollide","laxis"],"name":"constraint_library.axis","description":"\nAxis two entities"},"getTable":{"summary":"\nReturns the table of constraints on an entity ","ret":"Table of entity constraints","class":"function","private":false,"library":"constraint","fname":"getTable","realm":"sv","param":{"1":"ent","ent":"The entity"},"name":"constraint_library.getTable","description":"\nReturns the table of constraints on an entity"},"nocollide":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nNocollides two entities ","fname":"nocollide","realm":"sv","param":["e1","e2","bone1","bone2"],"name":"constraint_library.nocollide","description":"\nNocollides two entities"},"elastic":{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nElastic two entities ","fname":"elastic","realm":"sv","param":["index","e1","e2","bone1","bone2","v1","v2","const","damp","rdamp","width","strech"],"name":"constraint_library.elastic","description":"\nElastic two entities"}},"name":"constraint","description":"\nLibrary for creating and manipulating constraints."},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nWelds two entities ","fname":"weld","realm":"sv","param":{"1":"e1","2":"e2","3":"bone1","4":"bone2","5":"force_lim","6":"nocollide","nocollide":"Bool whether or not to nocollide the two entities","bone1":"Number bone of the first entity","e1":"The first entity","e2":"The second entity","force_lim":"Max force the weld can take before breaking","bone2":"Number bone of the second entity"},"name":"constraint_library.weld","description":"\nWelds two entities"},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nAxis two entities ","fname":"axis","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","force_lim","torque_lim","friction","nocollide","laxis"],"name":"constraint_library.axis","description":"\nAxis two entities"},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBallsocket two entities ","fname":"ballsocket","realm":"sv","param":["e1","e2","bone1","bone2","v1","force_lim","torque_lim","nocollide"],"name":"constraint_library.ballsocket","description":"\nBallsocket two entities"},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nAdvanced Ballsocket two entities ","fname":"ballsocketadv","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","force_lim","torque_lim","minv","maxv","frictionv","rotateonly","nocollide"],"name":"constraint_library.ballsocketadv","description":"\nAdvanced Ballsocket two entities"},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nElastic two entities ","fname":"elastic","realm":"sv","param":["index","e1","e2","bone1","bone2","v1","v2","const","damp","rdamp","width","strech"],"name":"constraint_library.elastic","description":"\nElastic two entities"},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nRopes two entities ","fname":"rope","realm":"sv","param":["index","e1","e2","bone1","bone2","v1","v2","length","addlength","force_lim","width","material","rigid"],"name":"constraint_library.rope","description":"\nRopes two entities"},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSliders two entities ","fname":"slider","realm":"sv","param":["e1","e2","bone1","bone2","v1","v2","width"],"name":"constraint_library.slider","description":"\nSliders two entities"},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nNocollides two entities ","fname":"nocollide","realm":"sv","param":["e1","e2","bone1","bone2"],"name":"constraint_library.nocollide","description":"\nNocollides two entities"},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSets the length of a rope attached to the entity ","fname":"setRopeLength","realm":"sv","param":["index","e","length"],"name":"constraint_library.setRopeLength","description":"\nSets the length of a rope attached to the entity"},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nSets the length of an elastic attached to the entity ","fname":"setElasticLength","realm":"sv","param":["index","e","length"],"name":"constraint_library.setElasticLength","description":"\nSets the length of an elastic attached to the entity"},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBreaks all constraints on an entity ","fname":"breakAll","realm":"sv","param":["e"],"name":"constraint_library.breakAll","description":"\nBreaks all constraints on an entity"},{"server":true,"class":"function","library":"constraint","private":false,"summary":"\nBreaks all constraints of a certain type on an entity ","fname":"breakType","realm":"sv","param":["e","typename"],"name":"constraint_library.breakType","description":"\nBreaks all constraints of a certain type on an entity"},{"summary":"\nReturns the table of constraints on an entity ","ret":"Table of entity constraints","class":"function","private":false,"library":"constraint","fname":"getTable","realm":"sv","param":{"1":"ent","ent":"The entity"},"name":"constraint_library.getTable","description":"\nReturns the table of constraints on an entity"},{"summary":"\nSets whether the chip should remove created constraints when the chip is removed ","class":"function","private":false,"param":{"1":"on","on":"Boolean whether the constraints should be cleaned or not"},"fname":"setConstraintClean","realm":"sv","description":"\nSets whether the chip should remove created constraints when the chip is removed","name":"constraint_library.setConstraintClean","library":"constraint"},{"server":true,"ret":"number of constraints able to be spawned","class":"function","library":"constraint","private":false,"summary":"\nChecks how many constraints can be spawned ","fname":"constraintsLeft","realm":"sv","param":[],"name":"constraint_library.constraintsLeft","description":"\nChecks how many constraints can be spawned"}],"name":"libs_sv/constraint.lua","description":"\nLibrary for creating and manipulating constraints."},"libs_sh/npc.lua":{"summary":"\n \nNpc functions.","tables":[],"functions":{"1":"npc_methods:addEntityRelationship","2":"npc_methods:addRelationship","3":"npc_methods:attackMelee","4":"npc_methods:attackRange","5":"npc_methods:getEnemy","6":"npc_methods:getRelationship","7":"npc_methods:giveWeapon","8":"npc_methods:goRun","9":"npc_methods:goWalk","10":"npc_methods:setEnemy","11":"npc_methods:stop","npc_methods:giveWeapon":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nGives the npc a weapon ","fname":"giveWeapon","realm":"sv","param":{"1":"wep","wep":"The classname of the weapon"},"name":"npc_methods:giveWeapon","description":"\nGives the npc a weapon"},"npc_methods:setEnemy":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nTell the npc to fight this ","fname":"setEnemy","realm":"sv","param":{"1":"ent","ent":"Target entity"},"name":"npc_methods:setEnemy","description":"\nTell the npc to fight this"},"npc_methods:addEntityRelationship":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nAdds a relationship to the npc with an entity ","fname":"addEntityRelationship","realm":"sv","param":{"1":"ent","2":"disp","3":"priority","priority":"number how strong the relationship is. Higher number is stronger","disp":"String of the relationship. (hate fear like neutral)","ent":"The target entity"},"name":"npc_methods:addEntityRelationship","description":"\nAdds a relationship to the npc with an entity"},"npc_methods:goWalk":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc walk to a destination ","fname":"goWalk","realm":"sv","param":{"1":"vec","vec":"The position of the destination"},"name":"npc_methods:goWalk","description":"\nMakes the npc walk to a destination"},"npc_methods:addRelationship":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nAdds a relationship to the npc ","fname":"addRelationship","realm":"sv","param":{"1":"str","str":"The relationship string. http://wiki.garrysmod.com/page/NPC/AddRelationship"},"name":"npc_methods:addRelationship","description":"\nAdds a relationship to the npc"},"npc_methods:getRelationship":{"server":true,"ret":"string relationship of the npc with the target","class":"function","classlib":"Npc","private":false,"summary":"\nGets the npc's relationship to the target ","fname":"getRelationship","realm":"sv","param":{"1":"ent","ent":"Target entity"},"name":"npc_methods:getRelationship","description":"\nGets the npc's relationship to the target"},"npc_methods:goRun":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc run to a destination ","fname":"goRun","realm":"sv","param":{"1":"vec","vec":"The position of the destination"},"name":"npc_methods:goRun","description":"\nMakes the npc run to a destination"},"npc_methods:attackRange":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc do a ranged attack ","fname":"attackRange","realm":"sv","param":[],"name":"npc_methods:attackRange","description":"\nMakes the npc do a ranged attack"},"npc_methods:attackMelee":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc do a melee attack ","fname":"attackMelee","realm":"sv","param":[],"name":"npc_methods:attackMelee","description":"\nMakes the npc do a melee attack"},"npc_methods:stop":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nStops the npc ","fname":"stop","realm":"sv","param":[],"name":"npc_methods:stop","description":"\nStops the npc"},"npc_methods:getEnemy":{"server":true,"ret":"Entity the npc is fighting","class":"function","classlib":"Npc","private":false,"summary":"\nGets what the npc is fighting ","fname":"getEnemy","realm":"sv","param":[],"name":"npc_methods:getEnemy","description":"\nGets what the npc is fighting"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nNpc functions.","param":[],"description":"\n \nNpc functions. \n"},{"methods":{"1":"addEntityRelationship","2":"addRelationship","3":"attackMelee","4":"attackRange","5":"getEnemy","6":"getRelationship","7":"giveWeapon","8":"goRun","9":"goWalk","10":"setEnemy","11":"stop","setEnemy":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nTell the npc to fight this ","fname":"setEnemy","realm":"sv","param":{"1":"ent","ent":"Target entity"},"name":"npc_methods:setEnemy","description":"\nTell the npc to fight this"},"goRun":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc run to a destination ","fname":"goRun","realm":"sv","param":{"1":"vec","vec":"The position of the destination"},"name":"npc_methods:goRun","description":"\nMakes the npc run to a destination"},"getEnemy":{"server":true,"ret":"Entity the npc is fighting","class":"function","classlib":"Npc","private":false,"summary":"\nGets what the npc is fighting ","fname":"getEnemy","realm":"sv","param":[],"name":"npc_methods:getEnemy","description":"\nGets what the npc is fighting"},"getRelationship":{"server":true,"ret":"string relationship of the npc with the target","class":"function","classlib":"Npc","private":false,"summary":"\nGets the npc's relationship to the target ","fname":"getRelationship","realm":"sv","param":{"1":"ent","ent":"Target entity"},"name":"npc_methods:getRelationship","description":"\nGets the npc's relationship to the target"},"giveWeapon":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nGives the npc a weapon ","fname":"giveWeapon","realm":"sv","param":{"1":"wep","wep":"The classname of the weapon"},"name":"npc_methods:giveWeapon","description":"\nGives the npc a weapon"},"attackMelee":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc do a melee attack ","fname":"attackMelee","realm":"sv","param":[],"name":"npc_methods:attackMelee","description":"\nMakes the npc do a melee attack"},"goWalk":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc walk to a destination ","fname":"goWalk","realm":"sv","param":{"1":"vec","vec":"The position of the destination"},"name":"npc_methods:goWalk","description":"\nMakes the npc walk to a destination"},"attackRange":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc do a ranged attack ","fname":"attackRange","realm":"sv","param":[],"name":"npc_methods:attackRange","description":"\nMakes the npc do a ranged attack"},"stop":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nStops the npc ","fname":"stop","realm":"sv","param":[],"name":"npc_methods:stop","description":"\nStops the npc"},"addEntityRelationship":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nAdds a relationship to the npc with an entity ","fname":"addEntityRelationship","realm":"sv","param":{"1":"ent","2":"disp","3":"priority","priority":"number how strong the relationship is. Higher number is stronger","disp":"String of the relationship. (hate fear like neutral)","ent":"The target entity"},"name":"npc_methods:addEntityRelationship","description":"\nAdds a relationship to the npc with an entity"},"addRelationship":{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nAdds a relationship to the npc ","fname":"addRelationship","realm":"sv","param":{"1":"str","str":"The relationship string. http://wiki.garrysmod.com/page/NPC/AddRelationship"},"name":"npc_methods:addRelationship","description":"\nAdds a relationship to the npc"}},"class":"class","fields":[],"summary":"\nNpc type ","typtbl":"npc_methods","name":"Npc","description":"\nNpc type"},{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nAdds a relationship to the npc ","fname":"addRelationship","realm":"sv","param":{"1":"str","str":"The relationship string. http://wiki.garrysmod.com/page/NPC/AddRelationship"},"name":"npc_methods:addRelationship","description":"\nAdds a relationship to the npc"},{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nAdds a relationship to the npc with an entity ","fname":"addEntityRelationship","realm":"sv","param":{"1":"ent","2":"disp","3":"priority","priority":"number how strong the relationship is. Higher number is stronger","disp":"String of the relationship. (hate fear like neutral)","ent":"The target entity"},"name":"npc_methods:addEntityRelationship","description":"\nAdds a relationship to the npc with an entity"},{"server":true,"ret":"string relationship of the npc with the target","class":"function","classlib":"Npc","private":false,"summary":"\nGets the npc's relationship to the target ","fname":"getRelationship","realm":"sv","param":{"1":"ent","ent":"Target entity"},"name":"npc_methods:getRelationship","description":"\nGets the npc's relationship to the target"},{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nGives the npc a weapon ","fname":"giveWeapon","realm":"sv","param":{"1":"wep","wep":"The classname of the weapon"},"name":"npc_methods:giveWeapon","description":"\nGives the npc a weapon"},{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nTell the npc to fight this ","fname":"setEnemy","realm":"sv","param":{"1":"ent","ent":"Target entity"},"name":"npc_methods:setEnemy","description":"\nTell the npc to fight this"},{"server":true,"ret":"Entity the npc is fighting","class":"function","classlib":"Npc","private":false,"summary":"\nGets what the npc is fighting ","fname":"getEnemy","realm":"sv","param":[],"name":"npc_methods:getEnemy","description":"\nGets what the npc is fighting"},{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nStops the npc ","fname":"stop","realm":"sv","param":[],"name":"npc_methods:stop","description":"\nStops the npc"},{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc do a melee attack ","fname":"attackMelee","realm":"sv","param":[],"name":"npc_methods:attackMelee","description":"\nMakes the npc do a melee attack"},{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc do a ranged attack ","fname":"attackRange","realm":"sv","param":[],"name":"npc_methods:attackRange","description":"\nMakes the npc do a ranged attack"},{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc walk to a destination ","fname":"goWalk","realm":"sv","param":{"1":"vec","vec":"The position of the destination"},"name":"npc_methods:goWalk","description":"\nMakes the npc walk to a destination"},{"server":true,"class":"function","classlib":"Npc","private":false,"summary":"\nMakes the npc run to a destination ","fname":"goRun","realm":"sv","param":{"1":"vec","vec":"The position of the destination"},"name":"npc_methods:goRun","description":"\nMakes the npc run to a destination"}],"name":"libs_sh/npc.lua","description":"\n \nNpc functions. \n"},"libs_sh/entities.lua":{"summary":"\n \nShared entity library functions \n ","tables":[],"functions":{"1":"ents_metamethods:__tostring","2":"ents_methods:emitSound","3":"ents_methods:entIndex","4":"ents_methods:getAngleVelocity","5":"ents_methods:getAngleVelocityAngle","6":"ents_methods:getAngles","7":"ents_methods:getAttachment","8":"ents_methods:getAttachmentParent","9":"ents_methods:getAttachments","10":"ents_methods:getBoneCount","11":"ents_methods:getBoneMatrix","12":"ents_methods:getBoneName","13":"ents_methods:getBoneParent","14":"ents_methods:getBonePosition","15":"ents_methods:getChildren","16":"ents_methods:getChipName","17":"ents_methods:getClass","18":"ents_methods:getClipping","19":"ents_methods:getColor","20":"ents_methods:getCreationTime","21":"ents_methods:getEyeAngles","22":"ents_methods:getEyePos","23":"ents_methods:getFlexScale","24":"ents_methods:getFlexWeight","25":"ents_methods:getFlexes","26":"ents_methods:getForward","27":"ents_methods:getHealth","28":"ents_methods:getInertia","29":"ents_methods:getMass","30":"ents_methods:getMassCenter","31":"ents_methods:getMassCenterW","32":"ents_methods:getMaterial","33":"ents_methods:getMaterials","34":"ents_methods:getMatrix","35":"ents_methods:getMaxHealth","36":"ents_methods:getModel","37":"ents_methods:getOwner","38":"ents_methods:getParent","39":"ents_methods:getPhysicsObject","40":"ents_methods:getPhysicsObjectCount","41":"ents_methods:getPhysicsObjectNum","42":"ents_methods:getPos","43":"ents_methods:getPose","44":"ents_methods:getRight","45":"ents_methods:getSkin","46":"ents_methods:getSubMaterial","47":"ents_methods:getUp","48":"ents_methods:getVelocity","49":"ents_methods:getWaterLevel","50":"ents_methods:isNPC","51":"ents_methods:isOnFire","52":"ents_methods:isOnGround","53":"ents_methods:isPlayer","54":"ents_methods:isValid","55":"ents_methods:isVehicle","56":"ents_methods:isWeapon","57":"ents_methods:localToWorld","58":"ents_methods:localToWorldAngles","59":"ents_methods:lookupAttachment","60":"ents_methods:lookupBone","61":"ents_methods:lookupSequence","62":"ents_methods:manipulateBoneAngles","63":"ents_methods:manipulateBonePosition","64":"ents_methods:manipulateBoneScale","65":"ents_methods:obbCenter","66":"ents_methods:obbCenterW","67":"ents_methods:obbMaxs","68":"ents_methods:obbMins","69":"ents_methods:obbSize","70":"ents_methods:sequenceDuration","71":"ents_methods:setBodygroup","72":"ents_methods:setColor","73":"ents_methods:setFlexScale","74":"ents_methods:setFlexWeight","75":"ents_methods:setMaterial","76":"ents_methods:setMesh","77":"ents_methods:setMeshMaterial","78":"ents_methods:setNoDraw","79":"ents_methods:setPose","80":"ents_methods:setRenderBounds","81":"ents_methods:setRenderFX","82":"ents_methods:setRenderMode","83":"ents_methods:setSkin","84":"ents_methods:setSubMaterial","85":"ents_methods:stopSound","86":"ents_methods:toHologram","87":"ents_methods:translateBoneToPhysBone","88":"ents_methods:translatePhysBoneToBone","89":"ents_methods:worldSpaceAABB","90":"ents_methods:worldToLocal","91":"ents_methods:worldToLocalAngles","ents_methods:setMaterial":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the material of the entity ","fname":"setMaterial","realm":"sh","param":{"1":"material","material":", string, New material name."},"name":"ents_methods:setMaterial","description":"\nSets the material of the entity"},"ents_methods:isOnGround":{"server":true,"ret":"Boolean if it's flag is set or not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if the entity ONGROUND flag is set ","fname":"isOnGround","realm":"sh","param":[],"name":"ents_methods:isOnGround","description":"\nChecks if the entity ONGROUND flag is set"},"ents_methods:setFlexWeight":{"summary":"\nSets the weight (value) of a flex.","class":"function","private":false,"param":{"1":"flexid","2":"weight","weight":"The weight of the flex","flexid":"The id of the flex"},"fname":"setFlexWeight","realm":"sh","name":"ents_methods:setFlexWeight","classlib":"Entity","description":"\nSets the weight (value) of a flex."},"ents_methods:isPlayer":{"server":true,"ret":"True if player, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a player.","fname":"isPlayer","realm":"sh","param":[],"name":"ents_methods:isPlayer","description":"\nChecks if an entity is a player."},"ents_methods:isVehicle":{"server":true,"ret":"True if vehicle, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a vehicle.","fname":"isVehicle","realm":"sh","param":[],"name":"ents_methods:isVehicle","description":"\nChecks if an entity is a vehicle."},"ents_methods:setSubMaterial":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the submaterial of the entity ","fname":"setSubMaterial","realm":"sh","param":{"1":"index","2":"material","material":", string, New material name.","index":", number, submaterial index."},"name":"ents_methods:setSubMaterial","description":"\nSets the submaterial of the entity"},"ents_methods:getWaterLevel":{"server":true,"ret":"The water level. 0 none, 1 slightly, 2 at least halfway, 3 all the way","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns how submerged the entity is in water ","fname":"getWaterLevel","realm":"sh","param":[],"name":"ents_methods:getWaterLevel","description":"\nReturns how submerged the entity is in water"},"ents_methods:setMesh":{"summary":"\nSets a hologram or custom_prop model to a custom Mesh ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setMesh","realm":"cl","param":{"1":"mesh","mesh":"The mesh to set it to or nil to set back to normal"},"name":"ents_methods:setMesh","description":"\nSets a hologram or custom_prop model to a custom Mesh"},"ents_methods:manipulateBonePosition":{"summary":"\nAllows manipulation of an entity's bones' positions ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBonePosition","realm":"cl","param":{"1":"bone","2":"vec","vec":"The position it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBonePosition","description":"\nAllows manipulation of an entity's bones' positions"},"ents_methods:getOwner":{"summary":"\nGets the owner of the entity ","ret":"Owner","class":"function","private":false,"classlib":"Entity","fname":"getOwner","realm":"sh","param":[],"name":"ents_methods:getOwner","description":"\nGets the owner of the entity"},"ents_methods:stopSound":{"summary":"\nStops a sound on the entity ","class":"function","private":false,"param":{"1":"snd","snd":"string Soundscript path. See http://wiki.garrysmod.com/page/Entity/StopSound"},"fname":"stopSound","realm":"sh","name":"ents_methods:stopSound","classlib":"Entity","description":"\nStops a sound on the entity"},"ents_methods:lookupAttachment":{"server":true,"ret":"number of the attachment index, or 0 if it doesn't exist","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the attachment index via the entity and it's attachment name ","fname":"lookupAttachment","realm":"sh","param":{"1":"name","name":""},"name":"ents_methods:lookupAttachment","description":"\nGets the attachment index via the entity and it's attachment name"},"ents_methods:getAngles":{"server":true,"ret":"The angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angle of the entity ","fname":"getAngles","realm":"sh","param":[],"name":"ents_methods:getAngles","description":"\nReturns the angle of the entity"},"ents_metamethods:__tostring":{"server":true,"class":"function","client":true,"private":false,"summary":"\nTo string ","realm":"sh","param":[],"name":"ents_metamethods:__tostring","description":"\nTo string"},"ents_methods:getMassCenterW":{"server":true,"ret":"The position vector of the mass center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world position of the entity's mass center ","fname":"getMassCenterW","realm":"sh","param":[],"name":"ents_methods:getMassCenterW","description":"\nReturns the world position of the entity's mass center"},"ents_methods:getBoneCount":{"server":true,"ret":"Number of bones","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the number of an entity's bones ","fname":"getBoneCount","realm":"sh","param":[],"name":"ents_methods:getBoneCount","description":"\nReturns the number of an entity's bones"},"ents_methods:obbMaxs":{"server":true,"ret":"The max bounding box vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns max local bounding box vector of the entity ","fname":"obbMaxs","realm":"sh","param":[],"name":"ents_methods:obbMaxs","description":"\nReturns max local bounding box vector of the entity"},"ents_methods:getHealth":{"server":true,"ret":"Health of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the health of an entity ","fname":"getHealth","realm":"sh","param":[],"name":"ents_methods:getHealth","description":"\nGets the health of an entity"},"ents_methods:getEyeAngles":{"server":true,"ret":"Angles of the entity's eyes","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entitiy's eye angles ","fname":"getEyeAngles","realm":"sh","param":[],"name":"ents_methods:getEyeAngles","description":"\nGets the entitiy's eye angles"},"ents_methods:getPhysicsObject":{"summary":"\nGets the main physics objects of an entity ","ret":"The main physics object of the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObject","realm":"sh","param":[],"name":"ents_methods:getPhysicsObject","description":"\nGets the main physics objects of an entity"},"ents_methods:getMassCenter":{"server":true,"ret":"The position vector of the mass center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the local position of the entity's mass center ","fname":"getMassCenter","realm":"sh","param":[],"name":"ents_methods:getMassCenter","description":"\nReturns the local position of the entity's mass center"},"ents_methods:getVelocity":{"server":true,"ret":"The velocity vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the velocity of the entity ","fname":"getVelocity","realm":"sh","param":[],"name":"ents_methods:getVelocity","description":"\nReturns the velocity of the entity"},"ents_methods:getChipName":{"summary":"\nReturns the chip's name of E2s or starfalls ","class":"function","private":false,"param":[],"fname":"getChipName","realm":"sh","name":"ents_methods:getChipName","classlib":"Entity","description":"\nReturns the chip's name of E2s or starfalls"},"ents_methods:worldToLocalAngles":{"server":true,"ret":"data as local space angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts an angle in world space to entity local space ","fname":"worldToLocalAngles","realm":"sh","param":{"1":"data","data":"World space angle"},"name":"ents_methods:worldToLocalAngles","description":"\nConverts an angle in world space to entity local space"},"ents_methods:getChildren":{"server":true,"ret":"table of parented children","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the children (the parented entities) of an entity ","fname":"getChildren","realm":"sh","param":[],"name":"ents_methods:getChildren","description":"\nGets the children (the parented entities) of an entity"},"ents_methods:manipulateBoneAngles":{"summary":"\nAllows manipulation of an entity's bones' angles ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBoneAngles","realm":"cl","param":{"1":"bone","2":"ang","ang":"The angle it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBoneAngles","description":"\nAllows manipulation of an entity's bones' angles"},"ents_methods:manipulateBoneScale":{"summary":"\nAllows manipulation of an entity's bones' scale ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBoneScale","realm":"cl","param":{"1":"bone","2":"vec","vec":"The scale it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBoneScale","description":"\nAllows manipulation of an entity's bones' scale"},"ents_methods:setMeshMaterial":{"summary":"\nSets a hologram or custom_prop's custom mesh material ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setMeshMaterial","realm":"cl","param":{"1":"material","material":"The material to set it to or nil to set back to default"},"name":"ents_methods:setMeshMaterial","description":"\nSets a hologram or custom_prop's custom mesh material"},"ents_methods:getPos":{"server":true,"ret":"The position vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the position of the entity ","fname":"getPos","realm":"sh","param":[],"name":"ents_methods:getPos","description":"\nReturns the position of the entity"},"ents_methods:toHologram":{"server":true,"ret":"Hologram type","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nCasts a hologram entity into the hologram type ","fname":"toHologram","realm":"sh","param":[],"name":"ents_methods:toHologram","description":"\nCasts a hologram entity into the hologram type"},"ents_methods:getRight":{"server":true,"ret":"Vector right","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's right vector ","fname":"getRight","realm":"sh","param":[],"name":"ents_methods:getRight","description":"\nGets the entity's right vector"},"ents_methods:getSubMaterial":{"server":true,"classForced":true,"ret":"String material","class":"function","client":true,"summary":"\nGets an entities' submaterial ","private":false,"fname":"getSubMaterial","classlib":"Entity","realm":"sh","param":["index"],"name":"ents_methods:getSubMaterial","description":"\nGets an entities' submaterial"},"ents_methods:getBonePosition":{"server":true,"ret":["Position of the bone","Angle of the bone"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the bone's position and angle in world coordinates ","fname":"getBonePosition","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBonePosition","description":"\nReturns the bone's position and angle in world coordinates"},"ents_methods:obbCenterW":{"server":true,"ret":"The position vector of the outer bounding box center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world position of the entity's outer bounding box ","fname":"obbCenterW","realm":"sh","param":[],"name":"ents_methods:obbCenterW","description":"\nReturns the world position of the entity's outer bounding box"},"ents_methods:getParent":{"server":true,"ret":"Entity's parent or nil","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the parent of an entity ","fname":"getParent","realm":"sh","param":[],"name":"ents_methods:getParent","description":"\nGets the parent of an entity"},"ents_methods:getCreationTime":{"server":true,"ret":"Seconds relative to server map start","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the timer.curtime() time the entity was created on ","fname":"getCreationTime","realm":"sh","param":[],"name":"ents_methods:getCreationTime","description":"\nReturns the timer.curtime() time the entity was created on"},"ents_methods:getInertia":{"server":true,"ret":"The principle moments of inertia as a vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the principle moments of inertia of the entity ","fname":"getInertia","realm":"sh","param":[],"name":"ents_methods:getInertia","description":"\nReturns the principle moments of inertia of the entity"},"ents_methods:getUp":{"server":true,"ret":"Vector up","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's up vector ","fname":"getUp","realm":"sh","param":[],"name":"ents_methods:getUp","description":"\nGets the entity's up vector"},"ents_methods:isWeapon":{"server":true,"ret":"True if weapon, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a weapon.","fname":"isWeapon","realm":"sh","param":[],"name":"ents_methods:isWeapon","description":"\nChecks if an entity is a weapon."},"ents_methods:translateBoneToPhysBone":{"summary":"\nConverts a ragdoll bone id to the corresponding physobject id ","ret":"The physobj id","class":"function","private":false,"classlib":"Entity","fname":"translateBoneToPhysBone","realm":"sh","param":{"1":"boneid","boneid":"The ragdoll boneid"},"name":"ents_methods:translateBoneToPhysBone","description":"\nConverts a ragdoll bone id to the corresponding physobject id"},"ents_methods:getSkin":{"server":true,"ret":"Skin number","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the skin number of the entity ","fname":"getSkin","realm":"sh","param":[],"name":"ents_methods:getSkin","description":"\nGets the skin number of the entity"},"ents_methods:getMaxHealth":{"server":true,"ret":"Max Health of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the max health of an entity ","fname":"getMaxHealth","realm":"sh","param":[],"name":"ents_methods:getMaxHealth","description":"\nGets the max health of an entity"},"ents_methods:getMaterials":{"server":true,"classForced":true,"ret":"Material","class":"function","client":true,"summary":"\nGets an entities' material list ","private":false,"fname":"getMaterials","classlib":"Entity","realm":"sh","param":[],"name":"ents_methods:getMaterials","description":"\nGets an entities' material list"},"ents_methods:getMaterial":{"server":true,"classForced":true,"ret":"String material","class":"function","client":true,"summary":"\nGets an entities' material ","private":false,"fname":"getMaterial","classlib":"Entity","realm":"sh","param":[],"name":"ents_methods:getMaterial","description":"\nGets an entities' material"},"ents_methods:getEyePos":{"server":true,"ret":["Eye position of the entity","In case of a ragdoll, the position of the second eye"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's eye position ","fname":"getEyePos","realm":"sh","param":[],"name":"ents_methods:getEyePos","description":"\nGets the entity's eye position"},"ents_methods:getModel":{"server":true,"ret":"Model of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the model of an entity ","fname":"getModel","realm":"sh","param":[],"name":"ents_methods:getModel","description":"\nGets the model of an entity"},"ents_methods:setFlexScale":{"summary":"\nSets the scale of the entity flexes ","class":"function","private":false,"param":{"1":"scale","scale":"The scale of the flexes to set"},"fname":"setFlexScale","realm":"sh","name":"ents_methods:setFlexScale","classlib":"Entity","description":"\nSets the scale of the entity flexes"},"ents_methods:setPose":{"summary":"\nSet the pose value of an animation.","class":"function","private":false,"param":{"1":"pose","2":"value","value":"Value to set it to.","pose":"Name of the pose parameter"},"fname":"setPose","realm":"sh","name":"ents_methods:setPose","classlib":"Entity","description":"\nSet the pose value of an animation. Turret/Head angles for example."},"ents_methods:getFlexes":{"summary":"\nReturns a table of flexname -> flexid pairs for use in flex functions.","class":"function","private":false,"param":[],"fname":"getFlexes","realm":"sh","name":"ents_methods:getFlexes","classlib":"Entity","description":"\nReturns a table of flexname -> flexid pairs for use in flex functions."},"ents_methods:lookupSequence":{"summary":"\nGets the animation number from the animation name ","ret":"Animation index or -1 if invalid","class":"function","private":false,"classlib":"Entity","fname":"lookupSequence","realm":"sh","param":{"1":"animation","animation":"Name of the animation"},"name":"ents_methods:lookupSequence","description":"\nGets the animation number from the animation name"},"ents_methods:getFlexWeight":{"summary":"\nGets the weight (value) of a flex.","ret":"The weight of the flex","class":"function","private":false,"classlib":"Entity","fname":"getFlexWeight","realm":"sh","param":{"1":"flexid","flexid":"The id of the flex"},"name":"ents_methods:getFlexWeight","description":"\nGets the weight (value) of a flex."},"ents_methods:getPose":{"summary":"\nGet the pose value of an animation ","ret":"Value of the pose parameter","class":"function","private":false,"classlib":"Entity","fname":"getPose","realm":"sh","param":{"1":"pose","pose":"Pose parameter name"},"name":"ents_methods:getPose","description":"\nGet the pose value of an animation"},"ents_methods:getFlexScale":{"summary":"\nGets the scale of the entity flexes ","ret":"The scale of the flexes","class":"function","private":false,"classlib":"Entity","fname":"getFlexScale","realm":"sh","param":[],"name":"ents_methods:getFlexScale","description":"\nGets the scale of the entity flexes"},"ents_methods:sequenceDuration":{"summary":"\nGet the length of an animation ","ret":"Length of the animation in seconds","class":"function","private":false,"classlib":"Entity","fname":"sequenceDuration","realm":"sh","param":{"1":"id","id":"(Optional) The id of the sequence, or will default to the currently playing sequence"},"name":"ents_methods:sequenceDuration","description":"\nGet the length of an animation"},"ents_methods:obbMins":{"server":true,"ret":"The min bounding box vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns min local bounding box vector of the entity ","fname":"obbMins","realm":"sh","param":[],"name":"ents_methods:obbMins","description":"\nReturns min local bounding box vector of the entity"},"ents_methods:getClass":{"server":true,"ret":"The string class name","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the class of the entity ","fname":"getClass","realm":"sh","param":[],"name":"ents_methods:getClass","description":"\nReturns the class of the entity"},"ents_methods:worldToLocal":{"server":true,"ret":"data as local space vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts a vector in world space to entity local space ","fname":"worldToLocal","realm":"sh","param":{"1":"data","data":"World space vector"},"name":"ents_methods:worldToLocal","description":"\nConverts a vector in world space to entity local space"},"ents_methods:localToWorldAngles":{"server":true,"ret":"data as world space angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts an angle in entity local space to world space ","fname":"localToWorldAngles","realm":"sh","param":{"1":"data","data":"Local space angle"},"name":"ents_methods:localToWorldAngles","description":"\nConverts an angle in entity local space to world space"},"ents_methods:getMass":{"server":true,"ret":"The numerical mass","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the mass of the entity ","fname":"getMass","realm":"sh","param":[],"name":"ents_methods:getMass","description":"\nReturns the mass of the entity"},"ents_methods:localToWorld":{"server":true,"ret":"data as world space vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts a vector in entity local space to world space ","fname":"localToWorld","realm":"sh","param":{"1":"data","data":"Local space vector"},"name":"ents_methods:localToWorld","description":"\nConverts a vector in entity local space to world space"},"ents_methods:getAngleVelocityAngle":{"server":true,"ret":"The angular velocity as an angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angular velocity of the entity ","fname":"getAngleVelocityAngle","realm":"sh","param":[],"name":"ents_methods:getAngleVelocityAngle","description":"\nReturns the angular velocity of the entity"},"ents_methods:setSkin":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the skin of the entity ","fname":"setSkin","realm":"sh","param":{"1":"skinIndex","skinIndex":"Number, Index of the skin to use."},"name":"ents_methods:setSkin","description":"\nSets the skin of the entity"},"ents_methods:getColor":{"server":true,"ret":"Color","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the color of an entity ","fname":"getColor","realm":"sh","param":[],"name":"ents_methods:getColor","description":"\nGets the color of an entity"},"ents_methods:getBoneMatrix":{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the matrix of the entity's bone.","fname":"getBoneMatrix","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneMatrix","description":"\nReturns the matrix of the entity's bone. Note: this method is slow/doesnt work well if the entity isn't animated."},"ents_methods:lookupBone":{"server":true,"ret":"The bone index","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the ragdoll bone index given a bone name ","fname":"lookupBone","realm":"sh","param":{"1":"name","name":"The bone's string name"},"name":"ents_methods:lookupBone","description":"\nReturns the ragdoll bone index given a bone name"},"ents_methods:getPhysicsObjectNum":{"summary":"\nGets a physics objects of an entity ","ret":"The physics object of the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObjectNum","realm":"sh","param":{"1":"id","id":"The physics object id (starts at 0)"},"name":"ents_methods:getPhysicsObjectNum","description":"\nGets a physics objects of an entity"},"ents_methods:setRenderBounds":{"summary":"\nSets a hologram or custom_prop's renderbounds ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setRenderBounds","realm":"cl","param":{"1":"mins","2":"maxs","mins":"The lower bounding corner coordinate local to the hologram","maxs":"The upper bounding corner coordinate local to the hologram"},"name":"ents_methods:setRenderBounds","description":"\nSets a hologram or custom_prop's renderbounds"},"ents_methods:getMatrix":{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world transform matrix of the entity ","fname":"getMatrix","realm":"sh","param":[],"name":"ents_methods:getMatrix","description":"\nReturns the world transform matrix of the entity"},"ents_methods:worldSpaceAABB":{"server":true,"ret":["The min bounding box vector","The max bounding box vector"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns Entity axis aligned bounding box in world coordinates ","fname":"worldSpaceAABB","realm":"sh","param":[],"name":"ents_methods:worldSpaceAABB","description":"\nReturns Entity axis aligned bounding box in world coordinates"},"ents_methods:getPhysicsObjectCount":{"summary":"\nGets the number of physicsobjects of an entity ","ret":"The number of physics objects on the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObjectCount","realm":"sh","param":[],"name":"ents_methods:getPhysicsObjectCount","description":"\nGets the number of physicsobjects of an entity"},"ents_methods:getBoneName":{"server":true,"ret":"Name of the bone","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the name of an entity's bone ","fname":"getBoneName","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneName","description":"\nReturns the name of an entity's bone"},"ents_methods:getBoneParent":{"server":true,"ret":"Parent index of the bone","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the parent index of an entity's bone ","fname":"getBoneParent","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneParent","description":"\nReturns the parent index of an entity's bone"},"ents_methods:setNoDraw":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the whether an entity should be drawn or not ","fname":"setNoDraw","realm":"sh","param":{"1":"draw","draw":"Whether to draw the entity or not."},"name":"ents_methods:setNoDraw","description":"\nSets the whether an entity should be drawn or not"},"ents_methods:obbSize":{"server":true,"ret":"The outer bounding box size","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the x, y, z size of the entity's outer bounding box (local to the entity) ","fname":"obbSize","realm":"sh","param":[],"name":"ents_methods:obbSize","description":"\nReturns the x, y, z size of the entity's outer bounding box (local to the entity)"},"ents_methods:isNPC":{"server":true,"ret":"True if npc, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is an npc.","fname":"isNPC","realm":"sh","param":[],"name":"ents_methods:isNPC","description":"\nChecks if an entity is an npc."},"ents_methods:getForward":{"server":true,"ret":"Vector forward","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's forward vector ","fname":"getForward","realm":"sh","param":[],"name":"ents_methods:getForward","description":"\nGets the entity's forward vector"},"ents_methods:entIndex":{"server":true,"ret":"The numerical index of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the EntIndex of the entity ","fname":"entIndex","realm":"sh","param":[],"name":"ents_methods:entIndex","description":"\nReturns the EntIndex of the entity"},"ents_methods:getClipping":{"server":true,"ret":"Table containing the clipdata","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the clipping of an entity ","fname":"getClipping","realm":"sh","param":[],"name":"ents_methods:getClipping","description":"\nGets the clipping of an entity"},"ents_methods:isValid":{"server":true,"ret":"True if valid, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is valid.","fname":"isValid","realm":"sh","param":[],"name":"ents_methods:isValid","description":"\nChecks if an entity is valid."},"ents_methods:getAttachmentParent":{"server":true,"ret":"number index of the attachment the entity is parented to or 0","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the attachment index the entity is parented to ","fname":"getAttachmentParent","realm":"sh","param":[],"name":"ents_methods:getAttachmentParent","description":"\nGets the attachment index the entity is parented to"},"ents_methods:setBodygroup":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the bodygroup of the entity ","fname":"setBodygroup","realm":"sh","param":{"1":"bodygroup","2":"value","value":"Number, The value you're setting the bodygroup to.","bodygroup":"Number, The ID of the bodygroup you're setting."},"name":"ents_methods:setBodygroup","description":"\nSets the bodygroup of the entity"},"ents_methods:obbCenter":{"server":true,"ret":"The position vector of the outer bounding box center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the local position of the entity's outer bounding box ","fname":"obbCenter","realm":"sh","param":[],"name":"ents_methods:obbCenter","description":"\nReturns the local position of the entity's outer bounding box"},"ents_methods:getAttachments":{"server":true,"ret":"table of attachment id and attachment name or nil","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns a table of attachments ","fname":"getAttachments","realm":"sh","param":[],"name":"ents_methods:getAttachments","description":"\nReturns a table of attachments"},"ents_methods:isOnFire":{"server":true,"ret":"Boolean if the entity is on fire or not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns if the entity is ignited ","fname":"isOnFire","realm":"sh","param":[],"name":"ents_methods:isOnFire","description":"\nReturns if the entity is ignited"},"ents_methods:setRenderFX":{"server":true,"classForced":true,"class":"function","client":true,"summary":"\nSets the renderfx of the entity ","private":false,"fname":"setRenderFX","classlib":"Entity","realm":"sh","param":{"1":"renderfx","renderfx":"Number, renderfx to use. http://wiki.garrysmod.com/page/Enums/kRenderFx"},"name":"ents_methods:setRenderFX","description":"\nSets the renderfx of the entity"},"ents_methods:setRenderMode":{"server":true,"classForced":true,"class":"function","client":true,"summary":"\nSets the render mode of the entity ","private":false,"fname":"setRenderMode","classlib":"Entity","realm":"sh","param":{"1":"rendermode","rendermode":"Number, rendermode to use. http://wiki.garrysmod.com/page/Enums/RENDERMODE"},"name":"ents_methods:setRenderMode","description":"\nSets the render mode of the entity"},"ents_methods:translatePhysBoneToBone":{"summary":"\nConverts a physobject id to the corresponding ragdoll bone id ","ret":"The ragdoll bone id","class":"function","private":false,"classlib":"Entity","fname":"translatePhysBoneToBone","realm":"sh","param":{"1":"boneid","boneid":"The physobject id"},"name":"ents_methods:translatePhysBoneToBone","description":"\nConverts a physobject id to the corresponding ragdoll bone id"},"ents_methods:getAngleVelocity":{"server":true,"ret":"The angular velocity as a vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angular velocity of the entity ","fname":"getAngleVelocity","realm":"sh","param":[],"name":"ents_methods:getAngleVelocity","description":"\nReturns the angular velocity of the entity"},"ents_methods:getAttachment":{"server":true,"ret":"vector position, and angle orientation or nil if the attachment doesn't exist","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the position and angle of an attachment ","fname":"getAttachment","realm":"sh","param":{"1":"index","index":"The index of the attachment"},"name":"ents_methods:getAttachment","description":"\nGets the position and angle of an attachment"},"ents_methods:setColor":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the color of the entity ","fname":"setColor","realm":"sh","param":{"1":"clr","clr":"New color"},"name":"ents_methods:setColor","description":"\nSets the color of the entity"},"ents_methods:emitSound":{"summary":"\nPlays a sound on the entity ","class":"function","private":false,"param":{"1":"snd","2":"lvl","3":"pitch","4":"volume","5":"channel","snd":"string Sound path","channel":"channel=CHAN_AUTO","pitch":"pitchPercent=100","volume":"volume=1","lvl":"number soundLevel=75"},"fname":"emitSound","realm":"sh","name":"ents_methods:emitSound","classlib":"Entity","description":"\nPlays a sound on the entity"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nShared entity library functions \n ","param":[],"description":"\n \nShared entity library functions \n"},{"methods":{"1":"addAngleVelocity","2":"addCollisionListener","3":"applyAngForce","4":"applyDamage","5":"applyForceCenter","6":"applyForceOffset","7":"applyTorque","8":"breakEnt","9":"emitSound","10":"enableDrag","11":"enableGravity","12":"enableMotion","13":"enableSphere","14":"entIndex","15":"extinguish","16":"getAllConstrained","17":"getAngleVelocity","18":"getAngleVelocityAngle","19":"getAngles","20":"getAttachment","21":"getAttachmentParent","22":"getAttachments","23":"getBoneCount","24":"getBoneMatrix","25":"getBoneName","26":"getBoneParent","27":"getBonePosition","28":"getChildren","29":"getChipName","30":"getClass","31":"getClipping","32":"getColor","33":"getCreationID","34":"getCreationTime","35":"getEyeAngles","36":"getEyePos","37":"getFlexScale","38":"getFlexWeight","39":"getFlexes","40":"getForward","41":"getHealth","42":"getInertia","43":"getLinkedComponents","44":"getMass","45":"getMassCenter","46":"getMassCenterW","47":"getMaterial","48":"getMaterials","49":"getMatrix","50":"getMaxHealth","51":"getModel","52":"getOwner","53":"getParent","54":"getPhysMaterial","55":"getPhysicsObject","56":"getPhysicsObjectCount","57":"getPhysicsObjectNum","58":"getPos","59":"getPose","60":"getRight","61":"getSkin","62":"getSubMaterial","63":"getUp","64":"getVelocity","65":"getWaterLevel","66":"ignite","67":"isFrozen","68":"isNPC","69":"isOnFire","70":"isOnGround","71":"isPlayer","72":"isPlayerHolding","73":"isValid","74":"isValidPhys","75":"isVehicle","76":"isWeapon","77":"isWeldedTo","78":"linkComponent","79":"localToWorld","80":"localToWorldAngles","81":"lookupAttachment","82":"lookupBone","83":"lookupSequence","84":"manipulateBoneAngles","85":"manipulateBonePosition","86":"manipulateBoneScale","87":"obbCenter","88":"obbCenterW","89":"obbMaxs","90":"obbMins","91":"obbSize","92":"remove","93":"removeCollisionListener","94":"removeTrails","95":"sequenceDuration","96":"setAngleVelocity","97":"setAngles","98":"setBodygroup","99":"setColor","100":"setComponentLocksControls","101":"setCustomPropForces","102":"setDrawShadow","103":"setFlexScale","104":"setFlexWeight","105":"setFrozen","106":"setInertia","107":"setMass","108":"setMaterial","109":"setMesh","110":"setMeshMaterial","111":"setNoDraw","112":"setNocollideAll","113":"setParent","114":"setPhysMaterial","115":"setPos","116":"setPose","117":"setRenderBounds","118":"setRenderFX","119":"setRenderMode","120":"setSkin","121":"setSolid","122":"setSubMaterial","123":"setTrails","124":"setUnbreakable","125":"setVelocity","126":"stopSound","127":"testPVS","128":"toHologram","129":"translateBoneToPhysBone","130":"translatePhysBoneToBone","131":"unparent","132":"worldSpaceAABB","133":"worldToLocal","134":"worldToLocalAngles","localToWorld":{"server":true,"ret":"data as world space vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts a vector in entity local space to world space ","fname":"localToWorld","realm":"sh","param":{"1":"data","data":"Local space vector"},"name":"ents_methods:localToWorld","description":"\nConverts a vector in entity local space to world space"},"setVelocity":{"summary":"\nSets the entity's linear velocity ","class":"function","private":false,"param":{"1":"vel","vel":"New velocity"},"fname":"setVelocity","realm":"sv","name":"ents_methods:setVelocity","classlib":"Entity","description":"\nSets the entity's linear velocity"},"obbMins":{"server":true,"ret":"The min bounding box vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns min local bounding box vector of the entity ","fname":"obbMins","realm":"sh","param":[],"name":"ents_methods:obbMins","description":"\nReturns min local bounding box vector of the entity"},"getForward":{"server":true,"ret":"Vector forward","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's forward vector ","fname":"getForward","realm":"sh","param":[],"name":"ents_methods:getForward","description":"\nGets the entity's forward vector"},"emitSound":{"summary":"\nPlays a sound on the entity ","class":"function","private":false,"param":{"1":"snd","2":"lvl","3":"pitch","4":"volume","5":"channel","snd":"string Sound path","channel":"channel=CHAN_AUTO","pitch":"pitchPercent=100","volume":"volume=1","lvl":"number soundLevel=75"},"fname":"emitSound","realm":"sh","name":"ents_methods:emitSound","classlib":"Entity","description":"\nPlays a sound on the entity"},"getCreationTime":{"server":true,"ret":"Seconds relative to server map start","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the timer.curtime() time the entity was created on ","fname":"getCreationTime","realm":"sh","param":[],"name":"ents_methods:getCreationTime","description":"\nReturns the timer.curtime() time the entity was created on"},"setTrails":{"summary":"\nAdds a trail to the entity with the specified attributes.","class":"function","private":false,"param":{"1":"startSize","2":"endSize","3":"length","4":"material","5":"color","6":"attachmentID","7":"additive","attachmentID":"Optional attachmentid the trail should attach to","material":"The material of the trail","additive":"If the trail's rendering is additive","color":"The color of the trail","length":"The length size of the trail","startSize":"The start size of the trail","endSize":"The end size of the trail"},"fname":"setTrails","realm":"sv","name":"ents_methods:setTrails","classlib":"Entity","description":"\nAdds a trail to the entity with the specified attributes."},"setUnbreakable":{"summary":"\nSets a prop_physics to be unbreakable ","class":"function","private":false,"param":{"1":"on","on":"Whether to make the prop unbreakable"},"fname":"setUnbreakable","realm":"sv","name":"ents_methods:setUnbreakable","classlib":"Entity","description":"\nSets a prop_physics to be unbreakable"},"addCollisionListener":{"summary":"\nAllows detecting collisions on an entity.","class":"function","private":false,"param":{"1":"func","func":"The callback function with argument, table collsiondata, http://wiki.garrysmod.com/page/Structures/CollisionData"},"fname":"addCollisionListener","realm":"sv","name":"ents_methods:addCollisionListener","classlib":"Entity","description":"\nAllows detecting collisions on an entity. You can only do this once for the entity's entire lifespan so use it wisely."},"getLinkedComponents":{"summary":"\nReturns a list of entities linked to a processor ","ret":"A list of components linked to the entity","class":"function","private":false,"classlib":"Entity","fname":"getLinkedComponents","realm":"sv","param":[],"name":"ents_methods:getLinkedComponents","description":"\nReturns a list of entities linked to a processor"},"getVelocity":{"server":true,"ret":"The velocity vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the velocity of the entity ","fname":"getVelocity","realm":"sh","param":[],"name":"ents_methods:getVelocity","description":"\nReturns the velocity of the entity"},"getAngleVelocityAngle":{"server":true,"ret":"The angular velocity as an angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angular velocity of the entity ","fname":"getAngleVelocityAngle","realm":"sh","param":[],"name":"ents_methods:getAngleVelocityAngle","description":"\nReturns the angular velocity of the entity"},"getMaterials":{"server":true,"classForced":true,"ret":"Material","class":"function","client":true,"summary":"\nGets an entities' material list ","private":false,"fname":"getMaterials","classlib":"Entity","realm":"sh","param":[],"name":"ents_methods:getMaterials","description":"\nGets an entities' material list"},"enableGravity":{"summary":"\nSets entity gravity ","class":"function","private":false,"param":{"1":"grav","grav":"Bool should the entity respect gravity?"},"fname":"enableGravity","realm":"sv","name":"ents_methods:enableGravity","classlib":"Entity","description":"\nSets entity gravity"},"setMesh":{"summary":"\nSets a hologram or custom_prop model to a custom Mesh ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setMesh","realm":"cl","param":{"1":"mesh","mesh":"The mesh to set it to or nil to set back to normal"},"name":"ents_methods:setMesh","description":"\nSets a hologram or custom_prop model to a custom Mesh"},"setComponentLocksControls":{"summary":"\nSets a component's ability to lock a player's controls ","class":"function","private":false,"param":{"1":"enable","enable":"Whether the component will lock the player's controls when used"},"fname":"setComponentLocksControls","realm":"sv","name":"ents_methods:setComponentLocksControls","classlib":"Entity","description":"\nSets a component's ability to lock a player's controls"},"setDrawShadow":{"summary":"\nSets whether an entity's shadow should be drawn ","class":"function","private":false,"param":{"1":"draw","2":"ply","ply":"Optional player argument to set only for that player. Can also be table of players."},"fname":"setDrawShadow","realm":"sv","name":"ents_methods:setDrawShadow","classlib":"Entity","description":"\nSets whether an entity's shadow should be drawn"},"getBonePosition":{"server":true,"ret":["Position of the bone","Angle of the bone"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the bone's position and angle in world coordinates ","fname":"getBonePosition","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBonePosition","description":"\nReturns the bone's position and angle in world coordinates"},"extinguish":{"summary":"\nExtinguishes an entity ","class":"function","private":false,"param":[],"fname":"extinguish","realm":"sv","name":"ents_methods:extinguish","classlib":"Entity","description":"\nExtinguishes an entity"},"getInertia":{"server":true,"ret":"The principle moments of inertia as a vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the principle moments of inertia of the entity ","fname":"getInertia","realm":"sh","param":[],"name":"ents_methods:getInertia","description":"\nReturns the principle moments of inertia of the entity"},"isPlayerHolding":{"server":true,"ret":"Boolean if the entity is being held or not","class":"function","classlib":"Entity","private":false,"summary":"\nReturns true if the entity is being held by a player.","fname":"isPlayerHolding","realm":"sv","param":[],"name":"ents_methods:isPlayerHolding","description":"\nReturns true if the entity is being held by a player. Either by Physics gun, Gravity gun or Use-key."},"getUp":{"server":true,"ret":"Vector up","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's up vector ","fname":"getUp","realm":"sh","param":[],"name":"ents_methods:getUp","description":"\nGets the entity's up vector"},"getMatrix":{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world transform matrix of the entity ","fname":"getMatrix","realm":"sh","param":[],"name":"ents_methods:getMatrix","description":"\nReturns the world transform matrix of the entity"},"setNocollideAll":{"summary":"\nSet's the entity to collide with nothing but the world ","class":"function","private":false,"param":{"1":"nocollide","nocollide":"Whether to collide with nothing except world or not."},"fname":"setNocollideAll","realm":"sv","name":"ents_methods:setNocollideAll","classlib":"Entity","description":"\nSet's the entity to collide with nothing but the world"},"getAttachmentParent":{"server":true,"ret":"number index of the attachment the entity is parented to or 0","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the attachment index the entity is parented to ","fname":"getAttachmentParent","realm":"sh","param":[],"name":"ents_methods:getAttachmentParent","description":"\nGets the attachment index the entity is parented to"},"isOnGround":{"server":true,"ret":"Boolean if it's flag is set or not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if the entity ONGROUND flag is set ","fname":"isOnGround","realm":"sh","param":[],"name":"ents_methods:isOnGround","description":"\nChecks if the entity ONGROUND flag is set"},"getCreationID":{"summary":"\nReturns entity's creation ID (similar to entIndex, but increments monotonically) ","ret":"The creation ID","class":"function","private":false,"classlib":"Entity","fname":"getCreationID","realm":"sv","param":[],"name":"ents_methods:getCreationID","description":"\nReturns entity's creation ID (similar to entIndex, but increments monotonically)"},"getFlexScale":{"summary":"\nGets the scale of the entity flexes ","ret":"The scale of the flexes","class":"function","private":false,"classlib":"Entity","fname":"getFlexScale","realm":"sh","param":[],"name":"ents_methods:getFlexScale","description":"\nGets the scale of the entity flexes"},"getPhysicsObjectNum":{"summary":"\nGets a physics objects of an entity ","ret":"The physics object of the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObjectNum","realm":"sh","param":{"1":"id","id":"The physics object id (starts at 0)"},"name":"ents_methods:getPhysicsObjectNum","description":"\nGets a physics objects of an entity"},"isVehicle":{"server":true,"ret":"True if vehicle, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a vehicle.","fname":"isVehicle","realm":"sh","param":[],"name":"ents_methods:isVehicle","description":"\nChecks if an entity is a vehicle."},"toHologram":{"server":true,"ret":"Hologram type","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nCasts a hologram entity into the hologram type ","fname":"toHologram","realm":"sh","param":[],"name":"ents_methods:toHologram","description":"\nCasts a hologram entity into the hologram type"},"setRenderBounds":{"summary":"\nSets a hologram or custom_prop's renderbounds ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setRenderBounds","realm":"cl","param":{"1":"mins","2":"maxs","mins":"The lower bounding corner coordinate local to the hologram","maxs":"The upper bounding corner coordinate local to the hologram"},"name":"ents_methods:setRenderBounds","description":"\nSets a hologram or custom_prop's renderbounds"},"getRight":{"server":true,"ret":"Vector right","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's right vector ","fname":"getRight","realm":"sh","param":[],"name":"ents_methods:getRight","description":"\nGets the entity's right vector"},"lookupSequence":{"summary":"\nGets the animation number from the animation name ","ret":"Animation index or -1 if invalid","class":"function","private":false,"classlib":"Entity","fname":"lookupSequence","realm":"sh","param":{"1":"animation","animation":"Name of the animation"},"name":"ents_methods:lookupSequence","description":"\nGets the animation number from the animation name"},"setFlexScale":{"summary":"\nSets the scale of the entity flexes ","class":"function","private":false,"param":{"1":"scale","scale":"The scale of the flexes to set"},"fname":"setFlexScale","realm":"sh","name":"ents_methods:setFlexScale","classlib":"Entity","description":"\nSets the scale of the entity flexes"},"getClass":{"server":true,"ret":"The string class name","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the class of the entity ","fname":"getClass","realm":"sh","param":[],"name":"ents_methods:getClass","description":"\nReturns the class of the entity"},"getMassCenterW":{"server":true,"ret":"The position vector of the mass center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world position of the entity's mass center ","fname":"getMassCenterW","realm":"sh","param":[],"name":"ents_methods:getMassCenterW","description":"\nReturns the world position of the entity's mass center"},"setBodygroup":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the bodygroup of the entity ","fname":"setBodygroup","realm":"sh","param":{"1":"bodygroup","2":"value","value":"Number, The value you're setting the bodygroup to.","bodygroup":"Number, The ID of the bodygroup you're setting."},"name":"ents_methods:setBodygroup","description":"\nSets the bodygroup of the entity"},"getPhysicsObjectCount":{"summary":"\nGets the number of physicsobjects of an entity ","ret":"The number of physics objects on the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObjectCount","realm":"sh","param":[],"name":"ents_methods:getPhysicsObjectCount","description":"\nGets the number of physicsobjects of an entity"},"getColor":{"server":true,"ret":"Color","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the color of an entity ","fname":"getColor","realm":"sh","param":[],"name":"ents_methods:getColor","description":"\nGets the color of an entity"},"ignite":{"summary":"\nIgnites an entity ","class":"function","private":false,"param":{"1":"length","2":"radius","radius":"(optional) How large the fire hitbox is (entity obb is the max)","length":"How long the fire lasts"},"fname":"ignite","realm":"sv","name":"ents_methods:ignite","classlib":"Entity","description":"\nIgnites an entity"},"getModel":{"server":true,"ret":"Model of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the model of an entity ","fname":"getModel","realm":"sh","param":[],"name":"ents_methods:getModel","description":"\nGets the model of an entity"},"getBoneCount":{"server":true,"ret":"Number of bones","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the number of an entity's bones ","fname":"getBoneCount","realm":"sh","param":[],"name":"ents_methods:getBoneCount","description":"\nReturns the number of an entity's bones"},"isOnFire":{"server":true,"ret":"Boolean if the entity is on fire or not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns if the entity is ignited ","fname":"isOnFire","realm":"sh","param":[],"name":"ents_methods:isOnFire","description":"\nReturns if the entity is ignited"},"enableSphere":{"summary":"\nSets the physics of an entity to be a sphere ","class":"function","private":false,"param":{"1":"enabled","enabled":"Bool should the entity be spherical?"},"fname":"enableSphere","realm":"sv","name":"ents_methods:enableSphere","classlib":"Entity","description":"\nSets the physics of an entity to be a sphere"},"obbMaxs":{"server":true,"ret":"The max bounding box vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns max local bounding box vector of the entity ","fname":"obbMaxs","realm":"sh","param":[],"name":"ents_methods:obbMaxs","description":"\nReturns max local bounding box vector of the entity"},"getHealth":{"server":true,"ret":"Health of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the health of an entity ","fname":"getHealth","realm":"sh","param":[],"name":"ents_methods:getHealth","description":"\nGets the health of an entity"},"isWeapon":{"server":true,"ret":"True if weapon, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a weapon.","fname":"isWeapon","realm":"sh","param":[],"name":"ents_methods:isWeapon","description":"\nChecks if an entity is a weapon."},"lookupAttachment":{"server":true,"ret":"number of the attachment index, or 0 if it doesn't exist","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the attachment index via the entity and it's attachment name ","fname":"lookupAttachment","realm":"sh","param":{"1":"name","name":""},"name":"ents_methods:lookupAttachment","description":"\nGets the attachment index via the entity and it's attachment name"},"setRenderFX":{"server":true,"classForced":true,"class":"function","client":true,"summary":"\nSets the renderfx of the entity ","private":false,"fname":"setRenderFX","classlib":"Entity","realm":"sh","param":{"1":"renderfx","renderfx":"Number, renderfx to use. http://wiki.garrysmod.com/page/Enums/kRenderFx"},"name":"ents_methods:setRenderFX","description":"\nSets the renderfx of the entity"},"removeCollisionListener":{"summary":"\nRemoves a collision listening hook from the entity so that a new one can be added ","class":"function","private":false,"param":[],"fname":"removeCollisionListener","realm":"sv","name":"ents_methods:removeCollisionListener","classlib":"Entity","description":"\nRemoves a collision listening hook from the entity so that a new one can be added"},"getAttachment":{"server":true,"ret":"vector position, and angle orientation or nil if the attachment doesn't exist","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the position and angle of an attachment ","fname":"getAttachment","realm":"sh","param":{"1":"index","index":"The index of the attachment"},"name":"ents_methods:getAttachment","description":"\nGets the position and angle of an attachment"},"getAngles":{"server":true,"ret":"The angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angle of the entity ","fname":"getAngles","realm":"sh","param":[],"name":"ents_methods:getAngles","description":"\nReturns the angle of the entity"},"setParent":{"summary":"\nParents the entity to another entity ","class":"function","private":false,"param":{"1":"parent","2":"attachment","parent":"Entity to parent to. nil to unparent","attachment":"Optional string attachment name to parent to"},"fname":"setParent","realm":"sv","name":"ents_methods:setParent","classlib":"Entity","description":"\nParents the entity to another entity"},"translatePhysBoneToBone":{"summary":"\nConverts a physobject id to the corresponding ragdoll bone id ","ret":"The ragdoll bone id","class":"function","private":false,"classlib":"Entity","fname":"translatePhysBoneToBone","realm":"sh","param":{"1":"boneid","boneid":"The physobject id"},"name":"ents_methods:translatePhysBoneToBone","description":"\nConverts a physobject id to the corresponding ragdoll bone id"},"getEyePos":{"server":true,"ret":["Eye position of the entity","In case of a ragdoll, the position of the second eye"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's eye position ","fname":"getEyePos","realm":"sh","param":[],"name":"ents_methods:getEyePos","description":"\nGets the entity's eye position"},"setSkin":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the skin of the entity ","fname":"setSkin","realm":"sh","param":{"1":"skinIndex","skinIndex":"Number, Index of the skin to use."},"name":"ents_methods:setSkin","description":"\nSets the skin of the entity"},"setSubMaterial":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the submaterial of the entity ","fname":"setSubMaterial","realm":"sh","param":{"1":"index","2":"material","material":", string, New material name.","index":", number, submaterial index."},"name":"ents_methods:setSubMaterial","description":"\nSets the submaterial of the entity"},"getClipping":{"server":true,"ret":"Table containing the clipdata","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the clipping of an entity ","fname":"getClipping","realm":"sh","param":[],"name":"ents_methods:getClipping","description":"\nGets the clipping of an entity"},"worldToLocal":{"server":true,"ret":"data as local space vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts a vector in world space to entity local space ","fname":"worldToLocal","realm":"sh","param":{"1":"data","data":"World space vector"},"name":"ents_methods:worldToLocal","description":"\nConverts a vector in world space to entity local space"},"getBoneMatrix":{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the matrix of the entity's bone.","fname":"getBoneMatrix","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneMatrix","description":"\nReturns the matrix of the entity's bone. Note: this method is slow/doesnt work well if the entity isn't animated."},"manipulateBonePosition":{"summary":"\nAllows manipulation of an entity's bones' positions ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBonePosition","realm":"cl","param":{"1":"bone","2":"vec","vec":"The position it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBonePosition","description":"\nAllows manipulation of an entity's bones' positions"},"removeTrails":{"summary":"\nRemoves trails from the entity ","class":"function","private":false,"param":[],"fname":"removeTrails","realm":"sv","name":"ents_methods:removeTrails","classlib":"Entity","description":"\nRemoves trails from the entity"},"setMaterial":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the material of the entity ","fname":"setMaterial","realm":"sh","param":{"1":"material","material":", string, New material name."},"name":"ents_methods:setMaterial","description":"\nSets the material of the entity"},"testPVS":{"summary":"\nCheck if the given Entity or Vector is within this entity's PVS (Potentially Visible Set).","ret":"bool True/False","class":"function","private":false,"classlib":"Entity","fname":"testPVS","realm":"sv","param":{"1":"other","other":"Entity or Vector to test"},"name":"ents_methods:testPVS","description":"\nCheck if the given Entity or Vector is within this entity's PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},"isNPC":{"server":true,"ret":"True if npc, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is an npc.","fname":"isNPC","realm":"sh","param":[],"name":"ents_methods:isNPC","description":"\nChecks if an entity is an npc."},"worldToLocalAngles":{"server":true,"ret":"data as local space angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts an angle in world space to entity local space ","fname":"worldToLocalAngles","realm":"sh","param":{"1":"data","data":"World space angle"},"name":"ents_methods:worldToLocalAngles","description":"\nConverts an angle in world space to entity local space"},"setInertia":{"summary":"\nSets the entity's inertia ","class":"function","private":false,"param":{"1":"vec","vec":"Inertia tensor"},"fname":"setInertia","realm":"sv","name":"ents_methods:setInertia","classlib":"Entity","description":"\nSets the entity's inertia"},"sequenceDuration":{"summary":"\nGet the length of an animation ","ret":"Length of the animation in seconds","class":"function","private":false,"classlib":"Entity","fname":"sequenceDuration","realm":"sh","param":{"1":"id","id":"(Optional) The id of the sequence, or will default to the currently playing sequence"},"name":"ents_methods:sequenceDuration","description":"\nGet the length of an animation"},"getMaterial":{"server":true,"classForced":true,"ret":"String material","class":"function","client":true,"summary":"\nGets an entities' material ","private":false,"fname":"getMaterial","classlib":"Entity","realm":"sh","param":[],"name":"ents_methods:getMaterial","description":"\nGets an entities' material"},"translateBoneToPhysBone":{"summary":"\nConverts a ragdoll bone id to the corresponding physobject id ","ret":"The physobj id","class":"function","private":false,"classlib":"Entity","fname":"translateBoneToPhysBone","realm":"sh","param":{"1":"boneid","boneid":"The ragdoll boneid"},"name":"ents_methods:translateBoneToPhysBone","description":"\nConverts a ragdoll bone id to the corresponding physobject id"},"enableDrag":{"summary":"\nSets the entity drag state ","class":"function","private":false,"param":{"1":"drag","drag":"Bool should the entity have air resistence?"},"fname":"enableDrag","realm":"sv","name":"ents_methods:enableDrag","classlib":"Entity","description":"\nSets the entity drag state"},"setFrozen":{"summary":"\nSets the entity frozen state ","class":"function","private":false,"param":{"1":"freeze","freeze":"Should the entity be frozen?"},"fname":"setFrozen","realm":"sv","name":"ents_methods:setFrozen","classlib":"Entity","description":"\nSets the entity frozen state"},"getBoneName":{"server":true,"ret":"Name of the bone","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the name of an entity's bone ","fname":"getBoneName","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneName","description":"\nReturns the name of an entity's bone"},"setAngleVelocity":{"summary":"\nSet the angular velocity of an object ","class":"function","private":false,"param":{"1":"angvel","angvel":"The local angvel vector to set"},"fname":"setAngleVelocity","realm":"sv","name":"ents_methods:setAngleVelocity","classlib":"Entity","description":"\nSet the angular velocity of an object"},"getPos":{"server":true,"ret":"The position vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the position of the entity ","fname":"getPos","realm":"sh","param":[],"name":"ents_methods:getPos","description":"\nReturns the position of the entity"},"getPhysicsObject":{"summary":"\nGets the main physics objects of an entity ","ret":"The main physics object of the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObject","realm":"sh","param":[],"name":"ents_methods:getPhysicsObject","description":"\nGets the main physics objects of an entity"},"getChipName":{"summary":"\nReturns the chip's name of E2s or starfalls ","class":"function","private":false,"param":[],"fname":"getChipName","realm":"sh","name":"ents_methods:getChipName","classlib":"Entity","description":"\nReturns the chip's name of E2s or starfalls"},"remove":{"summary":"\nRemoves an entity ","class":"function","private":false,"param":[],"fname":"remove","realm":"sv","name":"ents_methods:remove","classlib":"Entity","description":"\nRemoves an entity"},"setMass":{"summary":"\nSets the entity's mass ","class":"function","private":false,"param":{"1":"mass","mass":"number mass"},"fname":"setMass","realm":"sv","name":"ents_methods:setMass","classlib":"Entity","description":"\nSets the entity's mass"},"getMassCenter":{"server":true,"ret":"The position vector of the mass center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the local position of the entity's mass center ","fname":"getMassCenter","realm":"sh","param":[],"name":"ents_methods:getMassCenter","description":"\nReturns the local position of the entity's mass center"},"enableMotion":{"summary":"\nSets the entity movement state ","class":"function","private":false,"param":{"1":"move","move":"Bool should the entity move?"},"fname":"enableMotion","realm":"sv","name":"ents_methods:enableMotion","classlib":"Entity","description":"\nSets the entity movement state"},"manipulateBoneScale":{"summary":"\nAllows manipulation of an entity's bones' scale ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBoneScale","realm":"cl","param":{"1":"bone","2":"vec","vec":"The scale it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBoneScale","description":"\nAllows manipulation of an entity's bones' scale"},"setPos":{"summary":"\nSets the entitiy's position.","class":"function","private":false,"param":{"1":"vec","vec":"New position"},"fname":"setPos","realm":"sv","name":"ents_methods:setPos","classlib":"Entity","description":"\nSets the entitiy's position. No interpolation will occur clientside, use physobj.setPos to have interpolation."},"applyAngForce":{"summary":"\nApplies angular force to the entity ","class":"function","private":false,"param":{"1":"ang","ang":"The force angle"},"fname":"applyAngForce","realm":"sv","name":"ents_methods:applyAngForce","classlib":"Entity","description":"\nApplies angular force to the entity"},"setMeshMaterial":{"summary":"\nSets a hologram or custom_prop's custom mesh material ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setMeshMaterial","realm":"cl","param":{"1":"material","material":"The material to set it to or nil to set back to default"},"name":"ents_methods:setMeshMaterial","description":"\nSets a hologram or custom_prop's custom mesh material"},"setPhysMaterial":{"summary":"\nSets the physical material of the entity ","class":"function","private":false,"param":{"1":"mat","mat":"Material to use"},"fname":"setPhysMaterial","realm":"sv","name":"ents_methods:setPhysMaterial","classlib":"Entity","description":"\nSets the physical material of the entity"},"getMass":{"server":true,"ret":"The numerical mass","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the mass of the entity ","fname":"getMass","realm":"sh","param":[],"name":"ents_methods:getMass","description":"\nReturns the mass of the entity"},"unparent":{"summary":"\nUnparents the entity from another entity ","class":"function","private":false,"param":[],"fname":"unparent","realm":"sv","name":"ents_methods:unparent","classlib":"Entity","description":"\nUnparents the entity from another entity"},"breakEnt":{"summary":"\nInvokes the entity's breaking animation and removes it.","class":"function","private":false,"param":[],"fname":"breakEnt","realm":"sv","name":"ents_methods:breakEnt","classlib":"Entity","description":"\nInvokes the entity's breaking animation and removes it."},"applyTorque":{"summary":"\nApplies torque ","class":"function","private":false,"param":{"1":"torque","torque":"The torque vector"},"fname":"applyTorque","realm":"sv","name":"ents_methods:applyTorque","classlib":"Entity","description":"\nApplies torque"},"setSolid":{"summary":"\nSets the entity to be Solid or not.","class":"function","private":false,"param":{"1":"solid","solid":"Boolean, Should the entity be solid?"},"fname":"setSolid","realm":"sv","name":"ents_methods:setSolid","classlib":"Entity","description":"\nSets the entity to be Solid or not. \nFor more information please refer to GLua function http://wiki.garrysmod.com/page/Entity/SetNotSolid"},"worldSpaceAABB":{"server":true,"ret":["The min bounding box vector","The max bounding box vector"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns Entity axis aligned bounding box in world coordinates ","fname":"worldSpaceAABB","realm":"sh","param":[],"name":"ents_methods:worldSpaceAABB","description":"\nReturns Entity axis aligned bounding box in world coordinates"},"stopSound":{"summary":"\nStops a sound on the entity ","class":"function","private":false,"param":{"1":"snd","snd":"string Soundscript path. See http://wiki.garrysmod.com/page/Entity/StopSound"},"fname":"stopSound","realm":"sh","name":"ents_methods:stopSound","classlib":"Entity","description":"\nStops a sound on the entity"},"getAttachments":{"server":true,"ret":"table of attachment id and attachment name or nil","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns a table of attachments ","fname":"getAttachments","realm":"sh","param":[],"name":"ents_methods:getAttachments","description":"\nReturns a table of attachments"},"getOwner":{"summary":"\nGets the owner of the entity ","ret":"Owner","class":"function","private":false,"classlib":"Entity","fname":"getOwner","realm":"sh","param":[],"name":"ents_methods:getOwner","description":"\nGets the owner of the entity"},"obbSize":{"server":true,"ret":"The outer bounding box size","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the x, y, z size of the entity's outer bounding box (local to the entity) ","fname":"obbSize","realm":"sh","param":[],"name":"ents_methods:obbSize","description":"\nReturns the x, y, z size of the entity's outer bounding box (local to the entity)"},"getSkin":{"server":true,"ret":"Skin number","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the skin number of the entity ","fname":"getSkin","realm":"sh","param":[],"name":"ents_methods:getSkin","description":"\nGets the skin number of the entity"},"isWeldedTo":{"summary":"\nGets what the entity is welded to.","ret":"The first welded/parent entity","class":"function","private":false,"classlib":"Entity","fname":"isWeldedTo","realm":"sv","param":[],"name":"ents_methods:isWeldedTo","description":"\nGets what the entity is welded to. If the entity is parented, returns the parent."},"getBoneParent":{"server":true,"ret":"Parent index of the bone","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the parent index of an entity's bone ","fname":"getBoneParent","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneParent","description":"\nReturns the parent index of an entity's bone"},"isValid":{"server":true,"ret":"True if valid, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is valid.","fname":"isValid","realm":"sh","param":[],"name":"ents_methods:isValid","description":"\nChecks if an entity is valid."},"getPose":{"summary":"\nGet the pose value of an animation ","ret":"Value of the pose parameter","class":"function","private":false,"classlib":"Entity","fname":"getPose","realm":"sh","param":{"1":"pose","pose":"Pose parameter name"},"name":"ents_methods:getPose","description":"\nGet the pose value of an animation"},"addAngleVelocity":{"summary":"\nApplys a angular velocity to an object ","class":"function","private":false,"param":{"1":"angvel","angvel":"The local angvel vector to apply"},"fname":"addAngleVelocity","realm":"sv","name":"ents_methods:addAngleVelocity","classlib":"Entity","description":"\nApplys a angular velocity to an object"},"linkComponent":{"summary":"\nLinks starfall components to a starfall processor or vehicle.","class":"function","private":false,"param":{"1":"e","e":"Entity to link the component to. nil to clear links."},"fname":"linkComponent","realm":"sv","name":"ents_methods:linkComponent","classlib":"Entity","description":"\nLinks starfall components to a starfall processor or vehicle. Screen can only connect to processor. HUD can connect to processor and vehicle."},"getChildren":{"server":true,"ret":"table of parented children","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the children (the parented entities) of an entity ","fname":"getChildren","realm":"sh","param":[],"name":"ents_methods:getChildren","description":"\nGets the children (the parented entities) of an entity"},"applyForceOffset":{"summary":"\nApplies linear force to the entity with an offset ","class":"function","private":false,"param":{"1":"vec","2":"offset","vec":"The force vector","offset":"An optional offset position"},"fname":"applyForceOffset","realm":"sv","name":"ents_methods:applyForceOffset","classlib":"Entity","description":"\nApplies linear force to the entity with an offset"},"obbCenterW":{"server":true,"ret":"The position vector of the outer bounding box center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world position of the entity's outer bounding box ","fname":"obbCenterW","realm":"sh","param":[],"name":"ents_methods:obbCenterW","description":"\nReturns the world position of the entity's outer bounding box"},"entIndex":{"server":true,"ret":"The numerical index of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the EntIndex of the entity ","fname":"entIndex","realm":"sh","param":[],"name":"ents_methods:entIndex","description":"\nReturns the EntIndex of the entity"},"setFlexWeight":{"summary":"\nSets the weight (value) of a flex.","class":"function","private":false,"param":{"1":"flexid","2":"weight","weight":"The weight of the flex","flexid":"The id of the flex"},"fname":"setFlexWeight","realm":"sh","name":"ents_methods:setFlexWeight","classlib":"Entity","description":"\nSets the weight (value) of a flex."},"setCustomPropForces":{"summary":"\nSets a custom prop's physics simulation forces.","class":"function","private":false,"param":{"1":"ang","2":"lin","3":"mode","ang":"Angular Force (Torque)","mode":"The physics mode to use. 0 = Off, 1 = Local acceleration, 2 = Local force, 3 = Global Acceleration, 4 = Global force","lin":"Linear Force"},"fname":"setCustomPropForces","realm":"sv","name":"ents_methods:setCustomPropForces","classlib":"Entity","description":"\nSets a custom prop's physics simulation forces. Thrusters and balloons use this."},"getWaterLevel":{"server":true,"ret":"The water level. 0 none, 1 slightly, 2 at least halfway, 3 all the way","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns how submerged the entity is in water ","fname":"getWaterLevel","realm":"sh","param":[],"name":"ents_methods:getWaterLevel","description":"\nReturns how submerged the entity is in water"},"setNoDraw":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the whether an entity should be drawn or not ","fname":"setNoDraw","realm":"sh","param":{"1":"draw","draw":"Whether to draw the entity or not."},"name":"ents_methods:setNoDraw","description":"\nSets the whether an entity should be drawn or not"},"getFlexes":{"summary":"\nReturns a table of flexname -> flexid pairs for use in flex functions.","class":"function","private":false,"param":[],"fname":"getFlexes","realm":"sh","name":"ents_methods:getFlexes","classlib":"Entity","description":"\nReturns a table of flexname -> flexid pairs for use in flex functions."},"getParent":{"server":true,"ret":"Entity's parent or nil","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the parent of an entity ","fname":"getParent","realm":"sh","param":[],"name":"ents_methods:getParent","description":"\nGets the parent of an entity"},"getFlexWeight":{"summary":"\nGets the weight (value) of a flex.","ret":"The weight of the flex","class":"function","private":false,"classlib":"Entity","fname":"getFlexWeight","realm":"sh","param":{"1":"flexid","flexid":"The id of the flex"},"name":"ents_methods:getFlexWeight","description":"\nGets the weight (value) of a flex."},"applyForceCenter":{"summary":"\nApplies linear force to the entity ","class":"function","private":false,"param":{"1":"vec","vec":"The force vector"},"fname":"applyForceCenter","realm":"sv","name":"ents_methods:applyForceCenter","classlib":"Entity","description":"\nApplies linear force to the entity"},"applyDamage":{"summary":"\nApplies damage to an entity ","class":"function","private":false,"param":{"1":"amt","2":"attacker","3":"inflictor","inflictor":"damage inflictor","amt":"damage amount","attacker":"damage attacker"},"fname":"applyDamage","realm":"sv","name":"ents_methods:applyDamage","classlib":"Entity","description":"\nApplies damage to an entity"},"setPose":{"summary":"\nSet the pose value of an animation.","class":"function","private":false,"param":{"1":"pose","2":"value","value":"Value to set it to.","pose":"Name of the pose parameter"},"fname":"setPose","realm":"sh","name":"ents_methods:setPose","classlib":"Entity","description":"\nSet the pose value of an animation. Turret/Head angles for example."},"getAngleVelocity":{"server":true,"ret":"The angular velocity as a vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angular velocity of the entity ","fname":"getAngleVelocity","realm":"sh","param":[],"name":"ents_methods:getAngleVelocity","description":"\nReturns the angular velocity of the entity"},"localToWorldAngles":{"server":true,"ret":"data as world space angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts an angle in entity local space to world space ","fname":"localToWorldAngles","realm":"sh","param":{"1":"data","data":"Local space angle"},"name":"ents_methods:localToWorldAngles","description":"\nConverts an angle in entity local space to world space"},"setAngles":{"summary":"\nSets the entity's angles ","class":"function","private":false,"param":{"1":"ang","ang":"New angles"},"fname":"setAngles","realm":"sv","name":"ents_methods:setAngles","classlib":"Entity","description":"\nSets the entity's angles"},"isValidPhys":{"summary":"\nChecks whether entity has physics ","ret":"True if entity has physics","class":"function","private":false,"classlib":"Entity","fname":"isValidPhys","realm":"sv","param":[],"name":"ents_methods:isValidPhys","description":"\nChecks whether entity has physics"},"setColor":{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the color of the entity ","fname":"setColor","realm":"sh","param":{"1":"clr","clr":"New color"},"name":"ents_methods:setColor","description":"\nSets the color of the entity"},"manipulateBoneAngles":{"summary":"\nAllows manipulation of an entity's bones' angles ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBoneAngles","realm":"cl","param":{"1":"bone","2":"ang","ang":"The angle it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBoneAngles","description":"\nAllows manipulation of an entity's bones' angles"},"obbCenter":{"server":true,"ret":"The position vector of the outer bounding box center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the local position of the entity's outer bounding box ","fname":"obbCenter","realm":"sh","param":[],"name":"ents_methods:obbCenter","description":"\nReturns the local position of the entity's outer bounding box"},"getPhysMaterial":{"summary":"\nGet the physical material of the entity ","ret":"the physical material","class":"function","private":false,"classlib":"Entity","fname":"getPhysMaterial","realm":"sv","param":[],"name":"ents_methods:getPhysMaterial","description":"\nGet the physical material of the entity"},"setRenderMode":{"server":true,"classForced":true,"class":"function","client":true,"summary":"\nSets the render mode of the entity ","private":false,"fname":"setRenderMode","classlib":"Entity","realm":"sh","param":{"1":"rendermode","rendermode":"Number, rendermode to use. http://wiki.garrysmod.com/page/Enums/RENDERMODE"},"name":"ents_methods:setRenderMode","description":"\nSets the render mode of the entity"},"getMaxHealth":{"server":true,"ret":"Max Health of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the max health of an entity ","fname":"getMaxHealth","realm":"sh","param":[],"name":"ents_methods:getMaxHealth","description":"\nGets the max health of an entity"},"lookupBone":{"server":true,"ret":"The bone index","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the ragdoll bone index given a bone name ","fname":"lookupBone","realm":"sh","param":{"1":"name","name":"The bone's string name"},"name":"ents_methods:lookupBone","description":"\nReturns the ragdoll bone index given a bone name"},"getEyeAngles":{"server":true,"ret":"Angles of the entity's eyes","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entitiy's eye angles ","fname":"getEyeAngles","realm":"sh","param":[],"name":"ents_methods:getEyeAngles","description":"\nGets the entitiy's eye angles"},"isFrozen":{"summary":"\nChecks the entities frozen state ","ret":"True if entity is frozen","class":"function","private":false,"classlib":"Entity","fname":"isFrozen","realm":"sv","param":[],"name":"ents_methods:isFrozen","description":"\nChecks the entities frozen state"},"getAllConstrained":{"summary":"\nGets a table of all constrained entities to each other ","class":"function","private":false,"param":{"1":"filter","filter":"Optional constraint type filter table where keys are the type name and values are 'true'. \"Wire\" and \"Parent\" are used for wires and parents."},"fname":"getAllConstrained","realm":"sv","name":"ents_methods:getAllConstrained","classlib":"Entity","description":"\nGets a table of all constrained entities to each other"},"isPlayer":{"server":true,"ret":"True if player, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a player.","fname":"isPlayer","realm":"sh","param":[],"name":"ents_methods:isPlayer","description":"\nChecks if an entity is a player."},"getSubMaterial":{"server":true,"classForced":true,"ret":"String material","class":"function","client":true,"summary":"\nGets an entities' submaterial ","private":false,"fname":"getSubMaterial","classlib":"Entity","realm":"sh","param":["index"],"name":"ents_methods:getSubMaterial","description":"\nGets an entities' submaterial"}},"class":"class","client":true,"summary":"\nEntity type ","fields":[],"server":true,"typtbl":"ents_methods","name":"Entity","description":"\nEntity type"},{"server":true,"class":"function","client":true,"private":false,"summary":"\nTo string ","realm":"sh","param":[],"name":"ents_metamethods:__tostring","description":"\nTo string"},{"summary":"\nGets the owner of the entity ","ret":"Owner","class":"function","private":false,"classlib":"Entity","fname":"getOwner","realm":"sh","param":[],"name":"ents_methods:getOwner","description":"\nGets the owner of the entity"},{"summary":"\nAllows manipulation of an entity's bones' positions ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBonePosition","realm":"cl","param":{"1":"bone","2":"vec","vec":"The position it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBonePosition","description":"\nAllows manipulation of an entity's bones' positions"},{"summary":"\nAllows manipulation of an entity's bones' scale ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBoneScale","realm":"cl","param":{"1":"bone","2":"vec","vec":"The scale it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBoneScale","description":"\nAllows manipulation of an entity's bones' scale"},{"summary":"\nAllows manipulation of an entity's bones' angles ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"manipulateBoneAngles","realm":"cl","param":{"1":"bone","2":"ang","ang":"The angle it should be manipulated to","bone":"The bone ID"},"name":"ents_methods:manipulateBoneAngles","description":"\nAllows manipulation of an entity's bones' angles"},{"summary":"\nSets a hologram or custom_prop model to a custom Mesh ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setMesh","realm":"cl","param":{"1":"mesh","mesh":"The mesh to set it to or nil to set back to normal"},"name":"ents_methods:setMesh","description":"\nSets a hologram or custom_prop model to a custom Mesh"},{"summary":"\nSets a hologram or custom_prop's custom mesh material ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setMeshMaterial","realm":"cl","param":{"1":"material","material":"The material to set it to or nil to set back to default"},"name":"ents_methods:setMeshMaterial","description":"\nSets a hologram or custom_prop's custom mesh material"},{"summary":"\nSets a hologram or custom_prop's renderbounds ","class":"function","client":true,"private":false,"classlib":"Entity","fname":"setRenderBounds","realm":"cl","param":{"1":"mins","2":"maxs","mins":"The lower bounding corner coordinate local to the hologram","maxs":"The upper bounding corner coordinate local to the hologram"},"name":"ents_methods:setRenderBounds","description":"\nSets a hologram or custom_prop's renderbounds"},{"summary":"\nPlays a sound on the entity ","class":"function","private":false,"param":{"1":"snd","2":"lvl","3":"pitch","4":"volume","5":"channel","snd":"string Sound path","channel":"channel=CHAN_AUTO","pitch":"pitchPercent=100","volume":"volume=1","lvl":"number soundLevel=75"},"fname":"emitSound","realm":"sh","name":"ents_methods:emitSound","classlib":"Entity","description":"\nPlays a sound on the entity"},{"summary":"\nStops a sound on the entity ","class":"function","private":false,"param":{"1":"snd","snd":"string Soundscript path. See http://wiki.garrysmod.com/page/Entity/StopSound"},"fname":"stopSound","realm":"sh","name":"ents_methods:stopSound","classlib":"Entity","description":"\nStops a sound on the entity"},{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the color of the entity ","fname":"setColor","realm":"sh","param":{"1":"clr","clr":"New color"},"name":"ents_methods:setColor","description":"\nSets the color of the entity"},{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the whether an entity should be drawn or not ","fname":"setNoDraw","realm":"sh","param":{"1":"draw","draw":"Whether to draw the entity or not."},"name":"ents_methods:setNoDraw","description":"\nSets the whether an entity should be drawn or not"},{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the material of the entity ","fname":"setMaterial","realm":"sh","param":{"1":"material","material":", string, New material name."},"name":"ents_methods:setMaterial","description":"\nSets the material of the entity"},{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the submaterial of the entity ","fname":"setSubMaterial","realm":"sh","param":{"1":"index","2":"material","material":", string, New material name.","index":", number, submaterial index."},"name":"ents_methods:setSubMaterial","description":"\nSets the submaterial of the entity"},{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the bodygroup of the entity ","fname":"setBodygroup","realm":"sh","param":{"1":"bodygroup","2":"value","value":"Number, The value you're setting the bodygroup to.","bodygroup":"Number, The ID of the bodygroup you're setting."},"name":"ents_methods:setBodygroup","description":"\nSets the bodygroup of the entity"},{"server":true,"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nSets the skin of the entity ","fname":"setSkin","realm":"sh","param":{"1":"skinIndex","skinIndex":"Number, Index of the skin to use."},"name":"ents_methods:setSkin","description":"\nSets the skin of the entity"},{"server":true,"classForced":true,"class":"function","client":true,"summary":"\nSets the render mode of the entity ","private":false,"fname":"setRenderMode","classlib":"Entity","realm":"sh","param":{"1":"rendermode","rendermode":"Number, rendermode to use. http://wiki.garrysmod.com/page/Enums/RENDERMODE"},"name":"ents_methods:setRenderMode","description":"\nSets the render mode of the entity"},{"server":true,"classForced":true,"class":"function","client":true,"summary":"\nSets the renderfx of the entity ","private":false,"fname":"setRenderFX","classlib":"Entity","realm":"sh","param":{"1":"renderfx","renderfx":"Number, renderfx to use. http://wiki.garrysmod.com/page/Enums/kRenderFx"},"name":"ents_methods:setRenderFX","description":"\nSets the renderfx of the entity"},{"server":true,"ret":"Entity's parent or nil","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the parent of an entity ","fname":"getParent","realm":"sh","param":[],"name":"ents_methods:getParent","description":"\nGets the parent of an entity"},{"server":true,"ret":"table of parented children","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the children (the parented entities) of an entity ","fname":"getChildren","realm":"sh","param":[],"name":"ents_methods:getChildren","description":"\nGets the children (the parented entities) of an entity"},{"server":true,"ret":"number index of the attachment the entity is parented to or 0","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the attachment index the entity is parented to ","fname":"getAttachmentParent","realm":"sh","param":[],"name":"ents_methods:getAttachmentParent","description":"\nGets the attachment index the entity is parented to"},{"server":true,"ret":"number of the attachment index, or 0 if it doesn't exist","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the attachment index via the entity and it's attachment name ","fname":"lookupAttachment","realm":"sh","param":{"1":"name","name":""},"name":"ents_methods:lookupAttachment","description":"\nGets the attachment index via the entity and it's attachment name"},{"server":true,"ret":"vector position, and angle orientation or nil if the attachment doesn't exist","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the position and angle of an attachment ","fname":"getAttachment","realm":"sh","param":{"1":"index","index":"The index of the attachment"},"name":"ents_methods:getAttachment","description":"\nGets the position and angle of an attachment"},{"server":true,"ret":"table of attachment id and attachment name or nil","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns a table of attachments ","fname":"getAttachments","realm":"sh","param":[],"name":"ents_methods:getAttachments","description":"\nReturns a table of attachments"},{"summary":"\nConverts a ragdoll bone id to the corresponding physobject id ","ret":"The physobj id","class":"function","private":false,"classlib":"Entity","fname":"translateBoneToPhysBone","realm":"sh","param":{"1":"boneid","boneid":"The ragdoll boneid"},"name":"ents_methods:translateBoneToPhysBone","description":"\nConverts a ragdoll bone id to the corresponding physobject id"},{"summary":"\nConverts a physobject id to the corresponding ragdoll bone id ","ret":"The ragdoll bone id","class":"function","private":false,"classlib":"Entity","fname":"translatePhysBoneToBone","realm":"sh","param":{"1":"boneid","boneid":"The physobject id"},"name":"ents_methods:translatePhysBoneToBone","description":"\nConverts a physobject id to the corresponding ragdoll bone id"},{"summary":"\nGets the number of physicsobjects of an entity ","ret":"The number of physics objects on the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObjectCount","realm":"sh","param":[],"name":"ents_methods:getPhysicsObjectCount","description":"\nGets the number of physicsobjects of an entity"},{"summary":"\nGets the main physics objects of an entity ","ret":"The main physics object of the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObject","realm":"sh","param":[],"name":"ents_methods:getPhysicsObject","description":"\nGets the main physics objects of an entity"},{"summary":"\nGets a physics objects of an entity ","ret":"The physics object of the entity","class":"function","private":false,"classlib":"Entity","fname":"getPhysicsObjectNum","realm":"sh","param":{"1":"id","id":"The physics object id (starts at 0)"},"name":"ents_methods:getPhysicsObjectNum","description":"\nGets a physics objects of an entity"},{"server":true,"ret":"Color","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the color of an entity ","fname":"getColor","realm":"sh","param":[],"name":"ents_methods:getColor","description":"\nGets the color of an entity"},{"server":true,"ret":"Table containing the clipdata","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the clipping of an entity ","fname":"getClipping","realm":"sh","param":[],"name":"ents_methods:getClipping","description":"\nGets the clipping of an entity"},{"server":true,"ret":"Hologram type","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nCasts a hologram entity into the hologram type ","fname":"toHologram","realm":"sh","param":[],"name":"ents_methods:toHologram","description":"\nCasts a hologram entity into the hologram type"},{"server":true,"ret":"True if valid, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is valid.","fname":"isValid","realm":"sh","param":[],"name":"ents_methods:isValid","description":"\nChecks if an entity is valid."},{"server":true,"ret":"True if player, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a player.","fname":"isPlayer","realm":"sh","param":[],"name":"ents_methods:isPlayer","description":"\nChecks if an entity is a player."},{"server":true,"ret":"True if weapon, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a weapon.","fname":"isWeapon","realm":"sh","param":[],"name":"ents_methods:isWeapon","description":"\nChecks if an entity is a weapon."},{"server":true,"ret":"True if vehicle, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is a vehicle.","fname":"isVehicle","realm":"sh","param":[],"name":"ents_methods:isVehicle","description":"\nChecks if an entity is a vehicle."},{"server":true,"ret":"True if npc, false if not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if an entity is an npc.","fname":"isNPC","realm":"sh","param":[],"name":"ents_methods:isNPC","description":"\nChecks if an entity is an npc."},{"server":true,"ret":"Boolean if it's flag is set or not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nChecks if the entity ONGROUND flag is set ","fname":"isOnGround","realm":"sh","param":[],"name":"ents_methods:isOnGround","description":"\nChecks if the entity ONGROUND flag is set"},{"server":true,"ret":"Boolean if the entity is on fire or not","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns if the entity is ignited ","fname":"isOnFire","realm":"sh","param":[],"name":"ents_methods:isOnFire","description":"\nReturns if the entity is ignited"},{"summary":"\nReturns the chip's name of E2s or starfalls ","class":"function","private":false,"param":[],"fname":"getChipName","realm":"sh","name":"ents_methods:getChipName","classlib":"Entity","description":"\nReturns the chip's name of E2s or starfalls"},{"server":true,"ret":"The numerical index of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the EntIndex of the entity ","fname":"entIndex","realm":"sh","param":[],"name":"ents_methods:entIndex","description":"\nReturns the EntIndex of the entity"},{"server":true,"ret":"The string class name","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the class of the entity ","fname":"getClass","realm":"sh","param":[],"name":"ents_methods:getClass","description":"\nReturns the class of the entity"},{"server":true,"ret":"The position vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the position of the entity ","fname":"getPos","realm":"sh","param":[],"name":"ents_methods:getPos","description":"\nReturns the position of the entity"},{"server":true,"ret":"The water level. 0 none, 1 slightly, 2 at least halfway, 3 all the way","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns how submerged the entity is in water ","fname":"getWaterLevel","realm":"sh","param":[],"name":"ents_methods:getWaterLevel","description":"\nReturns how submerged the entity is in water"},{"server":true,"ret":"The bone index","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the ragdoll bone index given a bone name ","fname":"lookupBone","realm":"sh","param":{"1":"name","name":"The bone's string name"},"name":"ents_methods:lookupBone","description":"\nReturns the ragdoll bone index given a bone name"},{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the matrix of the entity's bone.","fname":"getBoneMatrix","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneMatrix","description":"\nReturns the matrix of the entity's bone. Note: this method is slow/doesnt work well if the entity isn't animated."},{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world transform matrix of the entity ","fname":"getMatrix","realm":"sh","param":[],"name":"ents_methods:getMatrix","description":"\nReturns the world transform matrix of the entity"},{"server":true,"ret":"Number of bones","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the number of an entity's bones ","fname":"getBoneCount","realm":"sh","param":[],"name":"ents_methods:getBoneCount","description":"\nReturns the number of an entity's bones"},{"server":true,"ret":"Name of the bone","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the name of an entity's bone ","fname":"getBoneName","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneName","description":"\nReturns the name of an entity's bone"},{"server":true,"ret":"Parent index of the bone","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the parent index of an entity's bone ","fname":"getBoneParent","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBoneParent","description":"\nReturns the parent index of an entity's bone"},{"server":true,"ret":["Position of the bone","Angle of the bone"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the bone's position and angle in world coordinates ","fname":"getBonePosition","realm":"sh","param":{"1":"bone","bone":"Bone index. (def 0)"},"name":"ents_methods:getBonePosition","description":"\nReturns the bone's position and angle in world coordinates"},{"server":true,"ret":"The outer bounding box size","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the x, y, z size of the entity's outer bounding box (local to the entity) ","fname":"obbSize","realm":"sh","param":[],"name":"ents_methods:obbSize","description":"\nReturns the x, y, z size of the entity's outer bounding box (local to the entity)"},{"server":true,"ret":"The position vector of the outer bounding box center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the local position of the entity's outer bounding box ","fname":"obbCenter","realm":"sh","param":[],"name":"ents_methods:obbCenter","description":"\nReturns the local position of the entity's outer bounding box"},{"server":true,"ret":"The position vector of the outer bounding box center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world position of the entity's outer bounding box ","fname":"obbCenterW","realm":"sh","param":[],"name":"ents_methods:obbCenterW","description":"\nReturns the world position of the entity's outer bounding box"},{"server":true,"ret":"The min bounding box vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns min local bounding box vector of the entity ","fname":"obbMins","realm":"sh","param":[],"name":"ents_methods:obbMins","description":"\nReturns min local bounding box vector of the entity"},{"server":true,"ret":"The max bounding box vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns max local bounding box vector of the entity ","fname":"obbMaxs","realm":"sh","param":[],"name":"ents_methods:obbMaxs","description":"\nReturns max local bounding box vector of the entity"},{"server":true,"ret":["The min bounding box vector","The max bounding box vector"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns Entity axis aligned bounding box in world coordinates ","fname":"worldSpaceAABB","realm":"sh","param":[],"name":"ents_methods:worldSpaceAABB","description":"\nReturns Entity axis aligned bounding box in world coordinates"},{"server":true,"ret":"The position vector of the mass center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the local position of the entity's mass center ","fname":"getMassCenter","realm":"sh","param":[],"name":"ents_methods:getMassCenter","description":"\nReturns the local position of the entity's mass center"},{"server":true,"ret":"The position vector of the mass center","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the world position of the entity's mass center ","fname":"getMassCenterW","realm":"sh","param":[],"name":"ents_methods:getMassCenterW","description":"\nReturns the world position of the entity's mass center"},{"server":true,"ret":"The angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angle of the entity ","fname":"getAngles","realm":"sh","param":[],"name":"ents_methods:getAngles","description":"\nReturns the angle of the entity"},{"server":true,"ret":"The numerical mass","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the mass of the entity ","fname":"getMass","realm":"sh","param":[],"name":"ents_methods:getMass","description":"\nReturns the mass of the entity"},{"server":true,"ret":"The principle moments of inertia as a vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the principle moments of inertia of the entity ","fname":"getInertia","realm":"sh","param":[],"name":"ents_methods:getInertia","description":"\nReturns the principle moments of inertia of the entity"},{"server":true,"ret":"The velocity vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the velocity of the entity ","fname":"getVelocity","realm":"sh","param":[],"name":"ents_methods:getVelocity","description":"\nReturns the velocity of the entity"},{"server":true,"ret":"The angular velocity as a vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angular velocity of the entity ","fname":"getAngleVelocity","realm":"sh","param":[],"name":"ents_methods:getAngleVelocity","description":"\nReturns the angular velocity of the entity"},{"server":true,"ret":"The angular velocity as an angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the angular velocity of the entity ","fname":"getAngleVelocityAngle","realm":"sh","param":[],"name":"ents_methods:getAngleVelocityAngle","description":"\nReturns the angular velocity of the entity"},{"server":true,"ret":"data as world space vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts a vector in entity local space to world space ","fname":"localToWorld","realm":"sh","param":{"1":"data","data":"Local space vector"},"name":"ents_methods:localToWorld","description":"\nConverts a vector in entity local space to world space"},{"server":true,"ret":"data as world space angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts an angle in entity local space to world space ","fname":"localToWorldAngles","realm":"sh","param":{"1":"data","data":"Local space angle"},"name":"ents_methods:localToWorldAngles","description":"\nConverts an angle in entity local space to world space"},{"server":true,"ret":"data as local space vector","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts a vector in world space to entity local space ","fname":"worldToLocal","realm":"sh","param":{"1":"data","data":"World space vector"},"name":"ents_methods:worldToLocal","description":"\nConverts a vector in world space to entity local space"},{"server":true,"ret":"data as local space angle","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nConverts an angle in world space to entity local space ","fname":"worldToLocalAngles","realm":"sh","param":{"1":"data","data":"World space angle"},"name":"ents_methods:worldToLocalAngles","description":"\nConverts an angle in world space to entity local space"},{"summary":"\nGets the animation number from the animation name ","ret":"Animation index or -1 if invalid","class":"function","private":false,"classlib":"Entity","fname":"lookupSequence","realm":"sh","param":{"1":"animation","animation":"Name of the animation"},"name":"ents_methods:lookupSequence","description":"\nGets the animation number from the animation name"},{"summary":"\nGet the length of an animation ","ret":"Length of the animation in seconds","class":"function","private":false,"classlib":"Entity","fname":"sequenceDuration","realm":"sh","param":{"1":"id","id":"(Optional) The id of the sequence, or will default to the currently playing sequence"},"name":"ents_methods:sequenceDuration","description":"\nGet the length of an animation"},{"summary":"\nSet the pose value of an animation.","class":"function","private":false,"param":{"1":"pose","2":"value","value":"Value to set it to.","pose":"Name of the pose parameter"},"fname":"setPose","realm":"sh","name":"ents_methods:setPose","classlib":"Entity","description":"\nSet the pose value of an animation. Turret/Head angles for example."},{"summary":"\nGet the pose value of an animation ","ret":"Value of the pose parameter","class":"function","private":false,"classlib":"Entity","fname":"getPose","realm":"sh","param":{"1":"pose","pose":"Pose parameter name"},"name":"ents_methods:getPose","description":"\nGet the pose value of an animation"},{"summary":"\nReturns a table of flexname -> flexid pairs for use in flex functions.","class":"function","private":false,"param":[],"fname":"getFlexes","realm":"sh","name":"ents_methods:getFlexes","classlib":"Entity","description":"\nReturns a table of flexname -> flexid pairs for use in flex functions."},{"summary":"\nGets the weight (value) of a flex.","ret":"The weight of the flex","class":"function","private":false,"classlib":"Entity","fname":"getFlexWeight","realm":"sh","param":{"1":"flexid","flexid":"The id of the flex"},"name":"ents_methods:getFlexWeight","description":"\nGets the weight (value) of a flex."},{"summary":"\nSets the weight (value) of a flex.","class":"function","private":false,"param":{"1":"flexid","2":"weight","weight":"The weight of the flex","flexid":"The id of the flex"},"fname":"setFlexWeight","realm":"sh","name":"ents_methods:setFlexWeight","classlib":"Entity","description":"\nSets the weight (value) of a flex."},{"summary":"\nGets the scale of the entity flexes ","ret":"The scale of the flexes","class":"function","private":false,"classlib":"Entity","fname":"getFlexScale","realm":"sh","param":[],"name":"ents_methods:getFlexScale","description":"\nGets the scale of the entity flexes"},{"summary":"\nSets the scale of the entity flexes ","class":"function","private":false,"param":{"1":"scale","scale":"The scale of the flexes to set"},"fname":"setFlexScale","realm":"sh","name":"ents_methods:setFlexScale","classlib":"Entity","description":"\nSets the scale of the entity flexes"},{"server":true,"ret":"Model of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the model of an entity ","fname":"getModel","realm":"sh","param":[],"name":"ents_methods:getModel","description":"\nGets the model of an entity"},{"server":true,"ret":"Max Health of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the max health of an entity ","fname":"getMaxHealth","realm":"sh","param":[],"name":"ents_methods:getMaxHealth","description":"\nGets the max health of an entity"},{"server":true,"ret":"Health of the entity","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the health of an entity ","fname":"getHealth","realm":"sh","param":[],"name":"ents_methods:getHealth","description":"\nGets the health of an entity"},{"server":true,"ret":"Angles of the entity's eyes","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entitiy's eye angles ","fname":"getEyeAngles","realm":"sh","param":[],"name":"ents_methods:getEyeAngles","description":"\nGets the entitiy's eye angles"},{"server":true,"ret":["Eye position of the entity","In case of a ragdoll, the position of the second eye"],"class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's eye position ","fname":"getEyePos","realm":"sh","param":[],"name":"ents_methods:getEyePos","description":"\nGets the entity's eye position"},{"server":true,"classForced":true,"ret":"String material","class":"function","client":true,"summary":"\nGets an entities' material ","private":false,"fname":"getMaterial","classlib":"Entity","realm":"sh","param":[],"name":"ents_methods:getMaterial","description":"\nGets an entities' material"},{"server":true,"classForced":true,"ret":"String material","class":"function","client":true,"summary":"\nGets an entities' submaterial ","private":false,"fname":"getSubMaterial","classlib":"Entity","realm":"sh","param":["index"],"name":"ents_methods:getSubMaterial","description":"\nGets an entities' submaterial"},{"server":true,"classForced":true,"ret":"Material","class":"function","client":true,"summary":"\nGets an entities' material list ","private":false,"fname":"getMaterials","classlib":"Entity","realm":"sh","param":[],"name":"ents_methods:getMaterials","description":"\nGets an entities' material list"},{"server":true,"ret":"Skin number","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the skin number of the entity ","fname":"getSkin","realm":"sh","param":[],"name":"ents_methods:getSkin","description":"\nGets the skin number of the entity"},{"server":true,"ret":"Vector up","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's up vector ","fname":"getUp","realm":"sh","param":[],"name":"ents_methods:getUp","description":"\nGets the entity's up vector"},{"server":true,"ret":"Vector right","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's right vector ","fname":"getRight","realm":"sh","param":[],"name":"ents_methods:getRight","description":"\nGets the entity's right vector"},{"server":true,"ret":"Vector forward","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nGets the entity's forward vector ","fname":"getForward","realm":"sh","param":[],"name":"ents_methods:getForward","description":"\nGets the entity's forward vector"},{"server":true,"ret":"Seconds relative to server map start","class":"function","client":true,"classlib":"Entity","private":false,"summary":"\nReturns the timer.curtime() time the entity was created on ","fname":"getCreationTime","realm":"sh","param":[],"name":"ents_methods:getCreationTime","description":"\nReturns the timer.curtime() time the entity was created on"}],"name":"libs_sh/entities.lua","description":"\n \nShared entity library functions \n"},"libs_sh/hook.lua":{"summary":"\n \nHook library \n ","tables":[],"functions":{"1":"SF.hookAdd","2":"hook_library.add","3":"hook_library.remove","4":"hook_library.run","5":"hook_library.runRemote","SF.hookAdd":{"server":true,"class":"function","client":true,"private":false,"summary":"\nAdd a GMod hook so that SF gets access to it ","realm":"sh","param":{"1":"realname","2":"hookname","3":"customargfunc","4":"customretfunc","5":"gmoverride","customargfunc":"Optional custom function \nReturns true if the hook should be called, then extra arguements to be passed to the starfall hooks","customretfunc":"Optional custom function \nTakes values returned from starfall hook and returns what should be passed to the gmod hook","hookname":"The hook name. In-SF hookname will be lowercased","gmoverride":"Whether this hook should override the gamemode function (makes the hook run last, but adds a little overhead)"},"name":"SF.hookAdd","description":"\nAdd a GMod hook so that SF gets access to it"},"hook_library.runRemote":{"server":true,"ret":"tbl A list of the resultset of each called hook","class":"function","client":true,"library":"hook","private":false,"summary":"\nRun a hook remotely.","fname":"runRemote","realm":"sh","param":{"1":"recipient","2":"...","...":"Payload. These parameters will be used to call the hook functions","recipient":"Starfall entity to call the hook on. Nil to run on every starfall entity"},"name":"hook_library.runRemote","description":"\nRun a hook remotely. \nThis will call the hook \"remote\" on either a specified entity or all instances on the server/client"},"hook_library.run":{"server":true,"class":"function","client":true,"library":"hook","private":false,"summary":"\nRun a hook ","fname":"run","realm":"sh","param":{"1":"hookname","2":"...","hookname":"The hook name","...":"arguments"},"name":"hook_library.run","description":"\nRun a hook"},"hook_library.add":{"summary":"\nSets a hook function ","class":"function","private":false,"param":{"1":"hookname","2":"name","3":"func","func":"Function to run","hookname":"Name of the event","name":"Unique identifier"},"fname":"add","realm":"sh","description":"\nSets a hook function","name":"hook_library.add","library":"hook"},"hook_library.remove":{"server":true,"class":"function","client":true,"library":"hook","private":false,"summary":"\nRemove a hook ","fname":"remove","realm":"sh","param":{"1":"hookname","2":"name","hookname":"The hook name","name":"The unique name for this hook"},"name":"hook_library.remove","description":"\nRemove a hook"}},"libraries":{"1":"hook","hook":{"server":true,"tables":[],"client":true,"summary":"\nDeals with hooks ","libtbl":"hook_library","fields":[],"class":"library","functions":{"1":"add","2":"remove","3":"run","4":"runRemote","run":{"server":true,"class":"function","client":true,"library":"hook","private":false,"summary":"\nRun a hook ","fname":"run","realm":"sh","param":{"1":"hookname","2":"...","hookname":"The hook name","...":"arguments"},"name":"hook_library.run","description":"\nRun a hook"},"add":{"summary":"\nSets a hook function ","class":"function","private":false,"param":{"1":"hookname","2":"name","3":"func","func":"Function to run","hookname":"Name of the event","name":"Unique identifier"},"fname":"add","realm":"sh","description":"\nSets a hook function","name":"hook_library.add","library":"hook"},"remove":{"server":true,"class":"function","client":true,"library":"hook","private":false,"summary":"\nRemove a hook ","fname":"remove","realm":"sh","param":{"1":"hookname","2":"name","hookname":"The hook name","name":"The unique name for this hook"},"name":"hook_library.remove","description":"\nRemove a hook"},"runRemote":{"server":true,"ret":"tbl A list of the resultset of each called hook","class":"function","client":true,"library":"hook","private":false,"summary":"\nRun a hook remotely.","fname":"runRemote","realm":"sh","param":{"1":"recipient","2":"...","...":"Payload. These parameters will be used to call the hook functions","recipient":"Starfall entity to call the hook on. Nil to run on every starfall entity"},"name":"hook_library.runRemote","description":"\nRun a hook remotely. \nThis will call the hook \"remote\" on either a specified entity or all instances on the server/client"}},"name":"hook","description":"\nDeals with hooks"}},"type":"file","doc":[{"summary":"\n \nHook library \n ","description":"\n \nHook library \n"},{"server":true,"tables":[],"client":true,"summary":"\nDeals with hooks ","libtbl":"hook_library","fields":[],"class":"library","functions":{"1":"add","2":"remove","3":"run","4":"runRemote","run":{"server":true,"class":"function","client":true,"library":"hook","private":false,"summary":"\nRun a hook ","fname":"run","realm":"sh","param":{"1":"hookname","2":"...","hookname":"The hook name","...":"arguments"},"name":"hook_library.run","description":"\nRun a hook"},"add":{"summary":"\nSets a hook function ","class":"function","private":false,"param":{"1":"hookname","2":"name","3":"func","func":"Function to run","hookname":"Name of the event","name":"Unique identifier"},"fname":"add","realm":"sh","description":"\nSets a hook function","name":"hook_library.add","library":"hook"},"remove":{"server":true,"class":"function","client":true,"library":"hook","private":false,"summary":"\nRemove a hook ","fname":"remove","realm":"sh","param":{"1":"hookname","2":"name","hookname":"The hook name","name":"The unique name for this hook"},"name":"hook_library.remove","description":"\nRemove a hook"},"runRemote":{"server":true,"ret":"tbl A list of the resultset of each called hook","class":"function","client":true,"library":"hook","private":false,"summary":"\nRun a hook remotely.","fname":"runRemote","realm":"sh","param":{"1":"recipient","2":"...","...":"Payload. These parameters will be used to call the hook functions","recipient":"Starfall entity to call the hook on. Nil to run on every starfall entity"},"name":"hook_library.runRemote","description":"\nRun a hook remotely. \nThis will call the hook \"remote\" on either a specified entity or all instances on the server/client"}},"name":"hook","description":"\nDeals with hooks"},{"summary":"\nThere are 4 varients of hookfunc depending on if there are custom callbacks ","param":[],"description":"\nThere are 4 varients of hookfunc depending on if there are custom callbacks"},{"summary":"\nSets a hook function ","class":"function","private":false,"param":{"1":"hookname","2":"name","3":"func","func":"Function to run","hookname":"Name of the event","name":"Unique identifier"},"fname":"add","realm":"sh","description":"\nSets a hook function","name":"hook_library.add","library":"hook"},{"server":true,"class":"function","client":true,"library":"hook","private":false,"summary":"\nRun a hook ","fname":"run","realm":"sh","param":{"1":"hookname","2":"...","hookname":"The hook name","...":"arguments"},"name":"hook_library.run","description":"\nRun a hook"},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nRemote hook. \nThis hook can be called from other instances","summary":"\nRemote hook.","realm":"sh","name":"remote","param":{"1":"sender","2":"owner","3":"...","owner":"The owner of the sender","sender":"The entity that caused the hook to run","...":"The payload that was supplied when calling the hook"}},{"server":true,"ret":"tbl A list of the resultset of each called hook","class":"function","client":true,"library":"hook","private":false,"summary":"\nRun a hook remotely.","fname":"runRemote","realm":"sh","param":{"1":"recipient","2":"...","...":"Payload. These parameters will be used to call the hook functions","recipient":"Starfall entity to call the hook on. Nil to run on every starfall entity"},"name":"hook_library.runRemote","description":"\nRun a hook remotely. \nThis will call the hook \"remote\" on either a specified entity or all instances on the server/client"},{"server":true,"class":"function","client":true,"library":"hook","private":false,"summary":"\nRemove a hook ","fname":"remove","realm":"sh","param":{"1":"hookname","2":"name","hookname":"The hook name","name":"The unique name for this hook"},"name":"hook_library.remove","description":"\nRemove a hook"},{"server":true,"class":"function","client":true,"private":false,"summary":"\nAdd a GMod hook so that SF gets access to it ","realm":"sh","param":{"1":"realname","2":"hookname","3":"customargfunc","4":"customretfunc","5":"gmoverride","customargfunc":"Optional custom function \nReturns true if the hook should be called, then extra arguements to be passed to the starfall hooks","customretfunc":"Optional custom function \nTakes values returned from starfall hook and returns what should be passed to the gmod hook","hookname":"The hook name. In-SF hookname will be lowercased","gmoverride":"Whether this hook should override the gamemode function (makes the hook run last, but adds a little overhead)"},"name":"SF.hookAdd","description":"\nAdd a GMod hook so that SF gets access to it"},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when an entity is being picked up by a gravity gun","summary":"\nCalled when an entity is being picked up by a gravity gun ","realm":"sv","name":"GravGunOnPickedUp","param":{"1":"ply","2":"ent","ent":"Entity being picked up","ply":"Player picking up an object"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when an entity is being dropped by a gravity gun","summary":"\nCalled when an entity is being dropped by a gravity gun ","realm":"sv","name":"GravGunOnDropped","param":{"1":"ply","2":"ent","ent":"Entity being dropped","ply":"Player dropping the object"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when an entity is being frozen","summary":"\nCalled when an entity is being frozen ","realm":"sv","name":"OnPhysgunFreeze","param":{"1":"physgun","2":"physobj","3":"ent","4":"ply","ply":"Player freezing the entity","physobj":"PhysObj of the entity","physgun":"Entity of the physgun","ent":"Entity being frozen"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player reloads his physgun","summary":"\nCalled when a player reloads his physgun ","realm":"sv","name":"OnPhysgunReload","param":{"1":"physgun","2":"ply","physgun":"Entity of the physgun","ply":"Player reloading the physgun"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player dies","summary":"\nCalled when a player dies ","realm":"sv","name":"PlayerDeath","param":{"1":"ply","2":"inflictor","3":"attacker","ply":"Player who died","inflictor":"Entity used to kill the player","attacker":"Entity that killed the player"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player disconnects","summary":"\nCalled when a player disconnects ","realm":"sv","name":"PlayerDisconnected","param":{"1":"ply","ply":"Player that disconnected"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player spawns for the first time","summary":"\nCalled when a player spawns for the first time ","realm":"sv","name":"PlayerInitialSpawn","param":{"1":"ply","ply":"Player who spawned"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player spawns","summary":"\nCalled when a player spawns ","realm":"sv","name":"PlayerSpawn","param":{"1":"ply","ply":"Player who spawned"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a players enters a vehicle","summary":"\nCalled when a players enters a vehicle ","realm":"sv","name":"PlayerEnteredVehicle","param":{"1":"ply","2":"vehicle","3":"num","vehicle":"Vehicle that was entered","ply":"Player who entered a vehicle","num":"Role"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a players leaves a vehicle","summary":"\nCalled when a players leaves a vehicle ","realm":"sv","name":"PlayerLeaveVehicle","param":{"1":"ply","2":"vehicle","vehicle":"Vehicle that was left","ply":"Player who left a vehicle"}},{"server":true,"classForced":true,"ret":"New text. \"\" to stop from displaying. Nil to keep original.","class":"hook","description":"\nCalled when a player sends a chat message","summary":"\nCalled when a player sends a chat message ","realm":"sv","name":"PlayerSay","param":{"1":"ply","2":"text","3":"teamChat","ply":"Player that sent the message","teamChat":"True if team chat","text":"Content of the message"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a players sprays his logo","summary":"\nCalled when a players sprays his logo ","realm":"sv","name":"PlayerSpray","param":{"1":"ply","ply":"Player that sprayed"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player holds their use key and looks at an entity. \nWill continuously run.","summary":"\nCalled when a player holds their use key and looks at an entity.","realm":"sv","name":"PlayerUse","param":{"1":"ply","2":"ent","ent":"Entity being used","ply":"Player using the entity"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a players turns their flashlight on or off","summary":"\nCalled when a players turns their flashlight on or off ","realm":"sv","name":"PlayerSwitchFlashlight","param":{"1":"ply","2":"state","state":"New flashlight state. True if on.","ply":"Player switching flashlight"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a wants to pick up a weapon","summary":"\nCalled when a wants to pick up a weapon ","realm":"sv","name":"PlayerCanPickupWeapon","param":{"1":"ply","2":"wep","wep":"Weapon","ply":"Player"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player gets hurt","summary":"\nCalled when a player gets hurt ","realm":"sh","name":"PlayerHurt","param":{"1":"ply","2":"attacker","3":"newHealth","4":"damageTaken","newHealth":"New health of the player","ply":"Player being hurt","damageTaken":"Amount of damage the player has taken","attacker":"Entity causing damage to the player"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player toggles noclip","summary":"\nCalled when a player toggles noclip ","realm":"sh","name":"PlayerNoClip","param":{"1":"ply","2":"newState","newState":"New noclip state. True if on.","ply":"Player toggling noclip"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player presses a key","summary":"\nCalled when a player presses a key ","realm":"sh","name":"KeyPress","param":{"1":"ply","2":"key","key":"The key being pressed","ply":"Player pressing the key"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player releases a key","summary":"\nCalled when a player releases a key ","realm":"sh","name":"KeyRelease","param":{"1":"ply","2":"key","key":"The key being released","ply":"Player releasing the key"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player punts with the gravity gun","summary":"\nCalled when a player punts with the gravity gun ","realm":"sh","name":"GravGunPunt","param":{"1":"ply","2":"ent","ent":"Entity being punted","ply":"Player punting the gravgun"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when an entity gets picked up by a physgun","summary":"\nCalled when an entity gets picked up by a physgun ","realm":"sh","name":"PhysgunPickup","param":{"1":"ply","2":"ent","ent":"Entity being picked up","ply":"Player picking up the entity"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when an entity being held by a physgun gets dropped","summary":"\nCalled when an entity being held by a physgun gets dropped ","realm":"sh","name":"PhysgunDrop","param":{"1":"ply","2":"ent","ent":"Entity being dropped","ply":"Player droppig the entity"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player switches their weapon","summary":"\nCalled when a player switches their weapon ","realm":"sh","name":"PlayerSwitchWeapon","param":{"1":"ply","2":"oldwep","3":"newweapon","ply":"Player droppig the entity","newweapon":"New weapon","oldwep":"Old weapon"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when an entity gets created","summary":"\nCalled when an entity gets created ","realm":"sh","name":"OnEntityCreated","param":{"1":"ent","ent":"New entity"}},{"summary":"\nCalled when a clientside entity gets created or re-created via lag/PVS ","classForced":true,"class":"hook","client":true,"description":"\nCalled when a clientside entity gets created or re-created via lag/PVS","realm":"cl","name":"NetworkEntityCreated","param":{"1":"ent","ent":"New entity"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when an entity is removed","summary":"\nCalled when an entity is removed ","realm":"sh","name":"EntityRemoved","param":{"1":"ent","ent":"Entity being removed"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when an entity is broken","summary":"\nCalled when an entity is broken ","realm":"sh","name":"PropBreak","param":{"1":"ply","2":"ent","ent":"Entity broken","ply":"Player who broke it"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled every time a bullet is fired from an entity","summary":"\nCalled every time a bullet is fired from an entity ","realm":"sh","name":"EntityFireBullets","param":{"1":"ent","2":"data","data":"The bullet data. See http://wiki.garrysmod.com/page/Structures/Bullet","ent":"The entity that fired the bullet"}},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when an entity is damaged","summary":"\nCalled when an entity is damaged ","realm":"sv","name":"EntityTakeDamage","param":{"1":"target","2":"attacker","3":"inflictor","4":"amount","5":"type","6":"position","7":"force","amount":"How much damage","target":"Entity that is hurt","position":"Position of the damage","force":"Force of the damage","type":"Type of the damage","inflictor":"Entity that inflicted the damage","attacker":"Entity that attacked"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player stops driving an entity","summary":"\nCalled when a player stops driving an entity ","realm":"sh","name":"EndEntityDriving","param":{"1":"ent","2":"ply","ply":"Player that drove the entity","ent":"Entity that had been driven"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player starts driving an entity","summary":"\nCalled when a player starts driving an entity ","realm":"sh","name":"StartEntityDriving","param":{"1":"ent","2":"ply","ply":"Player that is driving the entity","ent":"Entity being driven"}},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nThink hook. Called each frame on the client and each game tick on the server.","summary":"\nThink hook.","realm":"sh","name":"think","param":[]},{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nTick hook. Called each game tick on both the server and client.","summary":"\nTick hook.","realm":"sh","name":"tick","param":[]},{"server":true,"classForced":true,"class":"hook","description":"\nCalled when the starfall chip is removed","summary":"\nCalled when the starfall chip is removed ","realm":"sv","name":"Removed","param":[]},{"server":true,"classForced":true,"class":"hook","description":"\nCalled after the starfall chip is duplicated and the duplication is finished.","summary":"\nCalled after the starfall chip is duplicated and the duplication is finished.","realm":"sv","name":"Dupefinished","param":{"1":"entTbl","entTbl":"A table of entities duped with the chip mapped to their previous indices."}},{"summary":"\nCalled when the local player opens their chat window.","classForced":true,"class":"hook","client":true,"description":"\nCalled when the local player opens their chat window.","realm":"cl","name":"StartChat","param":[]},{"summary":"\nCalled when the local player closes their chat window.","classForced":true,"class":"hook","client":true,"description":"\nCalled when the local player closes their chat window.","realm":"cl","name":"FinishChat","param":[]},{"summary":"\nCalled when a player's chat message is printed to the chat window ","classForced":true,"class":"hook","client":true,"description":"\nCalled when a player's chat message is printed to the chat window","realm":"cl","name":"PlayerChat","param":{"1":"ply","2":"text","3":"team","4":"isdead","isdead":"Whether the message was send from a dead player","ply":"Player that said the message","team":"Whether the message was team only","text":"The message"}}],"name":"libs_sh/hook.lua","description":"\n \nHook library \n"},"libs_sv/wire.lua":{"summary":"\n \nWire library.","tables":{"1":"wire_library.ports","wire_library.ports":{"summary":"\nPorts table.","class":"table","tname":"ports","description":"\nPorts table. Reads from this table will read from the wire input \nof the same name. Writes will write to the wire output of the same name.","param":[],"classForced":true,"name":"wire_library.ports","library":"wire"}},"functions":{"1":"Entity.getWirelink","2":"SF.Wire.AddInputType","3":"SF.Wire.AddOutputType","4":"wire_library.adjustInputs","5":"wire_library.adjustOutputs","6":"wire_library.create","7":"wire_library.delete","8":"wire_library.getInputs","9":"wire_library.getOutputs","10":"wire_library.getWirelink","11":"wire_library.self","12":"wire_library.serverUUID","13":"wirelink_metatable.__index","14":"wirelink_metatable.__newindex","15":"wirelink_methods:entity","16":"wirelink_methods:getWiredTo","17":"wirelink_methods:getWiredToName","18":"wirelink_methods:inputType","19":"wirelink_methods:inputs","20":"wirelink_methods:isValid","21":"wirelink_methods:isWired","22":"wirelink_methods:outputType","23":"wirelink_methods:outputs","wirelink_methods:inputType":{"summary":"\nReturns the type of input name, or nil if it doesn't exist ","class":"function","private":false,"param":["name"],"fname":"inputType","realm":"sv","name":"wirelink_methods:inputType","classlib":"Wirelink","description":"\nReturns the type of input name, or nil if it doesn't exist"},"SF.Wire.AddOutputType":{"private":false,"param":{"1":"name","2":"deconverter","name":"Output type name. Case insensitive.","deconverter":"The function used to check for the appropriate type and convert the SF data to wire data (eg, unwrapping)"},"realm":"sv","summary":"\nAdds an output type ","class":"function","name":"SF.Wire.AddOutputType","description":"\nAdds an output type"},"wire_library.getInputs":{"summary":"\nReturns a table of entity's inputs ","ret":"Table of entity's inputs","class":"function","private":false,"library":"wire","fname":"getInputs","realm":"sv","param":{"1":"entI","entI":"Entity with input(s)"},"name":"wire_library.getInputs","description":"\nReturns a table of entity's inputs"},"wirelink_methods:isValid":{"summary":"\nChecks if a wirelink is valid.","class":"function","private":false,"param":[],"fname":"isValid","realm":"sv","name":"wirelink_methods:isValid","classlib":"Wirelink","description":"\nChecks if a wirelink is valid. (ie. doesn't point to an invalid entity)"},"wire_library.getOutputs":{"summary":"\nReturns a table of entity's outputs ","ret":"Table of entity's outputs","class":"function","private":false,"library":"wire","fname":"getOutputs","realm":"sv","param":{"1":"entO","entO":"Entity with output(s)"},"name":"wire_library.getOutputs","description":"\nReturns a table of entity's outputs"},"wire_library.delete":{"summary":"\nUnwires an entity's input ","class":"function","private":false,"param":{"1":"entI","2":"inputname","inputname":"Input to be un-wired","entI":"Entity with input"},"fname":"delete","realm":"sv","description":"\nUnwires an entity's input","name":"wire_library.delete","library":"wire"},"wirelink_methods:getWiredTo":{"summary":"\nReturns what an input of the wirelink is wired to.","ret":"The entity the wirelink is wired to","class":"function","private":false,"classlib":"Wirelink","fname":"getWiredTo","realm":"sv","param":{"1":"name","name":"Name of the input"},"name":"wirelink_methods:getWiredTo","description":"\nReturns what an input of the wirelink is wired to."},"wire_library.adjustInputs":{"summary":"\nCreates/Modifies wire inputs.","class":"function","private":false,"param":{"1":"names","2":"types","names":"An array of input names. May be modified by the function.","types":"An array of input types. Can be shortcuts. May be modified by the function."},"fname":"adjustInputs","realm":"sv","description":"\nCreates/Modifies wire inputs. All wire ports must begin with an uppercase \nletter and contain only alphabetical characters.","name":"wire_library.adjustInputs","library":"wire"},"wirelink_methods:outputs":{"summary":"\nReturns a table of all of the wirelink's outputs ","class":"function","private":false,"param":[],"fname":"outputs","realm":"sv","name":"wirelink_methods:outputs","classlib":"Wirelink","description":"\nReturns a table of all of the wirelink's outputs"},"wire_library.create":{"summary":"\nWires two entities together ","class":"function","private":false,"param":{"1":"entI","2":"entO","3":"inputname","4":"outputname","5":"width","6":"color","7":"material","outputname":"Output to be wired","width":"Width of the wire(optional)","inputname":"Input to be wired","entO":"Entity with output","entI":"Entity with input","material":"Material of the wire(optional), Valid materials are cable/rope, cable/cable2, cable/xbeam, cable/redlaser, cable/blue_elec, cable/physbeam, cable/hydra, arrowire/arrowire, arrowire/arrowire2","color":"Color of the wire(optional)"},"fname":"create","realm":"sv","description":"\nWires two entities together","name":"wire_library.create","library":"wire"},"wire_library.adjustOutputs":{"summary":"\nCreates/Modifies wire outputs.","class":"function","private":false,"param":{"1":"names","2":"types","names":"An array of output names. May be modified by the function.","types":"An array of output types. Can be shortcuts. May be modified by the function."},"fname":"adjustOutputs","realm":"sv","description":"\nCreates/Modifies wire outputs. All wire ports must begin with an uppercase \nletter and contain only alphabetical characters.","name":"wire_library.adjustOutputs","library":"wire"},"wire_library.getWirelink":{"summary":"\nReturns a wirelink to a wire entity ","ret":"Wirelink of the entity","class":"function","private":false,"library":"wire","fname":"getWirelink","realm":"sv","param":{"1":"ent","ent":"Wire entity"},"name":"wire_library.getWirelink","description":"\nReturns a wirelink to a wire entity"},"SF.Wire.AddInputType":{"private":false,"param":{"1":"name","2":"converter","name":"Input type name. Case insensitive.","converter":"The function used to convert the wire data to SF data (eg, wrapping)"},"realm":"sv","summary":"\nAdds an input type ","class":"function","name":"SF.Wire.AddInputType","description":"\nAdds an input type"},"wirelink_methods:getWiredToName":{"summary":"\nReturns the name of the output an input of the wirelink is wired to.","ret":"String name of the output that the input is wired to.","class":"function","private":false,"classlib":"Wirelink","fname":"getWiredToName","realm":"sv","param":{"1":"name","name":"Name of the input of the wirelink."},"name":"wirelink_methods:getWiredToName","description":"\nReturns the name of the output an input of the wirelink is wired to."},"wirelink_methods:isWired":{"summary":"\nChecks if an input is wired.","class":"function","private":false,"param":{"1":"name","name":"Name of the input to check"},"fname":"isWired","realm":"sv","name":"wirelink_methods:isWired","classlib":"Wirelink","description":"\nChecks if an input is wired."},"wire_library.self":{"summary":"\nReturns the wirelink representing this entity.","class":"function","private":false,"param":[],"fname":"self","realm":"sv","description":"\nReturns the wirelink representing this entity.","name":"wire_library.self","library":"wire"},"wirelink_metatable.__index":{"private":false,"param":["self","k"],"realm":"sv","summary":"\nRetrieves an output.","class":"function","name":"wirelink_metatable.__index","description":"\nRetrieves an output. Returns nil if the output doesn't exist."},"wirelink_methods:entity":{"summary":"\nReturns the entity that the wirelink represents ","class":"function","private":false,"param":[],"fname":"entity","realm":"sv","name":"wirelink_methods:entity","classlib":"Wirelink","description":"\nReturns the entity that the wirelink represents"},"wirelink_methods:outputType":{"summary":"\nReturns the type of output name, or nil if it doesn't exist ","class":"function","private":false,"param":["name"],"fname":"outputType","realm":"sv","name":"wirelink_methods:outputType","classlib":"Wirelink","description":"\nReturns the type of output name, or nil if it doesn't exist"},"wirelink_metatable.__newindex":{"private":false,"param":["self","k","v"],"realm":"sv","summary":"\nWrites to an input.","class":"function","name":"wirelink_metatable.__newindex","description":"\nWrites to an input."},"wire_library.serverUUID":{"summary":"\nReturns the server's UUID.","ret":"UUID as string","class":"function","private":false,"library":"wire","fname":"serverUUID","realm":"sv","param":[],"name":"wire_library.serverUUID","description":"\nReturns the server's UUID."},"Entity.getWirelink":{"summary":"\nReturns an entities wirelink ","classForced":true,"ret":"Wirelink of the entity","class":"function","description":"\nReturns an entities wirelink","realm":"sv","name":"Entity.getWirelink","param":[]},"wirelink_methods:inputs":{"summary":"\nReturns a table of all of the wirelink's inputs ","class":"function","private":false,"param":[],"fname":"inputs","realm":"sv","name":"wirelink_methods:inputs","classlib":"Wirelink","description":"\nReturns a table of all of the wirelink's inputs"}},"libraries":{"1":"wire","wire":{"summary":"\nWire library.","tables":{"1":"ports","ports":{"summary":"\nPorts table.","class":"table","tname":"ports","description":"\nPorts table. Reads from this table will read from the wire input \nof the same name. Writes will write to the wire output of the same name.","param":[],"classForced":true,"name":"wire_library.ports","library":"wire"}},"libtbl":"wire_library","fields":[],"class":"library","functions":{"1":"adjustInputs","2":"adjustOutputs","3":"create","4":"delete","5":"getInputs","6":"getOutputs","7":"getWirelink","8":"self","9":"serverUUID","self":{"summary":"\nReturns the wirelink representing this entity.","class":"function","private":false,"param":[],"fname":"self","realm":"sv","description":"\nReturns the wirelink representing this entity.","name":"wire_library.self","library":"wire"},"getWirelink":{"summary":"\nReturns a wirelink to a wire entity ","ret":"Wirelink of the entity","class":"function","private":false,"library":"wire","fname":"getWirelink","realm":"sv","param":{"1":"ent","ent":"Wire entity"},"name":"wire_library.getWirelink","description":"\nReturns a wirelink to a wire entity"},"adjustInputs":{"summary":"\nCreates/Modifies wire inputs.","class":"function","private":false,"param":{"1":"names","2":"types","names":"An array of input names. May be modified by the function.","types":"An array of input types. Can be shortcuts. May be modified by the function."},"fname":"adjustInputs","realm":"sv","description":"\nCreates/Modifies wire inputs. All wire ports must begin with an uppercase \nletter and contain only alphabetical characters.","name":"wire_library.adjustInputs","library":"wire"},"create":{"summary":"\nWires two entities together ","class":"function","private":false,"param":{"1":"entI","2":"entO","3":"inputname","4":"outputname","5":"width","6":"color","7":"material","outputname":"Output to be wired","width":"Width of the wire(optional)","inputname":"Input to be wired","entO":"Entity with output","entI":"Entity with input","material":"Material of the wire(optional), Valid materials are cable/rope, cable/cable2, cable/xbeam, cable/redlaser, cable/blue_elec, cable/physbeam, cable/hydra, arrowire/arrowire, arrowire/arrowire2","color":"Color of the wire(optional)"},"fname":"create","realm":"sv","description":"\nWires two entities together","name":"wire_library.create","library":"wire"},"serverUUID":{"summary":"\nReturns the server's UUID.","ret":"UUID as string","class":"function","private":false,"library":"wire","fname":"serverUUID","realm":"sv","param":[],"name":"wire_library.serverUUID","description":"\nReturns the server's UUID."},"delete":{"summary":"\nUnwires an entity's input ","class":"function","private":false,"param":{"1":"entI","2":"inputname","inputname":"Input to be un-wired","entI":"Entity with input"},"fname":"delete","realm":"sv","description":"\nUnwires an entity's input","name":"wire_library.delete","library":"wire"},"getOutputs":{"summary":"\nReturns a table of entity's outputs ","ret":"Table of entity's outputs","class":"function","private":false,"library":"wire","fname":"getOutputs","realm":"sv","param":{"1":"entO","entO":"Entity with output(s)"},"name":"wire_library.getOutputs","description":"\nReturns a table of entity's outputs"},"adjustOutputs":{"summary":"\nCreates/Modifies wire outputs.","class":"function","private":false,"param":{"1":"names","2":"types","names":"An array of output names. May be modified by the function.","types":"An array of output types. Can be shortcuts. May be modified by the function."},"fname":"adjustOutputs","realm":"sv","description":"\nCreates/Modifies wire outputs. All wire ports must begin with an uppercase \nletter and contain only alphabetical characters.","name":"wire_library.adjustOutputs","library":"wire"},"getInputs":{"summary":"\nReturns a table of entity's inputs ","ret":"Table of entity's inputs","class":"function","private":false,"library":"wire","fname":"getInputs","realm":"sv","param":{"1":"entI","entI":"Entity with input(s)"},"name":"wire_library.getInputs","description":"\nReturns a table of entity's inputs"}},"name":"wire","description":"\nWire library. Handles wire inputs/outputs, wirelinks, etc."}},"type":"file","doc":[{"summary":"\n \nWire library.","param":[],"description":"\n \nWire library. \n"},{"summary":"\nWire library.","tables":{"1":"ports","ports":{"summary":"\nPorts table.","class":"table","tname":"ports","description":"\nPorts table. Reads from this table will read from the wire input \nof the same name. Writes will write to the wire output of the same name.","param":[],"classForced":true,"name":"wire_library.ports","library":"wire"}},"libtbl":"wire_library","fields":[],"class":"library","functions":{"1":"adjustInputs","2":"adjustOutputs","3":"create","4":"delete","5":"getInputs","6":"getOutputs","7":"getWirelink","8":"self","9":"serverUUID","self":{"summary":"\nReturns the wirelink representing this entity.","class":"function","private":false,"param":[],"fname":"self","realm":"sv","description":"\nReturns the wirelink representing this entity.","name":"wire_library.self","library":"wire"},"getWirelink":{"summary":"\nReturns a wirelink to a wire entity ","ret":"Wirelink of the entity","class":"function","private":false,"library":"wire","fname":"getWirelink","realm":"sv","param":{"1":"ent","ent":"Wire entity"},"name":"wire_library.getWirelink","description":"\nReturns a wirelink to a wire entity"},"adjustInputs":{"summary":"\nCreates/Modifies wire inputs.","class":"function","private":false,"param":{"1":"names","2":"types","names":"An array of input names. May be modified by the function.","types":"An array of input types. Can be shortcuts. May be modified by the function."},"fname":"adjustInputs","realm":"sv","description":"\nCreates/Modifies wire inputs. All wire ports must begin with an uppercase \nletter and contain only alphabetical characters.","name":"wire_library.adjustInputs","library":"wire"},"create":{"summary":"\nWires two entities together ","class":"function","private":false,"param":{"1":"entI","2":"entO","3":"inputname","4":"outputname","5":"width","6":"color","7":"material","outputname":"Output to be wired","width":"Width of the wire(optional)","inputname":"Input to be wired","entO":"Entity with output","entI":"Entity with input","material":"Material of the wire(optional), Valid materials are cable/rope, cable/cable2, cable/xbeam, cable/redlaser, cable/blue_elec, cable/physbeam, cable/hydra, arrowire/arrowire, arrowire/arrowire2","color":"Color of the wire(optional)"},"fname":"create","realm":"sv","description":"\nWires two entities together","name":"wire_library.create","library":"wire"},"serverUUID":{"summary":"\nReturns the server's UUID.","ret":"UUID as string","class":"function","private":false,"library":"wire","fname":"serverUUID","realm":"sv","param":[],"name":"wire_library.serverUUID","description":"\nReturns the server's UUID."},"delete":{"summary":"\nUnwires an entity's input ","class":"function","private":false,"param":{"1":"entI","2":"inputname","inputname":"Input to be un-wired","entI":"Entity with input"},"fname":"delete","realm":"sv","description":"\nUnwires an entity's input","name":"wire_library.delete","library":"wire"},"getOutputs":{"summary":"\nReturns a table of entity's outputs ","ret":"Table of entity's outputs","class":"function","private":false,"library":"wire","fname":"getOutputs","realm":"sv","param":{"1":"entO","entO":"Entity with output(s)"},"name":"wire_library.getOutputs","description":"\nReturns a table of entity's outputs"},"adjustOutputs":{"summary":"\nCreates/Modifies wire outputs.","class":"function","private":false,"param":{"1":"names","2":"types","names":"An array of output names. May be modified by the function.","types":"An array of output types. Can be shortcuts. May be modified by the function."},"fname":"adjustOutputs","realm":"sv","description":"\nCreates/Modifies wire outputs. All wire ports must begin with an uppercase \nletter and contain only alphabetical characters.","name":"wire_library.adjustOutputs","library":"wire"},"getInputs":{"summary":"\nReturns a table of entity's inputs ","ret":"Table of entity's inputs","class":"function","private":false,"library":"wire","fname":"getInputs","realm":"sv","param":{"1":"entI","entI":"Entity with input(s)"},"name":"wire_library.getInputs","description":"\nReturns a table of entity's inputs"}},"name":"wire","description":"\nWire library. Handles wire inputs/outputs, wirelinks, etc."},{"methods":{"1":"entity","2":"getWiredTo","3":"getWiredToName","4":"inputType","5":"inputs","6":"isValid","7":"isWired","8":"outputType","9":"outputs","isWired":{"summary":"\nChecks if an input is wired.","class":"function","private":false,"param":{"1":"name","name":"Name of the input to check"},"fname":"isWired","realm":"sv","name":"wirelink_methods:isWired","classlib":"Wirelink","description":"\nChecks if an input is wired."},"entity":{"summary":"\nReturns the entity that the wirelink represents ","class":"function","private":false,"param":[],"fname":"entity","realm":"sv","name":"wirelink_methods:entity","classlib":"Wirelink","description":"\nReturns the entity that the wirelink represents"},"getWiredToName":{"summary":"\nReturns the name of the output an input of the wirelink is wired to.","ret":"String name of the output that the input is wired to.","class":"function","private":false,"classlib":"Wirelink","fname":"getWiredToName","realm":"sv","param":{"1":"name","name":"Name of the input of the wirelink."},"name":"wirelink_methods:getWiredToName","description":"\nReturns the name of the output an input of the wirelink is wired to."},"inputs":{"summary":"\nReturns a table of all of the wirelink's inputs ","class":"function","private":false,"param":[],"fname":"inputs","realm":"sv","name":"wirelink_methods:inputs","classlib":"Wirelink","description":"\nReturns a table of all of the wirelink's inputs"},"getWiredTo":{"summary":"\nReturns what an input of the wirelink is wired to.","ret":"The entity the wirelink is wired to","class":"function","private":false,"classlib":"Wirelink","fname":"getWiredTo","realm":"sv","param":{"1":"name","name":"Name of the input"},"name":"wirelink_methods:getWiredTo","description":"\nReturns what an input of the wirelink is wired to."},"outputType":{"summary":"\nReturns the type of output name, or nil if it doesn't exist ","class":"function","private":false,"param":["name"],"fname":"outputType","realm":"sv","name":"wirelink_methods:outputType","classlib":"Wirelink","description":"\nReturns the type of output name, or nil if it doesn't exist"},"outputs":{"summary":"\nReturns a table of all of the wirelink's outputs ","class":"function","private":false,"param":[],"fname":"outputs","realm":"sv","name":"wirelink_methods:outputs","classlib":"Wirelink","description":"\nReturns a table of all of the wirelink's outputs"},"inputType":{"summary":"\nReturns the type of input name, or nil if it doesn't exist ","class":"function","private":false,"param":["name"],"fname":"inputType","realm":"sv","name":"wirelink_methods:inputType","classlib":"Wirelink","description":"\nReturns the type of input name, or nil if it doesn't exist"},"isValid":{"summary":"\nChecks if a wirelink is valid.","class":"function","private":false,"param":[],"fname":"isValid","realm":"sv","name":"wirelink_methods:isValid","classlib":"Wirelink","description":"\nChecks if a wirelink is valid. (ie. doesn't point to an invalid entity)"}},"class":"class","summary":"\nWirelink type ","fields":[],"server":true,"typtbl":"wirelink_methods","name":"Wirelink","description":"\nWirelink type"},{"summary":"\nReturns an entities wirelink ","classForced":true,"ret":"Wirelink of the entity","class":"function","description":"\nReturns an entities wirelink","realm":"sv","name":"Entity.getWirelink","param":[]},{"private":false,"param":{"1":"name","2":"converter","name":"Input type name. Case insensitive.","converter":"The function used to convert the wire data to SF data (eg, wrapping)"},"realm":"sv","summary":"\nAdds an input type ","class":"function","name":"SF.Wire.AddInputType","description":"\nAdds an input type"},{"private":false,"param":{"1":"name","2":"deconverter","name":"Output type name. Case insensitive.","deconverter":"The function used to check for the appropriate type and convert the SF data to wire data (eg, unwrapping)"},"realm":"sv","summary":"\nAdds an output type ","class":"function","name":"SF.Wire.AddOutputType","description":"\nAdds an output type"},{"summary":"\nCreates/Modifies wire inputs.","class":"function","private":false,"param":{"1":"names","2":"types","names":"An array of input names. May be modified by the function.","types":"An array of input types. Can be shortcuts. May be modified by the function."},"fname":"adjustInputs","realm":"sv","description":"\nCreates/Modifies wire inputs. All wire ports must begin with an uppercase \nletter and contain only alphabetical characters.","name":"wire_library.adjustInputs","library":"wire"},{"summary":"\nCreates/Modifies wire outputs.","class":"function","private":false,"param":{"1":"names","2":"types","names":"An array of output names. May be modified by the function.","types":"An array of output types. Can be shortcuts. May be modified by the function."},"fname":"adjustOutputs","realm":"sv","description":"\nCreates/Modifies wire outputs. All wire ports must begin with an uppercase \nletter and contain only alphabetical characters.","name":"wire_library.adjustOutputs","library":"wire"},{"summary":"\nReturns the wirelink representing this entity.","class":"function","private":false,"param":[],"fname":"self","realm":"sv","description":"\nReturns the wirelink representing this entity.","name":"wire_library.self","library":"wire"},{"summary":"\nReturns the server's UUID.","ret":"UUID as string","class":"function","private":false,"library":"wire","fname":"serverUUID","realm":"sv","param":[],"name":"wire_library.serverUUID","description":"\nReturns the server's UUID."},{"summary":"\nWires two entities together ","class":"function","private":false,"param":{"1":"entI","2":"entO","3":"inputname","4":"outputname","5":"width","6":"color","7":"material","outputname":"Output to be wired","width":"Width of the wire(optional)","inputname":"Input to be wired","entO":"Entity with output","entI":"Entity with input","material":"Material of the wire(optional), Valid materials are cable/rope, cable/cable2, cable/xbeam, cable/redlaser, cable/blue_elec, cable/physbeam, cable/hydra, arrowire/arrowire, arrowire/arrowire2","color":"Color of the wire(optional)"},"fname":"create","realm":"sv","description":"\nWires two entities together","name":"wire_library.create","library":"wire"},{"summary":"\nUnwires an entity's input ","class":"function","private":false,"param":{"1":"entI","2":"inputname","inputname":"Input to be un-wired","entI":"Entity with input"},"fname":"delete","realm":"sv","description":"\nUnwires an entity's input","name":"wire_library.delete","library":"wire"},{"summary":"\nReturns a table of entity's inputs ","ret":"Table of entity's inputs","class":"function","private":false,"library":"wire","fname":"getInputs","realm":"sv","param":{"1":"entI","entI":"Entity with input(s)"},"name":"wire_library.getInputs","description":"\nReturns a table of entity's inputs"},{"summary":"\nReturns a table of entity's outputs ","ret":"Table of entity's outputs","class":"function","private":false,"library":"wire","fname":"getOutputs","realm":"sv","param":{"1":"entO","entO":"Entity with output(s)"},"name":"wire_library.getOutputs","description":"\nReturns a table of entity's outputs"},{"summary":"\nReturns a wirelink to a wire entity ","ret":"Wirelink of the entity","class":"function","private":false,"library":"wire","fname":"getWirelink","realm":"sv","param":{"1":"ent","ent":"Wire entity"},"name":"wire_library.getWirelink","description":"\nReturns a wirelink to a wire entity"},{"private":false,"param":["self","k"],"realm":"sv","summary":"\nRetrieves an output.","class":"function","name":"wirelink_metatable.__index","description":"\nRetrieves an output. Returns nil if the output doesn't exist."},{"private":false,"param":["self","k","v"],"realm":"sv","summary":"\nWrites to an input.","class":"function","name":"wirelink_metatable.__newindex","description":"\nWrites to an input."},{"summary":"\nChecks if a wirelink is valid.","class":"function","private":false,"param":[],"fname":"isValid","realm":"sv","name":"wirelink_methods:isValid","classlib":"Wirelink","description":"\nChecks if a wirelink is valid. (ie. doesn't point to an invalid entity)"},{"summary":"\nReturns the type of input name, or nil if it doesn't exist ","class":"function","private":false,"param":["name"],"fname":"inputType","realm":"sv","name":"wirelink_methods:inputType","classlib":"Wirelink","description":"\nReturns the type of input name, or nil if it doesn't exist"},{"summary":"\nReturns the type of output name, or nil if it doesn't exist ","class":"function","private":false,"param":["name"],"fname":"outputType","realm":"sv","name":"wirelink_methods:outputType","classlib":"Wirelink","description":"\nReturns the type of output name, or nil if it doesn't exist"},{"summary":"\nReturns the entity that the wirelink represents ","class":"function","private":false,"param":[],"fname":"entity","realm":"sv","name":"wirelink_methods:entity","classlib":"Wirelink","description":"\nReturns the entity that the wirelink represents"},{"summary":"\nReturns a table of all of the wirelink's inputs ","class":"function","private":false,"param":[],"fname":"inputs","realm":"sv","name":"wirelink_methods:inputs","classlib":"Wirelink","description":"\nReturns a table of all of the wirelink's inputs"},{"summary":"\nReturns a table of all of the wirelink's outputs ","class":"function","private":false,"param":[],"fname":"outputs","realm":"sv","name":"wirelink_methods:outputs","classlib":"Wirelink","description":"\nReturns a table of all of the wirelink's outputs"},{"summary":"\nChecks if an input is wired.","class":"function","private":false,"param":{"1":"name","name":"Name of the input to check"},"fname":"isWired","realm":"sv","name":"wirelink_methods:isWired","classlib":"Wirelink","description":"\nChecks if an input is wired."},{"summary":"\nReturns what an input of the wirelink is wired to.","ret":"The entity the wirelink is wired to","class":"function","private":false,"classlib":"Wirelink","fname":"getWiredTo","realm":"sv","param":{"1":"name","name":"Name of the input"},"name":"wirelink_methods:getWiredTo","description":"\nReturns what an input of the wirelink is wired to."},{"summary":"\nReturns the name of the output an input of the wirelink is wired to.","ret":"String name of the output that the input is wired to.","class":"function","private":false,"classlib":"Wirelink","fname":"getWiredToName","realm":"sv","param":{"1":"name","name":"Name of the input of the wirelink."},"name":"wirelink_methods:getWiredToName","description":"\nReturns the name of the output an input of the wirelink is wired to."},{"summary":"\nPorts table.","class":"table","tname":"ports","description":"\nPorts table. Reads from this table will read from the wire input \nof the same name. Writes will write to the wire output of the same name.","param":[],"classForced":true,"name":"wire_library.ports","library":"wire"},{"summary":"\nCalled when an input on a wired SF chip is written to ","classForced":true,"realm":"sv","description":"\nCalled when an input on a wired SF chip is written to","class":"hook","name":"input","param":{"1":"input","2":"value","input":"The input name","value":"The value of the input"}},{"server":true,"classForced":true,"ret":"The value read","class":"hook","description":"\nCalled when a high speed device reads from a wired SF chip","summary":"\nCalled when a high speed device reads from a wired SF chip ","realm":"sv","name":"readcell","param":{"1":"address","address":"The address requested"}},{"summary":"\nCalled when a high speed device writes to a wired SF chip ","classForced":true,"realm":"sv","description":"\nCalled when a high speed device writes to a wired SF chip","class":"hook","name":"writecell","param":{"1":"address","2":"data","address":"The address written to","data":"The data being written"}}],"name":"libs_sv/wire.lua","description":"\n \nWire library. \n"},"libs_sh/quaternion.lua":{"summary":"\nQuaternion library ","tables":[],"functions":{"1":"argTypesToQuat[\"Angle\"]","2":"argTypesToQuat[\"Entity\"]","3":"argTypesToQuat[\"Vector\"]","4":"argTypesToQuat[\"VectorVector\"]","5":"argTypesToQuat[\"number\"]","6":"argTypesToQuat[\"numberVector\"]","7":"argTypesToQuat[\"numbernumbernumbernumber\"]","8":"quat_lib.New","9":"quat_lib.abs","10":"quat_lib.conj","11":"quat_lib.exp","12":"quat_lib.inv","13":"quat_lib.log","14":"quat_lib.qMod","15":"quat_lib.qRotation","16":"quat_lib.qRotation","17":"quat_lib.qi","18":"quat_lib.qj","19":"quat_lib.qk","20":"quat_lib.rotationAngle","21":"quat_lib.rotationAxis","22":"quat_lib.rotationEulerAngle","23":"quat_lib.rotationVector","24":"quat_lib.slerp","25":"quat_lib.vec","26":"quat_methods:clone","27":"quat_methods:conj","28":"quat_methods:forward","29":"quat_methods:i","30":"quat_methods:j","31":"quat_methods:k","32":"quat_methods:r","33":"quat_methods:real","34":"quat_methods:right","35":"quat_methods:set","36":"quat_methods:up","quat_lib.rotationEulerAngle":{"summary":"\nReturns the euler angle of rotation in degrees ","class":"function","private":false,"param":["q"],"fname":"rotationEulerAngle","realm":"sh","description":"\nReturns the euler angle of rotation in degrees","name":"quat_lib.rotationEulerAngle","library":"quaternion"},"quat_lib.qj":{"summary":"\nReturns Quaternion <n>*j ","class":"function","private":false,"param":["n"],"fname":"qj","realm":"sh","description":"\nReturns Quaternion <n>*j","name":"quat_lib.qj","library":"quaternion"},"quat_methods:r":{"summary":"\nAlias for :real() as r is easier ","class":"function","private":false,"param":[],"fname":"r","realm":"sh","name":"quat_methods:r","classlib":"Quaternion","description":"\nAlias for :real() as r is easier"},"argTypesToQuat[\"number\"]":{"private":false,"param":["num"],"realm":"sh","summary":"\nConverts a number to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"number\"]","description":"\nConverts a number to a Quaternion format for generation"},"quat_methods:clone":{"summary":"\nCopies from quaternion and returns a new quaternion ","ret":"The copy of the quaternion","class":"function","private":false,"classlib":"Quaternion","fname":"clone","realm":"sh","param":[],"name":"quat_methods:clone","description":"\nCopies from quaternion and returns a new quaternion"},"quat_lib.qk":{"summary":"\nReturns Quaternion <n>*k ","class":"function","private":false,"param":["n"],"fname":"qk","realm":"sh","description":"\nReturns Quaternion <n>*k","name":"quat_lib.qk","library":"quaternion"},"quat_lib.rotationAngle":{"summary":"\nReturns the angle of rotation in degrees (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationAngle","realm":"sh","description":"\nReturns the angle of rotation in degrees (by coder0xff)","name":"quat_lib.rotationAngle","library":"quaternion"},"quat_lib.qMod":{"summary":"\nChanges quaternion <q> so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"qMod","realm":"sh","description":"\nChanges quaternion <q> so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff)","name":"quat_lib.qMod","library":"quaternion"},"quat_methods:real":{"summary":"\nReturns the real component of the quaternion ","class":"function","private":false,"param":[],"fname":"real","realm":"sh","name":"quat_methods:real","classlib":"Quaternion","description":"\nReturns the real component of the quaternion"},"quat_methods:i":{"summary":"\nReturns the i component of the quaternion ","class":"function","private":false,"param":[],"fname":"i","realm":"sh","name":"quat_methods:i","classlib":"Quaternion","description":"\nReturns the i component of the quaternion"},"quat_methods:k":{"summary":"\nReturns the k component of the quaternion ","class":"function","private":false,"param":[],"fname":"k","realm":"sh","name":"quat_methods:k","classlib":"Quaternion","description":"\nReturns the k component of the quaternion"},"quat_lib.vec":{"summary":"\nConverts <q> to a vector by dropping the real component ","class":"function","private":false,"param":["q"],"fname":"vec","realm":"sh","description":"\nConverts <q> to a vector by dropping the real component","name":"quat_lib.vec","library":"quaternion"},"quat_methods:up":{"summary":"\nReturns vector pointing up for <this> ","class":"function","private":false,"param":[],"fname":"up","realm":"sh","name":"quat_methods:up","classlib":"Quaternion","description":"\nReturns vector pointing up for <this>"},"argTypesToQuat[\"Angle\"]":{"private":false,"param":["ang"],"realm":"sh","summary":"\nConverts an Angle to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"Angle\"]","description":"\nConverts an Angle to a Quaternion format for generation"},"quat_lib.slerp":{"summary":"\nPerforms spherical linear interpolation between <q0> and <q1>.","class":"function","private":false,"param":["q0","q1","t"],"fname":"slerp","realm":"sh","description":"\nPerforms spherical linear interpolation between <q0> and <q1>. Returns <q0> for <t>=0, <q1> for <t>=1","name":"quat_lib.slerp","library":"quaternion"},"quat_lib.abs":{"summary":"\nReturns absolute value of <q> ","class":"function","private":false,"param":["q"],"fname":"abs","realm":"sh","description":"\nReturns absolute value of <q>","name":"quat_lib.abs","library":"quaternion"},"quat_lib.New":{"summary":"\nCreates a new Quaternion given a variety of inputs ","class":"function","private":false,"param":{"1":"self","2":"...","...":"A series of arguments which lead to valid generation of a quaternion. \nSee argTypesToQuat table for examples of acceptable inputs."},"fname":"New","realm":"sh","description":"\nCreates a new Quaternion given a variety of inputs","name":"quat_lib.New","library":"quaternion"},"quat_lib.inv":{"summary":"\nReturns the inverse of <q> ","class":"function","private":false,"param":["q"],"fname":"inv","realm":"sh","description":"\nReturns the inverse of <q>","name":"quat_lib.inv","library":"quaternion"},"quat_lib.rotationVector":{"summary":"\nReturns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationVector","realm":"sh","description":"\nReturns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff)","name":"quat_lib.rotationVector","library":"quaternion"},"quat_lib.exp":{"summary":"\nRaises Euler's constant e to the power <q> ","class":"function","private":false,"param":["q"],"fname":"exp","realm":"sh","description":"\nRaises Euler's constant e to the power <q>","name":"quat_lib.exp","library":"quaternion"},"quat_methods:forward":{"summary":"\nReturns vector pointing forward for <this> ","class":"function","private":false,"param":[],"fname":"forward","realm":"sh","name":"quat_methods:forward","classlib":"Quaternion","description":"\nReturns vector pointing forward for <this>"},"argTypesToQuat[\"Entity\"]":{"private":false,"param":["ent"],"realm":"sh","summary":"\nConverts an Entity to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"Entity\"]","description":"\nConverts an Entity to a Quaternion format for generation"},"quat_lib.rotationAxis":{"summary":"\nReturns the axis of rotation (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationAxis","realm":"sh","description":"\nReturns the axis of rotation (by coder0xff)","name":"quat_lib.rotationAxis","library":"quaternion"},"quat_methods:right":{"summary":"\nReturns vector pointing right for <this> ","class":"function","private":false,"param":[],"fname":"right","realm":"sh","name":"quat_methods:right","classlib":"Quaternion","description":"\nReturns vector pointing right for <this>"},"argTypesToQuat[\"numberVector\"]":{"private":false,"param":["num","vec"],"realm":"sh","summary":"\nConverts a Number/Vector combination to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"numberVector\"]","description":"\nConverts a Number/Vector combination to a Quaternion format for generation"},"argTypesToQuat[\"numbernumbernumbernumber\"]":{"private":false,"param":["a","b","c","d"],"realm":"sh","summary":"\nConverts 4 numbers to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"numbernumbernumbernumber\"]","description":"\nConverts 4 numbers to a Quaternion format for generation"},"quat_lib.log":{"summary":"\nCalculates natural logarithm of <q> ","class":"function","private":false,"param":["q"],"fname":"log","realm":"sh","description":"\nCalculates natural logarithm of <q>","name":"quat_lib.log","library":"quaternion"},"argTypesToQuat[\"VectorVector\"]":{"private":false,"param":["forward","up"],"realm":"sh","summary":"\nConverts two Vectors to a Quaternion format for generation using Cross product and the angle between them ","class":"function","name":"argTypesToQuat[\"VectorVector\"]","description":"\nConverts two Vectors to a Quaternion format for generation using Cross product and the angle between them"},"quat_methods:conj":{"summary":"\nReturns the conj of self ","class":"function","private":false,"param":[],"fname":"conj","realm":"sh","name":"quat_methods:conj","classlib":"Quaternion","description":"\nReturns the conj of self"},"quat_lib.conj":{"summary":"\nReturns the conjugate of <q> ","class":"function","private":false,"param":["q"],"fname":"conj","realm":"sh","description":"\nReturns the conjugate of <q>","name":"quat_lib.conj","library":"quaternion"},"quat_methods:set":{"summary":"\nCopies a quaternion to another.","ret":"nil","class":"function","private":false,"classlib":"Quaternion","fname":"set","realm":"sh","param":{"1":"b","b":"The quaternion to copy from."},"name":"quat_methods:set","description":"\nCopies a quaternion to another."},"quat_methods:j":{"summary":"\nReturns the j component of the quaternion ","class":"function","private":false,"param":[],"fname":"j","realm":"sh","name":"quat_methods:j","classlib":"Quaternion","description":"\nReturns the j component of the quaternion"},"argTypesToQuat[\"Vector\"]":{"private":false,"param":["vec"],"realm":"sh","summary":"\nConverts a Vector to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"Vector\"]","description":"\nConverts a Vector to a Quaternion format for generation"},"quat_lib.qRotation":{"summary":"\nConstruct a quaternion from the rotation vector <rv1>.","class":"function","private":false,"param":["rv1"],"fname":"qRotation","realm":"sh","description":"\nConstruct a quaternion from the rotation vector <rv1>. Vector direction is axis of rotation, magnitude is angle in degress (by coder0xff)","name":"quat_lib.qRotation","library":"quaternion"},"quat_lib.qi":{"summary":"\nReturns Quaternion <n>*i ","class":"function","private":false,"param":["n"],"fname":"qi","realm":"sh","description":"\nReturns Quaternion <n>*i","name":"quat_lib.qi","library":"quaternion"}},"libraries":{"1":"quaternion","quaternion":{"server":true,"tables":[],"client":true,"summary":"\nQuaternion library ","libtbl":"quat_lib","fields":[],"class":"library","functions":{"1":"New","2":"abs","3":"conj","4":"exp","5":"inv","6":"log","7":"qMod","8":"qRotation","9":"qRotation","10":"qi","11":"qj","12":"qk","13":"rotationAngle","14":"rotationAxis","15":"rotationEulerAngle","16":"rotationVector","17":"slerp","18":"vec","New":{"summary":"\nCreates a new Quaternion given a variety of inputs ","class":"function","private":false,"param":{"1":"self","2":"...","...":"A series of arguments which lead to valid generation of a quaternion. \nSee argTypesToQuat table for examples of acceptable inputs."},"fname":"New","realm":"sh","description":"\nCreates a new Quaternion given a variety of inputs","name":"quat_lib.New","library":"quaternion"},"rotationEulerAngle":{"summary":"\nReturns the euler angle of rotation in degrees ","class":"function","private":false,"param":["q"],"fname":"rotationEulerAngle","realm":"sh","description":"\nReturns the euler angle of rotation in degrees","name":"quat_lib.rotationEulerAngle","library":"quaternion"},"conj":{"summary":"\nReturns the conjugate of <q> ","class":"function","private":false,"param":["q"],"fname":"conj","realm":"sh","description":"\nReturns the conjugate of <q>","name":"quat_lib.conj","library":"quaternion"},"rotationVector":{"summary":"\nReturns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationVector","realm":"sh","description":"\nReturns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff)","name":"quat_lib.rotationVector","library":"quaternion"},"slerp":{"summary":"\nPerforms spherical linear interpolation between <q0> and <q1>.","class":"function","private":false,"param":["q0","q1","t"],"fname":"slerp","realm":"sh","description":"\nPerforms spherical linear interpolation between <q0> and <q1>. Returns <q0> for <t>=0, <q1> for <t>=1","name":"quat_lib.slerp","library":"quaternion"},"qi":{"summary":"\nReturns Quaternion <n>*i ","class":"function","private":false,"param":["n"],"fname":"qi","realm":"sh","description":"\nReturns Quaternion <n>*i","name":"quat_lib.qi","library":"quaternion"},"qj":{"summary":"\nReturns Quaternion <n>*j ","class":"function","private":false,"param":["n"],"fname":"qj","realm":"sh","description":"\nReturns Quaternion <n>*j","name":"quat_lib.qj","library":"quaternion"},"qMod":{"summary":"\nChanges quaternion <q> so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"qMod","realm":"sh","description":"\nChanges quaternion <q> so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff)","name":"quat_lib.qMod","library":"quaternion"},"qRotation":{"summary":"\nConstruct a quaternion from the rotation vector <rv1>.","class":"function","private":false,"param":["rv1"],"fname":"qRotation","realm":"sh","description":"\nConstruct a quaternion from the rotation vector <rv1>. Vector direction is axis of rotation, magnitude is angle in degress (by coder0xff)","name":"quat_lib.qRotation","library":"quaternion"},"qk":{"summary":"\nReturns Quaternion <n>*k ","class":"function","private":false,"param":["n"],"fname":"qk","realm":"sh","description":"\nReturns Quaternion <n>*k","name":"quat_lib.qk","library":"quaternion"},"abs":{"summary":"\nReturns absolute value of <q> ","class":"function","private":false,"param":["q"],"fname":"abs","realm":"sh","description":"\nReturns absolute value of <q>","name":"quat_lib.abs","library":"quaternion"},"vec":{"summary":"\nConverts <q> to a vector by dropping the real component ","class":"function","private":false,"param":["q"],"fname":"vec","realm":"sh","description":"\nConverts <q> to a vector by dropping the real component","name":"quat_lib.vec","library":"quaternion"},"inv":{"summary":"\nReturns the inverse of <q> ","class":"function","private":false,"param":["q"],"fname":"inv","realm":"sh","description":"\nReturns the inverse of <q>","name":"quat_lib.inv","library":"quaternion"},"rotationAxis":{"summary":"\nReturns the axis of rotation (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationAxis","realm":"sh","description":"\nReturns the axis of rotation (by coder0xff)","name":"quat_lib.rotationAxis","library":"quaternion"},"rotationAngle":{"summary":"\nReturns the angle of rotation in degrees (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationAngle","realm":"sh","description":"\nReturns the angle of rotation in degrees (by coder0xff)","name":"quat_lib.rotationAngle","library":"quaternion"},"exp":{"summary":"\nRaises Euler's constant e to the power <q> ","class":"function","private":false,"param":["q"],"fname":"exp","realm":"sh","description":"\nRaises Euler's constant e to the power <q>","name":"quat_lib.exp","library":"quaternion"},"log":{"summary":"\nCalculates natural logarithm of <q> ","class":"function","private":false,"param":["q"],"fname":"log","realm":"sh","description":"\nCalculates natural logarithm of <q>","name":"quat_lib.log","library":"quaternion"}},"name":"quaternion","description":"\nQuaternion library"}},"type":"file","doc":[{"summary":"\nQuaternion library ","description":"\nQuaternion library"},{"server":true,"tables":[],"client":true,"summary":"\nQuaternion library ","libtbl":"quat_lib","fields":[],"class":"library","functions":{"1":"New","2":"abs","3":"conj","4":"exp","5":"inv","6":"log","7":"qMod","8":"qRotation","9":"qRotation","10":"qi","11":"qj","12":"qk","13":"rotationAngle","14":"rotationAxis","15":"rotationEulerAngle","16":"rotationVector","17":"slerp","18":"vec","New":{"summary":"\nCreates a new Quaternion given a variety of inputs ","class":"function","private":false,"param":{"1":"self","2":"...","...":"A series of arguments which lead to valid generation of a quaternion. \nSee argTypesToQuat table for examples of acceptable inputs."},"fname":"New","realm":"sh","description":"\nCreates a new Quaternion given a variety of inputs","name":"quat_lib.New","library":"quaternion"},"rotationEulerAngle":{"summary":"\nReturns the euler angle of rotation in degrees ","class":"function","private":false,"param":["q"],"fname":"rotationEulerAngle","realm":"sh","description":"\nReturns the euler angle of rotation in degrees","name":"quat_lib.rotationEulerAngle","library":"quaternion"},"conj":{"summary":"\nReturns the conjugate of <q> ","class":"function","private":false,"param":["q"],"fname":"conj","realm":"sh","description":"\nReturns the conjugate of <q>","name":"quat_lib.conj","library":"quaternion"},"rotationVector":{"summary":"\nReturns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationVector","realm":"sh","description":"\nReturns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff)","name":"quat_lib.rotationVector","library":"quaternion"},"slerp":{"summary":"\nPerforms spherical linear interpolation between <q0> and <q1>.","class":"function","private":false,"param":["q0","q1","t"],"fname":"slerp","realm":"sh","description":"\nPerforms spherical linear interpolation between <q0> and <q1>. Returns <q0> for <t>=0, <q1> for <t>=1","name":"quat_lib.slerp","library":"quaternion"},"qi":{"summary":"\nReturns Quaternion <n>*i ","class":"function","private":false,"param":["n"],"fname":"qi","realm":"sh","description":"\nReturns Quaternion <n>*i","name":"quat_lib.qi","library":"quaternion"},"qj":{"summary":"\nReturns Quaternion <n>*j ","class":"function","private":false,"param":["n"],"fname":"qj","realm":"sh","description":"\nReturns Quaternion <n>*j","name":"quat_lib.qj","library":"quaternion"},"qMod":{"summary":"\nChanges quaternion <q> so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"qMod","realm":"sh","description":"\nChanges quaternion <q> so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff)","name":"quat_lib.qMod","library":"quaternion"},"qRotation":{"summary":"\nConstruct a quaternion from the rotation vector <rv1>.","class":"function","private":false,"param":["rv1"],"fname":"qRotation","realm":"sh","description":"\nConstruct a quaternion from the rotation vector <rv1>. Vector direction is axis of rotation, magnitude is angle in degress (by coder0xff)","name":"quat_lib.qRotation","library":"quaternion"},"qk":{"summary":"\nReturns Quaternion <n>*k ","class":"function","private":false,"param":["n"],"fname":"qk","realm":"sh","description":"\nReturns Quaternion <n>*k","name":"quat_lib.qk","library":"quaternion"},"abs":{"summary":"\nReturns absolute value of <q> ","class":"function","private":false,"param":["q"],"fname":"abs","realm":"sh","description":"\nReturns absolute value of <q>","name":"quat_lib.abs","library":"quaternion"},"vec":{"summary":"\nConverts <q> to a vector by dropping the real component ","class":"function","private":false,"param":["q"],"fname":"vec","realm":"sh","description":"\nConverts <q> to a vector by dropping the real component","name":"quat_lib.vec","library":"quaternion"},"inv":{"summary":"\nReturns the inverse of <q> ","class":"function","private":false,"param":["q"],"fname":"inv","realm":"sh","description":"\nReturns the inverse of <q>","name":"quat_lib.inv","library":"quaternion"},"rotationAxis":{"summary":"\nReturns the axis of rotation (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationAxis","realm":"sh","description":"\nReturns the axis of rotation (by coder0xff)","name":"quat_lib.rotationAxis","library":"quaternion"},"rotationAngle":{"summary":"\nReturns the angle of rotation in degrees (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationAngle","realm":"sh","description":"\nReturns the angle of rotation in degrees (by coder0xff)","name":"quat_lib.rotationAngle","library":"quaternion"},"exp":{"summary":"\nRaises Euler's constant e to the power <q> ","class":"function","private":false,"param":["q"],"fname":"exp","realm":"sh","description":"\nRaises Euler's constant e to the power <q>","name":"quat_lib.exp","library":"quaternion"},"log":{"summary":"\nCalculates natural logarithm of <q> ","class":"function","private":false,"param":["q"],"fname":"log","realm":"sh","description":"\nCalculates natural logarithm of <q>","name":"quat_lib.log","library":"quaternion"}},"name":"quaternion","description":"\nQuaternion library"},{"methods":{"1":"clone","2":"conj","3":"forward","4":"i","5":"j","6":"k","7":"r","8":"real","9":"right","10":"set","11":"up","real":{"summary":"\nReturns the real component of the quaternion ","class":"function","private":false,"param":[],"fname":"real","realm":"sh","name":"quat_methods:real","classlib":"Quaternion","description":"\nReturns the real component of the quaternion"},"set":{"summary":"\nCopies a quaternion to another.","ret":"nil","class":"function","private":false,"classlib":"Quaternion","fname":"set","realm":"sh","param":{"1":"b","b":"The quaternion to copy from."},"name":"quat_methods:set","description":"\nCopies a quaternion to another."},"conj":{"summary":"\nReturns the conj of self ","class":"function","private":false,"param":[],"fname":"conj","realm":"sh","name":"quat_methods:conj","classlib":"Quaternion","description":"\nReturns the conj of self"},"up":{"summary":"\nReturns vector pointing up for <this> ","class":"function","private":false,"param":[],"fname":"up","realm":"sh","name":"quat_methods:up","classlib":"Quaternion","description":"\nReturns vector pointing up for <this>"},"k":{"summary":"\nReturns the k component of the quaternion ","class":"function","private":false,"param":[],"fname":"k","realm":"sh","name":"quat_methods:k","classlib":"Quaternion","description":"\nReturns the k component of the quaternion"},"j":{"summary":"\nReturns the j component of the quaternion ","class":"function","private":false,"param":[],"fname":"j","realm":"sh","name":"quat_methods:j","classlib":"Quaternion","description":"\nReturns the j component of the quaternion"},"right":{"summary":"\nReturns vector pointing right for <this> ","class":"function","private":false,"param":[],"fname":"right","realm":"sh","name":"quat_methods:right","classlib":"Quaternion","description":"\nReturns vector pointing right for <this>"},"r":{"summary":"\nAlias for :real() as r is easier ","class":"function","private":false,"param":[],"fname":"r","realm":"sh","name":"quat_methods:r","classlib":"Quaternion","description":"\nAlias for :real() as r is easier"},"forward":{"summary":"\nReturns vector pointing forward for <this> ","class":"function","private":false,"param":[],"fname":"forward","realm":"sh","name":"quat_methods:forward","classlib":"Quaternion","description":"\nReturns vector pointing forward for <this>"},"i":{"summary":"\nReturns the i component of the quaternion ","class":"function","private":false,"param":[],"fname":"i","realm":"sh","name":"quat_methods:i","classlib":"Quaternion","description":"\nReturns the i component of the quaternion"},"clone":{"summary":"\nCopies from quaternion and returns a new quaternion ","ret":"The copy of the quaternion","class":"function","private":false,"classlib":"Quaternion","fname":"clone","realm":"sh","param":[],"name":"quat_methods:clone","description":"\nCopies from quaternion and returns a new quaternion"}},"class":"class","fields":[],"summary":"\nQuaternion type ","typtbl":"quat_methods","name":"Quaternion","description":"\nQuaternion type"},{"private":false,"param":["num"],"realm":"sh","summary":"\nConverts a number to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"number\"]","description":"\nConverts a number to a Quaternion format for generation"},{"private":false,"param":["a","b","c","d"],"realm":"sh","summary":"\nConverts 4 numbers to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"numbernumbernumbernumber\"]","description":"\nConverts 4 numbers to a Quaternion format for generation"},{"private":false,"param":["vec"],"realm":"sh","summary":"\nConverts a Vector to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"Vector\"]","description":"\nConverts a Vector to a Quaternion format for generation"},{"private":false,"param":["ang"],"realm":"sh","summary":"\nConverts an Angle to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"Angle\"]","description":"\nConverts an Angle to a Quaternion format for generation"},{"private":false,"param":["num","vec"],"realm":"sh","summary":"\nConverts a Number/Vector combination to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"numberVector\"]","description":"\nConverts a Number/Vector combination to a Quaternion format for generation"},{"private":false,"param":["forward","up"],"realm":"sh","summary":"\nConverts two Vectors to a Quaternion format for generation using Cross product and the angle between them ","class":"function","name":"argTypesToQuat[\"VectorVector\"]","description":"\nConverts two Vectors to a Quaternion format for generation using Cross product and the angle between them"},{"private":false,"param":["ent"],"realm":"sh","summary":"\nConverts an Entity to a Quaternion format for generation ","class":"function","name":"argTypesToQuat[\"Entity\"]","description":"\nConverts an Entity to a Quaternion format for generation"},{"summary":"\nCreates a new Quaternion given a variety of inputs ","class":"function","private":false,"param":{"1":"self","2":"...","...":"A series of arguments which lead to valid generation of a quaternion. \nSee argTypesToQuat table for examples of acceptable inputs."},"fname":"New","realm":"sh","description":"\nCreates a new Quaternion given a variety of inputs","name":"quat_lib.New","library":"quaternion"},{"summary":"\nReturns Quaternion <n>*i ","class":"function","private":false,"param":["n"],"fname":"qi","realm":"sh","description":"\nReturns Quaternion <n>*i","name":"quat_lib.qi","library":"quaternion"},{"summary":"\nReturns Quaternion <n>*j ","class":"function","private":false,"param":["n"],"fname":"qj","realm":"sh","description":"\nReturns Quaternion <n>*j","name":"quat_lib.qj","library":"quaternion"},{"summary":"\nReturns Quaternion <n>*k ","class":"function","private":false,"param":["n"],"fname":"qk","realm":"sh","description":"\nReturns Quaternion <n>*k","name":"quat_lib.qk","library":"quaternion"},{"summary":"\nReturns absolute value of <q> ","class":"function","private":false,"param":["q"],"fname":"abs","realm":"sh","description":"\nReturns absolute value of <q>","name":"quat_lib.abs","library":"quaternion"},{"summary":"\nReturns the conjugate of <q> ","class":"function","private":false,"param":["q"],"fname":"conj","realm":"sh","description":"\nReturns the conjugate of <q>","name":"quat_lib.conj","library":"quaternion"},{"summary":"\nReturns the inverse of <q> ","class":"function","private":false,"param":["q"],"fname":"inv","realm":"sh","description":"\nReturns the inverse of <q>","name":"quat_lib.inv","library":"quaternion"},{"summary":"\nCopies from quaternion and returns a new quaternion ","ret":"The copy of the quaternion","class":"function","private":false,"classlib":"Quaternion","fname":"clone","realm":"sh","param":[],"name":"quat_methods:clone","description":"\nCopies from quaternion and returns a new quaternion"},{"summary":"\nCopies a quaternion to another.","ret":"nil","class":"function","private":false,"classlib":"Quaternion","fname":"set","realm":"sh","param":{"1":"b","b":"The quaternion to copy from."},"name":"quat_methods:set","description":"\nCopies a quaternion to another."},{"summary":"\nReturns the conj of self ","class":"function","private":false,"param":[],"fname":"conj","realm":"sh","name":"quat_methods:conj","classlib":"Quaternion","description":"\nReturns the conj of self"},{"summary":"\nReturns the real component of the quaternion ","class":"function","private":false,"param":[],"fname":"real","realm":"sh","name":"quat_methods:real","classlib":"Quaternion","description":"\nReturns the real component of the quaternion"},{"summary":"\nAlias for :real() as r is easier ","class":"function","private":false,"param":[],"fname":"r","realm":"sh","name":"quat_methods:r","classlib":"Quaternion","description":"\nAlias for :real() as r is easier"},{"summary":"\nReturns the i component of the quaternion ","class":"function","private":false,"param":[],"fname":"i","realm":"sh","name":"quat_methods:i","classlib":"Quaternion","description":"\nReturns the i component of the quaternion"},{"summary":"\nReturns the j component of the quaternion ","class":"function","private":false,"param":[],"fname":"j","realm":"sh","name":"quat_methods:j","classlib":"Quaternion","description":"\nReturns the j component of the quaternion"},{"summary":"\nReturns the k component of the quaternion ","class":"function","private":false,"param":[],"fname":"k","realm":"sh","name":"quat_methods:k","classlib":"Quaternion","description":"\nReturns the k component of the quaternion"},{"summary":"\nRaises Euler's constant e to the power <q> ","class":"function","private":false,"param":["q"],"fname":"exp","realm":"sh","description":"\nRaises Euler's constant e to the power <q>","name":"quat_lib.exp","library":"quaternion"},{"summary":"\nCalculates natural logarithm of <q> ","class":"function","private":false,"param":["q"],"fname":"log","realm":"sh","description":"\nCalculates natural logarithm of <q>","name":"quat_lib.log","library":"quaternion"},{"summary":"\nChanges quaternion <q> so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"qMod","realm":"sh","description":"\nChanges quaternion <q> so that the represented rotation is by an angle between 0 and 180 degrees (by coder0xff)","name":"quat_lib.qMod","library":"quaternion"},{"summary":"\nPerforms spherical linear interpolation between <q0> and <q1>.","class":"function","private":false,"param":["q0","q1","t"],"fname":"slerp","realm":"sh","description":"\nPerforms spherical linear interpolation between <q0> and <q1>. Returns <q0> for <t>=0, <q1> for <t>=1","name":"quat_lib.slerp","library":"quaternion"},{"summary":"\nReturns vector pointing forward for <this> ","class":"function","private":false,"param":[],"fname":"forward","realm":"sh","name":"quat_methods:forward","classlib":"Quaternion","description":"\nReturns vector pointing forward for <this>"},{"summary":"\nReturns vector pointing right for <this> ","class":"function","private":false,"param":[],"fname":"right","realm":"sh","name":"quat_methods:right","classlib":"Quaternion","description":"\nReturns vector pointing right for <this>"},{"summary":"\nReturns vector pointing up for <this> ","class":"function","private":false,"param":[],"fname":"up","realm":"sh","name":"quat_methods:up","classlib":"Quaternion","description":"\nReturns vector pointing up for <this>"},{"summary":"\nReturns quaternion for rotation about axis <axis> by angle <ang> ","class":"function","private":false,"param":["axis","ang"],"fname":"qRotation","realm":"sh","description":"\nReturns quaternion for rotation about axis <axis> by angle <ang>","name":"quat_lib.qRotation","library":"quaternion"},{"summary":"\nConstruct a quaternion from the rotation vector <rv1>.","class":"function","private":false,"param":["rv1"],"fname":"qRotation","realm":"sh","description":"\nConstruct a quaternion from the rotation vector <rv1>. Vector direction is axis of rotation, magnitude is angle in degress (by coder0xff)","name":"quat_lib.qRotation","library":"quaternion"},{"summary":"\nReturns the euler angle of rotation in degrees ","class":"function","private":false,"param":["q"],"fname":"rotationEulerAngle","realm":"sh","description":"\nReturns the euler angle of rotation in degrees","name":"quat_lib.rotationEulerAngle","library":"quaternion"},{"summary":"\nReturns the angle of rotation in degrees (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationAngle","realm":"sh","description":"\nReturns the angle of rotation in degrees (by coder0xff)","name":"quat_lib.rotationAngle","library":"quaternion"},{"summary":"\nReturns the axis of rotation (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationAxis","realm":"sh","description":"\nReturns the axis of rotation (by coder0xff)","name":"quat_lib.rotationAxis","library":"quaternion"},{"summary":"\nReturns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff) ","class":"function","private":false,"param":["q"],"fname":"rotationVector","realm":"sh","description":"\nReturns the rotation vector - rotation axis where magnitude is the angle of rotation in degress (by coder0xff)","name":"quat_lib.rotationVector","library":"quaternion"},{"summary":"\nConverts <q> to a vector by dropping the real component ","class":"function","private":false,"param":["q"],"fname":"vec","realm":"sh","description":"\nConverts <q> to a vector by dropping the real component","name":"quat_lib.vec","library":"quaternion"}],"name":"libs_sh/quaternion.lua","description":"\nQuaternion library"},"sflib.lua":{"summary":"\n \nThe main Starfall library \n ","tables":[],"functions":{"1":"SF.AddHook","2":"SF.AddObjectUnwrapper","3":"SF.AddObjectWrapper","4":"SF.ApplyTypeDependencies","5":"SF.BuildEnvironment","6":"SF.CallHook","7":"SF.CheckLuaType","8":"SF.CheckMaterial","9":"SF.CheckType","10":"SF.CompileString","11":"SF.CreateWrapper","12":"SF.DeserializeCode","13":"SF.GetType","14":"SF.GetTypeDef","15":"SF.GetWrapperTables","16":"SF.MakeError","17":"SF.NormalizePath","18":"SF.RegisterLibrary","19":"SF.RegisterType","20":"SF.Sanitize","21":"SF.SerializeCode","22":"SF.Throw","23":"SF.ThrowTypeError","24":"SF.Unsanitize","25":"SF.UnwrapObject","26":"SF.WrapObject","SF.BuildEnvironment":{"summary":"\nBuilds an environment table ","ret":"The environment","class":"function","private":false,"realm":".l","param":[],"name":"SF.BuildEnvironment","description":"\nBuilds an environment table"},"SF.AddObjectUnwrapper":{"private":false,"param":{"1":"object_meta","2":"unwrapper","unwrapper":"function that unwraps object","object_meta":"metatable of object"},"realm":".l","summary":"\nHelper function for adding custom unwrappers ","class":"function","name":"SF.AddObjectUnwrapper","description":"\nHelper function for adding custom unwrappers"},"SF.Throw":{"private":false,"param":{"1":"msg","2":"level","3":"uncatchable","level":"Which level in the stacktrace to blame","msg":"Message","uncatchable":"Makes this exception uncatchable"},"realm":".l","summary":"\nThrows an error like the throw function in builtins ","class":"function","name":"SF.Throw","description":"\nThrows an error like the throw function in builtins"},"SF.RegisterType":{"summary":"\nCreates and registers a type.","ret":["methods The type's methods","metamethods The type's metamethods"],"class":"function","private":false,"realm":".l","param":{"1":"name","name":"The library name"},"name":"SF.RegisterType","description":"\nCreates and registers a type."},"SF.CompileString":{"private":false,"param":["str","name","handle"],"realm":".l","summary":"\n \nUtility functions \n ","class":"function","name":"SF.CompileString","description":"\n \nUtility functions \n"},"SF.NormalizePath":{"private":false,"param":["path"],"realm":".l","summary":"\nReturns a path with all ..","class":"function","name":"SF.NormalizePath","description":"\nReturns a path with all .. accounted for"},"SF.CallHook":{"private":false,"param":{"1":"hookname","2":"...","hookname":"The name of the hook.","...":"The arguments to the functions that are called."},"realm":".l","summary":"\nCalls a library hook.","class":"function","name":"SF.CallHook","description":"\nCalls a library hook."},"SF.CheckMaterial":{"summary":"\nChecks that the material isn't malicious ","ret":"The material object or false if it's invalid","class":"function","private":false,"realm":".l","param":{"1":"material","material":"The path to the material"},"name":"SF.CheckMaterial","description":"\nChecks that the material isn't malicious"},"SF.AddObjectWrapper":{"private":false,"param":{"1":"object_meta","2":"sf_object_meta","3":"wrapper","wrapper":"function that wraps object","object_meta":"metatable of object","sf_object_meta":"starfall metatable of object"},"realm":".l","summary":"\nHelper function for adding custom wrappers ","class":"function","name":"SF.AddObjectWrapper","description":"\nHelper function for adding custom wrappers"},"SF.Sanitize":{"private":false,"param":["original"],"realm":".l","summary":"\nSanitizes and returns its argument list.","class":"function","name":"SF.Sanitize","description":"\nSanitizes and returns its argument list. \nBasic types are returned unchanged. Non-object tables will be \nrecursed into and their keys and values will be sanitized. Object \ntypes will be wrapped if a wrapper is available. When a wrapper is \nnot available objects will be replaced with nil, so as to prevent \nany possiblitiy of leakage. Functions will always be replaced with \nnil as there is no way to verify that they are safe."},"SF.SerializeCode":{"private":false,"param":{"1":"sources","2":"mainfile","sources":"The table of filename = source entries. Ususally instance.source","mainfile":"The main filename. Usually instance.mainfile"},"realm":".l","summary":"\nSerializes an instance's code in a format compatible with the duplicator library ","class":"function","name":"SF.SerializeCode","description":"\nSerializes an instance's code in a format compatible with the duplicator library"},"SF.Unsanitize":{"private":false,"param":["original"],"realm":".l","summary":"\nTakes output from starfall and does it's best to make the output \nfully usable outside of starfall environment ","class":"function","name":"SF.Unsanitize","description":"\nTakes output from starfall and does it's best to make the output \nfully usable outside of starfall environment"},"SF.CheckLuaType":{"private":false,"param":{"1":"val","2":"typ","3":"level","level":"Level at which to error at. 2 is added to this value. Default is 1.","val":"The value to be checked.","typ":"A string type or metatable."},"realm":".l","summary":"\nChecks the lua type of val.","class":"function","name":"SF.CheckLuaType","description":"\nChecks the lua type of val. Errors if the types don't match"},"SF.DeserializeCode":{"summary":"\nDeserializes an instance's code.","ret":["The table of filename = source entries","The main filename"],"class":"function","private":false,"realm":".l","param":["tbl"],"name":"SF.DeserializeCode","description":"\nDeserializes an instance's code."},"SF.RegisterLibrary":{"private":false,"param":{"1":"name","name":"The library name"},"realm":".l","summary":"\nCreates and registers a library.","class":"function","name":"SF.RegisterLibrary","description":"\nCreates and registers a library."},"SF.UnwrapObject":{"summary":"\nTakes a wrapped starfall object and returns the unwrapped version ","ret":"the unwrapped starfall object","class":"function","private":false,"realm":".l","param":{"1":"object","object":"the wrapped starfall object, should work on any starfall \nwrapped object."},"name":"SF.UnwrapObject","description":"\nTakes a wrapped starfall object and returns the unwrapped version"},"SF.CheckType":{"private":false,"param":{"1":"val","2":"typ","3":"level","level":"Level at which to error at. 2 is added to this value. Default is 1.","val":"The value to be checked.","typ":"A metatable."},"realm":".l","summary":"\nChecks the starfall type of val.","class":"function","name":"SF.CheckType","description":"\nChecks the starfall type of val. Errors if the types don't match"},"SF.ApplyTypeDependencies":{"private":false,"param":{"1":"methods","2":"metamethods","3":"supermeta","methods":"The type's methods table","supermeta":"The meta of the inherited type","metamethods":"The type's metamethods table"},"realm":".l","summary":"\nApplies inheritance to a derived type.","class":"function","name":"SF.ApplyTypeDependencies","description":"\nApplies inheritance to a derived type."},"SF.WrapObject":{"summary":"\nWraps the given object so that it is safe to pass into starfall \nIt will wrap it as long as we have the metatable of the object that is \ngetting wrapped.","ret":"returns nil if the object doesn't have a known wrapper, \nor returns the wrapped object if it does have a wrapper.","class":"function","private":false,"realm":".l","param":{"1":"object","object":"the object needing to get wrapped as it's passed into starfall"},"name":"SF.WrapObject","description":"\nWraps the given object so that it is safe to pass into starfall \nIt will wrap it as long as we have the metatable of the object that is \ngetting wrapped."},"SF.AddHook":{"private":false,"param":{"1":"hookname","2":"func","hookname":"The name of the hook.","func":"The function to call"},"realm":".l","summary":"\nRegisters a library hook.","class":"function","name":"SF.AddHook","description":"\nRegisters a library hook. These hooks are only available to SF libraries, \nand are called by Libraries.CallHook."},"SF.GetType":{"private":false,"param":{"1":"val","val":"The value to be checked."},"realm":".l","summary":"\nGets the type of val.","class":"function","name":"SF.GetType","description":"\nGets the type of val."},"SF.GetWrapperTables":{"summary":"\nReturns the wrapper table of a specified type ","ret":["The sf to sensitive wrapper table","The sensitive to sf wrapper table"],"class":"function","private":false,"realm":".l","param":{"1":"meta","meta":"The type's metatable"},"name":"SF.GetWrapperTables","description":"\nReturns the wrapper table of a specified type"},"SF.GetTypeDef":{"private":false,"param":["name"],"realm":".l","summary":"\nGets a starfall type.","class":"function","name":"SF.GetTypeDef","description":"\nGets a starfall type. ACF uses this so can't remove it. (otherwise it's useless)"},"SF.ThrowTypeError":{"private":false,"param":["expected","got","level"],"realm":".l","summary":"\nThrows a type error ","class":"function","name":"SF.ThrowTypeError","description":"\nThrows a type error"},"SF.MakeError":{"private":false,"param":{"1":"msg","2":"level","3":"uncatchable","4":"prependinfo","level":"Which level in the stacktrace to blame","msg":"Message","uncatchable":"Makes this exception uncatchable","prependinfo":"The error message needs file and line number info"},"realm":".l","summary":"\nBuilds an error type to that contains line numbers, file name, and traceback ","class":"function","name":"SF.MakeError","description":"\nBuilds an error type to that contains line numbers, file name, and traceback"},"SF.CreateWrapper":{"summary":"\nCreates wrap/unwrap functions for sensitive values, by using a lookup table \n(which is set to have weak keys and values) ","ret":["The function to wrap sensitive values to a SF-safe table","The function to unwrap the SF-safe table to the sensitive table"],"class":"function","private":false,"realm":".l","param":{"1":"metatable","2":"weakwrapper","3":"weaksensitive","4":"target_metatable","5":"shared_meta","weaksensitive":"Make the sensitive data weak inside the internal lookup table. Default: True","metatable":"The metatable to assign the wrapped value.","weakwrapper":"Make the wrapper weak inside the internal lookup table. Default: True","target_metatable":"(optional) The metatable of the object that will get \nwrapped by these wrapper functions.  This is required if you want to \nhave the object be auto-recognized by the generic SF.WrapObject \nfunction."},"name":"SF.CreateWrapper","description":"\nCreates wrap/unwrap functions for sensitive values, by using a lookup table \n(which is set to have weak keys and values)"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nThe main Starfall library \n ","param":[],"description":"\n \nThe main Starfall library \n"},{"summary":"\n \nSome basic initialization \n ","param":[],"description":"\n \nSome basic initialization \n"},{"summary":"\n \nDeclare Basic Starfall Types \n ","param":[],"description":"\n \nDeclare Basic Starfall Types \n"},{"summary":"\nReturns a class that wraps a structure and caches indexes ","param":[],"description":"\nReturns a class that wraps a structure and caches indexes"},{"summary":"\nReturns a class that can manage burst objects ","param":[],"description":"\nReturns a class that can manage burst objects"},{"summary":"\nReturns a class that limits the number of something per player ","param":[],"description":"\nReturns a class that limits the number of something per player"},{"summary":"\nReturns a class that can limit per player and recycle a indestructable resource ","param":[],"description":"\nReturns a class that can limit per player and recycle a indestructable resource"},{"summary":"\nReturns a class that can whitelist/blacklist strings ","param":[],"description":"\nReturns a class that can whitelist/blacklist strings"},{"private":false,"param":{"1":"msg","2":"level","3":"uncatchable","4":"prependinfo","level":"Which level in the stacktrace to blame","msg":"Message","uncatchable":"Makes this exception uncatchable","prependinfo":"The error message needs file and line number info"},"realm":".l","summary":"\nBuilds an error type to that contains line numbers, file name, and traceback ","class":"function","name":"SF.MakeError","description":"\nBuilds an error type to that contains line numbers, file name, and traceback"},{"private":false,"param":["str","name","handle"],"realm":".l","summary":"\n \nUtility functions \n ","class":"function","name":"SF.CompileString","description":"\n \nUtility functions \n"},{"private":false,"param":{"1":"msg","2":"level","3":"uncatchable","level":"Which level in the stacktrace to blame","msg":"Message","uncatchable":"Makes this exception uncatchable"},"realm":".l","summary":"\nThrows an error like the throw function in builtins ","class":"function","name":"SF.Throw","description":"\nThrows an error like the throw function in builtins"},{"private":false,"param":["expected","got","level"],"realm":".l","summary":"\nThrows a type error ","class":"function","name":"SF.ThrowTypeError","description":"\nThrows a type error"},{"private":false,"param":{"1":"name","name":"The library name"},"realm":".l","summary":"\nCreates and registers a library.","class":"function","name":"SF.RegisterLibrary","description":"\nCreates and registers a library."},{"summary":"\nCreates and registers a type.","ret":["methods The type's methods","metamethods The type's metamethods"],"class":"function","private":false,"realm":".l","param":{"1":"name","name":"The library name"},"name":"SF.RegisterType","description":"\nCreates and registers a type."},{"private":false,"param":["name"],"realm":".l","summary":"\nGets a starfall type.","class":"function","name":"SF.GetTypeDef","description":"\nGets a starfall type. ACF uses this so can't remove it. (otherwise it's useless)"},{"private":false,"param":{"1":"methods","2":"metamethods","3":"supermeta","methods":"The type's methods table","supermeta":"The meta of the inherited type","metamethods":"The type's metamethods table"},"realm":".l","summary":"\nApplies inheritance to a derived type.","class":"function","name":"SF.ApplyTypeDependencies","description":"\nApplies inheritance to a derived type."},{"summary":"\nBuilds an environment table ","ret":"The environment","class":"function","private":false,"realm":".l","param":[],"name":"SF.BuildEnvironment","description":"\nBuilds an environment table"},{"private":false,"param":{"1":"hookname","2":"func","hookname":"The name of the hook.","func":"The function to call"},"realm":".l","summary":"\nRegisters a library hook.","class":"function","name":"SF.AddHook","description":"\nRegisters a library hook. These hooks are only available to SF libraries, \nand are called by Libraries.CallHook."},{"private":false,"param":{"1":"hookname","2":"...","hookname":"The name of the hook.","...":"The arguments to the functions that are called."},"realm":".l","summary":"\nCalls a library hook.","class":"function","name":"SF.CallHook","description":"\nCalls a library hook."},{"private":false,"param":{"1":"val","2":"typ","3":"level","level":"Level at which to error at. 2 is added to this value. Default is 1.","val":"The value to be checked.","typ":"A metatable."},"realm":".l","summary":"\nChecks the starfall type of val.","class":"function","name":"SF.CheckType","description":"\nChecks the starfall type of val. Errors if the types don't match"},{"private":false,"param":{"1":"val","val":"The value to be checked."},"realm":".l","summary":"\nGets the type of val.","class":"function","name":"SF.GetType","description":"\nGets the type of val."},{"private":false,"param":{"1":"val","2":"typ","3":"level","level":"Level at which to error at. 2 is added to this value. Default is 1.","val":"The value to be checked.","typ":"A string type or metatable."},"realm":".l","summary":"\nChecks the lua type of val.","class":"function","name":"SF.CheckLuaType","description":"\nChecks the lua type of val. Errors if the types don't match"},{"summary":"\nChecks that the material isn't malicious ","ret":"The material object or false if it's invalid","class":"function","private":false,"realm":".l","param":{"1":"material","material":"The path to the material"},"name":"SF.CheckMaterial","description":"\nChecks that the material isn't malicious"},{"summary":"\nCreates wrap/unwrap functions for sensitive values, by using a lookup table \n(which is set to have weak keys and values) ","ret":["The function to wrap sensitive values to a SF-safe table","The function to unwrap the SF-safe table to the sensitive table"],"class":"function","private":false,"realm":".l","param":{"1":"metatable","2":"weakwrapper","3":"weaksensitive","4":"target_metatable","5":"shared_meta","weaksensitive":"Make the sensitive data weak inside the internal lookup table. Default: True","metatable":"The metatable to assign the wrapped value.","weakwrapper":"Make the wrapper weak inside the internal lookup table. Default: True","target_metatable":"(optional) The metatable of the object that will get \nwrapped by these wrapper functions.  This is required if you want to \nhave the object be auto-recognized by the generic SF.WrapObject \nfunction."},"name":"SF.CreateWrapper","description":"\nCreates wrap/unwrap functions for sensitive values, by using a lookup table \n(which is set to have weak keys and values)"},{"private":false,"param":{"1":"object_meta","2":"sf_object_meta","3":"wrapper","wrapper":"function that wraps object","object_meta":"metatable of object","sf_object_meta":"starfall metatable of object"},"realm":".l","summary":"\nHelper function for adding custom wrappers ","class":"function","name":"SF.AddObjectWrapper","description":"\nHelper function for adding custom wrappers"},{"private":false,"param":{"1":"object_meta","2":"unwrapper","unwrapper":"function that unwraps object","object_meta":"metatable of object"},"realm":".l","summary":"\nHelper function for adding custom unwrappers ","class":"function","name":"SF.AddObjectUnwrapper","description":"\nHelper function for adding custom unwrappers"},{"summary":"\nReturns the wrapper table of a specified type ","ret":["The sf to sensitive wrapper table","The sensitive to sf wrapper table"],"class":"function","private":false,"realm":".l","param":{"1":"meta","meta":"The type's metatable"},"name":"SF.GetWrapperTables","description":"\nReturns the wrapper table of a specified type"},{"summary":"\nWraps the given object so that it is safe to pass into starfall \nIt will wrap it as long as we have the metatable of the object that is \ngetting wrapped.","ret":"returns nil if the object doesn't have a known wrapper, \nor returns the wrapped object if it does have a wrapper.","class":"function","private":false,"realm":".l","param":{"1":"object","object":"the object needing to get wrapped as it's passed into starfall"},"name":"SF.WrapObject","description":"\nWraps the given object so that it is safe to pass into starfall \nIt will wrap it as long as we have the metatable of the object that is \ngetting wrapped."},{"summary":"\nTakes a wrapped starfall object and returns the unwrapped version ","ret":"the unwrapped starfall object","class":"function","private":false,"realm":".l","param":{"1":"object","object":"the wrapped starfall object, should work on any starfall \nwrapped object."},"name":"SF.UnwrapObject","description":"\nTakes a wrapped starfall object and returns the unwrapped version"},{"private":false,"param":["path"],"realm":".l","summary":"\nReturns a path with all ..","class":"function","name":"SF.NormalizePath","description":"\nReturns a path with all .. accounted for"},{"private":false,"param":["original"],"realm":".l","summary":"\nSanitizes and returns its argument list.","class":"function","name":"SF.Sanitize","description":"\nSanitizes and returns its argument list. \nBasic types are returned unchanged. Non-object tables will be \nrecursed into and their keys and values will be sanitized. Object \ntypes will be wrapped if a wrapper is available. When a wrapper is \nnot available objects will be replaced with nil, so as to prevent \nany possiblitiy of leakage. Functions will always be replaced with \nnil as there is no way to verify that they are safe."},{"private":false,"param":["original"],"realm":".l","summary":"\nTakes output from starfall and does it's best to make the output \nfully usable outside of starfall environment ","class":"function","name":"SF.Unsanitize","description":"\nTakes output from starfall and does it's best to make the output \nfully usable outside of starfall environment"},{"private":false,"param":{"1":"sources","2":"mainfile","sources":"The table of filename = source entries. Ususally instance.source","mainfile":"The main filename. Usually instance.mainfile"},"realm":".l","summary":"\nSerializes an instance's code in a format compatible with the duplicator library ","class":"function","name":"SF.SerializeCode","description":"\nSerializes an instance's code in a format compatible with the duplicator library"},{"summary":"\nDeserializes an instance's code.","ret":["The table of filename = source entries","The main filename"],"class":"function","private":false,"realm":".l","param":["tbl"],"name":"SF.DeserializeCode","description":"\nDeserializes an instance's code."},{"summary":"\n \nIncludes \n ","param":[],"description":"\n \nIncludes \n"}],"name":"sflib.lua","description":"\n \nThe main Starfall library \n"},"libs_sh/physenv.lua":{"summary":"\n \nPhysenv library \n ","tables":[],"functions":{"1":"physenv_lib.getAirDensity","2":"physenv_lib.getGravity","3":"physenv_lib.getPerformanceSettings","physenv_lib.getAirDensity":{"summary":"\nGets the air density.","ret":"number Air Density","class":"function","private":false,"library":"physenv","fname":"getAirDensity","realm":"sh","param":[],"name":"physenv_lib.getAirDensity","description":"\nGets the air density."},"physenv_lib.getGravity":{"summary":"\nGets the gravity vector ","ret":"Vector Gravity Vector ( eg Vector(0,0,-600) )","class":"function","private":false,"library":"physenv","fname":"getGravity","realm":"sh","param":[],"name":"physenv_lib.getGravity","description":"\nGets the gravity vector"},"physenv_lib.getPerformanceSettings":{"summary":"\nGets the performance settings.</br> \nSee <a href=\"http://wiki.garrysmod.com/page/Structures/PhysEnvPerformanceSettings\">PhysEnvPerformance Settings Table Structure</a> for table structure.","ret":"table Performance Settings Table.","class":"function","private":false,"library":"physenv","fname":"getPerformanceSettings","realm":"sh","param":[],"name":"physenv_lib.getPerformanceSettings","description":"\nGets the performance settings.</br> \nSee <a href=\"http://wiki.garrysmod.com/page/Structures/PhysEnvPerformanceSettings\">PhysEnvPerformance Settings Table Structure</a> for table structure."}},"libraries":{"1":"physenv","physenv":{"server":true,"tables":[],"client":true,"summary":"\nPhysenv functions ","libtbl":"physenv_lib","fields":[],"class":"library","functions":{"1":"getAirDensity","2":"getGravity","3":"getPerformanceSettings","getAirDensity":{"summary":"\nGets the air density.","ret":"number Air Density","class":"function","private":false,"library":"physenv","fname":"getAirDensity","realm":"sh","param":[],"name":"physenv_lib.getAirDensity","description":"\nGets the air density."},"getPerformanceSettings":{"summary":"\nGets the performance settings.</br> \nSee <a href=\"http://wiki.garrysmod.com/page/Structures/PhysEnvPerformanceSettings\">PhysEnvPerformance Settings Table Structure</a> for table structure.","ret":"table Performance Settings Table.","class":"function","private":false,"library":"physenv","fname":"getPerformanceSettings","realm":"sh","param":[],"name":"physenv_lib.getPerformanceSettings","description":"\nGets the performance settings.</br> \nSee <a href=\"http://wiki.garrysmod.com/page/Structures/PhysEnvPerformanceSettings\">PhysEnvPerformance Settings Table Structure</a> for table structure."},"getGravity":{"summary":"\nGets the gravity vector ","ret":"Vector Gravity Vector ( eg Vector(0,0,-600) )","class":"function","private":false,"library":"physenv","fname":"getGravity","realm":"sh","param":[],"name":"physenv_lib.getGravity","description":"\nGets the gravity vector"}},"name":"physenv","description":"\nPhysenv functions"}},"type":"file","doc":[{"summary":"\n \nPhysenv library \n ","description":"\n \nPhysenv library \n"},{"server":true,"tables":[],"client":true,"summary":"\nPhysenv functions ","libtbl":"physenv_lib","fields":[],"class":"library","functions":{"1":"getAirDensity","2":"getGravity","3":"getPerformanceSettings","getAirDensity":{"summary":"\nGets the air density.","ret":"number Air Density","class":"function","private":false,"library":"physenv","fname":"getAirDensity","realm":"sh","param":[],"name":"physenv_lib.getAirDensity","description":"\nGets the air density."},"getPerformanceSettings":{"summary":"\nGets the performance settings.</br> \nSee <a href=\"http://wiki.garrysmod.com/page/Structures/PhysEnvPerformanceSettings\">PhysEnvPerformance Settings Table Structure</a> for table structure.","ret":"table Performance Settings Table.","class":"function","private":false,"library":"physenv","fname":"getPerformanceSettings","realm":"sh","param":[],"name":"physenv_lib.getPerformanceSettings","description":"\nGets the performance settings.</br> \nSee <a href=\"http://wiki.garrysmod.com/page/Structures/PhysEnvPerformanceSettings\">PhysEnvPerformance Settings Table Structure</a> for table structure."},"getGravity":{"summary":"\nGets the gravity vector ","ret":"Vector Gravity Vector ( eg Vector(0,0,-600) )","class":"function","private":false,"library":"physenv","fname":"getGravity","realm":"sh","param":[],"name":"physenv_lib.getGravity","description":"\nGets the gravity vector"}},"name":"physenv","description":"\nPhysenv functions"},{"summary":"\nGets the air density.","ret":"number Air Density","class":"function","private":false,"library":"physenv","fname":"getAirDensity","realm":"sh","param":[],"name":"physenv_lib.getAirDensity","description":"\nGets the air density."},{"summary":"\nGets the gravity vector ","ret":"Vector Gravity Vector ( eg Vector(0,0,-600) )","class":"function","private":false,"library":"physenv","fname":"getGravity","realm":"sh","param":[],"name":"physenv_lib.getGravity","description":"\nGets the gravity vector"},{"summary":"\nGets the performance settings.</br> \nSee <a href=\"http://wiki.garrysmod.com/page/Structures/PhysEnvPerformanceSettings\">PhysEnvPerformance Settings Table Structure</a> for table structure.","ret":"table Performance Settings Table.","class":"function","private":false,"library":"physenv","fname":"getPerformanceSettings","realm":"sh","param":[],"name":"physenv_lib.getPerformanceSettings","description":"\nGets the performance settings.</br> \nSee <a href=\"http://wiki.garrysmod.com/page/Structures/PhysEnvPerformanceSettings\">PhysEnvPerformance Settings Table Structure</a> for table structure."}],"name":"libs_sh/physenv.lua","description":"\n \nPhysenv library \n"},"libs_sh/weapons.lua":{"summary":"\n \nWeapon functions.","tables":[],"functions":{"1":"weapon_metamethods:__tostring","2":"weapon_methods:clip1","3":"weapon_methods:clip2","4":"weapon_methods:getActivity","5":"weapon_methods:getHoldType","6":"weapon_methods:getNextPrimaryFire","7":"weapon_methods:getNextSecondaryFire","8":"weapon_methods:getPrimaryAmmoType","9":"weapon_methods:getPrintName","10":"weapon_methods:getSecondaryAmmoType","11":"weapon_methods:getToolMode","12":"weapon_methods:isCarriedByLocalPlayer","13":"weapon_methods:isWeaponVisible","14":"weapon_methods:lastShootTime","weapon_methods:getActivity":{"server":true,"ret":"number Current activity","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the sequence enumeration number that the weapon is playing.","fname":"getActivity","realm":"sh","param":[],"name":"weapon_methods:getActivity","description":"\nReturns the sequence enumeration number that the weapon is playing. Must be used on a view model."},"weapon_methods:isCarriedByLocalPlayer":{"summary":"\nReturns if the weapon is carried by the local player.","ret":"whether or not the weapon is carried by the local player","class":"function","client":true,"private":false,"classlib":"Weapon","fname":"isCarriedByLocalPlayer","realm":"cl","param":[],"name":"weapon_methods:isCarriedByLocalPlayer","description":"\nReturns if the weapon is carried by the local player."},"weapon_methods:getPrimaryAmmoType":{"server":true,"ret":"Ammo number type","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the primary ammo type of the given weapon.","fname":"getPrimaryAmmoType","realm":"sh","param":[],"name":"weapon_methods:getPrimaryAmmoType","description":"\nGets the primary ammo type of the given weapon."},"weapon_methods:lastShootTime":{"server":true,"ret":"Time the weapon was last shot","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the time since a weapon was last fired at a float variable ","fname":"lastShootTime","realm":"sh","param":[],"name":"weapon_methods:lastShootTime","description":"\nReturns the time since a weapon was last fired at a float variable"},"weapon_methods:getSecondaryAmmoType":{"server":true,"ret":"Ammo number type","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the secondary ammo type of the given weapon.","fname":"getSecondaryAmmoType","realm":"sh","param":[],"name":"weapon_methods:getSecondaryAmmoType","description":"\nGets the secondary ammo type of the given weapon."},"weapon_methods:getNextPrimaryFire":{"server":true,"ret":"The time, relative to CurTime","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the next time the weapon can primary fire.","fname":"getNextPrimaryFire","realm":"sh","param":[],"name":"weapon_methods:getNextPrimaryFire","description":"\nGets the next time the weapon can primary fire."},"weapon_methods:getPrintName":{"summary":"\nGets Display name of weapon ","ret":"string Display name of weapon","class":"function","client":true,"private":false,"classlib":"Weapon","fname":"getPrintName","realm":"cl","param":[],"name":"weapon_methods:getPrintName","description":"\nGets Display name of weapon"},"weapon_methods:clip1":{"server":true,"ret":"amount of ammo","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns Ammo in primary clip ","fname":"clip1","realm":"sh","param":[],"name":"weapon_methods:clip1","description":"\nReturns Ammo in primary clip"},"weapon_methods:isWeaponVisible":{"server":true,"ret":"Whether the weapon is visble or not","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns whether the weapon is visible ","fname":"isWeaponVisible","realm":"sh","param":[],"name":"weapon_methods:isWeaponVisible","description":"\nReturns whether the weapon is visible"},"weapon_methods:getNextSecondaryFire":{"server":true,"ret":"The time, relative to CurTime","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the next time the weapon can secondary fire.","fname":"getNextSecondaryFire","realm":"sh","param":[],"name":"weapon_methods:getNextSecondaryFire","description":"\nGets the next time the weapon can secondary fire."},"weapon_methods:getToolMode":{"server":true,"ret":"The tool mode of the toolgun","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the tool mode of the toolgun ","fname":"getToolMode","realm":"sh","param":[],"name":"weapon_methods:getToolMode","description":"\nReturns the tool mode of the toolgun"},"weapon_metamethods:__tostring":{"server":true,"class":"function","client":true,"private":false,"summary":"\nTo string ","realm":"sh","param":[],"name":"weapon_metamethods:__tostring","description":"\nTo string"},"weapon_methods:getHoldType":{"server":true,"ret":"string Holdtype","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the hold type of the weapon.","fname":"getHoldType","realm":"sh","param":[],"name":"weapon_methods:getHoldType","description":"\nReturns the hold type of the weapon."},"weapon_methods:clip2":{"server":true,"ret":"amount of ammo","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns Ammo in secondary clip ","fname":"clip2","realm":"sh","param":[],"name":"weapon_methods:clip2","description":"\nReturns Ammo in secondary clip"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nWeapon functions.","param":[],"description":"\n \nWeapon functions. \n"},{"methods":{"1":"clip1","2":"clip2","3":"getActivity","4":"getHoldType","5":"getNextPrimaryFire","6":"getNextSecondaryFire","7":"getPrimaryAmmoType","8":"getPrintName","9":"getSecondaryAmmoType","10":"getToolMode","11":"isCarriedByLocalPlayer","12":"isWeaponVisible","13":"lastShootTime","getNextSecondaryFire":{"server":true,"ret":"The time, relative to CurTime","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the next time the weapon can secondary fire.","fname":"getNextSecondaryFire","realm":"sh","param":[],"name":"weapon_methods:getNextSecondaryFire","description":"\nGets the next time the weapon can secondary fire."},"lastShootTime":{"server":true,"ret":"Time the weapon was last shot","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the time since a weapon was last fired at a float variable ","fname":"lastShootTime","realm":"sh","param":[],"name":"weapon_methods:lastShootTime","description":"\nReturns the time since a weapon was last fired at a float variable"},"clip1":{"server":true,"ret":"amount of ammo","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns Ammo in primary clip ","fname":"clip1","realm":"sh","param":[],"name":"weapon_methods:clip1","description":"\nReturns Ammo in primary clip"},"getActivity":{"server":true,"ret":"number Current activity","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the sequence enumeration number that the weapon is playing.","fname":"getActivity","realm":"sh","param":[],"name":"weapon_methods:getActivity","description":"\nReturns the sequence enumeration number that the weapon is playing. Must be used on a view model."},"getSecondaryAmmoType":{"server":true,"ret":"Ammo number type","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the secondary ammo type of the given weapon.","fname":"getSecondaryAmmoType","realm":"sh","param":[],"name":"weapon_methods:getSecondaryAmmoType","description":"\nGets the secondary ammo type of the given weapon."},"getNextPrimaryFire":{"server":true,"ret":"The time, relative to CurTime","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the next time the weapon can primary fire.","fname":"getNextPrimaryFire","realm":"sh","param":[],"name":"weapon_methods:getNextPrimaryFire","description":"\nGets the next time the weapon can primary fire."},"isCarriedByLocalPlayer":{"summary":"\nReturns if the weapon is carried by the local player.","ret":"whether or not the weapon is carried by the local player","class":"function","client":true,"private":false,"classlib":"Weapon","fname":"isCarriedByLocalPlayer","realm":"cl","param":[],"name":"weapon_methods:isCarriedByLocalPlayer","description":"\nReturns if the weapon is carried by the local player."},"getPrintName":{"summary":"\nGets Display name of weapon ","ret":"string Display name of weapon","class":"function","client":true,"private":false,"classlib":"Weapon","fname":"getPrintName","realm":"cl","param":[],"name":"weapon_methods:getPrintName","description":"\nGets Display name of weapon"},"getToolMode":{"server":true,"ret":"The tool mode of the toolgun","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the tool mode of the toolgun ","fname":"getToolMode","realm":"sh","param":[],"name":"weapon_methods:getToolMode","description":"\nReturns the tool mode of the toolgun"},"clip2":{"server":true,"ret":"amount of ammo","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns Ammo in secondary clip ","fname":"clip2","realm":"sh","param":[],"name":"weapon_methods:clip2","description":"\nReturns Ammo in secondary clip"},"isWeaponVisible":{"server":true,"ret":"Whether the weapon is visble or not","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns whether the weapon is visible ","fname":"isWeaponVisible","realm":"sh","param":[],"name":"weapon_methods:isWeaponVisible","description":"\nReturns whether the weapon is visible"},"getHoldType":{"server":true,"ret":"string Holdtype","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the hold type of the weapon.","fname":"getHoldType","realm":"sh","param":[],"name":"weapon_methods:getHoldType","description":"\nReturns the hold type of the weapon."},"getPrimaryAmmoType":{"server":true,"ret":"Ammo number type","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the primary ammo type of the given weapon.","fname":"getPrimaryAmmoType","realm":"sh","param":[],"name":"weapon_methods:getPrimaryAmmoType","description":"\nGets the primary ammo type of the given weapon."}},"class":"class","fields":[],"summary":"\nWeapon type ","typtbl":"weapon_methods","name":"Weapon","description":"\nWeapon type"},{"server":true,"class":"function","client":true,"private":false,"summary":"\nTo string ","realm":"sh","param":[],"name":"weapon_metamethods:__tostring","description":"\nTo string"},{"server":true,"ret":"amount of ammo","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns Ammo in primary clip ","fname":"clip1","realm":"sh","param":[],"name":"weapon_methods:clip1","description":"\nReturns Ammo in primary clip"},{"server":true,"ret":"amount of ammo","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns Ammo in secondary clip ","fname":"clip2","realm":"sh","param":[],"name":"weapon_methods:clip2","description":"\nReturns Ammo in secondary clip"},{"server":true,"ret":"number Current activity","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the sequence enumeration number that the weapon is playing.","fname":"getActivity","realm":"sh","param":[],"name":"weapon_methods:getActivity","description":"\nReturns the sequence enumeration number that the weapon is playing. Must be used on a view model."},{"server":true,"ret":"string Holdtype","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the hold type of the weapon.","fname":"getHoldType","realm":"sh","param":[],"name":"weapon_methods:getHoldType","description":"\nReturns the hold type of the weapon."},{"server":true,"ret":"The time, relative to CurTime","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the next time the weapon can primary fire.","fname":"getNextPrimaryFire","realm":"sh","param":[],"name":"weapon_methods:getNextPrimaryFire","description":"\nGets the next time the weapon can primary fire."},{"server":true,"ret":"The time, relative to CurTime","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the next time the weapon can secondary fire.","fname":"getNextSecondaryFire","realm":"sh","param":[],"name":"weapon_methods:getNextSecondaryFire","description":"\nGets the next time the weapon can secondary fire."},{"server":true,"ret":"Ammo number type","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the primary ammo type of the given weapon.","fname":"getPrimaryAmmoType","realm":"sh","param":[],"name":"weapon_methods:getPrimaryAmmoType","description":"\nGets the primary ammo type of the given weapon."},{"server":true,"ret":"Ammo number type","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nGets the secondary ammo type of the given weapon.","fname":"getSecondaryAmmoType","realm":"sh","param":[],"name":"weapon_methods:getSecondaryAmmoType","description":"\nGets the secondary ammo type of the given weapon."},{"server":true,"ret":"Whether the weapon is visble or not","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns whether the weapon is visible ","fname":"isWeaponVisible","realm":"sh","param":[],"name":"weapon_methods:isWeaponVisible","description":"\nReturns whether the weapon is visible"},{"server":true,"ret":"Time the weapon was last shot","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the time since a weapon was last fired at a float variable ","fname":"lastShootTime","realm":"sh","param":[],"name":"weapon_methods:lastShootTime","description":"\nReturns the time since a weapon was last fired at a float variable"},{"server":true,"ret":"The tool mode of the toolgun","class":"function","client":true,"classlib":"Weapon","private":false,"summary":"\nReturns the tool mode of the toolgun ","fname":"getToolMode","realm":"sh","param":[],"name":"weapon_methods:getToolMode","description":"\nReturns the tool mode of the toolgun"},{"summary":"\nGets Display name of weapon ","ret":"string Display name of weapon","class":"function","client":true,"private":false,"classlib":"Weapon","fname":"getPrintName","realm":"cl","param":[],"name":"weapon_methods:getPrintName","description":"\nGets Display name of weapon"},{"summary":"\nReturns if the weapon is carried by the local player.","ret":"whether or not the weapon is carried by the local player","class":"function","client":true,"private":false,"classlib":"Weapon","fname":"isCarriedByLocalPlayer","realm":"cl","param":[],"name":"weapon_methods:isCarriedByLocalPlayer","description":"\nReturns if the weapon is carried by the local player."}],"name":"libs_sh/weapons.lua","description":"\n \nWeapon functions. \n"},"editor/tabhandlers/tab_helper.lua":{"summary":"\n \nHandler part (Tab Handler) \n ","tables":[],"functions":{"1":"PANEL:Init","2":"TabHandler:Init","PANEL:Init":{"private":false,"param":[],"realm":"r/","summary":"\n \nVGUI part (content) \n ","class":"function","name":"PANEL:Init","description":"\n \nVGUI part (content) \n"},"TabHandler:Init":{"private":false,"param":[],"realm":"r/","summary":"\n \nHandler part (Tab Handler) \n ","class":"function","name":"TabHandler:Init","description":"\n \nHandler part (Tab Handler) \n"}},"libraries":[],"type":"file","doc":[{"private":false,"param":[],"realm":"r/","summary":"\n \nHandler part (Tab Handler) \n ","class":"function","name":"TabHandler:Init","description":"\n \nHandler part (Tab Handler) \n"},{"private":false,"param":[],"realm":"r/","summary":"\n \nVGUI part (content) \n ","class":"function","name":"PANEL:Init","description":"\n \nVGUI part (content) \n"},{"summary":"\n \nWe're done \n ","param":[],"description":"\n \nWe're done \n"}],"name":"editor/tabhandlers/tab_helper.lua","description":"\n \nHandler part (Tab Handler) \n"},"libs_sh/json.lua":{"summary":"\nJSON library ","tables":[],"functions":{"1":"json_library.decode","2":"json_library.encode","json_library.encode":{"summary":"\nConvert table to JSON string ","ret":"JSON encoded string representation of the table","class":"function","private":false,"library":"json","fname":"encode","realm":"sh","param":{"1":"tbl","2":"prettyPrint","tbl":"Table to encode","prettyPrint":"Optional. If true, formats and indents the resulting JSON"},"name":"json_library.encode","description":"\nConvert table to JSON string"},"json_library.decode":{"summary":"\nConvert JSON string to table ","ret":"Table representing the JSON object","class":"function","private":false,"library":"json","fname":"decode","realm":"sh","param":{"1":"s","s":"String to decode"},"name":"json_library.decode","description":"\nConvert JSON string to table"}},"libraries":{"1":"json","json":{"server":true,"tables":[],"client":true,"summary":"\nJSON library ","libtbl":"json_library","fields":[],"class":"library","functions":{"1":"decode","2":"encode","decode":{"summary":"\nConvert JSON string to table ","ret":"Table representing the JSON object","class":"function","private":false,"library":"json","fname":"decode","realm":"sh","param":{"1":"s","s":"String to decode"},"name":"json_library.decode","description":"\nConvert JSON string to table"},"encode":{"summary":"\nConvert table to JSON string ","ret":"JSON encoded string representation of the table","class":"function","private":false,"library":"json","fname":"encode","realm":"sh","param":{"1":"tbl","2":"prettyPrint","tbl":"Table to encode","prettyPrint":"Optional. If true, formats and indents the resulting JSON"},"name":"json_library.encode","description":"\nConvert table to JSON string"}},"name":"json","description":"\nJSON library"}},"type":"file","doc":[{"summary":"\nJSON library ","description":"\nJSON library"},{"server":true,"tables":[],"client":true,"summary":"\nJSON library ","libtbl":"json_library","fields":[],"class":"library","functions":{"1":"decode","2":"encode","decode":{"summary":"\nConvert JSON string to table ","ret":"Table representing the JSON object","class":"function","private":false,"library":"json","fname":"decode","realm":"sh","param":{"1":"s","s":"String to decode"},"name":"json_library.decode","description":"\nConvert JSON string to table"},"encode":{"summary":"\nConvert table to JSON string ","ret":"JSON encoded string representation of the table","class":"function","private":false,"library":"json","fname":"encode","realm":"sh","param":{"1":"tbl","2":"prettyPrint","tbl":"Table to encode","prettyPrint":"Optional. If true, formats and indents the resulting JSON"},"name":"json_library.encode","description":"\nConvert table to JSON string"}},"name":"json","description":"\nJSON library"},{"summary":"\nConvert table to JSON string ","ret":"JSON encoded string representation of the table","class":"function","private":false,"library":"json","fname":"encode","realm":"sh","param":{"1":"tbl","2":"prettyPrint","tbl":"Table to encode","prettyPrint":"Optional. If true, formats and indents the resulting JSON"},"name":"json_library.encode","description":"\nConvert table to JSON string"},{"summary":"\nConvert JSON string to table ","ret":"Table representing the JSON object","class":"function","private":false,"library":"json","fname":"decode","realm":"sh","param":{"1":"s","s":"String to decode"},"name":"json_library.decode","description":"\nConvert JSON string to table"}],"name":"libs_sh/json.lua","description":"\nJSON library"},"libs_sh/game.lua":{"summary":"\n \nGame library \n ","tables":[],"functions":{"1":"game_lib.getHostname","2":"game_lib.getMap","3":"game_lib.getMaxPlayers","4":"game_lib.getSunInfo","5":"game_lib.hasFocus","6":"game_lib.isDedicated","7":"game_lib.isLan","8":"game_lib.isSinglePlayer","game_lib.getSunInfo":{"summary":"\nReturns the direction and how obstructed the map's sun is ","ret":["vector The direction of the sun","number How obstructed the sun is 0 to 1."],"class":"function","client":true,"private":false,"library":"game","fname":"getSunInfo","realm":"cl","param":[],"name":"game_lib.getSunInfo","description":"\nReturns the direction and how obstructed the map's sun is"},"game_lib.isSinglePlayer":{"summary":"\nReturns whether or not the current game is single player ","classForced":true,"ret":"boolean True if the game is singleplayer","class":"function","description":"\nReturns whether or not the current game is single player","fname":"isSinglePlayer","library":"game","realm":"sh","name":"game_lib.isSinglePlayer","param":[]},"game_lib.isLan":{"summary":"\nReturns true if the server is on a LAN ","ret":"boolean True if the game is a lan game","class":"function","private":false,"library":"game","fname":"isLan","realm":"sh","param":[],"name":"game_lib.isLan","description":"\nReturns true if the server is on a LAN"},"game_lib.hasFocus":{"summary":"\nReturns if the game has focus or not, i.e.","classForced":true,"ret":"boolean True if the game is focused","class":"function","client":true,"description":"\nReturns if the game has focus or not, i.e. will return false if the game is minimized","fname":"hasFocus","library":"game","realm":"cl","name":"game_lib.hasFocus","param":[]},"game_lib.getMaxPlayers":{"summary":"\nReturns the maximum player limit ","classForced":true,"ret":"number The max players allowed by the server","class":"function","description":"\nReturns the maximum player limit","fname":"getMaxPlayers","library":"game","realm":"sh","name":"game_lib.getMaxPlayers","param":[]},"game_lib.isDedicated":{"summary":"\nReturns whether or not the server is a dedicated server ","classForced":true,"ret":"boolean True if the game is a dedicated server","class":"function","description":"\nReturns whether or not the server is a dedicated server","fname":"isDedicated","library":"game","realm":"sh","name":"game_lib.isDedicated","param":[]},"game_lib.getMap":{"summary":"\nReturns the map name ","classForced":true,"ret":"string The name of the current map","class":"function","description":"\nReturns the map name","fname":"getMap","library":"game","realm":"sh","name":"game_lib.getMap","param":[]},"game_lib.getHostname":{"summary":"\nReturns The hostname ","classForced":true,"ret":"string The hostname of the se`rver","class":"function","description":"\nReturns The hostname","fname":"getHostname","library":"game","realm":"sh","name":"game_lib.getHostname","param":[]}},"libraries":{"1":"game","game":{"server":true,"tables":[],"client":true,"summary":"\nGame functions ","libtbl":"game_lib","fields":[],"class":"library","functions":{"1":"getHostname","2":"getMap","3":"getMaxPlayers","4":"getSunInfo","5":"hasFocus","6":"isDedicated","7":"isLan","8":"isSinglePlayer","isDedicated":{"summary":"\nReturns whether or not the server is a dedicated server ","classForced":true,"ret":"boolean True if the game is a dedicated server","class":"function","description":"\nReturns whether or not the server is a dedicated server","fname":"isDedicated","library":"game","realm":"sh","name":"game_lib.isDedicated","param":[]},"isLan":{"summary":"\nReturns true if the server is on a LAN ","ret":"boolean True if the game is a lan game","class":"function","private":false,"library":"game","fname":"isLan","realm":"sh","param":[],"name":"game_lib.isLan","description":"\nReturns true if the server is on a LAN"},"getSunInfo":{"summary":"\nReturns the direction and how obstructed the map's sun is ","ret":["vector The direction of the sun","number How obstructed the sun is 0 to 1."],"class":"function","client":true,"private":false,"library":"game","fname":"getSunInfo","realm":"cl","param":[],"name":"game_lib.getSunInfo","description":"\nReturns the direction and how obstructed the map's sun is"},"hasFocus":{"summary":"\nReturns if the game has focus or not, i.e.","classForced":true,"ret":"boolean True if the game is focused","class":"function","client":true,"description":"\nReturns if the game has focus or not, i.e. will return false if the game is minimized","fname":"hasFocus","library":"game","realm":"cl","name":"game_lib.hasFocus","param":[]},"getHostname":{"summary":"\nReturns The hostname ","classForced":true,"ret":"string The hostname of the se`rver","class":"function","description":"\nReturns The hostname","fname":"getHostname","library":"game","realm":"sh","name":"game_lib.getHostname","param":[]},"getMaxPlayers":{"summary":"\nReturns the maximum player limit ","classForced":true,"ret":"number The max players allowed by the server","class":"function","description":"\nReturns the maximum player limit","fname":"getMaxPlayers","library":"game","realm":"sh","name":"game_lib.getMaxPlayers","param":[]},"isSinglePlayer":{"summary":"\nReturns whether or not the current game is single player ","classForced":true,"ret":"boolean True if the game is singleplayer","class":"function","description":"\nReturns whether or not the current game is single player","fname":"isSinglePlayer","library":"game","realm":"sh","name":"game_lib.isSinglePlayer","param":[]},"getMap":{"summary":"\nReturns the map name ","classForced":true,"ret":"string The name of the current map","class":"function","description":"\nReturns the map name","fname":"getMap","library":"game","realm":"sh","name":"game_lib.getMap","param":[]}},"name":"game","description":"\nGame functions"}},"type":"file","doc":[{"summary":"\n \nGame library \n ","description":"\n \nGame library \n"},{"server":true,"tables":[],"client":true,"summary":"\nGame functions ","libtbl":"game_lib","fields":[],"class":"library","functions":{"1":"getHostname","2":"getMap","3":"getMaxPlayers","4":"getSunInfo","5":"hasFocus","6":"isDedicated","7":"isLan","8":"isSinglePlayer","isDedicated":{"summary":"\nReturns whether or not the server is a dedicated server ","classForced":true,"ret":"boolean True if the game is a dedicated server","class":"function","description":"\nReturns whether or not the server is a dedicated server","fname":"isDedicated","library":"game","realm":"sh","name":"game_lib.isDedicated","param":[]},"isLan":{"summary":"\nReturns true if the server is on a LAN ","ret":"boolean True if the game is a lan game","class":"function","private":false,"library":"game","fname":"isLan","realm":"sh","param":[],"name":"game_lib.isLan","description":"\nReturns true if the server is on a LAN"},"getSunInfo":{"summary":"\nReturns the direction and how obstructed the map's sun is ","ret":["vector The direction of the sun","number How obstructed the sun is 0 to 1."],"class":"function","client":true,"private":false,"library":"game","fname":"getSunInfo","realm":"cl","param":[],"name":"game_lib.getSunInfo","description":"\nReturns the direction and how obstructed the map's sun is"},"hasFocus":{"summary":"\nReturns if the game has focus or not, i.e.","classForced":true,"ret":"boolean True if the game is focused","class":"function","client":true,"description":"\nReturns if the game has focus or not, i.e. will return false if the game is minimized","fname":"hasFocus","library":"game","realm":"cl","name":"game_lib.hasFocus","param":[]},"getHostname":{"summary":"\nReturns The hostname ","classForced":true,"ret":"string The hostname of the se`rver","class":"function","description":"\nReturns The hostname","fname":"getHostname","library":"game","realm":"sh","name":"game_lib.getHostname","param":[]},"getMaxPlayers":{"summary":"\nReturns the maximum player limit ","classForced":true,"ret":"number The max players allowed by the server","class":"function","description":"\nReturns the maximum player limit","fname":"getMaxPlayers","library":"game","realm":"sh","name":"game_lib.getMaxPlayers","param":[]},"isSinglePlayer":{"summary":"\nReturns whether or not the current game is single player ","classForced":true,"ret":"boolean True if the game is singleplayer","class":"function","description":"\nReturns whether or not the current game is single player","fname":"isSinglePlayer","library":"game","realm":"sh","name":"game_lib.isSinglePlayer","param":[]},"getMap":{"summary":"\nReturns the map name ","classForced":true,"ret":"string The name of the current map","class":"function","description":"\nReturns the map name","fname":"getMap","library":"game","realm":"sh","name":"game_lib.getMap","param":[]}},"name":"game","description":"\nGame functions"},{"summary":"\nReturns the map name ","classForced":true,"ret":"string The name of the current map","class":"function","description":"\nReturns the map name","fname":"getMap","library":"game","realm":"sh","name":"game_lib.getMap","param":[]},{"summary":"\nReturns The hostname ","classForced":true,"ret":"string The hostname of the se`rver","class":"function","description":"\nReturns The hostname","fname":"getHostname","library":"game","realm":"sh","name":"game_lib.getHostname","param":[]},{"summary":"\nReturns true if the server is on a LAN ","ret":"boolean True if the game is a lan game","class":"function","private":false,"library":"game","fname":"isLan","realm":"sh","param":[],"name":"game_lib.isLan","description":"\nReturns true if the server is on a LAN"},{"summary":"\nReturns whether or not the current game is single player ","classForced":true,"ret":"boolean True if the game is singleplayer","class":"function","description":"\nReturns whether or not the current game is single player","fname":"isSinglePlayer","library":"game","realm":"sh","name":"game_lib.isSinglePlayer","param":[]},{"summary":"\nReturns whether or not the server is a dedicated server ","classForced":true,"ret":"boolean True if the game is a dedicated server","class":"function","description":"\nReturns whether or not the server is a dedicated server","fname":"isDedicated","library":"game","realm":"sh","name":"game_lib.isDedicated","param":[]},{"summary":"\nReturns the maximum player limit ","classForced":true,"ret":"number The max players allowed by the server","class":"function","description":"\nReturns the maximum player limit","fname":"getMaxPlayers","library":"game","realm":"sh","name":"game_lib.getMaxPlayers","param":[]},{"summary":"\nReturns if the game has focus or not, i.e.","classForced":true,"ret":"boolean True if the game is focused","class":"function","client":true,"description":"\nReturns if the game has focus or not, i.e. will return false if the game is minimized","fname":"hasFocus","library":"game","realm":"cl","name":"game_lib.hasFocus","param":[]},{"summary":"\nReturns the direction and how obstructed the map's sun is ","ret":["vector The direction of the sun","number How obstructed the sun is 0 to 1."],"class":"function","client":true,"private":false,"library":"game","fname":"getSunInfo","realm":"cl","param":[],"name":"game_lib.getSunInfo","description":"\nReturns the direction and how obstructed the map's sun is"}],"name":"libs_sh/game.lua","description":"\n \nGame library \n"},"libs_cl/file.lua":{"summary":"\n \nFile functions \n ","tables":[],"functions":{"1":"file_library.append","2":"file_library.createDir","3":"file_library.delete","4":"file_library.exists","5":"file_library.find","6":"file_library.findInGame","7":"file_library.open","8":"file_library.read","9":"file_library.write","10":"file_methods:close","11":"file_methods:flush","12":"file_methods:read","13":"file_methods:readBool","14":"file_methods:readByte","15":"file_methods:readDouble","16":"file_methods:readFloat","17":"file_methods:readLine","18":"file_methods:readLong","19":"file_methods:readShort","20":"file_methods:seek","21":"file_methods:size","22":"file_methods:skip","23":"file_methods:tell","24":"file_methods:write","25":"file_methods:writeBool","26":"file_methods:writeByte","27":"file_methods:writeDouble","28":"file_methods:writeFloat","29":"file_methods:writeLong","30":"file_methods:writeShort","file_library.open":{"summary":"\nOpens and returns a file ","ret":"File object or nil if it failed","class":"function","private":false,"library":"file","fname":"open","realm":"cl","param":{"1":"path","2":"mode","path":"Filepath relative to data/sf_filedata/.","mode":"The file mode to use. See lua manual for explaination"},"name":"file_library.open","description":"\nOpens and returns a file"},"file_methods:readBool":{"summary":"\nReads a boolean and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readBool","realm":"cl","param":[],"name":"file_methods:readBool","description":"\nReads a boolean and advances the file position"},"file_methods:writeBool":{"summary":"\nWrites a boolean and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The boolean to write"},"fname":"writeBool","realm":"cl","name":"file_methods:writeBool","classlib":"File","description":"\nWrites a boolean and advances the file position"},"file_methods:skip":{"summary":"\nMoves the file position relative to its current position ","ret":"The resulting position","class":"function","private":false,"classlib":"File","fname":"skip","realm":"cl","param":{"1":"n","n":"How much to move the position"},"name":"file_methods:skip","description":"\nMoves the file position relative to its current position"},"file_library.createDir":{"summary":"\nCreates a directory ","class":"function","private":false,"param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"fname":"createDir","realm":"cl","description":"\nCreates a directory","name":"file_library.createDir","library":"file"},"file_methods:writeFloat":{"summary":"\nWrites a float and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The float to write"},"fname":"writeFloat","realm":"cl","name":"file_methods:writeFloat","classlib":"File","description":"\nWrites a float and advances the file position"},"file_methods:writeLong":{"summary":"\nWrites a long and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The long to write"},"fname":"writeLong","realm":"cl","name":"file_methods:writeLong","classlib":"File","description":"\nWrites a long and advances the file position"},"file_methods:writeShort":{"summary":"\nWrites a short and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The short to write"},"fname":"writeShort","realm":"cl","name":"file_methods:writeShort","classlib":"File","description":"\nWrites a short and advances the file position"},"file_methods:readLong":{"summary":"\nReads a long and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readLong","realm":"cl","param":[],"name":"file_methods:readLong","description":"\nReads a long and advances the file position"},"file_methods:read":{"summary":"\nReads a certain length of the file's bytes ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"read","realm":"cl","param":{"1":"n","n":"The length to read"},"name":"file_methods:read","description":"\nReads a certain length of the file's bytes"},"file_library.find":{"summary":"\nEnumerates a directory ","ret":["Table of file names","Table of directory names"],"class":"function","private":false,"library":"file","fname":"find","realm":"cl","param":{"1":"path","2":"sorting","path":"The folder to enumerate, relative to data/sf_filedata/.","sorting":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"},"name":"file_library.find","description":"\nEnumerates a directory"},"file_library.exists":{"summary":"\nChecks if a file exists ","ret":"True if exists, false if not, nil if error","class":"function","private":false,"library":"file","fname":"exists","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.exists","description":"\nChecks if a file exists"},"file_methods:writeDouble":{"summary":"\nWrites a double and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The double to write"},"fname":"writeDouble","realm":"cl","name":"file_methods:writeDouble","classlib":"File","description":"\nWrites a double and advances the file position"},"file_library.delete":{"summary":"\nDeletes a file ","ret":"True if successful, nil if it wasn't found","class":"function","private":false,"library":"file","fname":"delete","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.delete","description":"\nDeletes a file"},"file_library.findInGame":{"summary":"\nEnumerates a directory relative to gmod ","ret":["Table of file names","Table of directory names"],"class":"function","private":false,"library":"file","fname":"findInGame","realm":"cl","param":{"1":"path","2":"sorting","path":"The folder to enumerate, relative to garrysmod.","sorting":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"},"name":"file_library.findInGame","description":"\nEnumerates a directory relative to gmod"},"file_methods:readLine":{"summary":"\nReads a line and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readLine","realm":"cl","param":[],"name":"file_methods:readLine","description":"\nReads a line and advances the file position"},"file_methods:seek":{"summary":"\nSets the file position ","class":"function","private":false,"param":{"1":"n","n":"The position to set it to"},"fname":"seek","realm":"cl","name":"file_methods:seek","classlib":"File","description":"\nSets the file position"},"file_methods:close":{"summary":"\nFlushes and closes the file.","class":"function","private":false,"param":[],"fname":"close","realm":"cl","name":"file_methods:close","classlib":"File","description":"\nFlushes and closes the file. The file must be opened again to use a new file object."},"file_methods:writeByte":{"summary":"\nWrites a byte and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The byte to write"},"fname":"writeByte","realm":"cl","name":"file_methods:writeByte","classlib":"File","description":"\nWrites a byte and advances the file position"},"file_methods:readFloat":{"summary":"\nReads a float and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readFloat","realm":"cl","param":[],"name":"file_methods:readFloat","description":"\nReads a float and advances the file position"},"file_library.append":{"summary":"\nAppends a string to the end of a file ","class":"function","private":false,"param":{"1":"path","2":"data","path":"Filepath relative to data/sf_filedata/.","data":"String that will be appended to the file."},"fname":"append","realm":"cl","description":"\nAppends a string to the end of a file","name":"file_library.append","library":"file"},"file_methods:flush":{"summary":"\nWait until all changes to the file are complete ","class":"function","private":false,"param":[],"fname":"flush","realm":"cl","name":"file_methods:flush","classlib":"File","description":"\nWait until all changes to the file are complete"},"file_methods:readShort":{"summary":"\nReads a short and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readShort","realm":"cl","param":[],"name":"file_methods:readShort","description":"\nReads a short and advances the file position"},"file_methods:size":{"summary":"\nReturns the file's size in bytes ","ret":"The file's size","class":"function","private":false,"classlib":"File","fname":"size","realm":"cl","param":[],"name":"file_methods:size","description":"\nReturns the file's size in bytes"},"file_methods:write":{"summary":"\nWrites a string to the file and advances the file position ","class":"function","private":false,"param":{"1":"str","str":"The data to write"},"fname":"write","realm":"cl","name":"file_methods:write","classlib":"File","description":"\nWrites a string to the file and advances the file position"},"file_methods:readDouble":{"summary":"\nReads a double and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readDouble","realm":"cl","param":[],"name":"file_methods:readDouble","description":"\nReads a double and advances the file position"},"file_library.write":{"summary":"\nWrites to a file ","ret":"True if OK, nil if error","class":"function","private":false,"library":"file","fname":"write","realm":"cl","param":{"1":"path","2":"data","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.write","description":"\nWrites to a file"},"file_methods:readByte":{"summary":"\nReads a byte and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readByte","realm":"cl","param":[],"name":"file_methods:readByte","description":"\nReads a byte and advances the file position"},"file_methods:tell":{"summary":"\nReturns the current file position ","ret":"The current file position","class":"function","private":false,"classlib":"File","fname":"tell","realm":"cl","param":[],"name":"file_methods:tell","description":"\nReturns the current file position"},"file_library.read":{"summary":"\nReads a file from path ","ret":"Contents, or nil if error","class":"function","private":false,"library":"file","fname":"read","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.read","description":"\nReads a file from path"}},"libraries":{"1":"file","file":{"summary":"\nFile functions.","tables":[],"client":true,"libtbl":"file_library","fields":[],"class":"library","functions":{"1":"append","2":"createDir","3":"delete","4":"exists","5":"find","6":"findInGame","7":"open","8":"read","9":"write","exists":{"summary":"\nChecks if a file exists ","ret":"True if exists, false if not, nil if error","class":"function","private":false,"library":"file","fname":"exists","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.exists","description":"\nChecks if a file exists"},"find":{"summary":"\nEnumerates a directory ","ret":["Table of file names","Table of directory names"],"class":"function","private":false,"library":"file","fname":"find","realm":"cl","param":{"1":"path","2":"sorting","path":"The folder to enumerate, relative to data/sf_filedata/.","sorting":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"},"name":"file_library.find","description":"\nEnumerates a directory"},"write":{"summary":"\nWrites to a file ","ret":"True if OK, nil if error","class":"function","private":false,"library":"file","fname":"write","realm":"cl","param":{"1":"path","2":"data","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.write","description":"\nWrites to a file"},"append":{"summary":"\nAppends a string to the end of a file ","class":"function","private":false,"param":{"1":"path","2":"data","path":"Filepath relative to data/sf_filedata/.","data":"String that will be appended to the file."},"fname":"append","realm":"cl","description":"\nAppends a string to the end of a file","name":"file_library.append","library":"file"},"read":{"summary":"\nReads a file from path ","ret":"Contents, or nil if error","class":"function","private":false,"library":"file","fname":"read","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.read","description":"\nReads a file from path"},"findInGame":{"summary":"\nEnumerates a directory relative to gmod ","ret":["Table of file names","Table of directory names"],"class":"function","private":false,"library":"file","fname":"findInGame","realm":"cl","param":{"1":"path","2":"sorting","path":"The folder to enumerate, relative to garrysmod.","sorting":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"},"name":"file_library.findInGame","description":"\nEnumerates a directory relative to gmod"},"open":{"summary":"\nOpens and returns a file ","ret":"File object or nil if it failed","class":"function","private":false,"library":"file","fname":"open","realm":"cl","param":{"1":"path","2":"mode","path":"Filepath relative to data/sf_filedata/.","mode":"The file mode to use. See lua manual for explaination"},"name":"file_library.open","description":"\nOpens and returns a file"},"delete":{"summary":"\nDeletes a file ","ret":"True if successful, nil if it wasn't found","class":"function","private":false,"library":"file","fname":"delete","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.delete","description":"\nDeletes a file"},"createDir":{"summary":"\nCreates a directory ","class":"function","private":false,"param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"fname":"createDir","realm":"cl","description":"\nCreates a directory","name":"file_library.createDir","library":"file"}},"name":"file","description":"\nFile functions. Allows modification of files."}},"type":"file","doc":[{"summary":"\n \nFile functions \n ","description":"\n \nFile functions \n"},{"summary":"\nFile functions.","tables":[],"client":true,"libtbl":"file_library","fields":[],"class":"library","functions":{"1":"append","2":"createDir","3":"delete","4":"exists","5":"find","6":"findInGame","7":"open","8":"read","9":"write","exists":{"summary":"\nChecks if a file exists ","ret":"True if exists, false if not, nil if error","class":"function","private":false,"library":"file","fname":"exists","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.exists","description":"\nChecks if a file exists"},"find":{"summary":"\nEnumerates a directory ","ret":["Table of file names","Table of directory names"],"class":"function","private":false,"library":"file","fname":"find","realm":"cl","param":{"1":"path","2":"sorting","path":"The folder to enumerate, relative to data/sf_filedata/.","sorting":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"},"name":"file_library.find","description":"\nEnumerates a directory"},"write":{"summary":"\nWrites to a file ","ret":"True if OK, nil if error","class":"function","private":false,"library":"file","fname":"write","realm":"cl","param":{"1":"path","2":"data","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.write","description":"\nWrites to a file"},"append":{"summary":"\nAppends a string to the end of a file ","class":"function","private":false,"param":{"1":"path","2":"data","path":"Filepath relative to data/sf_filedata/.","data":"String that will be appended to the file."},"fname":"append","realm":"cl","description":"\nAppends a string to the end of a file","name":"file_library.append","library":"file"},"read":{"summary":"\nReads a file from path ","ret":"Contents, or nil if error","class":"function","private":false,"library":"file","fname":"read","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.read","description":"\nReads a file from path"},"findInGame":{"summary":"\nEnumerates a directory relative to gmod ","ret":["Table of file names","Table of directory names"],"class":"function","private":false,"library":"file","fname":"findInGame","realm":"cl","param":{"1":"path","2":"sorting","path":"The folder to enumerate, relative to garrysmod.","sorting":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"},"name":"file_library.findInGame","description":"\nEnumerates a directory relative to gmod"},"open":{"summary":"\nOpens and returns a file ","ret":"File object or nil if it failed","class":"function","private":false,"library":"file","fname":"open","realm":"cl","param":{"1":"path","2":"mode","path":"Filepath relative to data/sf_filedata/.","mode":"The file mode to use. See lua manual for explaination"},"name":"file_library.open","description":"\nOpens and returns a file"},"delete":{"summary":"\nDeletes a file ","ret":"True if successful, nil if it wasn't found","class":"function","private":false,"library":"file","fname":"delete","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.delete","description":"\nDeletes a file"},"createDir":{"summary":"\nCreates a directory ","class":"function","private":false,"param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"fname":"createDir","realm":"cl","description":"\nCreates a directory","name":"file_library.createDir","library":"file"}},"name":"file","description":"\nFile functions. Allows modification of files."},{"methods":{"1":"close","2":"flush","3":"read","4":"readBool","5":"readByte","6":"readDouble","7":"readFloat","8":"readLine","9":"readLong","10":"readShort","11":"seek","12":"size","13":"skip","14":"tell","15":"write","16":"writeBool","17":"writeByte","18":"writeDouble","19":"writeFloat","20":"writeLong","21":"writeShort","write":{"summary":"\nWrites a string to the file and advances the file position ","class":"function","private":false,"param":{"1":"str","str":"The data to write"},"fname":"write","realm":"cl","name":"file_methods:write","classlib":"File","description":"\nWrites a string to the file and advances the file position"},"read":{"summary":"\nReads a certain length of the file's bytes ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"read","realm":"cl","param":{"1":"n","n":"The length to read"},"name":"file_methods:read","description":"\nReads a certain length of the file's bytes"},"writeFloat":{"summary":"\nWrites a float and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The float to write"},"fname":"writeFloat","realm":"cl","name":"file_methods:writeFloat","classlib":"File","description":"\nWrites a float and advances the file position"},"seek":{"summary":"\nSets the file position ","class":"function","private":false,"param":{"1":"n","n":"The position to set it to"},"fname":"seek","realm":"cl","name":"file_methods:seek","classlib":"File","description":"\nSets the file position"},"writeLong":{"summary":"\nWrites a long and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The long to write"},"fname":"writeLong","realm":"cl","name":"file_methods:writeLong","classlib":"File","description":"\nWrites a long and advances the file position"},"flush":{"summary":"\nWait until all changes to the file are complete ","class":"function","private":false,"param":[],"fname":"flush","realm":"cl","name":"file_methods:flush","classlib":"File","description":"\nWait until all changes to the file are complete"},"writeDouble":{"summary":"\nWrites a double and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The double to write"},"fname":"writeDouble","realm":"cl","name":"file_methods:writeDouble","classlib":"File","description":"\nWrites a double and advances the file position"},"readLine":{"summary":"\nReads a line and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readLine","realm":"cl","param":[],"name":"file_methods:readLine","description":"\nReads a line and advances the file position"},"readBool":{"summary":"\nReads a boolean and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readBool","realm":"cl","param":[],"name":"file_methods:readBool","description":"\nReads a boolean and advances the file position"},"size":{"summary":"\nReturns the file's size in bytes ","ret":"The file's size","class":"function","private":false,"classlib":"File","fname":"size","realm":"cl","param":[],"name":"file_methods:size","description":"\nReturns the file's size in bytes"},"readByte":{"summary":"\nReads a byte and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readByte","realm":"cl","param":[],"name":"file_methods:readByte","description":"\nReads a byte and advances the file position"},"close":{"summary":"\nFlushes and closes the file.","class":"function","private":false,"param":[],"fname":"close","realm":"cl","name":"file_methods:close","classlib":"File","description":"\nFlushes and closes the file. The file must be opened again to use a new file object."},"writeByte":{"summary":"\nWrites a byte and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The byte to write"},"fname":"writeByte","realm":"cl","name":"file_methods:writeByte","classlib":"File","description":"\nWrites a byte and advances the file position"},"readLong":{"summary":"\nReads a long and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readLong","realm":"cl","param":[],"name":"file_methods:readLong","description":"\nReads a long and advances the file position"},"readDouble":{"summary":"\nReads a double and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readDouble","realm":"cl","param":[],"name":"file_methods:readDouble","description":"\nReads a double and advances the file position"},"readFloat":{"summary":"\nReads a float and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readFloat","realm":"cl","param":[],"name":"file_methods:readFloat","description":"\nReads a float and advances the file position"},"skip":{"summary":"\nMoves the file position relative to its current position ","ret":"The resulting position","class":"function","private":false,"classlib":"File","fname":"skip","realm":"cl","param":{"1":"n","n":"How much to move the position"},"name":"file_methods:skip","description":"\nMoves the file position relative to its current position"},"writeShort":{"summary":"\nWrites a short and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The short to write"},"fname":"writeShort","realm":"cl","name":"file_methods:writeShort","classlib":"File","description":"\nWrites a short and advances the file position"},"tell":{"summary":"\nReturns the current file position ","ret":"The current file position","class":"function","private":false,"classlib":"File","fname":"tell","realm":"cl","param":[],"name":"file_methods:tell","description":"\nReturns the current file position"},"readShort":{"summary":"\nReads a short and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readShort","realm":"cl","param":[],"name":"file_methods:readShort","description":"\nReads a short and advances the file position"},"writeBool":{"summary":"\nWrites a boolean and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The boolean to write"},"fname":"writeBool","realm":"cl","name":"file_methods:writeBool","classlib":"File","description":"\nWrites a boolean and advances the file position"}},"class":"class","client":true,"fields":[],"summary":"\nFile type ","typtbl":"file_methods","name":"File","description":"\nFile type"},{"summary":"\nOpens and returns a file ","ret":"File object or nil if it failed","class":"function","private":false,"library":"file","fname":"open","realm":"cl","param":{"1":"path","2":"mode","path":"Filepath relative to data/sf_filedata/.","mode":"The file mode to use. See lua manual for explaination"},"name":"file_library.open","description":"\nOpens and returns a file"},{"summary":"\nReads a file from path ","ret":"Contents, or nil if error","class":"function","private":false,"library":"file","fname":"read","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.read","description":"\nReads a file from path"},{"summary":"\nWrites to a file ","ret":"True if OK, nil if error","class":"function","private":false,"library":"file","fname":"write","realm":"cl","param":{"1":"path","2":"data","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.write","description":"\nWrites to a file"},{"summary":"\nAppends a string to the end of a file ","class":"function","private":false,"param":{"1":"path","2":"data","path":"Filepath relative to data/sf_filedata/.","data":"String that will be appended to the file."},"fname":"append","realm":"cl","description":"\nAppends a string to the end of a file","name":"file_library.append","library":"file"},{"summary":"\nChecks if a file exists ","ret":"True if exists, false if not, nil if error","class":"function","private":false,"library":"file","fname":"exists","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.exists","description":"\nChecks if a file exists"},{"summary":"\nDeletes a file ","ret":"True if successful, nil if it wasn't found","class":"function","private":false,"library":"file","fname":"delete","realm":"cl","param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"name":"file_library.delete","description":"\nDeletes a file"},{"summary":"\nCreates a directory ","class":"function","private":false,"param":{"1":"path","path":"Filepath relative to data/sf_filedata/."},"fname":"createDir","realm":"cl","description":"\nCreates a directory","name":"file_library.createDir","library":"file"},{"summary":"\nEnumerates a directory ","ret":["Table of file names","Table of directory names"],"class":"function","private":false,"library":"file","fname":"find","realm":"cl","param":{"1":"path","2":"sorting","path":"The folder to enumerate, relative to data/sf_filedata/.","sorting":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"},"name":"file_library.find","description":"\nEnumerates a directory"},{"summary":"\nEnumerates a directory relative to gmod ","ret":["Table of file names","Table of directory names"],"class":"function","private":false,"library":"file","fname":"findInGame","realm":"cl","param":{"1":"path","2":"sorting","path":"The folder to enumerate, relative to garrysmod.","sorting":"Optional sorting arguement. Either nameasc, namedesc, dateasc, datedesc"},"name":"file_library.findInGame","description":"\nEnumerates a directory relative to gmod"},{"summary":"\nWait until all changes to the file are complete ","class":"function","private":false,"param":[],"fname":"flush","realm":"cl","name":"file_methods:flush","classlib":"File","description":"\nWait until all changes to the file are complete"},{"summary":"\nFlushes and closes the file.","class":"function","private":false,"param":[],"fname":"close","realm":"cl","name":"file_methods:close","classlib":"File","description":"\nFlushes and closes the file. The file must be opened again to use a new file object."},{"summary":"\nSets the file position ","class":"function","private":false,"param":{"1":"n","n":"The position to set it to"},"fname":"seek","realm":"cl","name":"file_methods:seek","classlib":"File","description":"\nSets the file position"},{"summary":"\nMoves the file position relative to its current position ","ret":"The resulting position","class":"function","private":false,"classlib":"File","fname":"skip","realm":"cl","param":{"1":"n","n":"How much to move the position"},"name":"file_methods:skip","description":"\nMoves the file position relative to its current position"},{"summary":"\nReturns the current file position ","ret":"The current file position","class":"function","private":false,"classlib":"File","fname":"tell","realm":"cl","param":[],"name":"file_methods:tell","description":"\nReturns the current file position"},{"summary":"\nReturns the file's size in bytes ","ret":"The file's size","class":"function","private":false,"classlib":"File","fname":"size","realm":"cl","param":[],"name":"file_methods:size","description":"\nReturns the file's size in bytes"},{"summary":"\nReads a certain length of the file's bytes ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"read","realm":"cl","param":{"1":"n","n":"The length to read"},"name":"file_methods:read","description":"\nReads a certain length of the file's bytes"},{"summary":"\nReads a boolean and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readBool","realm":"cl","param":[],"name":"file_methods:readBool","description":"\nReads a boolean and advances the file position"},{"summary":"\nReads a byte and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readByte","realm":"cl","param":[],"name":"file_methods:readByte","description":"\nReads a byte and advances the file position"},{"summary":"\nReads a double and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readDouble","realm":"cl","param":[],"name":"file_methods:readDouble","description":"\nReads a double and advances the file position"},{"summary":"\nReads a float and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readFloat","realm":"cl","param":[],"name":"file_methods:readFloat","description":"\nReads a float and advances the file position"},{"summary":"\nReads a line and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readLine","realm":"cl","param":[],"name":"file_methods:readLine","description":"\nReads a line and advances the file position"},{"summary":"\nReads a long and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readLong","realm":"cl","param":[],"name":"file_methods:readLong","description":"\nReads a long and advances the file position"},{"summary":"\nReads a short and advances the file position ","ret":"The data","class":"function","private":false,"classlib":"File","fname":"readShort","realm":"cl","param":[],"name":"file_methods:readShort","description":"\nReads a short and advances the file position"},{"summary":"\nWrites a string to the file and advances the file position ","class":"function","private":false,"param":{"1":"str","str":"The data to write"},"fname":"write","realm":"cl","name":"file_methods:write","classlib":"File","description":"\nWrites a string to the file and advances the file position"},{"summary":"\nWrites a boolean and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The boolean to write"},"fname":"writeBool","realm":"cl","name":"file_methods:writeBool","classlib":"File","description":"\nWrites a boolean and advances the file position"},{"summary":"\nWrites a byte and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The byte to write"},"fname":"writeByte","realm":"cl","name":"file_methods:writeByte","classlib":"File","description":"\nWrites a byte and advances the file position"},{"summary":"\nWrites a double and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The double to write"},"fname":"writeDouble","realm":"cl","name":"file_methods:writeDouble","classlib":"File","description":"\nWrites a double and advances the file position"},{"summary":"\nWrites a float and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The float to write"},"fname":"writeFloat","realm":"cl","name":"file_methods:writeFloat","classlib":"File","description":"\nWrites a float and advances the file position"},{"summary":"\nWrites a long and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The long to write"},"fname":"writeLong","realm":"cl","name":"file_methods:writeLong","classlib":"File","description":"\nWrites a long and advances the file position"},{"summary":"\nWrites a short and advances the file position ","class":"function","private":false,"param":{"1":"x","x":"The short to write"},"fname":"writeShort","realm":"cl","name":"file_methods:writeShort","classlib":"File","description":"\nWrites a short and advances the file position"}],"name":"libs_cl/file.lua","description":"\n \nFile functions \n"},"libs_cl/particle.lua":{"summary":"\n ","tables":[],"functions":{"1":"particle_library.attach","2":"particle_methods:destroy","3":"particle_methods:isFinished","4":"particle_methods:isValid","5":"particle_methods:restart","6":"particle_methods:setControlPoint","7":"particle_methods:setControlPointEntity","8":"particle_methods:setControlPointParent","9":"particle_methods:setForwardVector","10":"particle_methods:setRightVector","11":"particle_methods:setSortOrigin","12":"particle_methods:setUpVector","13":"particle_methods:startEmission","14":"particle_methods:stopEmission","particle_methods:setSortOrigin":{"summary":"\nSets the sort origin for given particle system.","class":"function","private":false,"param":{"1":"origin","2":"vector","vector":"Sort Origin"},"fname":"setSortOrigin","realm":"cl","name":"particle_methods:setSortOrigin","classlib":"Particle","description":"\nSets the sort origin for given particle system. This is used as a helper to determine which particles are in front of which."},"particle_methods:destroy":{"summary":"\nStops emission of the particle and destroys the object.","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"particle_methods:destroy","classlib":"Particle","description":"\nStops emission of the particle and destroys the object."},"particle_methods:setControlPointParent":{"summary":"\nSets the forward direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","number":"Parent"},"fname":"setControlPointParent","realm":"cl","name":"particle_methods:setControlPointParent","classlib":"Particle","description":"\nSets the forward direction for given control point."},"particle_methods:setForwardVector":{"summary":"\nSets the forward direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Forward"},"fname":"setForwardVector","realm":"cl","name":"particle_methods:setForwardVector","classlib":"Particle","description":"\nSets the forward direction for given control point."},"particle_methods:isFinished":{"summary":"\nRestarts emission of the particle.","ret":"bool finished","class":"function","private":false,"classlib":"Particle","fname":"isFinished","realm":"cl","param":[],"name":"particle_methods:isFinished","description":"\nRestarts emission of the particle."},"particle_methods:startEmission":{"summary":"\nStarts emission of the particle.","class":"function","private":false,"param":[],"fname":"startEmission","realm":"cl","name":"particle_methods:startEmission","classlib":"Particle","description":"\nStarts emission of the particle."},"particle_library.attach":{"summary":"\nAttaches a particle to an entity.","ret":"Particle type.","class":"function","private":false,"library":"particle","fname":"attach","realm":"cl","param":{"1":"entity","2":"particle","3":"pattach","4":"options","entity":"Entity to attach to","particle":"Name of the particle","pattach":"PATTACH enum","options":"Table of options"},"name":"particle_library.attach","description":"\nAttaches a particle to an entity."},"particle_methods:setControlPoint":{"summary":"\nSets a value for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Value"},"fname":"setControlPoint","realm":"cl","name":"particle_methods:setControlPoint","classlib":"Particle","description":"\nSets a value for given control point."},"particle_methods:setControlPointEntity":{"summary":"\nEssentially makes child control point follow the parent entity.","class":"function","private":false,"param":{"1":"id","2":"entity","3":"number","number":"Child Control Point ID (0-63)","entity":"Entity parent"},"fname":"setControlPointEntity","realm":"cl","name":"particle_methods:setControlPointEntity","classlib":"Particle","description":"\nEssentially makes child control point follow the parent entity."},"particle_methods:setRightVector":{"summary":"\nSets the right direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Right"},"fname":"setRightVector","realm":"cl","name":"particle_methods:setRightVector","classlib":"Particle","description":"\nSets the right direction for given control point."},"particle_methods:isValid":{"summary":"\nGets if the particle is valid or not.","ret":"Is valid or not","class":"function","private":false,"classlib":"Particle","fname":"isValid","realm":"cl","param":[],"name":"particle_methods:isValid","description":"\nGets if the particle is valid or not."},"particle_methods:restart":{"summary":"\nRestarts emission of the particle.","class":"function","private":false,"param":[],"fname":"restart","realm":"cl","name":"particle_methods:restart","classlib":"Particle","description":"\nRestarts emission of the particle."},"particle_methods:stopEmission":{"summary":"\nStops emission of the particle.","class":"function","private":false,"param":[],"fname":"stopEmission","realm":"cl","name":"particle_methods:stopEmission","classlib":"Particle","description":"\nStops emission of the particle."},"particle_methods:setUpVector":{"summary":"\nSets the right direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Right"},"fname":"setUpVector","realm":"cl","name":"particle_methods:setUpVector","classlib":"Particle","description":"\nSets the right direction for given control point."}},"libraries":{"1":"particle","particle":{"summary":"\nParticle library.","tables":[],"client":true,"libtbl":"particle_library","fields":[],"class":"library","functions":{"1":"attach","attach":{"summary":"\nAttaches a particle to an entity.","ret":"Particle type.","class":"function","private":false,"library":"particle","fname":"attach","realm":"cl","param":{"1":"entity","2":"particle","3":"pattach","4":"options","entity":"Entity to attach to","particle":"Name of the particle","pattach":"PATTACH enum","options":"Table of options"},"name":"particle_library.attach","description":"\nAttaches a particle to an entity."}},"name":"particle","description":"\nParticle library."}},"type":"file","doc":[{"summary":"\n ","param":[],"description":"\n"},{"methods":{"1":"destroy","2":"isFinished","3":"isValid","4":"restart","5":"setControlPoint","6":"setControlPointEntity","7":"setControlPointParent","8":"setForwardVector","9":"setRightVector","10":"setSortOrigin","11":"setUpVector","12":"startEmission","13":"stopEmission","setSortOrigin":{"summary":"\nSets the sort origin for given particle system.","class":"function","private":false,"param":{"1":"origin","2":"vector","vector":"Sort Origin"},"fname":"setSortOrigin","realm":"cl","name":"particle_methods:setSortOrigin","classlib":"Particle","description":"\nSets the sort origin for given particle system. This is used as a helper to determine which particles are in front of which."},"restart":{"summary":"\nRestarts emission of the particle.","class":"function","private":false,"param":[],"fname":"restart","realm":"cl","name":"particle_methods:restart","classlib":"Particle","description":"\nRestarts emission of the particle."},"stopEmission":{"summary":"\nStops emission of the particle.","class":"function","private":false,"param":[],"fname":"stopEmission","realm":"cl","name":"particle_methods:stopEmission","classlib":"Particle","description":"\nStops emission of the particle."},"setControlPointEntity":{"summary":"\nEssentially makes child control point follow the parent entity.","class":"function","private":false,"param":{"1":"id","2":"entity","3":"number","number":"Child Control Point ID (0-63)","entity":"Entity parent"},"fname":"setControlPointEntity","realm":"cl","name":"particle_methods:setControlPointEntity","classlib":"Particle","description":"\nEssentially makes child control point follow the parent entity."},"destroy":{"summary":"\nStops emission of the particle and destroys the object.","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"particle_methods:destroy","classlib":"Particle","description":"\nStops emission of the particle and destroys the object."},"setControlPointParent":{"summary":"\nSets the forward direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","number":"Parent"},"fname":"setControlPointParent","realm":"cl","name":"particle_methods:setControlPointParent","classlib":"Particle","description":"\nSets the forward direction for given control point."},"setControlPoint":{"summary":"\nSets a value for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Value"},"fname":"setControlPoint","realm":"cl","name":"particle_methods:setControlPoint","classlib":"Particle","description":"\nSets a value for given control point."},"setUpVector":{"summary":"\nSets the right direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Right"},"fname":"setUpVector","realm":"cl","name":"particle_methods:setUpVector","classlib":"Particle","description":"\nSets the right direction for given control point."},"isFinished":{"summary":"\nRestarts emission of the particle.","ret":"bool finished","class":"function","private":false,"classlib":"Particle","fname":"isFinished","realm":"cl","param":[],"name":"particle_methods:isFinished","description":"\nRestarts emission of the particle."},"setForwardVector":{"summary":"\nSets the forward direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Forward"},"fname":"setForwardVector","realm":"cl","name":"particle_methods:setForwardVector","classlib":"Particle","description":"\nSets the forward direction for given control point."},"startEmission":{"summary":"\nStarts emission of the particle.","class":"function","private":false,"param":[],"fname":"startEmission","realm":"cl","name":"particle_methods:startEmission","classlib":"Particle","description":"\nStarts emission of the particle."},"setRightVector":{"summary":"\nSets the right direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Right"},"fname":"setRightVector","realm":"cl","name":"particle_methods:setRightVector","classlib":"Particle","description":"\nSets the right direction for given control point."},"isValid":{"summary":"\nGets if the particle is valid or not.","ret":"Is valid or not","class":"function","private":false,"classlib":"Particle","fname":"isValid","realm":"cl","param":[],"name":"particle_methods:isValid","description":"\nGets if the particle is valid or not."}},"class":"class","client":true,"fields":[],"summary":"\nParticle type ","typtbl":"particle_methods","name":"Particle","description":"\nParticle type"},{"summary":"\nParticle library.","tables":[],"client":true,"libtbl":"particle_library","fields":[],"class":"library","functions":{"1":"attach","attach":{"summary":"\nAttaches a particle to an entity.","ret":"Particle type.","class":"function","private":false,"library":"particle","fname":"attach","realm":"cl","param":{"1":"entity","2":"particle","3":"pattach","4":"options","entity":"Entity to attach to","particle":"Name of the particle","pattach":"PATTACH enum","options":"Table of options"},"name":"particle_library.attach","description":"\nAttaches a particle to an entity."}},"name":"particle","description":"\nParticle library."},{"summary":"\nAttaches a particle to an entity.","ret":"Particle type.","class":"function","private":false,"library":"particle","fname":"attach","realm":"cl","param":{"1":"entity","2":"particle","3":"pattach","4":"options","entity":"Entity to attach to","particle":"Name of the particle","pattach":"PATTACH enum","options":"Table of options"},"name":"particle_library.attach","description":"\nAttaches a particle to an entity."},{"summary":"\nGets if the particle is valid or not.","ret":"Is valid or not","class":"function","private":false,"classlib":"Particle","fname":"isValid","realm":"cl","param":[],"name":"particle_methods:isValid","description":"\nGets if the particle is valid or not."},{"summary":"\nStarts emission of the particle.","class":"function","private":false,"param":[],"fname":"startEmission","realm":"cl","name":"particle_methods:startEmission","classlib":"Particle","description":"\nStarts emission of the particle."},{"summary":"\nStops emission of the particle.","class":"function","private":false,"param":[],"fname":"stopEmission","realm":"cl","name":"particle_methods:stopEmission","classlib":"Particle","description":"\nStops emission of the particle."},{"summary":"\nStops emission of the particle and destroys the object.","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"particle_methods:destroy","classlib":"Particle","description":"\nStops emission of the particle and destroys the object."},{"summary":"\nRestarts emission of the particle.","class":"function","private":false,"param":[],"fname":"restart","realm":"cl","name":"particle_methods:restart","classlib":"Particle","description":"\nRestarts emission of the particle."},{"summary":"\nRestarts emission of the particle.","ret":"bool finished","class":"function","private":false,"classlib":"Particle","fname":"isFinished","realm":"cl","param":[],"name":"particle_methods:isFinished","description":"\nRestarts emission of the particle."},{"summary":"\nSets the sort origin for given particle system.","class":"function","private":false,"param":{"1":"origin","2":"vector","vector":"Sort Origin"},"fname":"setSortOrigin","realm":"cl","name":"particle_methods:setSortOrigin","classlib":"Particle","description":"\nSets the sort origin for given particle system. This is used as a helper to determine which particles are in front of which."},{"summary":"\nSets a value for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Value"},"fname":"setControlPoint","realm":"cl","name":"particle_methods:setControlPoint","classlib":"Particle","description":"\nSets a value for given control point."},{"summary":"\nEssentially makes child control point follow the parent entity.","class":"function","private":false,"param":{"1":"id","2":"entity","3":"number","number":"Child Control Point ID (0-63)","entity":"Entity parent"},"fname":"setControlPointEntity","realm":"cl","name":"particle_methods:setControlPointEntity","classlib":"Particle","description":"\nEssentially makes child control point follow the parent entity."},{"summary":"\nSets the forward direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Forward"},"fname":"setForwardVector","realm":"cl","name":"particle_methods:setForwardVector","classlib":"Particle","description":"\nSets the forward direction for given control point."},{"summary":"\nSets the right direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Right"},"fname":"setRightVector","realm":"cl","name":"particle_methods:setRightVector","classlib":"Particle","description":"\nSets the right direction for given control point."},{"summary":"\nSets the right direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","4":"vector","number":"Control Point ID (0-63)","vector":"Right"},"fname":"setUpVector","realm":"cl","name":"particle_methods:setUpVector","classlib":"Particle","description":"\nSets the right direction for given control point."},{"summary":"\nSets the forward direction for given control point.","class":"function","private":false,"param":{"1":"id","2":"value","3":"number","number":"Parent"},"fname":"setControlPointParent","realm":"cl","name":"particle_methods:setControlPointParent","classlib":"Particle","description":"\nSets the forward direction for given control point."}],"name":"libs_cl/particle.lua","description":"\n"},"libs_sh/players.lua":{"summary":"\n \nPlayer functions.","tables":{"1":"SF.DefaultEnvironment.IN_KEY","SF.DefaultEnvironment.IN_KEY":{"summary":"\nENUMs of in_keys for use with player:keyDown: \nALT1, \nALT2, \nATTACK, \nATTACK2, \nBACK, \nDUCK, \nFORWARD, \nJUMP, \nLEFT, \nMOVELEFT, \nMOVERIGHT, \nRELOAD, \nRIGHT, \nSCORE, \nSPEED, \nUSE, \nWALK, \nZOOM, \nGRENADE1, \nGRENADE2, \nWEAPON1, \nWEAPON2, \nBULLRUSH, \nCANCEL, \nRUN ","classForced":true,"class":"table","param":[],"name":"SF.DefaultEnvironment.IN_KEY","description":"\nENUMs of in_keys for use with player:keyDown: \nALT1, \nALT2, \nATTACK, \nATTACK2, \nBACK, \nDUCK, \nFORWARD, \nJUMP, \nLEFT, \nMOVELEFT, \nMOVERIGHT, \nRELOAD, \nRIGHT, \nSCORE, \nSPEED, \nUSE, \nWALK, \nZOOM, \nGRENADE1, \nGRENADE2, \nWEAPON1, \nWEAPON2, \nBULLRUSH, \nCANCEL, \nRUN"}},"functions":{"1":"player_metamethods:__tostring","2":"player_methods:getActiveWeapon","3":"player_methods:getAimVector","4":"player_methods:getAmmoCount","5":"player_methods:getArmor","6":"player_methods:getDeaths","7":"player_methods:getEyeTrace","8":"player_methods:getFOV","9":"player_methods:getFrags","10":"player_methods:getFriendStatus","11":"player_methods:getGroundEntity","12":"player_methods:getJumpPower","13":"player_methods:getMaxSpeed","14":"player_methods:getName","15":"player_methods:getPing","16":"player_methods:getRunSpeed","17":"player_methods:getShootPos","18":"player_methods:getSteamID","19":"player_methods:getSteamID64","20":"player_methods:getTeam","21":"player_methods:getTeamName","22":"player_methods:getUniqueID","23":"player_methods:getUserID","24":"player_methods:getVehicle","25":"player_methods:getViewEntity","26":"player_methods:getWeapon","27":"player_methods:getWeapons","28":"player_methods:hasGodMode","29":"player_methods:inVehicle","30":"player_methods:isAdmin","31":"player_methods:isAlive","32":"player_methods:isBot","33":"player_methods:isConnected","34":"player_methods:isCrouching","35":"player_methods:isFlashlightOn","36":"player_methods:isFrozen","37":"player_methods:isMuted","38":"player_methods:isNPC","39":"player_methods:isNoclipped","40":"player_methods:isPlayer","41":"player_methods:isSpeaking","42":"player_methods:isSprinting","43":"player_methods:isSuperAdmin","44":"player_methods:isTyping","45":"player_methods:isUserGroup","46":"player_methods:keyDown","47":"player_methods:setViewEntity","48":"player_methods:voiceVolume","player_methods:getUniqueID":{"server":true,"ret":"unique ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's unique ID ","fname":"getUniqueID","realm":"sh","param":[],"name":"player_methods:getUniqueID","description":"\nReturns the player's unique ID"},"player_methods:isSprinting":{"server":true,"ret":"bool true/false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is sprinting ","fname":"isSprinting","realm":"sh","param":[],"name":"player_methods:isSprinting","description":"\nReturns whether the player is sprinting"},"player_methods:getVehicle":{"server":true,"ret":"Vehicle if player in vehicle or nil","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the vehicle the player is driving ","fname":"getVehicle","realm":"sh","param":[],"name":"player_methods:getVehicle","description":"\nReturns the vehicle the player is driving"},"player_methods:getRunSpeed":{"server":true,"ret":"Running speed","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's running speed ","fname":"getRunSpeed","realm":"sh","param":[],"name":"player_methods:getRunSpeed","description":"\nReturns the player's running speed"},"player_methods:getPing":{"server":true,"ret":"ping","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current ping ","fname":"getPing","realm":"sh","param":[],"name":"player_methods:getPing","description":"\nReturns the player's current ping"},"player_methods:getTeamName":{"server":true,"ret":"team name","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the name of the player's current team ","fname":"getTeamName","realm":"sh","param":[],"name":"player_methods:getTeamName","description":"\nReturns the name of the player's current team"},"player_methods:getTeam":{"server":true,"ret":"team","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current team ","fname":"getTeam","realm":"sh","param":[],"name":"player_methods:getTeam","description":"\nReturns the player's current team"},"player_methods:getArmor":{"server":true,"ret":"Armor","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the players armor ","fname":"getArmor","realm":"sh","param":[],"name":"player_methods:getArmor","description":"\nReturns the players armor"},"player_methods:isUserGroup":{"server":true,"ret":"True if player belongs to group","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player belongs to a usergroup ","fname":"isUserGroup","realm":"sh","param":{"1":"group","group":"Group to check against"},"name":"player_methods:isUserGroup","description":"\nReturns whether the player belongs to a usergroup"},"player_methods:getJumpPower":{"server":true,"ret":"Jump power","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's jump power ","fname":"getJumpPower","realm":"sh","param":[],"name":"player_methods:getJumpPower","description":"\nReturns the player's jump power"},"player_methods:isConnected":{"server":true,"ret":"True if player is connected","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is connected ","fname":"isConnected","realm":"sh","param":[],"name":"player_methods:isConnected","description":"\nReturns whether the player is connected"},"player_methods:getShootPos":{"server":true,"ret":"Shoot position","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's shoot position ","fname":"getShootPos","realm":"sh","param":[],"name":"player_methods:getShootPos","description":"\nReturns the player's shoot position"},"player_methods:isSuperAdmin":{"server":true,"ret":"True if player is super admin","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a super admin ","fname":"isSuperAdmin","realm":"sh","param":[],"name":"player_methods:isSuperAdmin","description":"\nReturns whether the player is a super admin"},"player_methods:voiceVolume":{"summary":"\nReturns the voice volume of the player ","ret":"Returns the players voice volume, how loud the player's voice communication currently is, as a normal number. Doesn't work on local player unless the voice_loopback convar is set to 1.","class":"function","client":true,"private":false,"classlib":"Player","fname":"voiceVolume","realm":"cl","param":[],"name":"player_methods:voiceVolume","description":"\nReturns the voice volume of the player"},"player_methods:isBot":{"server":true,"ret":"True if player is a bot","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a bot ","fname":"isBot","realm":"sh","param":[],"name":"player_methods:isBot","description":"\nReturns whether the player is a bot"},"player_methods:isTyping":{"server":true,"ret":"bool true/false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is typing in their chat ","fname":"isTyping","realm":"sh","param":[],"name":"player_methods:isTyping","description":"\nReturns whether the player is typing in their chat"},"player_methods:isMuted":{"summary":"\nReturns whether the local player has muted the player ","ret":"True if the player was muted","class":"function","private":false,"classlib":"Player","fname":"isMuted","realm":"sh","param":[],"name":"player_methods:isMuted","description":"\nReturns whether the local player has muted the player"},"player_methods:getEyeTrace":{"server":true,"ret":"table trace data https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns a table with information of what the player is looking at ","fname":"getEyeTrace","realm":"sh","param":[],"name":"player_methods:getEyeTrace","description":"\nReturns a table with information of what the player is looking at"},"player_methods:getUserID":{"server":true,"ret":"user ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's user ID ","fname":"getUserID","realm":"sh","param":[],"name":"player_methods:getUserID","description":"\nReturns the player's user ID"},"player_methods:getWeapon":{"server":true,"ret":"weapon","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the specified weapon or nil if the player doesn't have it ","fname":"getWeapon","realm":"sh","param":{"1":"wep","wep":"String weapon class"},"name":"player_methods:getWeapon","description":"\nReturns the specified weapon or nil if the player doesn't have it"},"player_metamethods:__tostring":{"server":true,"class":"function","client":true,"private":false,"summary":"\nTo string ","realm":"sh","param":[],"name":"player_metamethods:__tostring","description":"\nTo string"},"player_methods:getFOV":{"server":true,"ret":"Field of view","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's field of view ","fname":"getFOV","realm":"sh","param":[],"name":"player_methods:getFOV","description":"\nReturns the player's field of view"},"player_methods:getMaxSpeed":{"server":true,"ret":"Maximum speed","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's maximum speed ","fname":"getMaxSpeed","realm":"sh","param":[],"name":"player_methods:getMaxSpeed","description":"\nReturns the player's maximum speed"},"player_methods:hasGodMode":{"server":true,"ret":"True if the player has godmode","class":"function","classlib":"Player","private":false,"summary":"\nReturns whether or not the player has godmode ","fname":"hasGodMode","realm":"sv","param":[],"name":"player_methods:hasGodMode","description":"\nReturns whether or not the player has godmode"},"player_methods:getAimVector":{"server":true,"ret":"Aim vector","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's aim vector ","fname":"getAimVector","realm":"sh","param":[],"name":"player_methods:getAimVector","description":"\nReturns the player's aim vector"},"player_methods:getActiveWeapon":{"server":true,"ret":"The weapon","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the name of the player's active weapon ","fname":"getActiveWeapon","realm":"sh","param":[],"name":"player_methods:getActiveWeapon","description":"\nReturns the name of the player's active weapon"},"player_methods:getSteamID64":{"server":true,"ret":"community ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's community ID ","fname":"getSteamID64","realm":"sh","param":[],"name":"player_methods:getSteamID64","description":"\nReturns the player's community ID"},"player_methods:getDeaths":{"server":true,"ret":"Amount of deaths","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the amount of deaths of the player ","fname":"getDeaths","realm":"sh","param":[],"name":"player_methods:getDeaths","description":"\nReturns the amount of deaths of the player"},"player_methods:getGroundEntity":{"server":true,"ret":"Ground entity","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the entity that the player is standing on ","fname":"getGroundEntity","realm":"sh","param":[],"name":"player_methods:getGroundEntity","description":"\nReturns the entity that the player is standing on"},"player_methods:getFrags":{"server":true,"ret":"Amount of kills","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the amount of kills of the player ","fname":"getFrags","realm":"sh","param":[],"name":"player_methods:getFrags","description":"\nReturns the amount of kills of the player"},"player_methods:isPlayer":{"server":true,"ret":"True if player is player","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a player ","fname":"isPlayer","realm":"sh","param":[],"name":"player_methods:isPlayer","description":"\nReturns whether the player is a player"},"player_methods:isAlive":{"server":true,"ret":"True if player alive","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is alive ","fname":"isAlive","realm":"sh","param":[],"name":"player_methods:isAlive","description":"\nReturns whether the player is alive"},"player_methods:isSpeaking":{"summary":"\nReturns whether the player is heard by the local player.","ret":"bool true/false","class":"function","client":true,"private":false,"classlib":"Player","fname":"isSpeaking","realm":"cl","param":[],"name":"player_methods:isSpeaking","description":"\nReturns whether the player is heard by the local player."},"player_methods:getFriendStatus":{"summary":"\nReturns the relationship of the player to the local client ","ret":"One of: \"friend\", \"blocked\", \"none\", \"requested\"","class":"function","private":false,"classlib":"Player","fname":"getFriendStatus","realm":"sh","param":[],"name":"player_methods:getFriendStatus","description":"\nReturns the relationship of the player to the local client"},"player_methods:getWeapons":{"server":true,"ret":"Table of weapons","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns a table of weapons the player is carrying ","fname":"getWeapons","realm":"sh","param":[],"name":"player_methods:getWeapons","description":"\nReturns a table of weapons the player is carrying"},"player_methods:inVehicle":{"server":true,"ret":"True if player in vehicle","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is in a vehicle ","fname":"inVehicle","realm":"sh","param":[],"name":"player_methods:inVehicle","description":"\nReturns whether the player is in a vehicle"},"player_methods:getViewEntity":{"server":true,"ret":"Player's current view entity","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current view entity ","fname":"getViewEntity","realm":"sh","param":[],"name":"player_methods:getViewEntity","description":"\nReturns the player's current view entity"},"player_methods:getAmmoCount":{"server":true,"ret":"The amount of ammo player has in reserve.","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nGets the amount of ammo the player has.","fname":"getAmmoCount","realm":"sh","param":{"1":"id","id":"The string or number id of the ammo"},"name":"player_methods:getAmmoCount","description":"\nGets the amount of ammo the player has."},"player_methods:getName":{"server":true,"ret":"Name","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's name ","fname":"getName","realm":"sh","param":[],"name":"player_methods:getName","description":"\nReturns the player's name"},"player_methods:getSteamID":{"server":true,"ret":"steam ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's steam ID ","fname":"getSteamID","realm":"sh","param":[],"name":"player_methods:getSteamID","description":"\nReturns the player's steam ID"},"player_methods:keyDown":{"server":true,"ret":"True or false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether or not the player is pushing the key.","fname":"keyDown","realm":"sh","param":{"1":"key","key":"Key to check. \nIN_KEY.ALT1 \nIN_KEY.ALT2 \nIN_KEY.ATTACK \nIN_KEY.ATTACK2 \nIN_KEY.BACK \nIN_KEY.DUCK \nIN_KEY.FORWARD \nIN_KEY.JUMP \nIN_KEY.LEFT \nIN_KEY.MOVELEFT \nIN_KEY.MOVERIGHT \nIN_KEY.RELOAD \nIN_KEY.RIGHT \nIN_KEY.SCORE \nIN_KEY.SPEED \nIN_KEY.USE \nIN_KEY.WALK \nIN_KEY.ZOOM \nIN_KEY.GRENADE1 \nIN_KEY.GRENADE2 \nIN_KEY.WEAPON1 \nIN_KEY.WEAPON2 \nIN_KEY.BULLRUSH \nIN_KEY.CANCEL \nIN_KEY.RUN"},"name":"player_methods:keyDown","description":"\nReturns whether or not the player is pushing the key."},"player_methods:isFrozen":{"server":true,"ret":"True if player is frozen","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is frozen ","fname":"isFrozen","realm":"sh","param":[],"name":"player_methods:isFrozen","description":"\nReturns whether the player is frozen"},"player_methods:isNPC":{"server":true,"ret":"True if player is an NPC","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is an NPC ","fname":"isNPC","realm":"sh","param":[],"name":"player_methods:isNPC","description":"\nReturns whether the player is an NPC"},"player_methods:isNoclipped":{"server":true,"ret":"true if the player is noclipped","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns true if the player is noclipped ","fname":"isNoclipped","realm":"sh","param":[],"name":"player_methods:isNoclipped","description":"\nReturns true if the player is noclipped"},"player_methods:isAdmin":{"server":true,"ret":"True if player is admin","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is an admin ","fname":"isAdmin","realm":"sh","param":[],"name":"player_methods:isAdmin","description":"\nReturns whether the player is an admin"},"player_methods:isCrouching":{"server":true,"ret":"True if player crouching","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is crouching ","fname":"isCrouching","realm":"sh","param":[],"name":"player_methods:isCrouching","description":"\nReturns whether the player is crouching"},"player_methods:isFlashlightOn":{"server":true,"ret":"True if player has flashlight on","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player's flashlight is on ","fname":"isFlashlightOn","realm":"sh","param":[],"name":"player_methods:isFlashlightOn","description":"\nReturns whether the player's flashlight is on"},"player_methods:setViewEntity":{"server":true,"class":"function","classlib":"Player","private":false,"summary":"\nSets the view entity of the player.","fname":"setViewEntity","realm":"sv","param":{"1":"ent","ent":"Entity to set the player's view entity to, or nothing to reset it"},"name":"player_methods:setViewEntity","description":"\nSets the view entity of the player. Only works if they are linked to a hud."}},"libraries":[],"type":"file","doc":[{"summary":"\n \nPlayer functions.","param":[],"description":"\n \nPlayer functions. \n"},{"methods":{"1":"getActiveWeapon","2":"getAimVector","3":"getAmmoCount","4":"getArmor","5":"getDeaths","6":"getEyeTrace","7":"getFOV","8":"getFrags","9":"getFriendStatus","10":"getGroundEntity","11":"getJumpPower","12":"getMaxSpeed","13":"getName","14":"getPing","15":"getRunSpeed","16":"getShootPos","17":"getSteamID","18":"getSteamID64","19":"getTeam","20":"getTeamName","21":"getUniqueID","22":"getUserID","23":"getVehicle","24":"getViewEntity","25":"getWeapon","26":"getWeapons","27":"hasGodMode","28":"inVehicle","29":"isAdmin","30":"isAlive","31":"isBot","32":"isConnected","33":"isCrouching","34":"isFlashlightOn","35":"isFrozen","36":"isMuted","37":"isNPC","38":"isNoclipped","39":"isPlayer","40":"isSpeaking","41":"isSprinting","42":"isSuperAdmin","43":"isTyping","44":"isUserGroup","45":"keyDown","46":"setViewEntity","47":"voiceVolume","getJumpPower":{"server":true,"ret":"Jump power","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's jump power ","fname":"getJumpPower","realm":"sh","param":[],"name":"player_methods:getJumpPower","description":"\nReturns the player's jump power"},"isFlashlightOn":{"server":true,"ret":"True if player has flashlight on","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player's flashlight is on ","fname":"isFlashlightOn","realm":"sh","param":[],"name":"player_methods:isFlashlightOn","description":"\nReturns whether the player's flashlight is on"},"isTyping":{"server":true,"ret":"bool true/false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is typing in their chat ","fname":"isTyping","realm":"sh","param":[],"name":"player_methods:isTyping","description":"\nReturns whether the player is typing in their chat"},"getTeam":{"server":true,"ret":"team","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current team ","fname":"getTeam","realm":"sh","param":[],"name":"player_methods:getTeam","description":"\nReturns the player's current team"},"getSteamID":{"server":true,"ret":"steam ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's steam ID ","fname":"getSteamID","realm":"sh","param":[],"name":"player_methods:getSteamID","description":"\nReturns the player's steam ID"},"isMuted":{"summary":"\nReturns whether the local player has muted the player ","ret":"True if the player was muted","class":"function","private":false,"classlib":"Player","fname":"isMuted","realm":"sh","param":[],"name":"player_methods:isMuted","description":"\nReturns whether the local player has muted the player"},"isCrouching":{"server":true,"ret":"True if player crouching","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is crouching ","fname":"isCrouching","realm":"sh","param":[],"name":"player_methods:isCrouching","description":"\nReturns whether the player is crouching"},"getWeapons":{"server":true,"ret":"Table of weapons","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns a table of weapons the player is carrying ","fname":"getWeapons","realm":"sh","param":[],"name":"player_methods:getWeapons","description":"\nReturns a table of weapons the player is carrying"},"getAmmoCount":{"server":true,"ret":"The amount of ammo player has in reserve.","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nGets the amount of ammo the player has.","fname":"getAmmoCount","realm":"sh","param":{"1":"id","id":"The string or number id of the ammo"},"name":"player_methods:getAmmoCount","description":"\nGets the amount of ammo the player has."},"getWeapon":{"server":true,"ret":"weapon","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the specified weapon or nil if the player doesn't have it ","fname":"getWeapon","realm":"sh","param":{"1":"wep","wep":"String weapon class"},"name":"player_methods:getWeapon","description":"\nReturns the specified weapon or nil if the player doesn't have it"},"isAdmin":{"server":true,"ret":"True if player is admin","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is an admin ","fname":"isAdmin","realm":"sh","param":[],"name":"player_methods:isAdmin","description":"\nReturns whether the player is an admin"},"getName":{"server":true,"ret":"Name","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's name ","fname":"getName","realm":"sh","param":[],"name":"player_methods:getName","description":"\nReturns the player's name"},"hasGodMode":{"server":true,"ret":"True if the player has godmode","class":"function","classlib":"Player","private":false,"summary":"\nReturns whether or not the player has godmode ","fname":"hasGodMode","realm":"sv","param":[],"name":"player_methods:hasGodMode","description":"\nReturns whether or not the player has godmode"},"isSuperAdmin":{"server":true,"ret":"True if player is super admin","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a super admin ","fname":"isSuperAdmin","realm":"sh","param":[],"name":"player_methods:isSuperAdmin","description":"\nReturns whether the player is a super admin"},"getSteamID64":{"server":true,"ret":"community ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's community ID ","fname":"getSteamID64","realm":"sh","param":[],"name":"player_methods:getSteamID64","description":"\nReturns the player's community ID"},"getRunSpeed":{"server":true,"ret":"Running speed","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's running speed ","fname":"getRunSpeed","realm":"sh","param":[],"name":"player_methods:getRunSpeed","description":"\nReturns the player's running speed"},"isUserGroup":{"server":true,"ret":"True if player belongs to group","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player belongs to a usergroup ","fname":"isUserGroup","realm":"sh","param":{"1":"group","group":"Group to check against"},"name":"player_methods:isUserGroup","description":"\nReturns whether the player belongs to a usergroup"},"voiceVolume":{"summary":"\nReturns the voice volume of the player ","ret":"Returns the players voice volume, how loud the player's voice communication currently is, as a normal number. Doesn't work on local player unless the voice_loopback convar is set to 1.","class":"function","client":true,"private":false,"classlib":"Player","fname":"voiceVolume","realm":"cl","param":[],"name":"player_methods:voiceVolume","description":"\nReturns the voice volume of the player"},"isSpeaking":{"summary":"\nReturns whether the player is heard by the local player.","ret":"bool true/false","class":"function","client":true,"private":false,"classlib":"Player","fname":"isSpeaking","realm":"cl","param":[],"name":"player_methods:isSpeaking","description":"\nReturns whether the player is heard by the local player."},"setViewEntity":{"server":true,"class":"function","classlib":"Player","private":false,"summary":"\nSets the view entity of the player.","fname":"setViewEntity","realm":"sv","param":{"1":"ent","ent":"Entity to set the player's view entity to, or nothing to reset it"},"name":"player_methods:setViewEntity","description":"\nSets the view entity of the player. Only works if they are linked to a hud."},"keyDown":{"server":true,"ret":"True or false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether or not the player is pushing the key.","fname":"keyDown","realm":"sh","param":{"1":"key","key":"Key to check. \nIN_KEY.ALT1 \nIN_KEY.ALT2 \nIN_KEY.ATTACK \nIN_KEY.ATTACK2 \nIN_KEY.BACK \nIN_KEY.DUCK \nIN_KEY.FORWARD \nIN_KEY.JUMP \nIN_KEY.LEFT \nIN_KEY.MOVELEFT \nIN_KEY.MOVERIGHT \nIN_KEY.RELOAD \nIN_KEY.RIGHT \nIN_KEY.SCORE \nIN_KEY.SPEED \nIN_KEY.USE \nIN_KEY.WALK \nIN_KEY.ZOOM \nIN_KEY.GRENADE1 \nIN_KEY.GRENADE2 \nIN_KEY.WEAPON1 \nIN_KEY.WEAPON2 \nIN_KEY.BULLRUSH \nIN_KEY.CANCEL \nIN_KEY.RUN"},"name":"player_methods:keyDown","description":"\nReturns whether or not the player is pushing the key."},"getFriendStatus":{"summary":"\nReturns the relationship of the player to the local client ","ret":"One of: \"friend\", \"blocked\", \"none\", \"requested\"","class":"function","private":false,"classlib":"Player","fname":"getFriendStatus","realm":"sh","param":[],"name":"player_methods:getFriendStatus","description":"\nReturns the relationship of the player to the local client"},"getTeamName":{"server":true,"ret":"team name","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the name of the player's current team ","fname":"getTeamName","realm":"sh","param":[],"name":"player_methods:getTeamName","description":"\nReturns the name of the player's current team"},"isSprinting":{"server":true,"ret":"bool true/false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is sprinting ","fname":"isSprinting","realm":"sh","param":[],"name":"player_methods:isSprinting","description":"\nReturns whether the player is sprinting"},"inVehicle":{"server":true,"ret":"True if player in vehicle","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is in a vehicle ","fname":"inVehicle","realm":"sh","param":[],"name":"player_methods:inVehicle","description":"\nReturns whether the player is in a vehicle"},"getViewEntity":{"server":true,"ret":"Player's current view entity","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current view entity ","fname":"getViewEntity","realm":"sh","param":[],"name":"player_methods:getViewEntity","description":"\nReturns the player's current view entity"},"isAlive":{"server":true,"ret":"True if player alive","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is alive ","fname":"isAlive","realm":"sh","param":[],"name":"player_methods:isAlive","description":"\nReturns whether the player is alive"},"isNPC":{"server":true,"ret":"True if player is an NPC","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is an NPC ","fname":"isNPC","realm":"sh","param":[],"name":"player_methods:isNPC","description":"\nReturns whether the player is an NPC"},"getGroundEntity":{"server":true,"ret":"Ground entity","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the entity that the player is standing on ","fname":"getGroundEntity","realm":"sh","param":[],"name":"player_methods:getGroundEntity","description":"\nReturns the entity that the player is standing on"},"getEyeTrace":{"server":true,"ret":"table trace data https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns a table with information of what the player is looking at ","fname":"getEyeTrace","realm":"sh","param":[],"name":"player_methods:getEyeTrace","description":"\nReturns a table with information of what the player is looking at"},"isBot":{"server":true,"ret":"True if player is a bot","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a bot ","fname":"isBot","realm":"sh","param":[],"name":"player_methods:isBot","description":"\nReturns whether the player is a bot"},"getAimVector":{"server":true,"ret":"Aim vector","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's aim vector ","fname":"getAimVector","realm":"sh","param":[],"name":"player_methods:getAimVector","description":"\nReturns the player's aim vector"},"isFrozen":{"server":true,"ret":"True if player is frozen","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is frozen ","fname":"isFrozen","realm":"sh","param":[],"name":"player_methods:isFrozen","description":"\nReturns whether the player is frozen"},"getShootPos":{"server":true,"ret":"Shoot position","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's shoot position ","fname":"getShootPos","realm":"sh","param":[],"name":"player_methods:getShootPos","description":"\nReturns the player's shoot position"},"getUserID":{"server":true,"ret":"user ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's user ID ","fname":"getUserID","realm":"sh","param":[],"name":"player_methods:getUserID","description":"\nReturns the player's user ID"},"getVehicle":{"server":true,"ret":"Vehicle if player in vehicle or nil","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the vehicle the player is driving ","fname":"getVehicle","realm":"sh","param":[],"name":"player_methods:getVehicle","description":"\nReturns the vehicle the player is driving"},"getFrags":{"server":true,"ret":"Amount of kills","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the amount of kills of the player ","fname":"getFrags","realm":"sh","param":[],"name":"player_methods:getFrags","description":"\nReturns the amount of kills of the player"},"isNoclipped":{"server":true,"ret":"true if the player is noclipped","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns true if the player is noclipped ","fname":"isNoclipped","realm":"sh","param":[],"name":"player_methods:isNoclipped","description":"\nReturns true if the player is noclipped"},"getMaxSpeed":{"server":true,"ret":"Maximum speed","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's maximum speed ","fname":"getMaxSpeed","realm":"sh","param":[],"name":"player_methods:getMaxSpeed","description":"\nReturns the player's maximum speed"},"getArmor":{"server":true,"ret":"Armor","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the players armor ","fname":"getArmor","realm":"sh","param":[],"name":"player_methods:getArmor","description":"\nReturns the players armor"},"getFOV":{"server":true,"ret":"Field of view","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's field of view ","fname":"getFOV","realm":"sh","param":[],"name":"player_methods:getFOV","description":"\nReturns the player's field of view"},"isConnected":{"server":true,"ret":"True if player is connected","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is connected ","fname":"isConnected","realm":"sh","param":[],"name":"player_methods:isConnected","description":"\nReturns whether the player is connected"},"isPlayer":{"server":true,"ret":"True if player is player","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a player ","fname":"isPlayer","realm":"sh","param":[],"name":"player_methods:isPlayer","description":"\nReturns whether the player is a player"},"getPing":{"server":true,"ret":"ping","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current ping ","fname":"getPing","realm":"sh","param":[],"name":"player_methods:getPing","description":"\nReturns the player's current ping"},"getDeaths":{"server":true,"ret":"Amount of deaths","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the amount of deaths of the player ","fname":"getDeaths","realm":"sh","param":[],"name":"player_methods:getDeaths","description":"\nReturns the amount of deaths of the player"},"getActiveWeapon":{"server":true,"ret":"The weapon","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the name of the player's active weapon ","fname":"getActiveWeapon","realm":"sh","param":[],"name":"player_methods:getActiveWeapon","description":"\nReturns the name of the player's active weapon"},"getUniqueID":{"server":true,"ret":"unique ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's unique ID ","fname":"getUniqueID","realm":"sh","param":[],"name":"player_methods:getUniqueID","description":"\nReturns the player's unique ID"}},"class":"class","fields":[],"summary":"\nPlayer type ","typtbl":"player_methods","name":"Player","description":"\nPlayer type"},{"summary":"\nENUMs of in_keys for use with player:keyDown: \nALT1, \nALT2, \nATTACK, \nATTACK2, \nBACK, \nDUCK, \nFORWARD, \nJUMP, \nLEFT, \nMOVELEFT, \nMOVERIGHT, \nRELOAD, \nRIGHT, \nSCORE, \nSPEED, \nUSE, \nWALK, \nZOOM, \nGRENADE1, \nGRENADE2, \nWEAPON1, \nWEAPON2, \nBULLRUSH, \nCANCEL, \nRUN ","classForced":true,"class":"table","param":[],"name":"SF.DefaultEnvironment.IN_KEY","description":"\nENUMs of in_keys for use with player:keyDown: \nALT1, \nALT2, \nATTACK, \nATTACK2, \nBACK, \nDUCK, \nFORWARD, \nJUMP, \nLEFT, \nMOVELEFT, \nMOVERIGHT, \nRELOAD, \nRIGHT, \nSCORE, \nSPEED, \nUSE, \nWALK, \nZOOM, \nGRENADE1, \nGRENADE2, \nWEAPON1, \nWEAPON2, \nBULLRUSH, \nCANCEL, \nRUN"},{"server":true,"class":"function","client":true,"private":false,"summary":"\nTo string ","realm":"sh","param":[],"name":"player_metamethods:__tostring","description":"\nTo string"},{"server":true,"ret":"True if player alive","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is alive ","fname":"isAlive","realm":"sh","param":[],"name":"player_methods:isAlive","description":"\nReturns whether the player is alive"},{"server":true,"ret":"Armor","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the players armor ","fname":"getArmor","realm":"sh","param":[],"name":"player_methods:getArmor","description":"\nReturns the players armor"},{"server":true,"ret":"True if player crouching","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is crouching ","fname":"isCrouching","realm":"sh","param":[],"name":"player_methods:isCrouching","description":"\nReturns whether the player is crouching"},{"server":true,"ret":"Amount of deaths","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the amount of deaths of the player ","fname":"getDeaths","realm":"sh","param":[],"name":"player_methods:getDeaths","description":"\nReturns the amount of deaths of the player"},{"server":true,"ret":"True if player has flashlight on","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player's flashlight is on ","fname":"isFlashlightOn","realm":"sh","param":[],"name":"player_methods:isFlashlightOn","description":"\nReturns whether the player's flashlight is on"},{"server":true,"ret":"true if the player is noclipped","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns true if the player is noclipped ","fname":"isNoclipped","realm":"sh","param":[],"name":"player_methods:isNoclipped","description":"\nReturns true if the player is noclipped"},{"server":true,"ret":"Amount of kills","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the amount of kills of the player ","fname":"getFrags","realm":"sh","param":[],"name":"player_methods:getFrags","description":"\nReturns the amount of kills of the player"},{"server":true,"ret":"The weapon","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the name of the player's active weapon ","fname":"getActiveWeapon","realm":"sh","param":[],"name":"player_methods:getActiveWeapon","description":"\nReturns the name of the player's active weapon"},{"server":true,"ret":"Aim vector","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's aim vector ","fname":"getAimVector","realm":"sh","param":[],"name":"player_methods:getAimVector","description":"\nReturns the player's aim vector"},{"server":true,"ret":"Field of view","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's field of view ","fname":"getFOV","realm":"sh","param":[],"name":"player_methods:getFOV","description":"\nReturns the player's field of view"},{"server":true,"ret":"Jump power","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's jump power ","fname":"getJumpPower","realm":"sh","param":[],"name":"player_methods:getJumpPower","description":"\nReturns the player's jump power"},{"server":true,"ret":"Maximum speed","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's maximum speed ","fname":"getMaxSpeed","realm":"sh","param":[],"name":"player_methods:getMaxSpeed","description":"\nReturns the player's maximum speed"},{"server":true,"ret":"Name","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's name ","fname":"getName","realm":"sh","param":[],"name":"player_methods:getName","description":"\nReturns the player's name"},{"server":true,"ret":"Running speed","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's running speed ","fname":"getRunSpeed","realm":"sh","param":[],"name":"player_methods:getRunSpeed","description":"\nReturns the player's running speed"},{"server":true,"ret":"Shoot position","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's shoot position ","fname":"getShootPos","realm":"sh","param":[],"name":"player_methods:getShootPos","description":"\nReturns the player's shoot position"},{"server":true,"ret":"True if player in vehicle","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is in a vehicle ","fname":"inVehicle","realm":"sh","param":[],"name":"player_methods:inVehicle","description":"\nReturns whether the player is in a vehicle"},{"server":true,"ret":"Vehicle if player in vehicle or nil","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the vehicle the player is driving ","fname":"getVehicle","realm":"sh","param":[],"name":"player_methods:getVehicle","description":"\nReturns the vehicle the player is driving"},{"server":true,"ret":"True if player is admin","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is an admin ","fname":"isAdmin","realm":"sh","param":[],"name":"player_methods:isAdmin","description":"\nReturns whether the player is an admin"},{"server":true,"ret":"True if player is a bot","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a bot ","fname":"isBot","realm":"sh","param":[],"name":"player_methods:isBot","description":"\nReturns whether the player is a bot"},{"server":true,"ret":"True if player is connected","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is connected ","fname":"isConnected","realm":"sh","param":[],"name":"player_methods:isConnected","description":"\nReturns whether the player is connected"},{"server":true,"ret":"True if player is frozen","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is frozen ","fname":"isFrozen","realm":"sh","param":[],"name":"player_methods:isFrozen","description":"\nReturns whether the player is frozen"},{"server":true,"ret":"True if player is an NPC","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is an NPC ","fname":"isNPC","realm":"sh","param":[],"name":"player_methods:isNPC","description":"\nReturns whether the player is an NPC"},{"server":true,"ret":"True if player is player","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a player ","fname":"isPlayer","realm":"sh","param":[],"name":"player_methods:isPlayer","description":"\nReturns whether the player is a player"},{"server":true,"ret":"True if player is super admin","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is a super admin ","fname":"isSuperAdmin","realm":"sh","param":[],"name":"player_methods:isSuperAdmin","description":"\nReturns whether the player is a super admin"},{"server":true,"ret":"True if player belongs to group","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player belongs to a usergroup ","fname":"isUserGroup","realm":"sh","param":{"1":"group","group":"Group to check against"},"name":"player_methods:isUserGroup","description":"\nReturns whether the player belongs to a usergroup"},{"server":true,"ret":"ping","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current ping ","fname":"getPing","realm":"sh","param":[],"name":"player_methods:getPing","description":"\nReturns the player's current ping"},{"server":true,"ret":"steam ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's steam ID ","fname":"getSteamID","realm":"sh","param":[],"name":"player_methods:getSteamID","description":"\nReturns the player's steam ID"},{"server":true,"ret":"community ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's community ID ","fname":"getSteamID64","realm":"sh","param":[],"name":"player_methods:getSteamID64","description":"\nReturns the player's community ID"},{"server":true,"ret":"team","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current team ","fname":"getTeam","realm":"sh","param":[],"name":"player_methods:getTeam","description":"\nReturns the player's current team"},{"server":true,"ret":"team name","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the name of the player's current team ","fname":"getTeamName","realm":"sh","param":[],"name":"player_methods:getTeamName","description":"\nReturns the name of the player's current team"},{"server":true,"ret":"unique ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's unique ID ","fname":"getUniqueID","realm":"sh","param":[],"name":"player_methods:getUniqueID","description":"\nReturns the player's unique ID"},{"server":true,"ret":"user ID","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's user ID ","fname":"getUserID","realm":"sh","param":[],"name":"player_methods:getUserID","description":"\nReturns the player's user ID"},{"server":true,"ret":"table trace data https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns a table with information of what the player is looking at ","fname":"getEyeTrace","realm":"sh","param":[],"name":"player_methods:getEyeTrace","description":"\nReturns a table with information of what the player is looking at"},{"server":true,"ret":"Player's current view entity","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the player's current view entity ","fname":"getViewEntity","realm":"sh","param":[],"name":"player_methods:getViewEntity","description":"\nReturns the player's current view entity"},{"server":true,"ret":"Table of weapons","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns a table of weapons the player is carrying ","fname":"getWeapons","realm":"sh","param":[],"name":"player_methods:getWeapons","description":"\nReturns a table of weapons the player is carrying"},{"server":true,"ret":"weapon","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the specified weapon or nil if the player doesn't have it ","fname":"getWeapon","realm":"sh","param":{"1":"wep","wep":"String weapon class"},"name":"player_methods:getWeapon","description":"\nReturns the specified weapon or nil if the player doesn't have it"},{"server":true,"ret":"Ground entity","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns the entity that the player is standing on ","fname":"getGroundEntity","realm":"sh","param":[],"name":"player_methods:getGroundEntity","description":"\nReturns the entity that the player is standing on"},{"server":true,"ret":"The amount of ammo player has in reserve.","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nGets the amount of ammo the player has.","fname":"getAmmoCount","realm":"sh","param":{"1":"id","id":"The string or number id of the ammo"},"name":"player_methods:getAmmoCount","description":"\nGets the amount of ammo the player has."},{"server":true,"ret":"bool true/false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is typing in their chat ","fname":"isTyping","realm":"sh","param":[],"name":"player_methods:isTyping","description":"\nReturns whether the player is typing in their chat"},{"server":true,"ret":"bool true/false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether the player is sprinting ","fname":"isSprinting","realm":"sh","param":[],"name":"player_methods:isSprinting","description":"\nReturns whether the player is sprinting"},{"server":true,"class":"function","classlib":"Player","private":false,"summary":"\nSets the view entity of the player.","fname":"setViewEntity","realm":"sv","param":{"1":"ent","ent":"Entity to set the player's view entity to, or nothing to reset it"},"name":"player_methods:setViewEntity","description":"\nSets the view entity of the player. Only works if they are linked to a hud."},{"server":true,"ret":"True if the player has godmode","class":"function","classlib":"Player","private":false,"summary":"\nReturns whether or not the player has godmode ","fname":"hasGodMode","realm":"sv","param":[],"name":"player_methods:hasGodMode","description":"\nReturns whether or not the player has godmode"},{"server":true,"ret":"True or false","class":"function","client":true,"classlib":"Player","private":false,"summary":"\nReturns whether or not the player is pushing the key.","fname":"keyDown","realm":"sh","param":{"1":"key","key":"Key to check. \nIN_KEY.ALT1 \nIN_KEY.ALT2 \nIN_KEY.ATTACK \nIN_KEY.ATTACK2 \nIN_KEY.BACK \nIN_KEY.DUCK \nIN_KEY.FORWARD \nIN_KEY.JUMP \nIN_KEY.LEFT \nIN_KEY.MOVELEFT \nIN_KEY.MOVERIGHT \nIN_KEY.RELOAD \nIN_KEY.RIGHT \nIN_KEY.SCORE \nIN_KEY.SPEED \nIN_KEY.USE \nIN_KEY.WALK \nIN_KEY.ZOOM \nIN_KEY.GRENADE1 \nIN_KEY.GRENADE2 \nIN_KEY.WEAPON1 \nIN_KEY.WEAPON2 \nIN_KEY.BULLRUSH \nIN_KEY.CANCEL \nIN_KEY.RUN"},"name":"player_methods:keyDown","description":"\nReturns whether or not the player is pushing the key."},{"summary":"\nReturns the relationship of the player to the local client ","ret":"One of: \"friend\", \"blocked\", \"none\", \"requested\"","class":"function","private":false,"classlib":"Player","fname":"getFriendStatus","realm":"sh","param":[],"name":"player_methods:getFriendStatus","description":"\nReturns the relationship of the player to the local client"},{"summary":"\nReturns whether the local player has muted the player ","ret":"True if the player was muted","class":"function","private":false,"classlib":"Player","fname":"isMuted","realm":"sh","param":[],"name":"player_methods:isMuted","description":"\nReturns whether the local player has muted the player"},{"summary":"\nReturns whether the player is heard by the local player.","ret":"bool true/false","class":"function","client":true,"private":false,"classlib":"Player","fname":"isSpeaking","realm":"cl","param":[],"name":"player_methods:isSpeaking","description":"\nReturns whether the player is heard by the local player."},{"summary":"\nReturns the voice volume of the player ","ret":"Returns the players voice volume, how loud the player's voice communication currently is, as a normal number. Doesn't work on local player unless the voice_loopback convar is set to 1.","class":"function","client":true,"private":false,"classlib":"Player","fname":"voiceVolume","realm":"cl","param":[],"name":"player_methods:voiceVolume","description":"\nReturns the voice volume of the player"}],"name":"libs_sh/players.lua","description":"\n \nPlayer functions. \n"},"editor/sfframe.lua":{"summary":"\n ","tables":[],"functions":[],"libraries":[],"type":"file","doc":[{"summary":"\n ","param":[],"description":"\n"},{"summary":"\nClient Permissions panel ","param":[],"description":"\nClient Permissions panel"},{"summary":"\nServer Permissions panel ","param":[],"description":"\nServer Permissions panel"},{"summary":"\nThemes panel ","param":[],"description":"\nThemes panel"},{"summary":"\nTab settings ","param":[],"description":"\nTab settings"}],"name":"editor/sfframe.lua","description":"\n"},"editor/docs.lua":{"tables":[],"libraries":[],"type":"file","doc":[],"name":"editor/docs.lua","functions":[]},"editor/tabhandlers/tab_wire.lua":{"summary":"\n \nFonts \n ","tables":[],"functions":[],"libraries":[],"type":"file","doc":[{"summary":"\n \nFonts \n ","param":[],"description":"\n \nFonts \n"},{"summary":"\n \nColors \n ","param":[],"description":"\n \nColors \n"},{"summary":"\n ","param":[],"description":"\n"},{"summary":"\n- FONTS ","param":[],"description":"\n- FONTS"}],"name":"editor/tabhandlers/tab_wire.lua","description":"\n \nFonts \n"},"libs_sh/vectors.lua":{"summary":"\nVector type ","tables":[],"functions":{"1":"vec_metamethods.__add","2":"vec_metamethods.__div","3":"vec_metamethods.__eq","4":"vec_metamethods.__index","5":"vec_metamethods.__mul","6":"vec_metamethods.__newindex","7":"vec_metamethods.__sub","8":"vec_metamethods.__tostring","9":"vec_metamethods.__unm","10":"vec_methods:add","11":"vec_methods:clone","12":"vec_methods:cross","13":"vec_methods:div","14":"vec_methods:dot","15":"vec_methods:getAngle","16":"vec_methods:getAngleEx","17":"vec_methods:getDistance","18":"vec_methods:getDistanceSqr","19":"vec_methods:getLength","20":"vec_methods:getLength2D","21":"vec_methods:getLength2DSqr","22":"vec_methods:getLengthSqr","23":"vec_methods:getNormalized","24":"vec_methods:getRotated","25":"vec_methods:isEqualTol","26":"vec_methods:isInWorld","27":"vec_methods:isZero","28":"vec_methods:mul","29":"vec_methods:normalize","30":"vec_methods:rotate","31":"vec_methods:rotateAroundAxis","32":"vec_methods:set","33":"vec_methods:setX","34":"vec_methods:setY","35":"vec_methods:setZ","36":"vec_methods:setZero","37":"vec_methods:sub","38":"vec_methods:toScreen","39":"vec_methods:vdiv","40":"vec_methods:vmul","41":"vec_methods:withinAABox","vec_metamethods.__unm":{"summary":"\nunary minus metamethod ","ret":"negated vector.","class":"function","private":false,"realm":"sh","param":["a"],"name":"vec_metamethods.__unm","description":"\nunary minus metamethod"},"vec_methods:sub":{"summary":"\nSubtract v from this Vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"sub","realm":"sh","param":{"1":"v","v":"Second Vector."},"name":"vec_methods:sub","description":"\nSubtract v from this Vector. Self-Modifies."},"vec_methods:set":{"summary":"\nCopies the values from the second vector to the first vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"set","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:set","description":"\nCopies the values from the second vector to the first vector. Self-Modifies."},"vec_metamethods.__eq":{"summary":"\nequivalence metamethod ","ret":"bool if both sides are equal.","class":"function","private":false,"realm":"sh","param":["a","b"],"name":"vec_metamethods.__eq","description":"\nequivalence metamethod"},"vec_methods:add":{"summary":"\nAdd vector - Modifies self.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"add","realm":"sh","param":{"1":"v","v":"Vector to add"},"name":"vec_methods:add","description":"\nAdd vector - Modifies self."},"vec_methods:isEqualTol":{"summary":"\nIs this vector and v equal within tolerance t.","ret":"bool True/False.","class":"function","private":false,"classlib":"Vector","fname":"isEqualTol","realm":"sh","param":{"1":"v","2":"t","t":"Tolerance number.","v":"Second Vector"},"name":"vec_methods:isEqualTol","description":"\nIs this vector and v equal within tolerance t."},"vec_methods:getDistanceSqr":{"summary":"\nReturns the squared distance of 2 vectors, this is faster Vector:getDistance as calculating the square root is an expensive process.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"getDistanceSqr","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getDistanceSqr","description":"\nReturns the squared distance of 2 vectors, this is faster Vector:getDistance as calculating the square root is an expensive process."},"vec_methods:getLength":{"summary":"\nGet the vector's Length.","ret":"number Length.","class":"function","private":false,"classlib":"Vector","fname":"getLength","realm":"sh","param":[],"name":"vec_methods:getLength","description":"\nGet the vector's Length."},"vec_metamethods.__sub":{"summary":"\nsub metamethod ","ret":"Resultant vector after subtraction operation.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"v","v":"Vector to subtract"},"name":"vec_metamethods.__sub","description":"\nsub metamethod"},"vec_methods:getAngleEx":{"summary":"\nReturns the vector's euler angle with respect to the other vector as if it were the new vertical axis.","ret":"Angle","class":"function","private":false,"classlib":"Vector","fname":"getAngleEx","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getAngleEx","description":"\nReturns the vector's euler angle with respect to the other vector as if it were the new vertical axis."},"vec_methods:clone":{"summary":"\nCopies x,y,z from a vector and returns a new vector ","ret":"The copy of the vector","class":"function","private":false,"classlib":"Vector","fname":"clone","realm":"sh","param":[],"name":"vec_methods:clone","description":"\nCopies x,y,z from a vector and returns a new vector"},"vec_methods:div":{"summary":"\n\"Scalar Division\" of the vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"div","realm":"sh","param":{"1":"n","n":"Scalar to divide by."},"name":"vec_methods:div","description":"\n\"Scalar Division\" of the vector. Self-Modifies."},"vec_methods:rotateAroundAxis":{"summary":"\nReturn rotated vector by an axis ","ret":"Rotated vector","class":"function","private":false,"classlib":"Vector","fname":"rotateAroundAxis","realm":"sh","param":{"1":"axis","2":"degrees","3":"radians","axis":"Axis the rotate around","degrees":"Angle to rotate by in degrees or nil if radians.","radians":"Angle to rotate by in radians or nil if degrees."},"name":"vec_methods:rotateAroundAxis","description":"\nReturn rotated vector by an axis"},"vec_methods:withinAABox":{"summary":"\nReturns whenever the given vector is in a box created by the 2 other vectors.","ret":"bool True/False.","class":"function","private":false,"classlib":"Vector","fname":"withinAABox","realm":"sh","param":{"1":"v1","2":"v2","v2":"Second Vector to define AABox","v1":"Vector used to define AABox"},"name":"vec_methods:withinAABox","description":"\nReturns whenever the given vector is in a box created by the 2 other vectors."},"vec_methods:setZ":{"summary":"\nSet's the vector's z coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setZ","realm":"sh","param":{"1":"z","z":"The z coordinate"},"name":"vec_methods:setZ","description":"\nSet's the vector's z coordinate and returns it."},"vec_methods:getDistance":{"summary":"\nReturns the pythagorean distance between the vector and the other vector.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"getDistance","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getDistance","description":"\nReturns the pythagorean distance between the vector and the other vector."},"vec_metamethods.__add":{"summary":"\nadd metamethod ","ret":"Resultant vector after addition operation.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"v","v":"Vector to add"},"name":"vec_metamethods.__add","description":"\nadd metamethod"},"vec_metamethods.__index":{"private":false,"param":["t","k"],"realm":"sh","summary":"\n__index metamethod ","class":"function","name":"vec_metamethods.__index","description":"\n__index metamethod"},"vec_methods:getAngle":{"summary":"\nGet the vector's angle.","ret":"Angle","class":"function","private":false,"classlib":"Vector","fname":"getAngle","realm":"sh","param":[],"name":"vec_methods:getAngle","description":"\nGet the vector's angle."},"vec_methods:isZero":{"summary":"\nAre all fields zero.","ret":"bool True/False","class":"function","private":false,"classlib":"Vector","fname":"isZero","realm":"sh","param":[],"name":"vec_methods:isZero","description":"\nAre all fields zero."},"vec_methods:isInWorld":{"server":true,"ret":"bool True/False.","class":"function","classlib":"Vector","private":false,"summary":"\nReturns whether the vector is in world ","fname":"isInWorld","realm":"sv","param":[],"name":"vec_methods:isInWorld","description":"\nReturns whether the vector is in world"},"vec_methods:getNormalized":{"summary":"\nReturns a new vector with the same direction by length of 1.","ret":"Vector Normalised","class":"function","private":false,"classlib":"Vector","fname":"getNormalized","realm":"sh","param":[],"name":"vec_methods:getNormalized","description":"\nReturns a new vector with the same direction by length of 1."},"vec_metamethods.__tostring":{"summary":"\ntostring metamethod ","ret":"string representing the vector.","class":"function","private":false,"realm":"sh","param":["a"],"name":"vec_metamethods.__tostring","description":"\ntostring metamethod"},"vec_methods:toScreen":{"summary":"\nTranslates the vectors position into 2D user screen coordinates.","ret":"A table {x=screenx,y=screeny,visible=visible}","class":"function","private":false,"classlib":"Vector","fname":"toScreen","realm":"sh","param":[],"name":"vec_methods:toScreen","description":"\nTranslates the vectors position into 2D user screen coordinates."},"vec_methods:setX":{"summary":"\nSet's the vector's x coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setX","realm":"sh","param":{"1":"x","x":"The x coordinate"},"name":"vec_methods:setX","description":"\nSet's the vector's x coordinate and returns it."},"vec_metamethods.__div":{"summary":"\ndivision metamethod ","ret":"Scaled vector.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","b":"Scalar or vector to divide the scalar or vector by"},"name":"vec_metamethods.__div","description":"\ndivision metamethod"},"vec_metamethods.__mul":{"summary":"\nmultiplication metamethod ","ret":"Scaled vector.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"lhs","4":"rhs","lhs":"Left side of equation","rhs":"Right side of equation"},"name":"vec_metamethods.__mul","description":"\nmultiplication metamethod"},"vec_methods:normalize":{"summary":"\nNormalise the vector, same direction, length 1.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"normalize","realm":"sh","param":[],"name":"vec_methods:normalize","description":"\nNormalise the vector, same direction, length 1. Self-Modifies."},"vec_methods:getRotated":{"summary":"\nReturns Rotated vector by Angle b ","ret":"Rotated Vector","class":"function","private":false,"classlib":"Vector","fname":"getRotated","realm":"sh","param":{"1":"b","b":"Angle to rotate by."},"name":"vec_methods:getRotated","description":"\nReturns Rotated vector by Angle b"},"vec_methods:getLength2D":{"summary":"\nReturns the length of the vector in two dimensions, without the Z axis.","ret":"number length","class":"function","private":false,"classlib":"Vector","fname":"getLength2D","realm":"sh","param":[],"name":"vec_methods:getLength2D","description":"\nReturns the length of the vector in two dimensions, without the Z axis."},"vec_metamethods.__newindex":{"private":false,"param":["t","k","v"],"realm":"sh","summary":"\n__newindex metamethod ","class":"function","name":"vec_metamethods.__newindex","description":"\n__newindex metamethod"},"vec_methods:vdiv":{"summary":"\nDivide self by a Vector.","class":"function","private":false,"param":{"1":"v","v":"Vector to divide by"},"fname":"vdiv","realm":"sh","name":"vec_methods:vdiv","classlib":"Vector","description":"\nDivide self by a Vector. Self-Modifies. ( convenience function )"},"vec_methods:mul":{"summary":"\nScalar Multiplication of the vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"mul","realm":"sh","param":{"1":"n","n":"Scalar to multiply with."},"name":"vec_methods:mul","description":"\nScalar Multiplication of the vector. Self-Modifies."},"vec_methods:setY":{"summary":"\nSet's the vector's y coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setY","realm":"sh","param":{"1":"y","y":"The y coordinate"},"name":"vec_methods:setY","description":"\nSet's the vector's y coordinate and returns it."},"vec_methods:vmul":{"summary":"\nMultiply self with a Vector.","class":"function","private":false,"param":{"1":"v","v":"Vector to multiply with"},"fname":"vmul","realm":"sh","name":"vec_methods:vmul","classlib":"Vector","description":"\nMultiply self with a Vector. Self-Modifies. ( convenience function )"},"vec_methods:getLengthSqr":{"summary":"\nGet the vector's length squared ( Saves computation by skipping the square root ).","ret":"number length squared.","class":"function","private":false,"classlib":"Vector","fname":"getLengthSqr","realm":"sh","param":[],"name":"vec_methods:getLengthSqr","description":"\nGet the vector's length squared ( Saves computation by skipping the square root )."},"vec_methods:setZero":{"summary":"\nSet's all vector fields to 0.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"setZero","realm":"sh","param":[],"name":"vec_methods:setZero","description":"\nSet's all vector fields to 0."},"vec_methods:getLength2DSqr":{"summary":"\nReturns the length squared of the vector in two dimensions, without the Z axis.","ret":"number length squared.","class":"function","private":false,"classlib":"Vector","fname":"getLength2DSqr","realm":"sh","param":[],"name":"vec_methods:getLength2DSqr","description":"\nReturns the length squared of the vector in two dimensions, without the Z axis. ( Saves computation by skipping the square root )"},"vec_methods:dot":{"summary":"\nDot product is the cosine of the angle between both vectors multiplied by their lengths.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"dot","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:dot","description":"\nDot product is the cosine of the angle between both vectors multiplied by their lengths. A.B = ||A||||B||cosA."},"vec_methods:cross":{"summary":"\nCalculates the cross product of the 2 vectors, creates a unique perpendicular vector to both input vectors.","ret":"Vector","class":"function","private":false,"classlib":"Vector","fname":"cross","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:cross","description":"\nCalculates the cross product of the 2 vectors, creates a unique perpendicular vector to both input vectors."},"vec_methods:rotate":{"summary":"\nRotate the vector by Angle b.","ret":"nil.","class":"function","private":false,"classlib":"Vector","fname":"rotate","realm":"sh","param":{"1":"b","b":"Angle to rotate by."},"name":"vec_methods:rotate","description":"\nRotate the vector by Angle b. Self-Modifies."}},"libraries":[],"type":"file","doc":[{"methods":{"1":"add","2":"clone","3":"cross","4":"div","5":"dot","6":"getAngle","7":"getAngleEx","8":"getDistance","9":"getDistanceSqr","10":"getLength","11":"getLength2D","12":"getLength2DSqr","13":"getLengthSqr","14":"getNormalized","15":"getRotated","16":"isEqualTol","17":"isInWorld","18":"isZero","19":"mul","20":"normalize","21":"rotate","22":"rotateAroundAxis","23":"set","24":"setX","25":"setY","26":"setZ","27":"setZero","28":"sub","29":"toScreen","30":"vdiv","31":"vmul","32":"withinAABox","getNormalized":{"summary":"\nReturns a new vector with the same direction by length of 1.","ret":"Vector Normalised","class":"function","private":false,"classlib":"Vector","fname":"getNormalized","realm":"sh","param":[],"name":"vec_methods:getNormalized","description":"\nReturns a new vector with the same direction by length of 1."},"div":{"summary":"\n\"Scalar Division\" of the vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"div","realm":"sh","param":{"1":"n","n":"Scalar to divide by."},"name":"vec_methods:div","description":"\n\"Scalar Division\" of the vector. Self-Modifies."},"withinAABox":{"summary":"\nReturns whenever the given vector is in a box created by the 2 other vectors.","ret":"bool True/False.","class":"function","private":false,"classlib":"Vector","fname":"withinAABox","realm":"sh","param":{"1":"v1","2":"v2","v2":"Second Vector to define AABox","v1":"Vector used to define AABox"},"name":"vec_methods:withinAABox","description":"\nReturns whenever the given vector is in a box created by the 2 other vectors."},"isEqualTol":{"summary":"\nIs this vector and v equal within tolerance t.","ret":"bool True/False.","class":"function","private":false,"classlib":"Vector","fname":"isEqualTol","realm":"sh","param":{"1":"v","2":"t","t":"Tolerance number.","v":"Second Vector"},"name":"vec_methods:isEqualTol","description":"\nIs this vector and v equal within tolerance t."},"setY":{"summary":"\nSet's the vector's y coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setY","realm":"sh","param":{"1":"y","y":"The y coordinate"},"name":"vec_methods:setY","description":"\nSet's the vector's y coordinate and returns it."},"getDistanceSqr":{"summary":"\nReturns the squared distance of 2 vectors, this is faster Vector:getDistance as calculating the square root is an expensive process.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"getDistanceSqr","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getDistanceSqr","description":"\nReturns the squared distance of 2 vectors, this is faster Vector:getDistance as calculating the square root is an expensive process."},"getLength2D":{"summary":"\nReturns the length of the vector in two dimensions, without the Z axis.","ret":"number length","class":"function","private":false,"classlib":"Vector","fname":"getLength2D","realm":"sh","param":[],"name":"vec_methods:getLength2D","description":"\nReturns the length of the vector in two dimensions, without the Z axis."},"toScreen":{"summary":"\nTranslates the vectors position into 2D user screen coordinates.","ret":"A table {x=screenx,y=screeny,visible=visible}","class":"function","private":false,"classlib":"Vector","fname":"toScreen","realm":"sh","param":[],"name":"vec_methods:toScreen","description":"\nTranslates the vectors position into 2D user screen coordinates."},"clone":{"summary":"\nCopies x,y,z from a vector and returns a new vector ","ret":"The copy of the vector","class":"function","private":false,"classlib":"Vector","fname":"clone","realm":"sh","param":[],"name":"vec_methods:clone","description":"\nCopies x,y,z from a vector and returns a new vector"},"set":{"summary":"\nCopies the values from the second vector to the first vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"set","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:set","description":"\nCopies the values from the second vector to the first vector. Self-Modifies."},"setZ":{"summary":"\nSet's the vector's z coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setZ","realm":"sh","param":{"1":"z","z":"The z coordinate"},"name":"vec_methods:setZ","description":"\nSet's the vector's z coordinate and returns it."},"sub":{"summary":"\nSubtract v from this Vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"sub","realm":"sh","param":{"1":"v","v":"Second Vector."},"name":"vec_methods:sub","description":"\nSubtract v from this Vector. Self-Modifies."},"rotateAroundAxis":{"summary":"\nReturn rotated vector by an axis ","ret":"Rotated vector","class":"function","private":false,"classlib":"Vector","fname":"rotateAroundAxis","realm":"sh","param":{"1":"axis","2":"degrees","3":"radians","axis":"Axis the rotate around","degrees":"Angle to rotate by in degrees or nil if radians.","radians":"Angle to rotate by in radians or nil if degrees."},"name":"vec_methods:rotateAroundAxis","description":"\nReturn rotated vector by an axis"},"add":{"summary":"\nAdd vector - Modifies self.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"add","realm":"sh","param":{"1":"v","v":"Vector to add"},"name":"vec_methods:add","description":"\nAdd vector - Modifies self."},"getRotated":{"summary":"\nReturns Rotated vector by Angle b ","ret":"Rotated Vector","class":"function","private":false,"classlib":"Vector","fname":"getRotated","realm":"sh","param":{"1":"b","b":"Angle to rotate by."},"name":"vec_methods:getRotated","description":"\nReturns Rotated vector by Angle b"},"mul":{"summary":"\nScalar Multiplication of the vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"mul","realm":"sh","param":{"1":"n","n":"Scalar to multiply with."},"name":"vec_methods:mul","description":"\nScalar Multiplication of the vector. Self-Modifies."},"dot":{"summary":"\nDot product is the cosine of the angle between both vectors multiplied by their lengths.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"dot","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:dot","description":"\nDot product is the cosine of the angle between both vectors multiplied by their lengths. A.B = ||A||||B||cosA."},"setX":{"summary":"\nSet's the vector's x coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setX","realm":"sh","param":{"1":"x","x":"The x coordinate"},"name":"vec_methods:setX","description":"\nSet's the vector's x coordinate and returns it."},"setZero":{"summary":"\nSet's all vector fields to 0.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"setZero","realm":"sh","param":[],"name":"vec_methods:setZero","description":"\nSet's all vector fields to 0."},"getLength":{"summary":"\nGet the vector's Length.","ret":"number Length.","class":"function","private":false,"classlib":"Vector","fname":"getLength","realm":"sh","param":[],"name":"vec_methods:getLength","description":"\nGet the vector's Length."},"getLengthSqr":{"summary":"\nGet the vector's length squared ( Saves computation by skipping the square root ).","ret":"number length squared.","class":"function","private":false,"classlib":"Vector","fname":"getLengthSqr","realm":"sh","param":[],"name":"vec_methods:getLengthSqr","description":"\nGet the vector's length squared ( Saves computation by skipping the square root )."},"getAngle":{"summary":"\nGet the vector's angle.","ret":"Angle","class":"function","private":false,"classlib":"Vector","fname":"getAngle","realm":"sh","param":[],"name":"vec_methods:getAngle","description":"\nGet the vector's angle."},"vmul":{"summary":"\nMultiply self with a Vector.","class":"function","private":false,"param":{"1":"v","v":"Vector to multiply with"},"fname":"vmul","realm":"sh","name":"vec_methods:vmul","classlib":"Vector","description":"\nMultiply self with a Vector. Self-Modifies. ( convenience function )"},"getLength2DSqr":{"summary":"\nReturns the length squared of the vector in two dimensions, without the Z axis.","ret":"number length squared.","class":"function","private":false,"classlib":"Vector","fname":"getLength2DSqr","realm":"sh","param":[],"name":"vec_methods:getLength2DSqr","description":"\nReturns the length squared of the vector in two dimensions, without the Z axis. ( Saves computation by skipping the square root )"},"vdiv":{"summary":"\nDivide self by a Vector.","class":"function","private":false,"param":{"1":"v","v":"Vector to divide by"},"fname":"vdiv","realm":"sh","name":"vec_methods:vdiv","classlib":"Vector","description":"\nDivide self by a Vector. Self-Modifies. ( convenience function )"},"cross":{"summary":"\nCalculates the cross product of the 2 vectors, creates a unique perpendicular vector to both input vectors.","ret":"Vector","class":"function","private":false,"classlib":"Vector","fname":"cross","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:cross","description":"\nCalculates the cross product of the 2 vectors, creates a unique perpendicular vector to both input vectors."},"isInWorld":{"server":true,"ret":"bool True/False.","class":"function","classlib":"Vector","private":false,"summary":"\nReturns whether the vector is in world ","fname":"isInWorld","realm":"sv","param":[],"name":"vec_methods:isInWorld","description":"\nReturns whether the vector is in world"},"isZero":{"summary":"\nAre all fields zero.","ret":"bool True/False","class":"function","private":false,"classlib":"Vector","fname":"isZero","realm":"sh","param":[],"name":"vec_methods:isZero","description":"\nAre all fields zero."},"rotate":{"summary":"\nRotate the vector by Angle b.","ret":"nil.","class":"function","private":false,"classlib":"Vector","fname":"rotate","realm":"sh","param":{"1":"b","b":"Angle to rotate by."},"name":"vec_methods:rotate","description":"\nRotate the vector by Angle b. Self-Modifies."},"getDistance":{"summary":"\nReturns the pythagorean distance between the vector and the other vector.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"getDistance","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getDistance","description":"\nReturns the pythagorean distance between the vector and the other vector."},"getAngleEx":{"summary":"\nReturns the vector's euler angle with respect to the other vector as if it were the new vertical axis.","ret":"Angle","class":"function","private":false,"classlib":"Vector","fname":"getAngleEx","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getAngleEx","description":"\nReturns the vector's euler angle with respect to the other vector as if it were the new vertical axis."},"normalize":{"summary":"\nNormalise the vector, same direction, length 1.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"normalize","realm":"sh","param":[],"name":"vec_methods:normalize","description":"\nNormalise the vector, same direction, length 1. Self-Modifies."}},"class":"class","client":true,"summary":"\nVector type ","fields":[],"server":true,"typtbl":"vec_methods","name":"Vector","description":"\nVector type"},{"private":false,"param":["t","k","v"],"realm":"sh","summary":"\n__newindex metamethod ","class":"function","name":"vec_metamethods.__newindex","description":"\n__newindex metamethod"},{"private":false,"param":["t","k"],"realm":"sh","summary":"\n__index metamethod ","class":"function","name":"vec_metamethods.__index","description":"\n__index metamethod"},{"summary":"\ntostring metamethod ","ret":"string representing the vector.","class":"function","private":false,"realm":"sh","param":["a"],"name":"vec_metamethods.__tostring","description":"\ntostring metamethod"},{"summary":"\nmultiplication metamethod ","ret":"Scaled vector.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"lhs","4":"rhs","lhs":"Left side of equation","rhs":"Right side of equation"},"name":"vec_metamethods.__mul","description":"\nmultiplication metamethod"},{"summary":"\ndivision metamethod ","ret":"Scaled vector.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","b":"Scalar or vector to divide the scalar or vector by"},"name":"vec_metamethods.__div","description":"\ndivision metamethod"},{"summary":"\nadd metamethod ","ret":"Resultant vector after addition operation.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"v","v":"Vector to add"},"name":"vec_metamethods.__add","description":"\nadd metamethod"},{"summary":"\nsub metamethod ","ret":"Resultant vector after subtraction operation.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"v","v":"Vector to subtract"},"name":"vec_metamethods.__sub","description":"\nsub metamethod"},{"summary":"\nunary minus metamethod ","ret":"negated vector.","class":"function","private":false,"realm":"sh","param":["a"],"name":"vec_metamethods.__unm","description":"\nunary minus metamethod"},{"summary":"\nequivalence metamethod ","ret":"bool if both sides are equal.","class":"function","private":false,"realm":"sh","param":["a","b"],"name":"vec_metamethods.__eq","description":"\nequivalence metamethod"},{"summary":"\nAdd vector - Modifies self.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"add","realm":"sh","param":{"1":"v","v":"Vector to add"},"name":"vec_methods:add","description":"\nAdd vector - Modifies self."},{"summary":"\nGet the vector's angle.","ret":"Angle","class":"function","private":false,"classlib":"Vector","fname":"getAngle","realm":"sh","param":[],"name":"vec_methods:getAngle","description":"\nGet the vector's angle."},{"summary":"\nReturns the vector's euler angle with respect to the other vector as if it were the new vertical axis.","ret":"Angle","class":"function","private":false,"classlib":"Vector","fname":"getAngleEx","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getAngleEx","description":"\nReturns the vector's euler angle with respect to the other vector as if it were the new vertical axis."},{"summary":"\nCalculates the cross product of the 2 vectors, creates a unique perpendicular vector to both input vectors.","ret":"Vector","class":"function","private":false,"classlib":"Vector","fname":"cross","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:cross","description":"\nCalculates the cross product of the 2 vectors, creates a unique perpendicular vector to both input vectors."},{"summary":"\nReturns the pythagorean distance between the vector and the other vector.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"getDistance","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getDistance","description":"\nReturns the pythagorean distance between the vector and the other vector."},{"summary":"\nReturns the squared distance of 2 vectors, this is faster Vector:getDistance as calculating the square root is an expensive process.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"getDistanceSqr","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:getDistanceSqr","description":"\nReturns the squared distance of 2 vectors, this is faster Vector:getDistance as calculating the square root is an expensive process."},{"summary":"\nDot product is the cosine of the angle between both vectors multiplied by their lengths.","ret":"Number","class":"function","private":false,"classlib":"Vector","fname":"dot","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:dot","description":"\nDot product is the cosine of the angle between both vectors multiplied by their lengths. A.B = ||A||||B||cosA."},{"summary":"\nReturns a new vector with the same direction by length of 1.","ret":"Vector Normalised","class":"function","private":false,"classlib":"Vector","fname":"getNormalized","realm":"sh","param":[],"name":"vec_methods:getNormalized","description":"\nReturns a new vector with the same direction by length of 1."},{"summary":"\nIs this vector and v equal within tolerance t.","ret":"bool True/False.","class":"function","private":false,"classlib":"Vector","fname":"isEqualTol","realm":"sh","param":{"1":"v","2":"t","t":"Tolerance number.","v":"Second Vector"},"name":"vec_methods:isEqualTol","description":"\nIs this vector and v equal within tolerance t."},{"summary":"\nAre all fields zero.","ret":"bool True/False","class":"function","private":false,"classlib":"Vector","fname":"isZero","realm":"sh","param":[],"name":"vec_methods:isZero","description":"\nAre all fields zero."},{"summary":"\nGet the vector's Length.","ret":"number Length.","class":"function","private":false,"classlib":"Vector","fname":"getLength","realm":"sh","param":[],"name":"vec_methods:getLength","description":"\nGet the vector's Length."},{"summary":"\nGet the vector's length squared ( Saves computation by skipping the square root ).","ret":"number length squared.","class":"function","private":false,"classlib":"Vector","fname":"getLengthSqr","realm":"sh","param":[],"name":"vec_methods:getLengthSqr","description":"\nGet the vector's length squared ( Saves computation by skipping the square root )."},{"summary":"\nReturns the length of the vector in two dimensions, without the Z axis.","ret":"number length","class":"function","private":false,"classlib":"Vector","fname":"getLength2D","realm":"sh","param":[],"name":"vec_methods:getLength2D","description":"\nReturns the length of the vector in two dimensions, without the Z axis."},{"summary":"\nReturns the length squared of the vector in two dimensions, without the Z axis.","ret":"number length squared.","class":"function","private":false,"classlib":"Vector","fname":"getLength2DSqr","realm":"sh","param":[],"name":"vec_methods:getLength2DSqr","description":"\nReturns the length squared of the vector in two dimensions, without the Z axis. ( Saves computation by skipping the square root )"},{"summary":"\nScalar Multiplication of the vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"mul","realm":"sh","param":{"1":"n","n":"Scalar to multiply with."},"name":"vec_methods:mul","description":"\nScalar Multiplication of the vector. Self-Modifies."},{"summary":"\n\"Scalar Division\" of the vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"div","realm":"sh","param":{"1":"n","n":"Scalar to divide by."},"name":"vec_methods:div","description":"\n\"Scalar Division\" of the vector. Self-Modifies."},{"summary":"\nMultiply self with a Vector.","class":"function","private":false,"param":{"1":"v","v":"Vector to multiply with"},"fname":"vmul","realm":"sh","name":"vec_methods:vmul","classlib":"Vector","description":"\nMultiply self with a Vector. Self-Modifies. ( convenience function )"},{"summary":"\nDivide self by a Vector.","class":"function","private":false,"param":{"1":"v","v":"Vector to divide by"},"fname":"vdiv","realm":"sh","name":"vec_methods:vdiv","classlib":"Vector","description":"\nDivide self by a Vector. Self-Modifies. ( convenience function )"},{"summary":"\nSet's all vector fields to 0.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"setZero","realm":"sh","param":[],"name":"vec_methods:setZero","description":"\nSet's all vector fields to 0."},{"summary":"\nSet's the vector's x coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setX","realm":"sh","param":{"1":"x","x":"The x coordinate"},"name":"vec_methods:setX","description":"\nSet's the vector's x coordinate and returns it."},{"summary":"\nSet's the vector's y coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setY","realm":"sh","param":{"1":"y","y":"The y coordinate"},"name":"vec_methods:setY","description":"\nSet's the vector's y coordinate and returns it."},{"summary":"\nSet's the vector's z coordinate and returns it.","ret":"The modified vector","class":"function","private":false,"classlib":"Vector","fname":"setZ","realm":"sh","param":{"1":"z","z":"The z coordinate"},"name":"vec_methods:setZ","description":"\nSet's the vector's z coordinate and returns it."},{"summary":"\nNormalise the vector, same direction, length 1.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"normalize","realm":"sh","param":[],"name":"vec_methods:normalize","description":"\nNormalise the vector, same direction, length 1. Self-Modifies."},{"summary":"\nRotate the vector by Angle b.","ret":"nil.","class":"function","private":false,"classlib":"Vector","fname":"rotate","realm":"sh","param":{"1":"b","b":"Angle to rotate by."},"name":"vec_methods:rotate","description":"\nRotate the vector by Angle b. Self-Modifies."},{"summary":"\nReturns Rotated vector by Angle b ","ret":"Rotated Vector","class":"function","private":false,"classlib":"Vector","fname":"getRotated","realm":"sh","param":{"1":"b","b":"Angle to rotate by."},"name":"vec_methods:getRotated","description":"\nReturns Rotated vector by Angle b"},{"summary":"\nReturn rotated vector by an axis ","ret":"Rotated vector","class":"function","private":false,"classlib":"Vector","fname":"rotateAroundAxis","realm":"sh","param":{"1":"axis","2":"degrees","3":"radians","axis":"Axis the rotate around","degrees":"Angle to rotate by in degrees or nil if radians.","radians":"Angle to rotate by in radians or nil if degrees."},"name":"vec_methods:rotateAroundAxis","description":"\nReturn rotated vector by an axis"},{"summary":"\nCopies x,y,z from a vector and returns a new vector ","ret":"The copy of the vector","class":"function","private":false,"classlib":"Vector","fname":"clone","realm":"sh","param":[],"name":"vec_methods:clone","description":"\nCopies x,y,z from a vector and returns a new vector"},{"summary":"\nCopies the values from the second vector to the first vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"set","realm":"sh","param":{"1":"v","v":"Second Vector"},"name":"vec_methods:set","description":"\nCopies the values from the second vector to the first vector. Self-Modifies."},{"summary":"\nSubtract v from this Vector.","ret":"nil","class":"function","private":false,"classlib":"Vector","fname":"sub","realm":"sh","param":{"1":"v","v":"Second Vector."},"name":"vec_methods:sub","description":"\nSubtract v from this Vector. Self-Modifies."},{"summary":"\nTranslates the vectors position into 2D user screen coordinates.","ret":"A table {x=screenx,y=screeny,visible=visible}","class":"function","private":false,"classlib":"Vector","fname":"toScreen","realm":"sh","param":[],"name":"vec_methods:toScreen","description":"\nTranslates the vectors position into 2D user screen coordinates."},{"summary":"\nReturns whenever the given vector is in a box created by the 2 other vectors.","ret":"bool True/False.","class":"function","private":false,"classlib":"Vector","fname":"withinAABox","realm":"sh","param":{"1":"v1","2":"v2","v2":"Second Vector to define AABox","v1":"Vector used to define AABox"},"name":"vec_methods:withinAABox","description":"\nReturns whenever the given vector is in a box created by the 2 other vectors."},{"server":true,"ret":"bool True/False.","class":"function","classlib":"Vector","private":false,"summary":"\nReturns whether the vector is in world ","fname":"isInWorld","realm":"sv","param":[],"name":"vec_methods:isInWorld","description":"\nReturns whether the vector is in world"}],"name":"libs_sh/vectors.lua","description":"\nVector type"},"libs_sh/von.lua":{"summary":"\n ","tables":[],"functions":{"1":"von.deserialize","2":"von.serialize","von.deserialize":{"server":true,"classForced":true,"ret":"Table","class":"function","client":true,"summary":"\nDeserialize a string ","fname":"deserialize","library":"von","realm":"sh","description":"\nDeserialize a string","name":"von.deserialize","param":{"1":"str","str":"String to deserialize"}},"von.serialize":{"server":true,"classForced":true,"ret":"String","class":"function","client":true,"summary":"\nSerialize a table ","fname":"serialize","library":"von","realm":"sh","description":"\nSerialize a table","name":"von.serialize","param":{"1":"tbl","tbl":"Table to serialize"}}},"libraries":{"1":"von","von":{"server":true,"tables":[],"client":true,"summary":"\nvON Library ","libtbl":"von","fields":[],"class":"library","functions":{"1":"deserialize","2":"serialize","serialize":{"server":true,"classForced":true,"ret":"String","class":"function","client":true,"summary":"\nSerialize a table ","fname":"serialize","library":"von","realm":"sh","description":"\nSerialize a table","name":"von.serialize","param":{"1":"tbl","tbl":"Table to serialize"}},"deserialize":{"server":true,"classForced":true,"ret":"Table","class":"function","client":true,"summary":"\nDeserialize a string ","fname":"deserialize","library":"von","realm":"sh","description":"\nDeserialize a string","name":"von.deserialize","param":{"1":"str","str":"String to deserialize"}}},"name":"von","description":"\nvON Library"}},"type":"file","doc":[{"summary":"\n ","param":[],"description":"\n"},{"summary":"\n ","param":[],"description":"\n"},{"summary":"\n ","param":[],"description":"\n"},{"server":true,"tables":[],"client":true,"summary":"\nvON Library ","libtbl":"von","fields":[],"class":"library","functions":{"1":"deserialize","2":"serialize","serialize":{"server":true,"classForced":true,"ret":"String","class":"function","client":true,"summary":"\nSerialize a table ","fname":"serialize","library":"von","realm":"sh","description":"\nSerialize a table","name":"von.serialize","param":{"1":"tbl","tbl":"Table to serialize"}},"deserialize":{"server":true,"classForced":true,"ret":"Table","class":"function","client":true,"summary":"\nDeserialize a string ","fname":"deserialize","library":"von","realm":"sh","description":"\nDeserialize a string","name":"von.deserialize","param":{"1":"str","str":"String to deserialize"}}},"name":"von","description":"\nvON Library"},{"server":true,"classForced":true,"ret":"Table","class":"function","client":true,"summary":"\nDeserialize a string ","fname":"deserialize","library":"von","realm":"sh","description":"\nDeserialize a string","name":"von.deserialize","param":{"1":"str","str":"String to deserialize"}},{"server":true,"classForced":true,"ret":"String","class":"function","client":true,"summary":"\nSerialize a table ","fname":"serialize","library":"von","realm":"sh","description":"\nSerialize a table","name":"von.serialize","param":{"1":"tbl","tbl":"Table to serialize"}}],"name":"libs_sh/von.lua","description":"\n"},"libs_sh/http.lua":{"summary":"\nHTTP Library ","tables":[],"functions":{"1":"http_library.base64Decode","2":"http_library.base64Encode","3":"http_library.canRequest","4":"http_library.get","5":"http_library.post","6":"http_library.urlEncode","http_library.urlEncode":{"summary":"\nEncodes illegal url characters to be legal ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"urlEncode","realm":"sh","param":{"1":"data","data":"The data to convert"},"name":"http_library.urlEncode","description":"\nEncodes illegal url characters to be legal"},"http_library.get":{"summary":"\nRuns a new http GET request ","class":"function","private":false,"param":{"1":"url","2":"callbackSuccess","3":"callbackFail","4":"headers","url":"http target url","callbackSuccess":"the function to be called on request success, taking the arguments body (string), length (number), headers (table) and code (number)","callbackFail":"the function to be called on request fail, taking the failing reason as an argument","headers":"GET headers to be sent"},"fname":"get","realm":"sh","description":"\nRuns a new http GET request","name":"http_library.get","library":"http"},"http_library.base64Encode":{"summary":"\nConverts data into base64 format or nil if the string is 0 length ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"base64Encode","realm":"sh","param":{"1":"data","data":"The data to convert"},"name":"http_library.base64Encode","description":"\nConverts data into base64 format or nil if the string is 0 length"},"http_library.post":{"summary":"\nRuns a new http POST request ","class":"function","private":false,"param":{"1":"url","2":"payload","3":"callbackSuccess","4":"callbackFail","5":"headers","payload":"optional POST payload to be sent, can be both table and string. When table is used, the request body is encoded as application/x-www-form-urlencoded","callbackSuccess":"optional function to be called on request success, taking the arguments body (string), length (number), headers (table) and code (number)","url":"http target url","callbackFail":"optional function to be called on request fail, taking the failing reason as an argument","headers":"optional POST headers to be sent"},"fname":"post","realm":"sh","description":"\nRuns a new http POST request","name":"http_library.post","library":"http"},"http_library.base64Decode":{"summary":"\nConverts data from base64 format ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"base64Decode","realm":"sh","param":{"1":"data","2":"threaded","data":"The data to convert","threaded":"Optional bool"},"name":"http_library.base64Decode","description":"\nConverts data from base64 format"},"http_library.canRequest":{"summary":"\nChecks if a new http request can be started ","class":"function","private":false,"param":[],"fname":"canRequest","realm":"sh","description":"\nChecks if a new http request can be started","name":"http_library.canRequest","library":"http"}},"libraries":{"1":"http","http":{"server":true,"tables":[],"client":true,"summary":"\nHttp library.","libtbl":"http_library","fields":[],"class":"library","functions":{"1":"base64Decode","2":"base64Encode","3":"canRequest","4":"get","5":"post","6":"urlEncode","canRequest":{"summary":"\nChecks if a new http request can be started ","class":"function","private":false,"param":[],"fname":"canRequest","realm":"sh","description":"\nChecks if a new http request can be started","name":"http_library.canRequest","library":"http"},"post":{"summary":"\nRuns a new http POST request ","class":"function","private":false,"param":{"1":"url","2":"payload","3":"callbackSuccess","4":"callbackFail","5":"headers","payload":"optional POST payload to be sent, can be both table and string. When table is used, the request body is encoded as application/x-www-form-urlencoded","callbackSuccess":"optional function to be called on request success, taking the arguments body (string), length (number), headers (table) and code (number)","url":"http target url","callbackFail":"optional function to be called on request fail, taking the failing reason as an argument","headers":"optional POST headers to be sent"},"fname":"post","realm":"sh","description":"\nRuns a new http POST request","name":"http_library.post","library":"http"},"base64Encode":{"summary":"\nConverts data into base64 format or nil if the string is 0 length ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"base64Encode","realm":"sh","param":{"1":"data","data":"The data to convert"},"name":"http_library.base64Encode","description":"\nConverts data into base64 format or nil if the string is 0 length"},"urlEncode":{"summary":"\nEncodes illegal url characters to be legal ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"urlEncode","realm":"sh","param":{"1":"data","data":"The data to convert"},"name":"http_library.urlEncode","description":"\nEncodes illegal url characters to be legal"},"base64Decode":{"summary":"\nConverts data from base64 format ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"base64Decode","realm":"sh","param":{"1":"data","2":"threaded","data":"The data to convert","threaded":"Optional bool"},"name":"http_library.base64Decode","description":"\nConverts data from base64 format"},"get":{"summary":"\nRuns a new http GET request ","class":"function","private":false,"param":{"1":"url","2":"callbackSuccess","3":"callbackFail","4":"headers","url":"http target url","callbackSuccess":"the function to be called on request success, taking the arguments body (string), length (number), headers (table) and code (number)","callbackFail":"the function to be called on request fail, taking the failing reason as an argument","headers":"GET headers to be sent"},"fname":"get","realm":"sh","description":"\nRuns a new http GET request","name":"http_library.get","library":"http"}},"name":"http","description":"\nHttp library. Requests content from urls."}},"type":"file","doc":[{"summary":"\nHTTP Library ","description":"\nHTTP Library"},{"server":true,"tables":[],"client":true,"summary":"\nHttp library.","libtbl":"http_library","fields":[],"class":"library","functions":{"1":"base64Decode","2":"base64Encode","3":"canRequest","4":"get","5":"post","6":"urlEncode","canRequest":{"summary":"\nChecks if a new http request can be started ","class":"function","private":false,"param":[],"fname":"canRequest","realm":"sh","description":"\nChecks if a new http request can be started","name":"http_library.canRequest","library":"http"},"post":{"summary":"\nRuns a new http POST request ","class":"function","private":false,"param":{"1":"url","2":"payload","3":"callbackSuccess","4":"callbackFail","5":"headers","payload":"optional POST payload to be sent, can be both table and string. When table is used, the request body is encoded as application/x-www-form-urlencoded","callbackSuccess":"optional function to be called on request success, taking the arguments body (string), length (number), headers (table) and code (number)","url":"http target url","callbackFail":"optional function to be called on request fail, taking the failing reason as an argument","headers":"optional POST headers to be sent"},"fname":"post","realm":"sh","description":"\nRuns a new http POST request","name":"http_library.post","library":"http"},"base64Encode":{"summary":"\nConverts data into base64 format or nil if the string is 0 length ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"base64Encode","realm":"sh","param":{"1":"data","data":"The data to convert"},"name":"http_library.base64Encode","description":"\nConverts data into base64 format or nil if the string is 0 length"},"urlEncode":{"summary":"\nEncodes illegal url characters to be legal ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"urlEncode","realm":"sh","param":{"1":"data","data":"The data to convert"},"name":"http_library.urlEncode","description":"\nEncodes illegal url characters to be legal"},"base64Decode":{"summary":"\nConverts data from base64 format ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"base64Decode","realm":"sh","param":{"1":"data","2":"threaded","data":"The data to convert","threaded":"Optional bool"},"name":"http_library.base64Decode","description":"\nConverts data from base64 format"},"get":{"summary":"\nRuns a new http GET request ","class":"function","private":false,"param":{"1":"url","2":"callbackSuccess","3":"callbackFail","4":"headers","url":"http target url","callbackSuccess":"the function to be called on request success, taking the arguments body (string), length (number), headers (table) and code (number)","callbackFail":"the function to be called on request fail, taking the failing reason as an argument","headers":"GET headers to be sent"},"fname":"get","realm":"sh","description":"\nRuns a new http GET request","name":"http_library.get","library":"http"}},"name":"http","description":"\nHttp library. Requests content from urls."},{"summary":"\nChecks if a new http request can be started ","class":"function","private":false,"param":[],"fname":"canRequest","realm":"sh","description":"\nChecks if a new http request can be started","name":"http_library.canRequest","library":"http"},{"summary":"\nRuns a new http GET request ","class":"function","private":false,"param":{"1":"url","2":"callbackSuccess","3":"callbackFail","4":"headers","url":"http target url","callbackSuccess":"the function to be called on request success, taking the arguments body (string), length (number), headers (table) and code (number)","callbackFail":"the function to be called on request fail, taking the failing reason as an argument","headers":"GET headers to be sent"},"fname":"get","realm":"sh","description":"\nRuns a new http GET request","name":"http_library.get","library":"http"},{"summary":"\nRuns a new http POST request ","class":"function","private":false,"param":{"1":"url","2":"payload","3":"callbackSuccess","4":"callbackFail","5":"headers","payload":"optional POST payload to be sent, can be both table and string. When table is used, the request body is encoded as application/x-www-form-urlencoded","callbackSuccess":"optional function to be called on request success, taking the arguments body (string), length (number), headers (table) and code (number)","url":"http target url","callbackFail":"optional function to be called on request fail, taking the failing reason as an argument","headers":"optional POST headers to be sent"},"fname":"post","realm":"sh","description":"\nRuns a new http POST request","name":"http_library.post","library":"http"},{"summary":"\nConverts data into base64 format or nil if the string is 0 length ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"base64Encode","realm":"sh","param":{"1":"data","data":"The data to convert"},"name":"http_library.base64Encode","description":"\nConverts data into base64 format or nil if the string is 0 length"},{"summary":"\nConverts data from base64 format ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"base64Decode","realm":"sh","param":{"1":"data","2":"threaded","data":"The data to convert","threaded":"Optional bool"},"name":"http_library.base64Decode","description":"\nConverts data from base64 format"},{"summary":"\nEncodes illegal url characters to be legal ","ret":"The converted data","class":"function","private":false,"library":"http","fname":"urlEncode","realm":"sh","param":{"1":"data","data":"The data to convert"},"name":"http_library.urlEncode","description":"\nEncodes illegal url characters to be legal"}],"name":"libs_sh/http.lua","description":"\nHTTP Library"},"editor/xml.lua":{"tables":[],"libraries":[],"type":"file","doc":[],"name":"editor/xml.lua","functions":[]},"instance.lua":{"summary":"\n \nSF Instance class.","tables":[],"functions":{"1":"SF.Instance.Compile","2":"SF.Instance:Error","3":"SF.Instance:cleanup","4":"SF.Instance:deinitialize","5":"SF.Instance:initialize","6":"SF.Instance:isHUDActive","7":"SF.Instance:prepare","8":"SF.Instance:runFunction","9":"SF.Instance:runLibraryHook","10":"SF.Instance:runScriptHook","11":"SF.Instance:runScriptHookForResult","12":"SF.Instance:runWithOps","13":"SF.Instance:runWithoutOps","14":"SF.OnRunningOps","SF.Instance.Compile":{"summary":"\nPreprocesses and Compiles code and returns an Instance ","ret":["True if no errors, false if errors occured.","The compiled instance, or the error message."],"class":"function","private":false,"realm":"nc","param":{"1":"code","2":"mainfile","3":"player","4":"data","5":"dontpreprocess","player":"The \"owner\" of the instance","data":"The table to set instance.data to. Default is a new table.","dontpreprocess":"Set to true to skip preprocessing","mainfile":"If code is a table, this specifies the first file to parse.","code":"Either a string of code, or a {path=source} table"},"name":"SF.Instance.Compile","description":"\nPreprocesses and Compiles code and returns an Instance"},"SF.Instance:runWithOps":{"summary":"\nInternal function - do not call.","ret":["True if ok","A table of values that the hook returned"],"class":"function","private":false,"realm":"nc","param":{"1":"func","2":"...","func":"The function to run","...":"Arguments to func"},"name":"SF.Instance:runWithOps","description":"\nInternal function - do not call. \nRuns a function while incrementing the instance ops coutner. \nThis does no setup work and shouldn't be called by client code"},"SF.Instance:initialize":{"summary":"\nRuns the scripts inside of the instance.","ret":["True if no script errors occured","The error message, if applicable","The error traceback, if applicable"],"class":"function","private":false,"realm":"nc","param":[],"name":"SF.Instance:initialize","description":"\nRuns the scripts inside of the instance. This should be called once after \ncompiling/unpacking so that scripts can register hooks and such. It should \nnot be called more than once."},"SF.OnRunningOps":{"private":false,"param":{"1":"running","running":"Are we executing a starfall context?"},"realm":"nc","summary":"\nOverridable hook for pcall-based hook systems \nGets called when inside a starfall context ","class":"function","name":"SF.OnRunningOps","description":"\nOverridable hook for pcall-based hook systems \nGets called when inside a starfall context"},"SF.Instance:isHUDActive":{"summary":"\nCheck if a HUD Component is connected to the SF instance ","ret":"true if a HUD Component is connected","class":"function","private":false,"realm":"nc","param":[],"name":"SF.Instance:isHUDActive","description":"\nCheck if a HUD Component is connected to the SF instance"},"SF.Instance:runScriptHook":{"summary":"\nRuns a script hook.","ret":["True if it executed ok, false if not or if there was no hook","If the first return value is false then the error message or nil if no hook was registered"],"class":"function","private":false,"realm":"nc","param":{"1":"hook","2":"...","hook":"The hook to call.","...":"Arguments to pass to the hook's registered function."},"name":"SF.Instance:runScriptHook","description":"\nRuns a script hook. This calls script code."},"SF.Instance:runLibraryHook":{"private":false,"param":{"1":"hook","2":"...","hook":"Hook to run.","...":"Additional arguments."},"realm":"nc","summary":"\nRuns a library hook.","class":"function","name":"SF.Instance:runLibraryHook","description":"\nRuns a library hook. Alias to SF.CallHook(hook, self, ...)."},"SF.Instance:Error":{"private":false,"param":["err"],"realm":"nc","summary":"\nErrors the instance.","class":"function","name":"SF.Instance:Error","description":"\nErrors the instance. Should only be called from the tips of the call tree (aka from places such as the hook library, timer library, the entity's think function, etc)"},"SF.Instance:runScriptHookForResult":{"summary":"\nRuns a script hook until one of them returns a true value.","ret":["True if it executed ok, false if not or if there was no hook","If the first return value is false then the error message or nil if no hook was registered. Else any values that the hook returned.","The traceback if the instance errored"],"class":"function","private":false,"realm":"nc","param":{"1":"hook","2":"...","hook":"The hook to call.","...":"Arguments to pass to the hook's registered function."},"name":"SF.Instance:runScriptHookForResult","description":"\nRuns a script hook until one of them returns a true value. Returns those values."},"SF.Instance:deinitialize":{"private":false,"param":[],"realm":"nc","summary":"\nDeinitializes the instance.","class":"function","name":"SF.Instance:deinitialize","description":"\nDeinitializes the instance. After this, the instance should be discarded."},"SF.Instance:runFunction":{"private":false,"param":{"1":"func","2":"...","func":"Function to run","...":"Arguments to pass to func"},"realm":"nc","summary":"\nRuns an arbitrary function under the SF instance.","class":"function","name":"SF.Instance:runFunction","description":"\nRuns an arbitrary function under the SF instance. This can be used \nto run your own hooks when using the integrated hook system doesn't \nmake sense (ex timers)."},"SF.Instance:prepare":{"private":false,"param":["hook"],"realm":"nc","summary":"\nInternal function - Do not call.","class":"function","name":"SF.Instance:prepare","description":"\nInternal function - Do not call. Prepares the script to be executed. \nThis is done automatically by Initialize and runScriptHook."},"SF.Instance:cleanup":{"private":false,"param":["hook","ok","err"],"realm":"nc","summary":"\nInternal function - Do not call.","class":"function","name":"SF.Instance:cleanup","description":"\nInternal function - Do not call. Cleans up the script. \nThis is done automatically by Initialize and runScriptHook."},"SF.Instance:runWithoutOps":{"summary":"\nInternal function - do not call.","ret":["True if ok","A table of values that the hook returned"],"class":"function","private":false,"realm":"nc","param":{"1":"func","2":"...","func":"The function to run","...":"Arguments to func"},"name":"SF.Instance:runWithoutOps","description":"\nInternal function - do not call. \nRuns a function without incrementing the instance ops coutner. \nThis does no setup work and shouldn't be called by client code"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nSF Instance class.","param":[],"description":"\n \nSF Instance class. \nContains the compiled SF script and essential data. Essentially \nthe execution context. \n"},{"summary":"\nA set of all instances that have been created.","param":[],"description":"\nA set of all instances that have been created. It has weak keys and values. \nInstances are put here after initialization."},{"summary":"\nPreprocesses and Compiles code and returns an Instance ","ret":["True if no errors, false if errors occured.","The compiled instance, or the error message."],"class":"function","private":false,"realm":"nc","param":{"1":"code","2":"mainfile","3":"player","4":"data","5":"dontpreprocess","player":"The \"owner\" of the instance","data":"The table to set instance.data to. Default is a new table.","dontpreprocess":"Set to true to skip preprocessing","mainfile":"If code is a table, this specifies the first file to parse.","code":"Either a string of code, or a {path=source} table"},"name":"SF.Instance.Compile","description":"\nPreprocesses and Compiles code and returns an Instance"},{"private":false,"param":{"1":"running","running":"Are we executing a starfall context?"},"realm":"nc","summary":"\nOverridable hook for pcall-based hook systems \nGets called when inside a starfall context ","class":"function","name":"SF.OnRunningOps","description":"\nOverridable hook for pcall-based hook systems \nGets called when inside a starfall context"},{"summary":"\nInternal function - do not call.","ret":["True if ok","A table of values that the hook returned"],"class":"function","private":false,"realm":"nc","param":{"1":"func","2":"...","func":"The function to run","...":"Arguments to func"},"name":"SF.Instance:runWithOps","description":"\nInternal function - do not call. \nRuns a function while incrementing the instance ops coutner. \nThis does no setup work and shouldn't be called by client code"},{"summary":"\nInternal function - do not call.","ret":["True if ok","A table of values that the hook returned"],"class":"function","private":false,"realm":"nc","param":{"1":"func","2":"...","func":"The function to run","...":"Arguments to func"},"name":"SF.Instance:runWithoutOps","description":"\nInternal function - do not call. \nRuns a function without incrementing the instance ops coutner. \nThis does no setup work and shouldn't be called by client code"},{"private":false,"param":["hook"],"realm":"nc","summary":"\nInternal function - Do not call.","class":"function","name":"SF.Instance:prepare","description":"\nInternal function - Do not call. Prepares the script to be executed. \nThis is done automatically by Initialize and runScriptHook."},{"private":false,"param":["hook","ok","err"],"realm":"nc","summary":"\nInternal function - Do not call.","class":"function","name":"SF.Instance:cleanup","description":"\nInternal function - Do not call. Cleans up the script. \nThis is done automatically by Initialize and runScriptHook."},{"summary":"\nRuns the scripts inside of the instance.","ret":["True if no script errors occured","The error message, if applicable","The error traceback, if applicable"],"class":"function","private":false,"realm":"nc","param":[],"name":"SF.Instance:initialize","description":"\nRuns the scripts inside of the instance. This should be called once after \ncompiling/unpacking so that scripts can register hooks and such. It should \nnot be called more than once."},{"summary":"\nRuns a script hook.","ret":["True if it executed ok, false if not or if there was no hook","If the first return value is false then the error message or nil if no hook was registered"],"class":"function","private":false,"realm":"nc","param":{"1":"hook","2":"...","hook":"The hook to call.","...":"Arguments to pass to the hook's registered function."},"name":"SF.Instance:runScriptHook","description":"\nRuns a script hook. This calls script code."},{"summary":"\nRuns a script hook until one of them returns a true value.","ret":["True if it executed ok, false if not or if there was no hook","If the first return value is false then the error message or nil if no hook was registered. Else any values that the hook returned.","The traceback if the instance errored"],"class":"function","private":false,"realm":"nc","param":{"1":"hook","2":"...","hook":"The hook to call.","...":"Arguments to pass to the hook's registered function."},"name":"SF.Instance:runScriptHookForResult","description":"\nRuns a script hook until one of them returns a true value. Returns those values."},{"private":false,"param":{"1":"hook","2":"...","hook":"Hook to run.","...":"Additional arguments."},"realm":"nc","summary":"\nRuns a library hook.","class":"function","name":"SF.Instance:runLibraryHook","description":"\nRuns a library hook. Alias to SF.CallHook(hook, self, ...)."},{"private":false,"param":{"1":"func","2":"...","func":"Function to run","...":"Arguments to pass to func"},"realm":"nc","summary":"\nRuns an arbitrary function under the SF instance.","class":"function","name":"SF.Instance:runFunction","description":"\nRuns an arbitrary function under the SF instance. This can be used \nto run your own hooks when using the integrated hook system doesn't \nmake sense (ex timers)."},{"private":false,"param":[],"realm":"nc","summary":"\nDeinitializes the instance.","class":"function","name":"SF.Instance:deinitialize","description":"\nDeinitializes the instance. After this, the instance should be discarded."},{"summary":"\nCheck if a HUD Component is connected to the SF instance ","ret":"true if a HUD Component is connected","class":"function","private":false,"realm":"nc","param":[],"name":"SF.Instance:isHUDActive","description":"\nCheck if a HUD Component is connected to the SF instance"},{"private":false,"param":["err"],"realm":"nc","summary":"\nErrors the instance.","class":"function","name":"SF.Instance:Error","description":"\nErrors the instance. Should only be called from the tips of the call tree (aka from places such as the hook library, timer library, the entity's think function, etc)"}],"name":"instance.lua","description":"\n \nSF Instance class. \nContains the compiled SF script and essential data. Essentially \nthe execution context. \n"},"editor/tabhandlers/tab_ace.lua":{"summary":"\n \nACE TabHandler \n ","tables":[],"functions":{"1":"PANEL:Init","PANEL:Init":{"private":false,"param":[],"realm":"r/","summary":"\n \nVGUI part \n ","class":"function","name":"PANEL:Init","description":"\n \nVGUI part \n"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nACE TabHandler \n ","param":[],"description":"\n \nACE TabHandler \n"},{"summary":"\n \nHandler part \n ","param":[],"description":"\n \nHandler part \n"},{"private":false,"param":[],"realm":"r/","summary":"\n \nVGUI part \n ","class":"function","name":"PANEL:Init","description":"\n \nVGUI part \n"},{"summary":"\n \nWe're done \n ","param":[],"description":"\n \nWe're done \n"}],"name":"editor/tabhandlers/tab_ace.lua","description":"\n \nACE TabHandler \n"},"libs_cl/sql.lua":{"summary":"\nSQL library.","tables":[],"functions":{"1":"sql_library.SQLStr","2":"sql_library.query","3":"sql_library.tableExists","4":"sql_library.tableRemove","sql_library.SQLStr":{"summary":"\nEscapes dangerous characters and symbols from user input used in an SQLite SQL Query.","ret":"The escaped input.","class":"function","private":false,"library":"sql","fname":"SQLStr","realm":"cl","param":{"1":"str","2":"bNoQuotes","bNoQuotes":"Set this as true, and the function will not wrap the input string in apostrophes.","str":"The string to be escaped."},"name":"sql_library.SQLStr","description":"\nEscapes dangerous characters and symbols from user input used in an SQLite SQL Query."},"sql_library.query":{"summary":"\nPerforms a query on the local SQLite database.","ret":"Query results as a table, nil if the query returned no data.","class":"function","private":false,"library":"sql","fname":"query","realm":"cl","param":{"1":"query","query":"The query to execute."},"name":"sql_library.query","description":"\nPerforms a query on the local SQLite database."},"sql_library.tableExists":{"summary":"\nChecks if a table exists within the local SQLite database.","ret":"False if the table does not exist, true if it does.","class":"function","private":false,"library":"sql","fname":"tableExists","realm":"cl","param":{"1":"tabname","tabname":"The table to check for."},"name":"sql_library.tableExists","description":"\nChecks if a table exists within the local SQLite database."},"sql_library.tableRemove":{"summary":"\nRemoves a table within the local SQLite database.","ret":"True if the table was successfully removed, false if not.","class":"function","private":false,"library":"sql","fname":"tableRemove","realm":"cl","param":{"1":"tabname","tabname":"The table to remove."},"name":"sql_library.tableRemove","description":"\nRemoves a table within the local SQLite database."}},"libraries":{"1":"sql","sql":{"summary":"\nSQL library.","tables":[],"client":true,"libtbl":"sql_library","fields":[],"class":"library","functions":{"1":"SQLStr","2":"query","3":"tableExists","4":"tableRemove","query":{"summary":"\nPerforms a query on the local SQLite database.","ret":"Query results as a table, nil if the query returned no data.","class":"function","private":false,"library":"sql","fname":"query","realm":"cl","param":{"1":"query","query":"The query to execute."},"name":"sql_library.query","description":"\nPerforms a query on the local SQLite database."},"SQLStr":{"summary":"\nEscapes dangerous characters and symbols from user input used in an SQLite SQL Query.","ret":"The escaped input.","class":"function","private":false,"library":"sql","fname":"SQLStr","realm":"cl","param":{"1":"str","2":"bNoQuotes","bNoQuotes":"Set this as true, and the function will not wrap the input string in apostrophes.","str":"The string to be escaped."},"name":"sql_library.SQLStr","description":"\nEscapes dangerous characters and symbols from user input used in an SQLite SQL Query."},"tableExists":{"summary":"\nChecks if a table exists within the local SQLite database.","ret":"False if the table does not exist, true if it does.","class":"function","private":false,"library":"sql","fname":"tableExists","realm":"cl","param":{"1":"tabname","tabname":"The table to check for."},"name":"sql_library.tableExists","description":"\nChecks if a table exists within the local SQLite database."},"tableRemove":{"summary":"\nRemoves a table within the local SQLite database.","ret":"True if the table was successfully removed, false if not.","class":"function","private":false,"library":"sql","fname":"tableRemove","realm":"cl","param":{"1":"tabname","tabname":"The table to remove."},"name":"sql_library.tableRemove","description":"\nRemoves a table within the local SQLite database."}},"name":"sql","description":"\nSQL library."}},"type":"file","doc":[{"summary":"\nSQL library.","tables":[],"client":true,"libtbl":"sql_library","fields":[],"class":"library","functions":{"1":"SQLStr","2":"query","3":"tableExists","4":"tableRemove","query":{"summary":"\nPerforms a query on the local SQLite database.","ret":"Query results as a table, nil if the query returned no data.","class":"function","private":false,"library":"sql","fname":"query","realm":"cl","param":{"1":"query","query":"The query to execute."},"name":"sql_library.query","description":"\nPerforms a query on the local SQLite database."},"SQLStr":{"summary":"\nEscapes dangerous characters and symbols from user input used in an SQLite SQL Query.","ret":"The escaped input.","class":"function","private":false,"library":"sql","fname":"SQLStr","realm":"cl","param":{"1":"str","2":"bNoQuotes","bNoQuotes":"Set this as true, and the function will not wrap the input string in apostrophes.","str":"The string to be escaped."},"name":"sql_library.SQLStr","description":"\nEscapes dangerous characters and symbols from user input used in an SQLite SQL Query."},"tableExists":{"summary":"\nChecks if a table exists within the local SQLite database.","ret":"False if the table does not exist, true if it does.","class":"function","private":false,"library":"sql","fname":"tableExists","realm":"cl","param":{"1":"tabname","tabname":"The table to check for."},"name":"sql_library.tableExists","description":"\nChecks if a table exists within the local SQLite database."},"tableRemove":{"summary":"\nRemoves a table within the local SQLite database.","ret":"True if the table was successfully removed, false if not.","class":"function","private":false,"library":"sql","fname":"tableRemove","realm":"cl","param":{"1":"tabname","tabname":"The table to remove."},"name":"sql_library.tableRemove","description":"\nRemoves a table within the local SQLite database."}},"name":"sql","description":"\nSQL library."},{"summary":"\nPerforms a query on the local SQLite database.","ret":"Query results as a table, nil if the query returned no data.","class":"function","private":false,"library":"sql","fname":"query","realm":"cl","param":{"1":"query","query":"The query to execute."},"name":"sql_library.query","description":"\nPerforms a query on the local SQLite database."},{"summary":"\nChecks if a table exists within the local SQLite database.","ret":"False if the table does not exist, true if it does.","class":"function","private":false,"library":"sql","fname":"tableExists","realm":"cl","param":{"1":"tabname","tabname":"The table to check for."},"name":"sql_library.tableExists","description":"\nChecks if a table exists within the local SQLite database."},{"summary":"\nRemoves a table within the local SQLite database.","ret":"True if the table was successfully removed, false if not.","class":"function","private":false,"library":"sql","fname":"tableRemove","realm":"cl","param":{"1":"tabname","tabname":"The table to remove."},"name":"sql_library.tableRemove","description":"\nRemoves a table within the local SQLite database."},{"summary":"\nEscapes dangerous characters and symbols from user input used in an SQLite SQL Query.","ret":"The escaped input.","class":"function","private":false,"library":"sql","fname":"SQLStr","realm":"cl","param":{"1":"str","2":"bNoQuotes","bNoQuotes":"Set this as true, and the function will not wrap the input string in apostrophes.","str":"The string to be escaped."},"name":"sql_library.SQLStr","description":"\nEscapes dangerous characters and symbols from user input used in an SQLite SQL Query."}],"name":"libs_cl/sql.lua","description":"\nSQL library."},"editor/editor.lua":{"summary":"\n \nSF Editor Interface \nOriginally created by Jazzelhawk \n \nTo do: \nFind new icons \n ","tables":[],"functions":{"1":"SF.Editor.BuildIncludesTable","SF.Editor.BuildIncludesTable":{"summary":"\n(Client) Builds a table for the compiler to use ","ret":["True if ok, false if a file was missing","A table with mainfile name and files"],"class":"function","private":false,"realm":"r/","param":{"1":"mainfile","mainfile":"Manual selection of which file should be main. Otherwise it's the open file"},"name":"SF.Editor.BuildIncludesTable","description":"\n(Client) Builds a table for the compiler to use"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nSF Editor Interface \nOriginally created by Jazzelhawk \n \nTo do: \nFind new icons \n ","param":[],"description":"\n \nSF Editor Interface \nOriginally created by Jazzelhawk \n \nTo do: \nFind new icons \n"},{"summary":"\n \nTab Handlers \n ","param":[],"description":"\n \nTab Handlers \n"},{"summary":"\n \nEditor \n \nFor interaction with other modules and initialization \n \n ","param":[],"description":"\n \nEditor \n \nFor interaction with other modules and initialization \n \n"},{"summary":"\n(Client) Builds a table for the compiler to use ","ret":["True if ok, false if a file was missing","A table with mainfile name and files"],"class":"function","private":false,"realm":"r/","param":{"1":"mainfile","mainfile":"Manual selection of which file should be main. Otherwise it's the open file"},"name":"SF.Editor.BuildIncludesTable","description":"\n(Client) Builds a table for the compiler to use"}],"name":"editor/editor.lua","description":"\n \nSF Editor Interface \nOriginally created by Jazzelhawk \n \nTo do: \nFind new icons \n"},"libs_cl/light.lua":{"summary":"\nLight type ","tables":[],"functions":{"1":"light_library.create","2":"light_methods:draw","3":"light_methods:setBrightness","4":"light_methods:setColor","5":"light_methods:setDecay","6":"light_methods:setDieTime","7":"light_methods:setDirection","8":"light_methods:setInnerAngle","9":"light_methods:setMinLight","10":"light_methods:setNoModel","11":"light_methods:setNoWorld","12":"light_methods:setOuterAngle","13":"light_methods:setPos","14":"light_methods:setSize","15":"light_methods:setStyle","light_methods:setNoModel":{"summary":"\nSets whether the light should cast onto models or not ","class":"function","private":false,"param":{"1":"on","on":"Whether the light shouldn't cast onto the models"},"fname":"setNoModel","realm":"cl","name":"light_methods:setNoModel","classlib":"Light","description":"\nSets whether the light should cast onto models or not"},"light_methods:setDecay":{"summary":"\nSets the light decay speed in thousandths per second.","class":"function","private":false,"param":{"1":"decay","decay":"The light's decay speed"},"fname":"setDecay","realm":"cl","name":"light_methods:setDecay","classlib":"Light","description":"\nSets the light decay speed in thousandths per second. 1000 lasts for 1 second, 2000 lasts for 0.5 seconds"},"light_methods:setBrightness":{"summary":"\nSets the light brightness ","class":"function","private":false,"param":{"1":"brightness","brightness":"The light's brightness"},"fname":"setBrightness","realm":"cl","name":"light_methods:setBrightness","classlib":"Light","description":"\nSets the light brightness"},"light_methods:setStyle":{"summary":"\nSets the flicker style of the light https://developer.valvesoftware.com/wiki/Light_dynamic#Appearances ","class":"function","private":false,"param":{"1":"style","style":"The number of the flicker style"},"fname":"setStyle","realm":"cl","name":"light_methods:setStyle","classlib":"Light","description":"\nSets the flicker style of the light https://developer.valvesoftware.com/wiki/Light_dynamic#Appearances"},"light_methods:setOuterAngle":{"summary":"\nSets the light outer angle (used with setDirection and setInnerAngle) ","class":"function","private":false,"param":{"1":"ang","ang":"Number outer angle of the light"},"fname":"setOuterAngle","realm":"cl","name":"light_methods:setOuterAngle","classlib":"Light","description":"\nSets the light outer angle (used with setDirection and setInnerAngle)"},"light_methods:setDirection":{"summary":"\nSets the light direction (used with setInnerAngle and setOuterAngle) ","class":"function","private":false,"param":{"1":"dir","dir":"Direction of the light"},"fname":"setDirection","realm":"cl","name":"light_methods:setDirection","classlib":"Light","description":"\nSets the light direction (used with setInnerAngle and setOuterAngle)"},"light_methods:setSize":{"summary":"\nSets the size of the light (max is sf_light_maxsize) ","class":"function","private":false,"param":{"1":"size","size":"The size of the light"},"fname":"setSize","realm":"cl","name":"light_methods:setSize","classlib":"Light","description":"\nSets the size of the light (max is sf_light_maxsize)"},"light_methods:setColor":{"summary":"\nSets the color of the light ","class":"function","private":false,"param":{"1":"color","color":"The color of the light"},"fname":"setColor","realm":"cl","name":"light_methods:setColor","classlib":"Light","description":"\nSets the color of the light"},"light_methods:setDieTime":{"summary":"\nSets the light lifespan (Required for fade effect i.e.","class":"function","private":false,"param":{"1":"dietime","dietime":"The how long the light will stay alive after turning it off."},"fname":"setDieTime","realm":"cl","name":"light_methods:setDieTime","classlib":"Light","description":"\nSets the light lifespan (Required for fade effect i.e. decay)"},"light_methods:setPos":{"summary":"\nSets the light position ","class":"function","private":false,"param":{"1":"pos","pos":"The position of the light"},"fname":"setPos","realm":"cl","name":"light_methods:setPos","classlib":"Light","description":"\nSets the light position"},"light_methods:setMinLight":{"summary":"\nSets the minimum light amount ","class":"function","private":false,"param":{"1":"min","min":"The minimum light"},"fname":"setMinLight","realm":"cl","name":"light_methods:setMinLight","classlib":"Light","description":"\nSets the minimum light amount"},"light_methods:setNoWorld":{"summary":"\nSets whether the light should cast onto the world or not ","class":"function","private":false,"param":{"1":"on","on":"Whether the light shouldn't cast onto the world"},"fname":"setNoWorld","realm":"cl","name":"light_methods:setNoWorld","classlib":"Light","description":"\nSets whether the light should cast onto the world or not"},"light_methods:setInnerAngle":{"summary":"\nSets the light inner angle (used with setDirection and setOuterAngle) ","class":"function","private":false,"param":{"1":"ang","ang":"Number inner angle of the light"},"fname":"setInnerAngle","realm":"cl","name":"light_methods:setInnerAngle","classlib":"Light","description":"\nSets the light inner angle (used with setDirection and setOuterAngle)"},"light_library.create":{"summary":"\nCreates a dynamic light (make sure to draw it) ","ret":"Dynamic light","class":"function","private":false,"library":"light","fname":"create","realm":"cl","param":{"1":"pos","2":"size","3":"brightness","4":"color","color":"The color of the light","pos":"The position of the light","size":"The size of the light. Must be lower than sf_light_maxsize","brightness":"The brightness of the light"},"name":"light_library.create","description":"\nCreates a dynamic light (make sure to draw it)"},"light_methods:draw":{"summary":"\nDraws the light.","class":"function","private":false,"param":[],"fname":"draw","realm":"cl","name":"light_methods:draw","classlib":"Light","description":"\nDraws the light. Typically used in the think hook. Will throw an error if it fails (use pcall)"}},"libraries":{"1":"light","light":{"summary":"\nLight library.","tables":[],"client":true,"libtbl":"light_library","fields":[],"class":"library","functions":{"1":"create","create":{"summary":"\nCreates a dynamic light (make sure to draw it) ","ret":"Dynamic light","class":"function","private":false,"library":"light","fname":"create","realm":"cl","param":{"1":"pos","2":"size","3":"brightness","4":"color","color":"The color of the light","pos":"The position of the light","size":"The size of the light. Must be lower than sf_light_maxsize","brightness":"The brightness of the light"},"name":"light_library.create","description":"\nCreates a dynamic light (make sure to draw it)"}},"name":"light","description":"\nLight library."}},"type":"file","doc":[{"methods":{"1":"draw","2":"setBrightness","3":"setColor","4":"setDecay","5":"setDieTime","6":"setDirection","7":"setInnerAngle","8":"setMinLight","9":"setNoModel","10":"setNoWorld","11":"setOuterAngle","12":"setPos","13":"setSize","14":"setStyle","setNoWorld":{"summary":"\nSets whether the light should cast onto the world or not ","class":"function","private":false,"param":{"1":"on","on":"Whether the light shouldn't cast onto the world"},"fname":"setNoWorld","realm":"cl","name":"light_methods:setNoWorld","classlib":"Light","description":"\nSets whether the light should cast onto the world or not"},"setOuterAngle":{"summary":"\nSets the light outer angle (used with setDirection and setInnerAngle) ","class":"function","private":false,"param":{"1":"ang","ang":"Number outer angle of the light"},"fname":"setOuterAngle","realm":"cl","name":"light_methods:setOuterAngle","classlib":"Light","description":"\nSets the light outer angle (used with setDirection and setInnerAngle)"},"setInnerAngle":{"summary":"\nSets the light inner angle (used with setDirection and setOuterAngle) ","class":"function","private":false,"param":{"1":"ang","ang":"Number inner angle of the light"},"fname":"setInnerAngle","realm":"cl","name":"light_methods:setInnerAngle","classlib":"Light","description":"\nSets the light inner angle (used with setDirection and setOuterAngle)"},"setStyle":{"summary":"\nSets the flicker style of the light https://developer.valvesoftware.com/wiki/Light_dynamic#Appearances ","class":"function","private":false,"param":{"1":"style","style":"The number of the flicker style"},"fname":"setStyle","realm":"cl","name":"light_methods:setStyle","classlib":"Light","description":"\nSets the flicker style of the light https://developer.valvesoftware.com/wiki/Light_dynamic#Appearances"},"setColor":{"summary":"\nSets the color of the light ","class":"function","private":false,"param":{"1":"color","color":"The color of the light"},"fname":"setColor","realm":"cl","name":"light_methods:setColor","classlib":"Light","description":"\nSets the color of the light"},"setBrightness":{"summary":"\nSets the light brightness ","class":"function","private":false,"param":{"1":"brightness","brightness":"The light's brightness"},"fname":"setBrightness","realm":"cl","name":"light_methods:setBrightness","classlib":"Light","description":"\nSets the light brightness"},"setDieTime":{"summary":"\nSets the light lifespan (Required for fade effect i.e.","class":"function","private":false,"param":{"1":"dietime","dietime":"The how long the light will stay alive after turning it off."},"fname":"setDieTime","realm":"cl","name":"light_methods:setDieTime","classlib":"Light","description":"\nSets the light lifespan (Required for fade effect i.e. decay)"},"draw":{"summary":"\nDraws the light.","class":"function","private":false,"param":[],"fname":"draw","realm":"cl","name":"light_methods:draw","classlib":"Light","description":"\nDraws the light. Typically used in the think hook. Will throw an error if it fails (use pcall)"},"setSize":{"summary":"\nSets the size of the light (max is sf_light_maxsize) ","class":"function","private":false,"param":{"1":"size","size":"The size of the light"},"fname":"setSize","realm":"cl","name":"light_methods:setSize","classlib":"Light","description":"\nSets the size of the light (max is sf_light_maxsize)"},"setMinLight":{"summary":"\nSets the minimum light amount ","class":"function","private":false,"param":{"1":"min","min":"The minimum light"},"fname":"setMinLight","realm":"cl","name":"light_methods:setMinLight","classlib":"Light","description":"\nSets the minimum light amount"},"setDecay":{"summary":"\nSets the light decay speed in thousandths per second.","class":"function","private":false,"param":{"1":"decay","decay":"The light's decay speed"},"fname":"setDecay","realm":"cl","name":"light_methods:setDecay","classlib":"Light","description":"\nSets the light decay speed in thousandths per second. 1000 lasts for 1 second, 2000 lasts for 0.5 seconds"},"setPos":{"summary":"\nSets the light position ","class":"function","private":false,"param":{"1":"pos","pos":"The position of the light"},"fname":"setPos","realm":"cl","name":"light_methods:setPos","classlib":"Light","description":"\nSets the light position"},"setNoModel":{"summary":"\nSets whether the light should cast onto models or not ","class":"function","private":false,"param":{"1":"on","on":"Whether the light shouldn't cast onto the models"},"fname":"setNoModel","realm":"cl","name":"light_methods:setNoModel","classlib":"Light","description":"\nSets whether the light should cast onto models or not"},"setDirection":{"summary":"\nSets the light direction (used with setInnerAngle and setOuterAngle) ","class":"function","private":false,"param":{"1":"dir","dir":"Direction of the light"},"fname":"setDirection","realm":"cl","name":"light_methods:setDirection","classlib":"Light","description":"\nSets the light direction (used with setInnerAngle and setOuterAngle)"}},"class":"class","client":true,"fields":[],"summary":"\nLight type ","typtbl":"light_methods","name":"Light","description":"\nLight type"},{"summary":"\nLight library.","tables":[],"client":true,"libtbl":"light_library","fields":[],"class":"library","functions":{"1":"create","create":{"summary":"\nCreates a dynamic light (make sure to draw it) ","ret":"Dynamic light","class":"function","private":false,"library":"light","fname":"create","realm":"cl","param":{"1":"pos","2":"size","3":"brightness","4":"color","color":"The color of the light","pos":"The position of the light","size":"The size of the light. Must be lower than sf_light_maxsize","brightness":"The brightness of the light"},"name":"light_library.create","description":"\nCreates a dynamic light (make sure to draw it)"}},"name":"light","description":"\nLight library."},{"summary":"\nCreates a dynamic light (make sure to draw it) ","ret":"Dynamic light","class":"function","private":false,"library":"light","fname":"create","realm":"cl","param":{"1":"pos","2":"size","3":"brightness","4":"color","color":"The color of the light","pos":"The position of the light","size":"The size of the light. Must be lower than sf_light_maxsize","brightness":"The brightness of the light"},"name":"light_library.create","description":"\nCreates a dynamic light (make sure to draw it)"},{"summary":"\nDraws the light.","class":"function","private":false,"param":[],"fname":"draw","realm":"cl","name":"light_methods:draw","classlib":"Light","description":"\nDraws the light. Typically used in the think hook. Will throw an error if it fails (use pcall)"},{"summary":"\nSets the light brightness ","class":"function","private":false,"param":{"1":"brightness","brightness":"The light's brightness"},"fname":"setBrightness","realm":"cl","name":"light_methods:setBrightness","classlib":"Light","description":"\nSets the light brightness"},{"summary":"\nSets the light decay speed in thousandths per second.","class":"function","private":false,"param":{"1":"decay","decay":"The light's decay speed"},"fname":"setDecay","realm":"cl","name":"light_methods:setDecay","classlib":"Light","description":"\nSets the light decay speed in thousandths per second. 1000 lasts for 1 second, 2000 lasts for 0.5 seconds"},{"summary":"\nSets the light lifespan (Required for fade effect i.e.","class":"function","private":false,"param":{"1":"dietime","dietime":"The how long the light will stay alive after turning it off."},"fname":"setDieTime","realm":"cl","name":"light_methods:setDieTime","classlib":"Light","description":"\nSets the light lifespan (Required for fade effect i.e. decay)"},{"summary":"\nSets the light direction (used with setInnerAngle and setOuterAngle) ","class":"function","private":false,"param":{"1":"dir","dir":"Direction of the light"},"fname":"setDirection","realm":"cl","name":"light_methods:setDirection","classlib":"Light","description":"\nSets the light direction (used with setInnerAngle and setOuterAngle)"},{"summary":"\nSets the light inner angle (used with setDirection and setOuterAngle) ","class":"function","private":false,"param":{"1":"ang","ang":"Number inner angle of the light"},"fname":"setInnerAngle","realm":"cl","name":"light_methods:setInnerAngle","classlib":"Light","description":"\nSets the light inner angle (used with setDirection and setOuterAngle)"},{"summary":"\nSets the light outer angle (used with setDirection and setInnerAngle) ","class":"function","private":false,"param":{"1":"ang","ang":"Number outer angle of the light"},"fname":"setOuterAngle","realm":"cl","name":"light_methods:setOuterAngle","classlib":"Light","description":"\nSets the light outer angle (used with setDirection and setInnerAngle)"},{"summary":"\nSets the minimum light amount ","class":"function","private":false,"param":{"1":"min","min":"The minimum light"},"fname":"setMinLight","realm":"cl","name":"light_methods:setMinLight","classlib":"Light","description":"\nSets the minimum light amount"},{"summary":"\nSets whether the light should cast onto the world or not ","class":"function","private":false,"param":{"1":"on","on":"Whether the light shouldn't cast onto the world"},"fname":"setNoWorld","realm":"cl","name":"light_methods:setNoWorld","classlib":"Light","description":"\nSets whether the light should cast onto the world or not"},{"summary":"\nSets whether the light should cast onto models or not ","class":"function","private":false,"param":{"1":"on","on":"Whether the light shouldn't cast onto the models"},"fname":"setNoModel","realm":"cl","name":"light_methods:setNoModel","classlib":"Light","description":"\nSets whether the light should cast onto models or not"},{"summary":"\nSets the light position ","class":"function","private":false,"param":{"1":"pos","pos":"The position of the light"},"fname":"setPos","realm":"cl","name":"light_methods:setPos","classlib":"Light","description":"\nSets the light position"},{"summary":"\nSets the size of the light (max is sf_light_maxsize) ","class":"function","private":false,"param":{"1":"size","size":"The size of the light"},"fname":"setSize","realm":"cl","name":"light_methods:setSize","classlib":"Light","description":"\nSets the size of the light (max is sf_light_maxsize)"},{"summary":"\nSets the flicker style of the light https://developer.valvesoftware.com/wiki/Light_dynamic#Appearances ","class":"function","private":false,"param":{"1":"style","style":"The number of the flicker style"},"fname":"setStyle","realm":"cl","name":"light_methods:setStyle","classlib":"Light","description":"\nSets the flicker style of the light https://developer.valvesoftware.com/wiki/Light_dynamic#Appearances"},{"summary":"\nSets the color of the light ","class":"function","private":false,"param":{"1":"color","color":"The color of the light"},"fname":"setColor","realm":"cl","name":"light_methods:setColor","classlib":"Light","description":"\nSets the color of the light"}],"name":"libs_cl/light.lua","description":"\nLight type"},"editor/syntaxmodes/starfall.lua":{"tables":[],"libraries":[],"type":"file","doc":[],"name":"editor/syntaxmodes/starfall.lua","functions":[]},"libs_sh/trace.lua":{"summary":"\n \nTrace library \n ","tables":[],"functions":{"1":"trace_library.intersectRayWithOBB","2":"trace_library.intersectRayWithPlane","3":"trace_library.trace","4":"trace_library.traceHull","trace_library.intersectRayWithOBB":{"summary":"\nDoes a ray box intersection returning the position hit, normal, and trace fraction, or nil if not hit.","ret":["Hit position or nil if not hit","Hit normal or nil if not hit","Hit fraction or nil if not hit"],"class":"function","private":false,"library":"trace","fname":"intersectRayWithOBB","realm":"sh","param":{"1":"rayStart","2":"rayDelta","3":"boxOrigin","4":"boxAngles","5":"boxMins","6":"boxMaxs","boxAngles":"The box's angles","rayDelta":"The direction and length of the ray","boxMins":"The box min bounding vector","rayStart":"The origin of the ray","boxOrigin":"The origin of the box","boxMaxs":"The box max bounding vector"},"name":"trace_library.intersectRayWithOBB","description":"\nDoes a ray box intersection returning the position hit, normal, and trace fraction, or nil if not hit."},"trace_library.trace":{"summary":"\nDoes a line trace ","ret":"Result of the trace https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","private":false,"library":"trace","fname":"trace","realm":"sh","param":{"1":"start","2":"endpos","3":"filter","4":"mask","5":"colgroup","6":"ignworld","filter":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit","endpos":"End position","mask":"Trace mask","ignworld":"Whether the trace should ignore world","start":"Start position","colgroup":"The collision group of the trace"},"name":"trace_library.trace","description":"\nDoes a line trace"},"trace_library.intersectRayWithPlane":{"summary":"\nDoes a ray plane intersection returning the position hit or nil if not hit ","ret":"Hit position or nil if not hit","class":"function","private":false,"library":"trace","fname":"intersectRayWithPlane","realm":"sh","param":{"1":"rayStart","2":"rayDelta","3":"planeOrigin","4":"planeNormal","planeNormal":"The normal of the plane","rayStart":"The origin of the ray","rayDelta":"The direction and length of the ray","planeOrigin":"The origin of the plane"},"name":"trace_library.intersectRayWithPlane","description":"\nDoes a ray plane intersection returning the position hit or nil if not hit"},"trace_library.traceHull":{"summary":"\nDoes a swept-AABB trace ","ret":"Result of the trace https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","private":false,"library":"trace","fname":"traceHull","realm":"sh","param":{"1":"start","2":"endpos","3":"minbox","4":"maxbox","5":"filter","6":"mask","7":"colgroup","8":"ignworld","minbox":"Lower box corner","endpos":"End position","ignworld":"Whether the trace should ignore world","colgroup":"The collision group of the trace","mask":"Trace mask","filter":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit","start":"Start position","maxbox":"Upper box corner"},"name":"trace_library.traceHull","description":"\nDoes a swept-AABB trace"}},"libraries":{"1":"trace","trace":{"server":true,"field":{"1":"MAT_ANTLION","2":"MAT_BLOODYFLESH","3":"MAT_CONCRETE","4":"MAT_DIRT","5":"MAT_FLESH","6":"MAT_GRATE","7":"MAT_ALIENFLESH","8":"MAT_CLIP","9":"MAT_PLASTIC","10":"MAT_METAL","11":"MAT_SAND","12":"MAT_FOLIAGE","13":"MAT_COMPUTER","14":"MAT_SLOSH","15":"MAT_TILE","16":"MAT_GRASS","17":"MAT_VENT","18":"MAT_WOOD","19":"MAT_DEFAULT","20":"MAT_GLASS","21":"HITGROUP_GENERIC","22":"HITGROUP_HEAD","23":"HITGROUP_CHEST","24":"HITGROUP_STOMACH","25":"HITGROUP_LEFTARM","26":"HITGROUP_RIGHTARM","27":"HITGROUP_LEFTLEG","28":"HITGROUP_RIGHTLEG","29":"HITGROUP_GEAR","30":"MASK_SPLITAREAPORTAL","31":"MASK_SOLID_BRUSHONLY","32":"MASK_WATER","33":"MASK_BLOCKLOS","34":"MASK_OPAQUE","35":"MASK_VISIBLE","36":"MASK_DEADSOLID","37":"MASK_PLAYERSOLID_BRUSHONLY","38":"MASK_NPCWORLDSTATIC","39":"MASK_NPCSOLID_BRUSHONLY","40":"MASK_CURRENT","41":"MASK_SHOT_PORTAL","42":"MASK_SOLID","43":"MASK_BLOCKLOS_AND_NPCS","44":"MASK_OPAQUE_AND_NPCS","45":"MASK_VISIBLE_AND_NPCS","46":"MASK_PLAYERSOLID","47":"MASK_NPCSOLID","48":"MASK_SHOT_HULL","49":"MASK_SHOT","50":"MASK_ALL","51":"CONTENTS_EMPTY","52":"CONTENTS_SOLID","53":"CONTENTS_WINDOW","54":"CONTENTS_AUX","55":"CONTENTS_GRATE","56":"CONTENTS_SLIME","57":"CONTENTS_WATER","58":"CONTENTS_BLOCKLOS","59":"CONTENTS_OPAQUE","60":"CONTENTS_TESTFOGVOLUME","61":"CONTENTS_TEAM4","62":"CONTENTS_TEAM3","63":"CONTENTS_TEAM1","64":"CONTENTS_TEAM2","65":"CONTENTS_IGNORE_NODRAW_OPAQUE","66":"CONTENTS_MOVEABLE","67":"CONTENTS_AREAPORTAL","68":"CONTENTS_PLAYERCLIP","69":"CONTENTS_MONSTERCLIP","70":"CONTENTS_CURRENT_0","71":"CONTENTS_CURRENT_90","72":"CONTENTS_CURRENT_180","73":"CONTENTS_CURRENT_270","74":"CONTENTS_CURRENT_UP","75":"CONTENTS_CURRENT_DOWN","76":"CONTENTS_ORIGIN","77":"CONTENTS_MONSTER","78":"CONTENTS_DEBRIS","79":"CONTENTS_DETAIL","80":"CONTENTS_TRANSLUCENT","81":"CONTENTS_LADDER","82":"CONTENTS_HITBOX","MASK_SHOT_HULL":"","MAT_VENT":"","CONTENTS_TEAM3":"","CONTENTS_DEBRIS":"","MAT_PLASTIC":"","CONTENTS_MOVEABLE":"","CONTENTS_TEAM1":"","MAT_TILE":"","MASK_DEADSOLID":"","CONTENTS_BLOCKLOS":"","MAT_WOOD":"","CONTENTS_MONSTER":"","CONTENTS_GRATE":"","MASK_BLOCKLOS_AND_NPCS":"","HITGROUP_HEAD":"","CONTENTS_PLAYERCLIP":"","HITGROUP_CHEST":"","HITGROUP_GENERIC":"","CONTENTS_WINDOW":"","CONTENTS_CURRENT_DOWN":"","MAT_ANTLION":"","CONTENTS_OPAQUE":"","MASK_BLOCKLOS":"","HITGROUP_LEFTARM":"","MASK_SHOT":"","CONTENTS_SOLID":"","MASK_SOLID_BRUSHONLY":"","MASK_SOLID":"","MAT_ALIENFLESH":"","CONTENTS_TEAM4":"","MASK_NPCSOLID_BRUSHONLY":"","MASK_NPCWORLDSTATIC":"","MAT_METAL":"","MASK_NPCSOLID":"","MASK_SPLITAREAPORTAL":"","MASK_WATER":"","MASK_PLAYERSOLID":"","MAT_SAND":"","MAT_DEFAULT":"","CONTENTS_EMPTY":"","MAT_CONCRETE":"","MAT_BLOODYFLESH":"","CONTENTS_HITBOX":"","CONTENTS_LADDER":"","MASK_PLAYERSOLID_BRUSHONLY":"","CONTENTS_TRANSLUCENT":"","CONTENTS_CURRENT_90":"","CONTENTS_DETAIL":"","MASK_VISIBLE":"","CONTENTS_TESTFOGVOLUME":"","CONTENTS_ORIGIN":"","CONTENTS_CURRENT_UP":"","MAT_SLOSH":"","MASK_SHOT_PORTAL":"","CONTENTS_CURRENT_270":"","MAT_FLESH":"","CONTENTS_CURRENT_180":"","CONTENTS_CURRENT_0":"","CONTENTS_MONSTERCLIP":"","CONTENTS_AREAPORTAL":"","MAT_GRATE":"","CONTENTS_TEAM2":"","HITGROUP_STOMACH":"","HITGROUP_RIGHTARM":"","MAT_COMPUTER":"","MAT_GRASS":"","MASK_ALL":"","CONTENTS_WATER":"","MASK_OPAQUE":"","HITGROUP_RIGHTLEG":"","MASK_OPAQUE_AND_NPCS":"","MASK_CURRENT":"","MAT_DIRT":"","CONTENTS_AUX":"","MASK_VISIBLE_AND_NPCS":"","HITGROUP_GEAR":"","HITGROUP_LEFTLEG":"","CONTENTS_IGNORE_NODRAW_OPAQUE":"","MAT_GLASS":"","MAT_CLIP":"","CONTENTS_SLIME":"","MAT_FOLIAGE":""},"tables":[],"client":true,"summary":"\nProvides functions for doing line/AABB traces ","libtbl":"trace_library","fields":[],"class":"library","functions":{"1":"intersectRayWithOBB","2":"intersectRayWithPlane","3":"trace","4":"traceHull","intersectRayWithOBB":{"summary":"\nDoes a ray box intersection returning the position hit, normal, and trace fraction, or nil if not hit.","ret":["Hit position or nil if not hit","Hit normal or nil if not hit","Hit fraction or nil if not hit"],"class":"function","private":false,"library":"trace","fname":"intersectRayWithOBB","realm":"sh","param":{"1":"rayStart","2":"rayDelta","3":"boxOrigin","4":"boxAngles","5":"boxMins","6":"boxMaxs","boxAngles":"The box's angles","rayDelta":"The direction and length of the ray","boxMins":"The box min bounding vector","rayStart":"The origin of the ray","boxOrigin":"The origin of the box","boxMaxs":"The box max bounding vector"},"name":"trace_library.intersectRayWithOBB","description":"\nDoes a ray box intersection returning the position hit, normal, and trace fraction, or nil if not hit."},"traceHull":{"summary":"\nDoes a swept-AABB trace ","ret":"Result of the trace https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","private":false,"library":"trace","fname":"traceHull","realm":"sh","param":{"1":"start","2":"endpos","3":"minbox","4":"maxbox","5":"filter","6":"mask","7":"colgroup","8":"ignworld","minbox":"Lower box corner","endpos":"End position","ignworld":"Whether the trace should ignore world","colgroup":"The collision group of the trace","mask":"Trace mask","filter":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit","start":"Start position","maxbox":"Upper box corner"},"name":"trace_library.traceHull","description":"\nDoes a swept-AABB trace"},"intersectRayWithPlane":{"summary":"\nDoes a ray plane intersection returning the position hit or nil if not hit ","ret":"Hit position or nil if not hit","class":"function","private":false,"library":"trace","fname":"intersectRayWithPlane","realm":"sh","param":{"1":"rayStart","2":"rayDelta","3":"planeOrigin","4":"planeNormal","planeNormal":"The normal of the plane","rayStart":"The origin of the ray","rayDelta":"The direction and length of the ray","planeOrigin":"The origin of the plane"},"name":"trace_library.intersectRayWithPlane","description":"\nDoes a ray plane intersection returning the position hit or nil if not hit"},"trace":{"summary":"\nDoes a line trace ","ret":"Result of the trace https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","private":false,"library":"trace","fname":"trace","realm":"sh","param":{"1":"start","2":"endpos","3":"filter","4":"mask","5":"colgroup","6":"ignworld","filter":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit","endpos":"End position","mask":"Trace mask","ignworld":"Whether the trace should ignore world","start":"Start position","colgroup":"The collision group of the trace"},"name":"trace_library.trace","description":"\nDoes a line trace"}},"name":"trace","description":"\nProvides functions for doing line/AABB traces"}},"type":"file","doc":[{"summary":"\n \nTrace library \n ","param":[],"description":"\n \nTrace library \n"},{"server":true,"field":{"1":"MAT_ANTLION","2":"MAT_BLOODYFLESH","3":"MAT_CONCRETE","4":"MAT_DIRT","5":"MAT_FLESH","6":"MAT_GRATE","7":"MAT_ALIENFLESH","8":"MAT_CLIP","9":"MAT_PLASTIC","10":"MAT_METAL","11":"MAT_SAND","12":"MAT_FOLIAGE","13":"MAT_COMPUTER","14":"MAT_SLOSH","15":"MAT_TILE","16":"MAT_GRASS","17":"MAT_VENT","18":"MAT_WOOD","19":"MAT_DEFAULT","20":"MAT_GLASS","21":"HITGROUP_GENERIC","22":"HITGROUP_HEAD","23":"HITGROUP_CHEST","24":"HITGROUP_STOMACH","25":"HITGROUP_LEFTARM","26":"HITGROUP_RIGHTARM","27":"HITGROUP_LEFTLEG","28":"HITGROUP_RIGHTLEG","29":"HITGROUP_GEAR","30":"MASK_SPLITAREAPORTAL","31":"MASK_SOLID_BRUSHONLY","32":"MASK_WATER","33":"MASK_BLOCKLOS","34":"MASK_OPAQUE","35":"MASK_VISIBLE","36":"MASK_DEADSOLID","37":"MASK_PLAYERSOLID_BRUSHONLY","38":"MASK_NPCWORLDSTATIC","39":"MASK_NPCSOLID_BRUSHONLY","40":"MASK_CURRENT","41":"MASK_SHOT_PORTAL","42":"MASK_SOLID","43":"MASK_BLOCKLOS_AND_NPCS","44":"MASK_OPAQUE_AND_NPCS","45":"MASK_VISIBLE_AND_NPCS","46":"MASK_PLAYERSOLID","47":"MASK_NPCSOLID","48":"MASK_SHOT_HULL","49":"MASK_SHOT","50":"MASK_ALL","51":"CONTENTS_EMPTY","52":"CONTENTS_SOLID","53":"CONTENTS_WINDOW","54":"CONTENTS_AUX","55":"CONTENTS_GRATE","56":"CONTENTS_SLIME","57":"CONTENTS_WATER","58":"CONTENTS_BLOCKLOS","59":"CONTENTS_OPAQUE","60":"CONTENTS_TESTFOGVOLUME","61":"CONTENTS_TEAM4","62":"CONTENTS_TEAM3","63":"CONTENTS_TEAM1","64":"CONTENTS_TEAM2","65":"CONTENTS_IGNORE_NODRAW_OPAQUE","66":"CONTENTS_MOVEABLE","67":"CONTENTS_AREAPORTAL","68":"CONTENTS_PLAYERCLIP","69":"CONTENTS_MONSTERCLIP","70":"CONTENTS_CURRENT_0","71":"CONTENTS_CURRENT_90","72":"CONTENTS_CURRENT_180","73":"CONTENTS_CURRENT_270","74":"CONTENTS_CURRENT_UP","75":"CONTENTS_CURRENT_DOWN","76":"CONTENTS_ORIGIN","77":"CONTENTS_MONSTER","78":"CONTENTS_DEBRIS","79":"CONTENTS_DETAIL","80":"CONTENTS_TRANSLUCENT","81":"CONTENTS_LADDER","82":"CONTENTS_HITBOX","MASK_SHOT_HULL":"","MAT_VENT":"","CONTENTS_TEAM3":"","CONTENTS_DEBRIS":"","MAT_PLASTIC":"","CONTENTS_MOVEABLE":"","CONTENTS_TEAM1":"","MAT_TILE":"","MASK_DEADSOLID":"","CONTENTS_BLOCKLOS":"","MAT_WOOD":"","CONTENTS_MONSTER":"","CONTENTS_GRATE":"","MASK_BLOCKLOS_AND_NPCS":"","HITGROUP_HEAD":"","CONTENTS_PLAYERCLIP":"","HITGROUP_CHEST":"","HITGROUP_GENERIC":"","CONTENTS_WINDOW":"","CONTENTS_CURRENT_DOWN":"","MAT_ANTLION":"","CONTENTS_OPAQUE":"","MASK_BLOCKLOS":"","HITGROUP_LEFTARM":"","MASK_SHOT":"","CONTENTS_SOLID":"","MASK_SOLID_BRUSHONLY":"","MASK_SOLID":"","MAT_ALIENFLESH":"","CONTENTS_TEAM4":"","MASK_NPCSOLID_BRUSHONLY":"","MASK_NPCWORLDSTATIC":"","MAT_METAL":"","MASK_NPCSOLID":"","MASK_SPLITAREAPORTAL":"","MASK_WATER":"","MASK_PLAYERSOLID":"","MAT_SAND":"","MAT_DEFAULT":"","CONTENTS_EMPTY":"","MAT_CONCRETE":"","MAT_BLOODYFLESH":"","CONTENTS_HITBOX":"","CONTENTS_LADDER":"","MASK_PLAYERSOLID_BRUSHONLY":"","CONTENTS_TRANSLUCENT":"","CONTENTS_CURRENT_90":"","CONTENTS_DETAIL":"","MASK_VISIBLE":"","CONTENTS_TESTFOGVOLUME":"","CONTENTS_ORIGIN":"","CONTENTS_CURRENT_UP":"","MAT_SLOSH":"","MASK_SHOT_PORTAL":"","CONTENTS_CURRENT_270":"","MAT_FLESH":"","CONTENTS_CURRENT_180":"","CONTENTS_CURRENT_0":"","CONTENTS_MONSTERCLIP":"","CONTENTS_AREAPORTAL":"","MAT_GRATE":"","CONTENTS_TEAM2":"","HITGROUP_STOMACH":"","HITGROUP_RIGHTARM":"","MAT_COMPUTER":"","MAT_GRASS":"","MASK_ALL":"","CONTENTS_WATER":"","MASK_OPAQUE":"","HITGROUP_RIGHTLEG":"","MASK_OPAQUE_AND_NPCS":"","MASK_CURRENT":"","MAT_DIRT":"","CONTENTS_AUX":"","MASK_VISIBLE_AND_NPCS":"","HITGROUP_GEAR":"","HITGROUP_LEFTLEG":"","CONTENTS_IGNORE_NODRAW_OPAQUE":"","MAT_GLASS":"","MAT_CLIP":"","CONTENTS_SLIME":"","MAT_FOLIAGE":""},"tables":[],"client":true,"summary":"\nProvides functions for doing line/AABB traces ","libtbl":"trace_library","fields":[],"class":"library","functions":{"1":"intersectRayWithOBB","2":"intersectRayWithPlane","3":"trace","4":"traceHull","intersectRayWithOBB":{"summary":"\nDoes a ray box intersection returning the position hit, normal, and trace fraction, or nil if not hit.","ret":["Hit position or nil if not hit","Hit normal or nil if not hit","Hit fraction or nil if not hit"],"class":"function","private":false,"library":"trace","fname":"intersectRayWithOBB","realm":"sh","param":{"1":"rayStart","2":"rayDelta","3":"boxOrigin","4":"boxAngles","5":"boxMins","6":"boxMaxs","boxAngles":"The box's angles","rayDelta":"The direction and length of the ray","boxMins":"The box min bounding vector","rayStart":"The origin of the ray","boxOrigin":"The origin of the box","boxMaxs":"The box max bounding vector"},"name":"trace_library.intersectRayWithOBB","description":"\nDoes a ray box intersection returning the position hit, normal, and trace fraction, or nil if not hit."},"traceHull":{"summary":"\nDoes a swept-AABB trace ","ret":"Result of the trace https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","private":false,"library":"trace","fname":"traceHull","realm":"sh","param":{"1":"start","2":"endpos","3":"minbox","4":"maxbox","5":"filter","6":"mask","7":"colgroup","8":"ignworld","minbox":"Lower box corner","endpos":"End position","ignworld":"Whether the trace should ignore world","colgroup":"The collision group of the trace","mask":"Trace mask","filter":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit","start":"Start position","maxbox":"Upper box corner"},"name":"trace_library.traceHull","description":"\nDoes a swept-AABB trace"},"intersectRayWithPlane":{"summary":"\nDoes a ray plane intersection returning the position hit or nil if not hit ","ret":"Hit position or nil if not hit","class":"function","private":false,"library":"trace","fname":"intersectRayWithPlane","realm":"sh","param":{"1":"rayStart","2":"rayDelta","3":"planeOrigin","4":"planeNormal","planeNormal":"The normal of the plane","rayStart":"The origin of the ray","rayDelta":"The direction and length of the ray","planeOrigin":"The origin of the plane"},"name":"trace_library.intersectRayWithPlane","description":"\nDoes a ray plane intersection returning the position hit or nil if not hit"},"trace":{"summary":"\nDoes a line trace ","ret":"Result of the trace https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","private":false,"library":"trace","fname":"trace","realm":"sh","param":{"1":"start","2":"endpos","3":"filter","4":"mask","5":"colgroup","6":"ignworld","filter":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit","endpos":"End position","mask":"Trace mask","ignworld":"Whether the trace should ignore world","start":"Start position","colgroup":"The collision group of the trace"},"name":"trace_library.trace","description":"\nDoes a line trace"}},"name":"trace","description":"\nProvides functions for doing line/AABB traces"},{"summary":"\nDoes a line trace ","ret":"Result of the trace https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","private":false,"library":"trace","fname":"trace","realm":"sh","param":{"1":"start","2":"endpos","3":"filter","4":"mask","5":"colgroup","6":"ignworld","filter":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit","endpos":"End position","mask":"Trace mask","ignworld":"Whether the trace should ignore world","start":"Start position","colgroup":"The collision group of the trace"},"name":"trace_library.trace","description":"\nDoes a line trace"},{"summary":"\nDoes a swept-AABB trace ","ret":"Result of the trace https://wiki.garrysmod.com/page/Structures/TraceResult","class":"function","private":false,"library":"trace","fname":"traceHull","realm":"sh","param":{"1":"start","2":"endpos","3":"minbox","4":"maxbox","5":"filter","6":"mask","7":"colgroup","8":"ignworld","minbox":"Lower box corner","endpos":"End position","ignworld":"Whether the trace should ignore world","colgroup":"The collision group of the trace","mask":"Trace mask","filter":"Entity/array of entities to filter, or a function callback with an entity arguement that returns whether the trace should hit","start":"Start position","maxbox":"Upper box corner"},"name":"trace_library.traceHull","description":"\nDoes a swept-AABB trace"},{"summary":"\nDoes a ray box intersection returning the position hit, normal, and trace fraction, or nil if not hit.","ret":["Hit position or nil if not hit","Hit normal or nil if not hit","Hit fraction or nil if not hit"],"class":"function","private":false,"library":"trace","fname":"intersectRayWithOBB","realm":"sh","param":{"1":"rayStart","2":"rayDelta","3":"boxOrigin","4":"boxAngles","5":"boxMins","6":"boxMaxs","boxAngles":"The box's angles","rayDelta":"The direction and length of the ray","boxMins":"The box min bounding vector","rayStart":"The origin of the ray","boxOrigin":"The origin of the box","boxMaxs":"The box max bounding vector"},"name":"trace_library.intersectRayWithOBB","description":"\nDoes a ray box intersection returning the position hit, normal, and trace fraction, or nil if not hit."},{"summary":"\nDoes a ray plane intersection returning the position hit or nil if not hit ","ret":"Hit position or nil if not hit","class":"function","private":false,"library":"trace","fname":"intersectRayWithPlane","realm":"sh","param":{"1":"rayStart","2":"rayDelta","3":"planeOrigin","4":"planeNormal","planeNormal":"The normal of the plane","rayStart":"The origin of the ray","rayDelta":"The direction and length of the ray","planeOrigin":"The origin of the plane"},"name":"trace_library.intersectRayWithPlane","description":"\nDoes a ray plane intersection returning the position hit or nil if not hit"}],"name":"libs_sh/trace.lua","description":"\n \nTrace library \n"},"libs_sh/team.lua":{"summary":"\nLibrary for retreiving information about teams ","tables":[],"functions":{"1":"team_library.bestAutoJoinTeam","2":"team_library.exists","3":"team_library.getAllTeams","4":"team_library.getColor","5":"team_library.getJoinable","6":"team_library.getName","7":"team_library.getNumDeaths","8":"team_library.getNumFrags","9":"team_library.getNumPlayers","10":"team_library.getPlayers","11":"team_library.getScore","team_library.getScore":{"summary":"\nReturns the score of a team ","classForced":true,"ret":"Number score of the team","class":"function","description":"\nReturns the score of a team","fname":"getScore","library":"team","realm":"sh","name":"team_library.getScore","param":{"1":"ind","ind":"Index of the team"}},"team_library.bestAutoJoinTeam":{"summary":"\nReturns team with least players ","classForced":true,"ret":"index of the best team to join","class":"function","description":"\nReturns team with least players","fname":"bestAutoJoinTeam","library":"team","realm":"sh","name":"team_library.bestAutoJoinTeam","param":[]},"team_library.getJoinable":{"summary":"\nReturns whether or not a team can be joined ","classForced":true,"ret":"boolean","class":"function","description":"\nReturns whether or not a team can be joined","fname":"getJoinable","library":"team","realm":"sh","name":"team_library.getJoinable","param":{"1":"ind","ind":"Index of the team"}},"team_library.getColor":{"summary":"\nReturns the color of a team ","ret":"Color of the team","class":"function","private":false,"library":"team","fname":"getColor","realm":"sh","param":{"1":"ind","ind":"Index of the team"},"name":"team_library.getColor","description":"\nReturns the color of a team"},"team_library.getAllTeams":{"summary":"\nReturns a table containing team information ","ret":"table containing team information","class":"function","private":false,"library":"team","fname":"getAllTeams","realm":"sh","param":[],"name":"team_library.getAllTeams","description":"\nReturns a table containing team information"},"team_library.getPlayers":{"summary":"\nReturns the table of players on a team ","ret":"Table of players","class":"function","private":false,"library":"team","fname":"getPlayers","realm":"sh","param":{"1":"ind","ind":"Index of the team"},"name":"team_library.getPlayers","description":"\nReturns the table of players on a team"},"team_library.getNumFrags":{"summary":"\nReturns number of frags of all players on a team ","classForced":true,"ret":"number of frags","class":"function","description":"\nReturns number of frags of all players on a team","fname":"getNumFrags","library":"team","realm":"sh","name":"team_library.getNumFrags","param":{"1":"ind","ind":"Index of the team"}},"team_library.exists":{"summary":"\nReturns whether or not the team exists ","classForced":true,"ret":"boolean","class":"function","description":"\nReturns whether or not the team exists","fname":"exists","library":"team","realm":"sh","name":"team_library.exists","param":{"1":"ind","ind":"Index of the team"}},"team_library.getNumDeaths":{"summary":"\nReturns number of deaths of all players on a team ","classForced":true,"ret":"number of deaths","class":"function","description":"\nReturns number of deaths of all players on a team","fname":"getNumDeaths","library":"team","realm":"sh","name":"team_library.getNumDeaths","param":{"1":"ind","ind":"Index of the team"}},"team_library.getName":{"summary":"\nReturns the name of a team ","classForced":true,"ret":"String name of the team","class":"function","description":"\nReturns the name of a team","fname":"getName","library":"team","realm":"sh","name":"team_library.getName","param":{"1":"ind","ind":"Index of the team"}},"team_library.getNumPlayers":{"summary":"\nReturns number of players on a team ","classForced":true,"ret":"number of players","class":"function","description":"\nReturns number of players on a team","fname":"getNumPlayers","library":"team","realm":"sh","name":"team_library.getNumPlayers","param":{"1":"ind","ind":"Index of the team"}}},"libraries":{"1":"team","team":{"server":true,"tables":[],"client":true,"summary":"\nLibrary for retreiving information about teams ","libtbl":"team_library","fields":[],"class":"library","functions":{"1":"bestAutoJoinTeam","2":"exists","3":"getAllTeams","4":"getColor","5":"getJoinable","6":"getName","7":"getNumDeaths","8":"getNumFrags","9":"getNumPlayers","10":"getPlayers","11":"getScore","getPlayers":{"summary":"\nReturns the table of players on a team ","ret":"Table of players","class":"function","private":false,"library":"team","fname":"getPlayers","realm":"sh","param":{"1":"ind","ind":"Index of the team"},"name":"team_library.getPlayers","description":"\nReturns the table of players on a team"},"getScore":{"summary":"\nReturns the score of a team ","classForced":true,"ret":"Number score of the team","class":"function","description":"\nReturns the score of a team","fname":"getScore","library":"team","realm":"sh","name":"team_library.getScore","param":{"1":"ind","ind":"Index of the team"}},"getNumPlayers":{"summary":"\nReturns number of players on a team ","classForced":true,"ret":"number of players","class":"function","description":"\nReturns number of players on a team","fname":"getNumPlayers","library":"team","realm":"sh","name":"team_library.getNumPlayers","param":{"1":"ind","ind":"Index of the team"}},"getColor":{"summary":"\nReturns the color of a team ","ret":"Color of the team","class":"function","private":false,"library":"team","fname":"getColor","realm":"sh","param":{"1":"ind","ind":"Index of the team"},"name":"team_library.getColor","description":"\nReturns the color of a team"},"getJoinable":{"summary":"\nReturns whether or not a team can be joined ","classForced":true,"ret":"boolean","class":"function","description":"\nReturns whether or not a team can be joined","fname":"getJoinable","library":"team","realm":"sh","name":"team_library.getJoinable","param":{"1":"ind","ind":"Index of the team"}},"exists":{"summary":"\nReturns whether or not the team exists ","classForced":true,"ret":"boolean","class":"function","description":"\nReturns whether or not the team exists","fname":"exists","library":"team","realm":"sh","name":"team_library.exists","param":{"1":"ind","ind":"Index of the team"}},"getNumDeaths":{"summary":"\nReturns number of deaths of all players on a team ","classForced":true,"ret":"number of deaths","class":"function","description":"\nReturns number of deaths of all players on a team","fname":"getNumDeaths","library":"team","realm":"sh","name":"team_library.getNumDeaths","param":{"1":"ind","ind":"Index of the team"}},"getAllTeams":{"summary":"\nReturns a table containing team information ","ret":"table containing team information","class":"function","private":false,"library":"team","fname":"getAllTeams","realm":"sh","param":[],"name":"team_library.getAllTeams","description":"\nReturns a table containing team information"},"getNumFrags":{"summary":"\nReturns number of frags of all players on a team ","classForced":true,"ret":"number of frags","class":"function","description":"\nReturns number of frags of all players on a team","fname":"getNumFrags","library":"team","realm":"sh","name":"team_library.getNumFrags","param":{"1":"ind","ind":"Index of the team"}},"bestAutoJoinTeam":{"summary":"\nReturns team with least players ","classForced":true,"ret":"index of the best team to join","class":"function","description":"\nReturns team with least players","fname":"bestAutoJoinTeam","library":"team","realm":"sh","name":"team_library.bestAutoJoinTeam","param":[]},"getName":{"summary":"\nReturns the name of a team ","classForced":true,"ret":"String name of the team","class":"function","description":"\nReturns the name of a team","fname":"getName","library":"team","realm":"sh","name":"team_library.getName","param":{"1":"ind","ind":"Index of the team"}}},"name":"team","description":"\nLibrary for retreiving information about teams"}},"type":"file","doc":[{"server":true,"tables":[],"client":true,"summary":"\nLibrary for retreiving information about teams ","libtbl":"team_library","fields":[],"class":"library","functions":{"1":"bestAutoJoinTeam","2":"exists","3":"getAllTeams","4":"getColor","5":"getJoinable","6":"getName","7":"getNumDeaths","8":"getNumFrags","9":"getNumPlayers","10":"getPlayers","11":"getScore","getPlayers":{"summary":"\nReturns the table of players on a team ","ret":"Table of players","class":"function","private":false,"library":"team","fname":"getPlayers","realm":"sh","param":{"1":"ind","ind":"Index of the team"},"name":"team_library.getPlayers","description":"\nReturns the table of players on a team"},"getScore":{"summary":"\nReturns the score of a team ","classForced":true,"ret":"Number score of the team","class":"function","description":"\nReturns the score of a team","fname":"getScore","library":"team","realm":"sh","name":"team_library.getScore","param":{"1":"ind","ind":"Index of the team"}},"getNumPlayers":{"summary":"\nReturns number of players on a team ","classForced":true,"ret":"number of players","class":"function","description":"\nReturns number of players on a team","fname":"getNumPlayers","library":"team","realm":"sh","name":"team_library.getNumPlayers","param":{"1":"ind","ind":"Index of the team"}},"getColor":{"summary":"\nReturns the color of a team ","ret":"Color of the team","class":"function","private":false,"library":"team","fname":"getColor","realm":"sh","param":{"1":"ind","ind":"Index of the team"},"name":"team_library.getColor","description":"\nReturns the color of a team"},"getJoinable":{"summary":"\nReturns whether or not a team can be joined ","classForced":true,"ret":"boolean","class":"function","description":"\nReturns whether or not a team can be joined","fname":"getJoinable","library":"team","realm":"sh","name":"team_library.getJoinable","param":{"1":"ind","ind":"Index of the team"}},"exists":{"summary":"\nReturns whether or not the team exists ","classForced":true,"ret":"boolean","class":"function","description":"\nReturns whether or not the team exists","fname":"exists","library":"team","realm":"sh","name":"team_library.exists","param":{"1":"ind","ind":"Index of the team"}},"getNumDeaths":{"summary":"\nReturns number of deaths of all players on a team ","classForced":true,"ret":"number of deaths","class":"function","description":"\nReturns number of deaths of all players on a team","fname":"getNumDeaths","library":"team","realm":"sh","name":"team_library.getNumDeaths","param":{"1":"ind","ind":"Index of the team"}},"getAllTeams":{"summary":"\nReturns a table containing team information ","ret":"table containing team information","class":"function","private":false,"library":"team","fname":"getAllTeams","realm":"sh","param":[],"name":"team_library.getAllTeams","description":"\nReturns a table containing team information"},"getNumFrags":{"summary":"\nReturns number of frags of all players on a team ","classForced":true,"ret":"number of frags","class":"function","description":"\nReturns number of frags of all players on a team","fname":"getNumFrags","library":"team","realm":"sh","name":"team_library.getNumFrags","param":{"1":"ind","ind":"Index of the team"}},"bestAutoJoinTeam":{"summary":"\nReturns team with least players ","classForced":true,"ret":"index of the best team to join","class":"function","description":"\nReturns team with least players","fname":"bestAutoJoinTeam","library":"team","realm":"sh","name":"team_library.bestAutoJoinTeam","param":[]},"getName":{"summary":"\nReturns the name of a team ","classForced":true,"ret":"String name of the team","class":"function","description":"\nReturns the name of a team","fname":"getName","library":"team","realm":"sh","name":"team_library.getName","param":{"1":"ind","ind":"Index of the team"}}},"name":"team","description":"\nLibrary for retreiving information about teams"},{"summary":"\nReturns a table containing team information ","ret":"table containing team information","class":"function","private":false,"library":"team","fname":"getAllTeams","realm":"sh","param":[],"name":"team_library.getAllTeams","description":"\nReturns a table containing team information"},{"summary":"\nReturns the color of a team ","ret":"Color of the team","class":"function","private":false,"library":"team","fname":"getColor","realm":"sh","param":{"1":"ind","ind":"Index of the team"},"name":"team_library.getColor","description":"\nReturns the color of a team"},{"summary":"\nReturns the table of players on a team ","ret":"Table of players","class":"function","private":false,"library":"team","fname":"getPlayers","realm":"sh","param":{"1":"ind","ind":"Index of the team"},"name":"team_library.getPlayers","description":"\nReturns the table of players on a team"},{"summary":"\nReturns team with least players ","classForced":true,"ret":"index of the best team to join","class":"function","description":"\nReturns team with least players","fname":"bestAutoJoinTeam","library":"team","realm":"sh","name":"team_library.bestAutoJoinTeam","param":[]},{"summary":"\nReturns the name of a team ","classForced":true,"ret":"String name of the team","class":"function","description":"\nReturns the name of a team","fname":"getName","library":"team","realm":"sh","name":"team_library.getName","param":{"1":"ind","ind":"Index of the team"}},{"summary":"\nReturns the score of a team ","classForced":true,"ret":"Number score of the team","class":"function","description":"\nReturns the score of a team","fname":"getScore","library":"team","realm":"sh","name":"team_library.getScore","param":{"1":"ind","ind":"Index of the team"}},{"summary":"\nReturns whether or not a team can be joined ","classForced":true,"ret":"boolean","class":"function","description":"\nReturns whether or not a team can be joined","fname":"getJoinable","library":"team","realm":"sh","name":"team_library.getJoinable","param":{"1":"ind","ind":"Index of the team"}},{"summary":"\nReturns number of players on a team ","classForced":true,"ret":"number of players","class":"function","description":"\nReturns number of players on a team","fname":"getNumPlayers","library":"team","realm":"sh","name":"team_library.getNumPlayers","param":{"1":"ind","ind":"Index of the team"}},{"summary":"\nReturns number of deaths of all players on a team ","classForced":true,"ret":"number of deaths","class":"function","description":"\nReturns number of deaths of all players on a team","fname":"getNumDeaths","library":"team","realm":"sh","name":"team_library.getNumDeaths","param":{"1":"ind","ind":"Index of the team"}},{"summary":"\nReturns number of frags of all players on a team ","classForced":true,"ret":"number of frags","class":"function","description":"\nReturns number of frags of all players on a team","fname":"getNumFrags","library":"team","realm":"sh","name":"team_library.getNumFrags","param":{"1":"ind","ind":"Index of the team"}},{"summary":"\nReturns whether or not the team exists ","classForced":true,"ret":"boolean","class":"function","description":"\nReturns whether or not the team exists","fname":"exists","library":"team","realm":"sh","name":"team_library.exists","param":{"1":"ind","ind":"Index of the team"}}],"name":"libs_sh/team.lua","description":"\nLibrary for retreiving information about teams"},"libs_cl/bass.lua":{"summary":"\nFor playing music there is `Bass` type.","tables":[],"functions":{"1":"bass_library.loadFile","2":"bass_library.loadURL","3":"bass_library.soundsLeft","4":"bass_methods:destroy","5":"bass_methods:getFFT","6":"bass_methods:getLength","7":"bass_methods:getLevels","8":"bass_methods:getTime","9":"bass_methods:isOnline","10":"bass_methods:isValid","11":"bass_methods:pause","12":"bass_methods:play","13":"bass_methods:setFade","14":"bass_methods:setLooping","15":"bass_methods:setPitch","16":"bass_methods:setPos","17":"bass_methods:setTime","18":"bass_methods:setVolume","19":"bass_methods:stop","bass_methods:setVolume":{"summary":"\nSets the volume of the sound channel.","class":"function","private":false,"param":{"1":"vol","vol":"Volume multiplier (1 is normal), between 0x and 10x."},"fname":"setVolume","realm":"cl","name":"bass_methods:setVolume","classlib":"Bass","description":"\nSets the volume of the sound channel."},"bass_library.loadURL":{"summary":"\nLoads a sound channel from an URL.","class":"function","private":false,"param":{"1":"path","2":"flags","3":"callback","path":"URL path to play from.","callback":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name.","flags":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},"fname":"loadURL","realm":"cl","description":"\nLoads a sound channel from an URL.","name":"bass_library.loadURL","library":"bass"},"bass_methods:setFade":{"summary":"\nSets the fade distance of the sound in 3D space.","class":"function","private":false,"param":{"1":"min","2":"max","min":"The channel's volume is at maximum when the listener is within this distance","max":"The channel's volume stops decreasing when the listener is beyond this distance."},"fname":"setFade","realm":"cl","name":"bass_methods:setFade","classlib":"Bass","description":"\nSets the fade distance of the sound in 3D space. Must have `3d` flag to get this work on."},"bass_library.soundsLeft":{"summary":"\nReturns the number of sounds left that can be created ","ret":"The number of sounds left","class":"function","private":false,"library":"bass","fname":"soundsLeft","realm":"cl","param":[],"name":"bass_library.soundsLeft","description":"\nReturns the number of sounds left that can be created"},"bass_methods:getLength":{"summary":"\nGets the length of a sound channel.","ret":"Sound channel length in seconds.","class":"function","private":false,"classlib":"Bass","fname":"getLength","realm":"cl","param":[],"name":"bass_methods:getLength","description":"\nGets the length of a sound channel."},"bass_methods:setPos":{"summary":"\nSets the position of the sound in 3D space.","class":"function","private":false,"param":{"1":"pos","pos":"Where to position the sound."},"fname":"setPos","realm":"cl","name":"bass_methods:setPos","classlib":"Bass","description":"\nSets the position of the sound in 3D space. Must have `3d` flag to get this work on."},"bass_methods:pause":{"summary":"\nPauses the sound.","class":"function","private":false,"param":[],"fname":"pause","realm":"cl","name":"bass_methods:pause","classlib":"Bass","description":"\nPauses the sound."},"bass_library.loadFile":{"summary":"\nLoads a sound channel from a file.","class":"function","private":false,"param":{"1":"path","2":"flags","3":"callback","path":"File path to play from.","callback":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name.","flags":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},"fname":"loadFile","realm":"cl","description":"\nLoads a sound channel from a file.","name":"bass_library.loadFile","library":"bass"},"bass_methods:setTime":{"summary":"\nSets the current playback time of the sound channel.","class":"function","private":false,"param":{"1":"time","time":"Sound channel playback time in seconds."},"fname":"setTime","realm":"cl","name":"bass_methods:setTime","classlib":"Bass","description":"\nSets the current playback time of the sound channel. Requires the 'noblock' flag"},"bass_methods:getFFT":{"summary":"\nPerform fast Fourier transform algorithm to compute the DFT of the sound channel.","ret":"Table containing DFT magnitudes, each between 0 and 1.","class":"function","private":false,"classlib":"Bass","fname":"getFFT","realm":"cl","param":{"1":"n","n":"Number of consecutive audio samples, between 0 and 7. Depending on this parameter you will get 256*2^n samples."},"name":"bass_methods:getFFT","description":"\nPerform fast Fourier transform algorithm to compute the DFT of the sound channel."},"bass_methods:play":{"summary":"\nStarts to play the sound.","class":"function","private":false,"param":[],"fname":"play","realm":"cl","name":"bass_methods:play","classlib":"Bass","description":"\nStarts to play the sound."},"bass_methods:getLevels":{"summary":"\nGets the left and right levels of the audio channel ","ret":["The left sound level, a value between 0 and 1.","The right sound level, a value between 0 and 1."],"class":"function","private":false,"classlib":"Bass","fname":"getLevels","realm":"cl","param":[],"name":"bass_methods:getLevels","description":"\nGets the left and right levels of the audio channel"},"bass_methods:stop":{"summary":"\nStops playing the sound.","class":"function","private":false,"param":[],"fname":"stop","realm":"cl","name":"bass_methods:stop","classlib":"Bass","description":"\nStops playing the sound."},"bass_methods:setPitch":{"summary":"\nSets the pitch of the sound channel.","class":"function","private":false,"param":{"1":"pitch","pitch":"Pitch to set to, between 0 and 3."},"fname":"setPitch","realm":"cl","name":"bass_methods:setPitch","classlib":"Bass","description":"\nSets the pitch of the sound channel."},"bass_methods:destroy":{"summary":"\nRemoves the sound from the game so new one can be created if limit is reached ","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"bass_methods:destroy","classlib":"Bass","description":"\nRemoves the sound from the game so new one can be created if limit is reached"},"bass_methods:setLooping":{"summary":"\nSets whether the sound channel should loop.","class":"function","private":false,"param":{"1":"loop","loop":"Boolean of whether the sound channel should loop."},"fname":"setLooping","realm":"cl","name":"bass_methods:setLooping","classlib":"Bass","description":"\nSets whether the sound channel should loop. Requires the 'noblock' flag"},"bass_methods:isValid":{"summary":"\nGets whether the bass is valid.","ret":"Boolean of whether the bass is valid.","class":"function","private":false,"classlib":"Bass","fname":"isValid","realm":"cl","param":[],"name":"bass_methods:isValid","description":"\nGets whether the bass is valid."},"bass_methods:isOnline":{"summary":"\nGets whether the sound channel is streamed online.","ret":"Boolean of whether the sound channel is streamed online.","class":"function","private":false,"classlib":"Bass","fname":"isOnline","realm":"cl","param":[],"name":"bass_methods:isOnline","description":"\nGets whether the sound channel is streamed online."},"bass_methods:getTime":{"summary":"\nGets the current playback time of the sound channel.","ret":"Sound channel playback time in seconds.","class":"function","private":false,"classlib":"Bass","fname":"getTime","realm":"cl","param":[],"name":"bass_methods:getTime","description":"\nGets the current playback time of the sound channel. Requires the 'noblock' flag"}},"libraries":{"1":"bass","bass":{"summary":"\n`bass` library is intended to be used only on client side.","tables":[],"client":true,"libtbl":"bass_library","fields":[],"class":"library","functions":{"1":"loadFile","2":"loadURL","3":"soundsLeft","loadURL":{"summary":"\nLoads a sound channel from an URL.","class":"function","private":false,"param":{"1":"path","2":"flags","3":"callback","path":"URL path to play from.","callback":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name.","flags":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},"fname":"loadURL","realm":"cl","description":"\nLoads a sound channel from an URL.","name":"bass_library.loadURL","library":"bass"},"loadFile":{"summary":"\nLoads a sound channel from a file.","class":"function","private":false,"param":{"1":"path","2":"flags","3":"callback","path":"File path to play from.","callback":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name.","flags":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},"fname":"loadFile","realm":"cl","description":"\nLoads a sound channel from a file.","name":"bass_library.loadFile","library":"bass"},"soundsLeft":{"summary":"\nReturns the number of sounds left that can be created ","ret":"The number of sounds left","class":"function","private":false,"library":"bass","fname":"soundsLeft","realm":"cl","param":[],"name":"bass_library.soundsLeft","description":"\nReturns the number of sounds left that can be created"}},"name":"bass","description":"\n`bass` library is intended to be used only on client side. It's good for streaming local and remote sound files and playing them directly in player's \"2D\" context."}},"type":"file","doc":[{"methods":{"1":"destroy","2":"getFFT","3":"getLength","4":"getLevels","5":"getTime","6":"isOnline","7":"isValid","8":"pause","9":"play","10":"setFade","11":"setLooping","12":"setPitch","13":"setPos","14":"setTime","15":"setVolume","16":"stop","stop":{"summary":"\nStops playing the sound.","class":"function","private":false,"param":[],"fname":"stop","realm":"cl","name":"bass_methods:stop","classlib":"Bass","description":"\nStops playing the sound."},"getLevels":{"summary":"\nGets the left and right levels of the audio channel ","ret":["The left sound level, a value between 0 and 1.","The right sound level, a value between 0 and 1."],"class":"function","private":false,"classlib":"Bass","fname":"getLevels","realm":"cl","param":[],"name":"bass_methods:getLevels","description":"\nGets the left and right levels of the audio channel"},"setFade":{"summary":"\nSets the fade distance of the sound in 3D space.","class":"function","private":false,"param":{"1":"min","2":"max","min":"The channel's volume is at maximum when the listener is within this distance","max":"The channel's volume stops decreasing when the listener is beyond this distance."},"fname":"setFade","realm":"cl","name":"bass_methods:setFade","classlib":"Bass","description":"\nSets the fade distance of the sound in 3D space. Must have `3d` flag to get this work on."},"getLength":{"summary":"\nGets the length of a sound channel.","ret":"Sound channel length in seconds.","class":"function","private":false,"classlib":"Bass","fname":"getLength","realm":"cl","param":[],"name":"bass_methods:getLength","description":"\nGets the length of a sound channel."},"setPitch":{"summary":"\nSets the pitch of the sound channel.","class":"function","private":false,"param":{"1":"pitch","pitch":"Pitch to set to, between 0 and 3."},"fname":"setPitch","realm":"cl","name":"bass_methods:setPitch","classlib":"Bass","description":"\nSets the pitch of the sound channel."},"setLooping":{"summary":"\nSets whether the sound channel should loop.","class":"function","private":false,"param":{"1":"loop","loop":"Boolean of whether the sound channel should loop."},"fname":"setLooping","realm":"cl","name":"bass_methods:setLooping","classlib":"Bass","description":"\nSets whether the sound channel should loop. Requires the 'noblock' flag"},"pause":{"summary":"\nPauses the sound.","class":"function","private":false,"param":[],"fname":"pause","realm":"cl","name":"bass_methods:pause","classlib":"Bass","description":"\nPauses the sound."},"destroy":{"summary":"\nRemoves the sound from the game so new one can be created if limit is reached ","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"bass_methods:destroy","classlib":"Bass","description":"\nRemoves the sound from the game so new one can be created if limit is reached"},"play":{"summary":"\nStarts to play the sound.","class":"function","private":false,"param":[],"fname":"play","realm":"cl","name":"bass_methods:play","classlib":"Bass","description":"\nStarts to play the sound."},"getFFT":{"summary":"\nPerform fast Fourier transform algorithm to compute the DFT of the sound channel.","ret":"Table containing DFT magnitudes, each between 0 and 1.","class":"function","private":false,"classlib":"Bass","fname":"getFFT","realm":"cl","param":{"1":"n","n":"Number of consecutive audio samples, between 0 and 7. Depending on this parameter you will get 256*2^n samples."},"name":"bass_methods:getFFT","description":"\nPerform fast Fourier transform algorithm to compute the DFT of the sound channel."},"setVolume":{"summary":"\nSets the volume of the sound channel.","class":"function","private":false,"param":{"1":"vol","vol":"Volume multiplier (1 is normal), between 0x and 10x."},"fname":"setVolume","realm":"cl","name":"bass_methods:setVolume","classlib":"Bass","description":"\nSets the volume of the sound channel."},"getTime":{"summary":"\nGets the current playback time of the sound channel.","ret":"Sound channel playback time in seconds.","class":"function","private":false,"classlib":"Bass","fname":"getTime","realm":"cl","param":[],"name":"bass_methods:getTime","description":"\nGets the current playback time of the sound channel. Requires the 'noblock' flag"},"setTime":{"summary":"\nSets the current playback time of the sound channel.","class":"function","private":false,"param":{"1":"time","time":"Sound channel playback time in seconds."},"fname":"setTime","realm":"cl","name":"bass_methods:setTime","classlib":"Bass","description":"\nSets the current playback time of the sound channel. Requires the 'noblock' flag"},"setPos":{"summary":"\nSets the position of the sound in 3D space.","class":"function","private":false,"param":{"1":"pos","pos":"Where to position the sound."},"fname":"setPos","realm":"cl","name":"bass_methods:setPos","classlib":"Bass","description":"\nSets the position of the sound in 3D space. Must have `3d` flag to get this work on."},"isOnline":{"summary":"\nGets whether the sound channel is streamed online.","ret":"Boolean of whether the sound channel is streamed online.","class":"function","private":false,"classlib":"Bass","fname":"isOnline","realm":"cl","param":[],"name":"bass_methods:isOnline","description":"\nGets whether the sound channel is streamed online."},"isValid":{"summary":"\nGets whether the bass is valid.","ret":"Boolean of whether the bass is valid.","class":"function","private":false,"classlib":"Bass","fname":"isValid","realm":"cl","param":[],"name":"bass_methods:isValid","description":"\nGets whether the bass is valid."}},"class":"class","client":true,"fields":[],"summary":"\nFor playing music there is `Bass` type.","typtbl":"bass_methods","name":"Bass","description":"\nFor playing music there is `Bass` type. You can pause and set current playback time in it. If you're looking to apply DSP effects on present game sounds, use `Sound` instead."},{"summary":"\n`bass` library is intended to be used only on client side.","tables":[],"client":true,"libtbl":"bass_library","fields":[],"class":"library","functions":{"1":"loadFile","2":"loadURL","3":"soundsLeft","loadURL":{"summary":"\nLoads a sound channel from an URL.","class":"function","private":false,"param":{"1":"path","2":"flags","3":"callback","path":"URL path to play from.","callback":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name.","flags":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},"fname":"loadURL","realm":"cl","description":"\nLoads a sound channel from an URL.","name":"bass_library.loadURL","library":"bass"},"loadFile":{"summary":"\nLoads a sound channel from a file.","class":"function","private":false,"param":{"1":"path","2":"flags","3":"callback","path":"File path to play from.","callback":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name.","flags":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},"fname":"loadFile","realm":"cl","description":"\nLoads a sound channel from a file.","name":"bass_library.loadFile","library":"bass"},"soundsLeft":{"summary":"\nReturns the number of sounds left that can be created ","ret":"The number of sounds left","class":"function","private":false,"library":"bass","fname":"soundsLeft","realm":"cl","param":[],"name":"bass_library.soundsLeft","description":"\nReturns the number of sounds left that can be created"}},"name":"bass","description":"\n`bass` library is intended to be used only on client side. It's good for streaming local and remote sound files and playing them directly in player's \"2D\" context."},{"summary":"\nLoads a sound channel from a file.","class":"function","private":false,"param":{"1":"path","2":"flags","3":"callback","path":"File path to play from.","callback":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name.","flags":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},"fname":"loadFile","realm":"cl","description":"\nLoads a sound channel from a file.","name":"bass_library.loadFile","library":"bass"},{"summary":"\nLoads a sound channel from an URL.","class":"function","private":false,"param":{"1":"path","2":"flags","3":"callback","path":"URL path to play from.","callback":"Function which is called when the sound channel is loaded. It'll get 3 arguments: `Bass` object, error number and name.","flags":"Flags for the sound (`3d`, `mono`, `noplay`, `noblock`)."},"fname":"loadURL","realm":"cl","description":"\nLoads a sound channel from an URL.","name":"bass_library.loadURL","library":"bass"},{"summary":"\nReturns the number of sounds left that can be created ","ret":"The number of sounds left","class":"function","private":false,"library":"bass","fname":"soundsLeft","realm":"cl","param":[],"name":"bass_library.soundsLeft","description":"\nReturns the number of sounds left that can be created"},{"summary":"\n ","description":"\n"},{"summary":"\nRemoves the sound from the game so new one can be created if limit is reached ","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"bass_methods:destroy","classlib":"Bass","description":"\nRemoves the sound from the game so new one can be created if limit is reached"},{"summary":"\nStarts to play the sound.","class":"function","private":false,"param":[],"fname":"play","realm":"cl","name":"bass_methods:play","classlib":"Bass","description":"\nStarts to play the sound."},{"summary":"\nStops playing the sound.","class":"function","private":false,"param":[],"fname":"stop","realm":"cl","name":"bass_methods:stop","classlib":"Bass","description":"\nStops playing the sound."},{"summary":"\nPauses the sound.","class":"function","private":false,"param":[],"fname":"pause","realm":"cl","name":"bass_methods:pause","classlib":"Bass","description":"\nPauses the sound."},{"summary":"\nSets the volume of the sound channel.","class":"function","private":false,"param":{"1":"vol","vol":"Volume multiplier (1 is normal), between 0x and 10x."},"fname":"setVolume","realm":"cl","name":"bass_methods:setVolume","classlib":"Bass","description":"\nSets the volume of the sound channel."},{"summary":"\nSets the pitch of the sound channel.","class":"function","private":false,"param":{"1":"pitch","pitch":"Pitch to set to, between 0 and 3."},"fname":"setPitch","realm":"cl","name":"bass_methods:setPitch","classlib":"Bass","description":"\nSets the pitch of the sound channel."},{"summary":"\nSets the position of the sound in 3D space.","class":"function","private":false,"param":{"1":"pos","pos":"Where to position the sound."},"fname":"setPos","realm":"cl","name":"bass_methods:setPos","classlib":"Bass","description":"\nSets the position of the sound in 3D space. Must have `3d` flag to get this work on."},{"summary":"\nSets the fade distance of the sound in 3D space.","class":"function","private":false,"param":{"1":"min","2":"max","min":"The channel's volume is at maximum when the listener is within this distance","max":"The channel's volume stops decreasing when the listener is beyond this distance."},"fname":"setFade","realm":"cl","name":"bass_methods:setFade","classlib":"Bass","description":"\nSets the fade distance of the sound in 3D space. Must have `3d` flag to get this work on."},{"summary":"\nSets whether the sound channel should loop.","class":"function","private":false,"param":{"1":"loop","loop":"Boolean of whether the sound channel should loop."},"fname":"setLooping","realm":"cl","name":"bass_methods:setLooping","classlib":"Bass","description":"\nSets whether the sound channel should loop. Requires the 'noblock' flag"},{"summary":"\nGets the length of a sound channel.","ret":"Sound channel length in seconds.","class":"function","private":false,"classlib":"Bass","fname":"getLength","realm":"cl","param":[],"name":"bass_methods:getLength","description":"\nGets the length of a sound channel."},{"summary":"\nSets the current playback time of the sound channel.","class":"function","private":false,"param":{"1":"time","time":"Sound channel playback time in seconds."},"fname":"setTime","realm":"cl","name":"bass_methods:setTime","classlib":"Bass","description":"\nSets the current playback time of the sound channel. Requires the 'noblock' flag"},{"summary":"\nGets the current playback time of the sound channel.","ret":"Sound channel playback time in seconds.","class":"function","private":false,"classlib":"Bass","fname":"getTime","realm":"cl","param":[],"name":"bass_methods:getTime","description":"\nGets the current playback time of the sound channel. Requires the 'noblock' flag"},{"summary":"\nPerform fast Fourier transform algorithm to compute the DFT of the sound channel.","ret":"Table containing DFT magnitudes, each between 0 and 1.","class":"function","private":false,"classlib":"Bass","fname":"getFFT","realm":"cl","param":{"1":"n","n":"Number of consecutive audio samples, between 0 and 7. Depending on this parameter you will get 256*2^n samples."},"name":"bass_methods:getFFT","description":"\nPerform fast Fourier transform algorithm to compute the DFT of the sound channel."},{"summary":"\nGets whether the sound channel is streamed online.","ret":"Boolean of whether the sound channel is streamed online.","class":"function","private":false,"classlib":"Bass","fname":"isOnline","realm":"cl","param":[],"name":"bass_methods:isOnline","description":"\nGets whether the sound channel is streamed online."},{"summary":"\nGets whether the bass is valid.","ret":"Boolean of whether the bass is valid.","class":"function","private":false,"classlib":"Bass","fname":"isValid","realm":"cl","param":[],"name":"bass_methods:isValid","description":"\nGets whether the bass is valid."},{"summary":"\nGets the left and right levels of the audio channel ","ret":["The left sound level, a value between 0 and 1.","The right sound level, a value between 0 and 1."],"class":"function","private":false,"classlib":"Bass","fname":"getLevels","realm":"cl","param":[],"name":"bass_methods:getLevels","description":"\nGets the left and right levels of the audio channel"}],"name":"libs_cl/bass.lua","description":"\nFor playing music there is `Bass` type. You can pause and set current playback time in it. If you're looking to apply DSP effects on present game sounds, use `Sound` instead."},"libs_sh/sounds.lua":{"summary":"\nSound type ","tables":[],"functions":{"1":"sound_library.canCreate","2":"sound_library.create","3":"sound_library.soundsLeft","4":"sound_methods:destroy","5":"sound_methods:isPlaying","6":"sound_methods:play","7":"sound_methods:setPitch","8":"sound_methods:setSoundLevel","9":"sound_methods:setVolume","10":"sound_methods:stop","sound_methods:destroy":{"summary":"\nRemoves the sound from the game so new one can be created if limit is reached ","class":"function","private":false,"param":[],"fname":"destroy","realm":"sh","name":"sound_methods:destroy","classlib":"Sound","description":"\nRemoves the sound from the game so new one can be created if limit is reached"},"sound_methods:play":{"summary":"\nStarts to play the sound.","class":"function","private":false,"param":[],"fname":"play","realm":"sh","name":"sound_methods:play","classlib":"Sound","description":"\nStarts to play the sound."},"sound_methods:setPitch":{"summary":"\nSets the pitch of the sound.","class":"function","private":false,"param":{"1":"pitch","2":"fade","pitch":"Pitch to set to, between 0 and 255.","fade":"Time in seconds to transition to this new pitch."},"fname":"setPitch","realm":"sh","name":"sound_methods:setPitch","classlib":"Sound","description":"\nSets the pitch of the sound."},"sound_methods:isPlaying":{"summary":"\nReturns whether the sound is being played.","class":"function","private":false,"param":[],"fname":"isPlaying","realm":"sh","name":"sound_methods:isPlaying","classlib":"Sound","description":"\nReturns whether the sound is being played."},"sound_methods:setSoundLevel":{"summary":"\nSets the sound level in dB.","class":"function","private":false,"param":{"1":"level","level":"dB level, see <a href='https://developer.valvesoftware.com/wiki/Soundscripts#SoundLevel'> Vale Dev Wiki</a>, for information on the value to use."},"fname":"setSoundLevel","realm":"sh","name":"sound_methods:setSoundLevel","classlib":"Sound","description":"\nSets the sound level in dB."},"sound_library.canCreate":{"summary":"\nReturns if a sound is able to be created ","ret":"If it is possible to make a sound","class":"function","private":false,"library":"sounds","fname":"canCreate","realm":"sh","param":[],"name":"sound_library.canCreate","description":"\nReturns if a sound is able to be created"},"sound_methods:setVolume":{"summary":"\nSets the volume of the sound.","class":"function","private":false,"param":{"1":"vol","2":"fade","vol":"Volume to set to, between 0 and 1.","fade":"Time in seconds to transition to this new volume."},"fname":"setVolume","realm":"sh","name":"sound_methods:setVolume","classlib":"Sound","description":"\nSets the volume of the sound."},"sound_methods:stop":{"summary":"\nStops the sound from being played.","class":"function","private":false,"param":{"1":"fade","fade":"Time in seconds to fade out, if nil or 0 the sound stops instantly."},"fname":"stop","realm":"sh","name":"sound_methods:stop","classlib":"Sound","description":"\nStops the sound from being played."},"sound_library.create":{"summary":"\nCreates a sound and attaches it to an entity ","ret":"Sound Object","class":"function","private":false,"library":"sounds","fname":"create","realm":"sh","param":{"1":"ent","2":"path","3":"nofilter","path":"Filepath to the sound file.","nofilter":"(Optional) Boolean Make the sound play for everyone regardless of range or location. Only affects Server-side sounds.","ent":"Entity to attach sound to."},"name":"sound_library.create","description":"\nCreates a sound and attaches it to an entity"},"sound_library.soundsLeft":{"summary":"\nReturns the number of sounds left that can be created ","ret":"The number of sounds left","class":"function","private":false,"library":"sounds","fname":"soundsLeft","realm":"sh","param":[],"name":"sound_library.soundsLeft","description":"\nReturns the number of sounds left that can be created"}},"libraries":{"1":"sounds","sounds":{"server":true,"tables":[],"client":true,"summary":"\nSounds library.","libtbl":"sound_library","fields":[],"class":"library","functions":{"1":"canCreate","2":"create","3":"soundsLeft","soundsLeft":{"summary":"\nReturns the number of sounds left that can be created ","ret":"The number of sounds left","class":"function","private":false,"library":"sounds","fname":"soundsLeft","realm":"sh","param":[],"name":"sound_library.soundsLeft","description":"\nReturns the number of sounds left that can be created"},"create":{"summary":"\nCreates a sound and attaches it to an entity ","ret":"Sound Object","class":"function","private":false,"library":"sounds","fname":"create","realm":"sh","param":{"1":"ent","2":"path","3":"nofilter","path":"Filepath to the sound file.","nofilter":"(Optional) Boolean Make the sound play for everyone regardless of range or location. Only affects Server-side sounds.","ent":"Entity to attach sound to."},"name":"sound_library.create","description":"\nCreates a sound and attaches it to an entity"},"canCreate":{"summary":"\nReturns if a sound is able to be created ","ret":"If it is possible to make a sound","class":"function","private":false,"library":"sounds","fname":"canCreate","realm":"sh","param":[],"name":"sound_library.canCreate","description":"\nReturns if a sound is able to be created"}},"name":"sounds","description":"\nSounds library."}},"type":"file","doc":[{"methods":{"1":"destroy","2":"isPlaying","3":"play","4":"setPitch","5":"setSoundLevel","6":"setVolume","7":"stop","stop":{"summary":"\nStops the sound from being played.","class":"function","private":false,"param":{"1":"fade","fade":"Time in seconds to fade out, if nil or 0 the sound stops instantly."},"fname":"stop","realm":"sh","name":"sound_methods:stop","classlib":"Sound","description":"\nStops the sound from being played."},"setVolume":{"summary":"\nSets the volume of the sound.","class":"function","private":false,"param":{"1":"vol","2":"fade","vol":"Volume to set to, between 0 and 1.","fade":"Time in seconds to transition to this new volume."},"fname":"setVolume","realm":"sh","name":"sound_methods:setVolume","classlib":"Sound","description":"\nSets the volume of the sound."},"isPlaying":{"summary":"\nReturns whether the sound is being played.","class":"function","private":false,"param":[],"fname":"isPlaying","realm":"sh","name":"sound_methods:isPlaying","classlib":"Sound","description":"\nReturns whether the sound is being played."},"setPitch":{"summary":"\nSets the pitch of the sound.","class":"function","private":false,"param":{"1":"pitch","2":"fade","pitch":"Pitch to set to, between 0 and 255.","fade":"Time in seconds to transition to this new pitch."},"fname":"setPitch","realm":"sh","name":"sound_methods:setPitch","classlib":"Sound","description":"\nSets the pitch of the sound."},"play":{"summary":"\nStarts to play the sound.","class":"function","private":false,"param":[],"fname":"play","realm":"sh","name":"sound_methods:play","classlib":"Sound","description":"\nStarts to play the sound."},"setSoundLevel":{"summary":"\nSets the sound level in dB.","class":"function","private":false,"param":{"1":"level","level":"dB level, see <a href='https://developer.valvesoftware.com/wiki/Soundscripts#SoundLevel'> Vale Dev Wiki</a>, for information on the value to use."},"fname":"setSoundLevel","realm":"sh","name":"sound_methods:setSoundLevel","classlib":"Sound","description":"\nSets the sound level in dB."},"destroy":{"summary":"\nRemoves the sound from the game so new one can be created if limit is reached ","class":"function","private":false,"param":[],"fname":"destroy","realm":"sh","name":"sound_methods:destroy","classlib":"Sound","description":"\nRemoves the sound from the game so new one can be created if limit is reached"}},"class":"class","client":true,"summary":"\nSound type ","fields":[],"server":true,"typtbl":"sound_methods","name":"Sound","description":"\nSound type"},{"server":true,"tables":[],"client":true,"summary":"\nSounds library.","libtbl":"sound_library","fields":[],"class":"library","functions":{"1":"canCreate","2":"create","3":"soundsLeft","soundsLeft":{"summary":"\nReturns the number of sounds left that can be created ","ret":"The number of sounds left","class":"function","private":false,"library":"sounds","fname":"soundsLeft","realm":"sh","param":[],"name":"sound_library.soundsLeft","description":"\nReturns the number of sounds left that can be created"},"create":{"summary":"\nCreates a sound and attaches it to an entity ","ret":"Sound Object","class":"function","private":false,"library":"sounds","fname":"create","realm":"sh","param":{"1":"ent","2":"path","3":"nofilter","path":"Filepath to the sound file.","nofilter":"(Optional) Boolean Make the sound play for everyone regardless of range or location. Only affects Server-side sounds.","ent":"Entity to attach sound to."},"name":"sound_library.create","description":"\nCreates a sound and attaches it to an entity"},"canCreate":{"summary":"\nReturns if a sound is able to be created ","ret":"If it is possible to make a sound","class":"function","private":false,"library":"sounds","fname":"canCreate","realm":"sh","param":[],"name":"sound_library.canCreate","description":"\nReturns if a sound is able to be created"}},"name":"sounds","description":"\nSounds library."},{"summary":"\nCreates a sound and attaches it to an entity ","ret":"Sound Object","class":"function","private":false,"library":"sounds","fname":"create","realm":"sh","param":{"1":"ent","2":"path","3":"nofilter","path":"Filepath to the sound file.","nofilter":"(Optional) Boolean Make the sound play for everyone regardless of range or location. Only affects Server-side sounds.","ent":"Entity to attach sound to."},"name":"sound_library.create","description":"\nCreates a sound and attaches it to an entity"},{"summary":"\nReturns if a sound is able to be created ","ret":"If it is possible to make a sound","class":"function","private":false,"library":"sounds","fname":"canCreate","realm":"sh","param":[],"name":"sound_library.canCreate","description":"\nReturns if a sound is able to be created"},{"summary":"\nReturns the number of sounds left that can be created ","ret":"The number of sounds left","class":"function","private":false,"library":"sounds","fname":"soundsLeft","realm":"sh","param":[],"name":"sound_library.soundsLeft","description":"\nReturns the number of sounds left that can be created"},{"summary":"\n ","description":"\n"},{"summary":"\nStarts to play the sound.","class":"function","private":false,"param":[],"fname":"play","realm":"sh","name":"sound_methods:play","classlib":"Sound","description":"\nStarts to play the sound."},{"summary":"\nStops the sound from being played.","class":"function","private":false,"param":{"1":"fade","fade":"Time in seconds to fade out, if nil or 0 the sound stops instantly."},"fname":"stop","realm":"sh","name":"sound_methods:stop","classlib":"Sound","description":"\nStops the sound from being played."},{"summary":"\nRemoves the sound from the game so new one can be created if limit is reached ","class":"function","private":false,"param":[],"fname":"destroy","realm":"sh","name":"sound_methods:destroy","classlib":"Sound","description":"\nRemoves the sound from the game so new one can be created if limit is reached"},{"summary":"\nSets the volume of the sound.","class":"function","private":false,"param":{"1":"vol","2":"fade","vol":"Volume to set to, between 0 and 1.","fade":"Time in seconds to transition to this new volume."},"fname":"setVolume","realm":"sh","name":"sound_methods:setVolume","classlib":"Sound","description":"\nSets the volume of the sound."},{"summary":"\nSets the pitch of the sound.","class":"function","private":false,"param":{"1":"pitch","2":"fade","pitch":"Pitch to set to, between 0 and 255.","fade":"Time in seconds to transition to this new pitch."},"fname":"setPitch","realm":"sh","name":"sound_methods:setPitch","classlib":"Sound","description":"\nSets the pitch of the sound."},{"summary":"\nReturns whether the sound is being played.","class":"function","private":false,"param":[],"fname":"isPlaying","realm":"sh","name":"sound_methods:isPlaying","classlib":"Sound","description":"\nReturns whether the sound is being played."},{"summary":"\nSets the sound level in dB.","class":"function","private":false,"param":{"1":"level","level":"dB level, see <a href='https://developer.valvesoftware.com/wiki/Soundscripts#SoundLevel'> Vale Dev Wiki</a>, for information on the value to use."},"fname":"setSoundLevel","realm":"sh","name":"sound_methods:setSoundLevel","classlib":"Sound","description":"\nSets the sound level in dB."}],"name":"libs_sh/sounds.lua","description":"\nSound type"},"libs_sh/coroutine.lua":{"summary":"\nCoroutine library ","tables":[],"functions":{"1":"coroutine_library.create","2":"coroutine_library.resume","3":"coroutine_library.running","4":"coroutine_library.status","5":"coroutine_library.wait","6":"coroutine_library.wrap","7":"coroutine_library.yield","coroutine_library.resume":{"summary":"\nResumes a suspended coroutine.","ret":"Any values the coroutine is returning to the main thread","class":"function","private":false,"library":"coroutine","fname":"resume","realm":"sh","param":{"1":"thread","2":"...","...":"optional parameters that will be passed to the coroutine","thread":"coroutine to resume"},"name":"coroutine_library.resume","description":"\nResumes a suspended coroutine. Note that, in contrast to Lua's native coroutine.resume function, it will not run in protected mode and can throw an error."},"coroutine_library.yield":{"summary":"\nSuspends the currently running coroutine.","ret":"Any values passed to the coroutine","class":"function","private":false,"library":"coroutine","fname":"yield","realm":"sh","param":{"1":"...","...":"optional parameters that will be returned to the main thread"},"name":"coroutine_library.yield","description":"\nSuspends the currently running coroutine. May not be called outside a coroutine."},"coroutine_library.status":{"summary":"\nReturns the status of the coroutine.","ret":"Either \"suspended\", \"running\", \"normal\" or \"dead\"","class":"function","private":false,"library":"coroutine","fname":"status","realm":"sh","param":{"1":"thread","thread":"The coroutine"},"name":"coroutine_library.status","description":"\nReturns the status of the coroutine."},"coroutine_library.running":{"summary":"\nReturns the coroutine that is currently running.","ret":"Currently running coroutine","class":"function","private":false,"library":"coroutine","fname":"running","realm":"sh","param":[],"name":"coroutine_library.running","description":"\nReturns the coroutine that is currently running."},"coroutine_library.wrap":{"summary":"\nCreates a new coroutine.","ret":"A function that, when called, resumes the created coroutine. Any parameters to that function will be passed to the coroutine.","class":"function","private":false,"library":"coroutine","fname":"wrap","realm":"sh","param":{"1":"func","func":"Function of the coroutine"},"name":"coroutine_library.wrap","description":"\nCreates a new coroutine."},"coroutine_library.wait":{"summary":"\nSuspends the coroutine for a number of seconds.","class":"function","private":false,"param":{"1":"time","time":"Time in seconds to suspend the coroutine"},"fname":"wait","realm":"sh","description":"\nSuspends the coroutine for a number of seconds. Note that the coroutine will not resume automatically, but any attempts to resume the coroutine while it is waiting will not resume the coroutine and act as if the coroutine suspended itself immediately.","name":"coroutine_library.wait","library":"coroutine"},"coroutine_library.create":{"summary":"\nCreates a new coroutine.","ret":"coroutine","class":"function","private":false,"library":"coroutine","fname":"create","realm":"sh","param":{"1":"func","func":"Function of the coroutine"},"name":"coroutine_library.create","description":"\nCreates a new coroutine."}},"libraries":{"1":"coroutine","coroutine":{"server":true,"tables":[],"client":true,"summary":"\nCoroutine library ","libtbl":"coroutine_library","fields":[],"class":"library","functions":{"1":"create","2":"resume","3":"running","4":"status","5":"wait","6":"wrap","7":"yield","status":{"summary":"\nReturns the status of the coroutine.","ret":"Either \"suspended\", \"running\", \"normal\" or \"dead\"","class":"function","private":false,"library":"coroutine","fname":"status","realm":"sh","param":{"1":"thread","thread":"The coroutine"},"name":"coroutine_library.status","description":"\nReturns the status of the coroutine."},"resume":{"summary":"\nResumes a suspended coroutine.","ret":"Any values the coroutine is returning to the main thread","class":"function","private":false,"library":"coroutine","fname":"resume","realm":"sh","param":{"1":"thread","2":"...","...":"optional parameters that will be passed to the coroutine","thread":"coroutine to resume"},"name":"coroutine_library.resume","description":"\nResumes a suspended coroutine. Note that, in contrast to Lua's native coroutine.resume function, it will not run in protected mode and can throw an error."},"running":{"summary":"\nReturns the coroutine that is currently running.","ret":"Currently running coroutine","class":"function","private":false,"library":"coroutine","fname":"running","realm":"sh","param":[],"name":"coroutine_library.running","description":"\nReturns the coroutine that is currently running."},"wrap":{"summary":"\nCreates a new coroutine.","ret":"A function that, when called, resumes the created coroutine. Any parameters to that function will be passed to the coroutine.","class":"function","private":false,"library":"coroutine","fname":"wrap","realm":"sh","param":{"1":"func","func":"Function of the coroutine"},"name":"coroutine_library.wrap","description":"\nCreates a new coroutine."},"wait":{"summary":"\nSuspends the coroutine for a number of seconds.","class":"function","private":false,"param":{"1":"time","time":"Time in seconds to suspend the coroutine"},"fname":"wait","realm":"sh","description":"\nSuspends the coroutine for a number of seconds. Note that the coroutine will not resume automatically, but any attempts to resume the coroutine while it is waiting will not resume the coroutine and act as if the coroutine suspended itself immediately.","name":"coroutine_library.wait","library":"coroutine"},"create":{"summary":"\nCreates a new coroutine.","ret":"coroutine","class":"function","private":false,"library":"coroutine","fname":"create","realm":"sh","param":{"1":"func","func":"Function of the coroutine"},"name":"coroutine_library.create","description":"\nCreates a new coroutine."},"yield":{"summary":"\nSuspends the currently running coroutine.","ret":"Any values passed to the coroutine","class":"function","private":false,"library":"coroutine","fname":"yield","realm":"sh","param":{"1":"...","...":"optional parameters that will be returned to the main thread"},"name":"coroutine_library.yield","description":"\nSuspends the currently running coroutine. May not be called outside a coroutine."}},"name":"coroutine","description":"\nCoroutine library"}},"type":"file","doc":[{"summary":"\nCoroutine library ","description":"\nCoroutine library"},{"server":true,"tables":[],"client":true,"summary":"\nCoroutine library ","libtbl":"coroutine_library","fields":[],"class":"library","functions":{"1":"create","2":"resume","3":"running","4":"status","5":"wait","6":"wrap","7":"yield","status":{"summary":"\nReturns the status of the coroutine.","ret":"Either \"suspended\", \"running\", \"normal\" or \"dead\"","class":"function","private":false,"library":"coroutine","fname":"status","realm":"sh","param":{"1":"thread","thread":"The coroutine"},"name":"coroutine_library.status","description":"\nReturns the status of the coroutine."},"resume":{"summary":"\nResumes a suspended coroutine.","ret":"Any values the coroutine is returning to the main thread","class":"function","private":false,"library":"coroutine","fname":"resume","realm":"sh","param":{"1":"thread","2":"...","...":"optional parameters that will be passed to the coroutine","thread":"coroutine to resume"},"name":"coroutine_library.resume","description":"\nResumes a suspended coroutine. Note that, in contrast to Lua's native coroutine.resume function, it will not run in protected mode and can throw an error."},"running":{"summary":"\nReturns the coroutine that is currently running.","ret":"Currently running coroutine","class":"function","private":false,"library":"coroutine","fname":"running","realm":"sh","param":[],"name":"coroutine_library.running","description":"\nReturns the coroutine that is currently running."},"wrap":{"summary":"\nCreates a new coroutine.","ret":"A function that, when called, resumes the created coroutine. Any parameters to that function will be passed to the coroutine.","class":"function","private":false,"library":"coroutine","fname":"wrap","realm":"sh","param":{"1":"func","func":"Function of the coroutine"},"name":"coroutine_library.wrap","description":"\nCreates a new coroutine."},"wait":{"summary":"\nSuspends the coroutine for a number of seconds.","class":"function","private":false,"param":{"1":"time","time":"Time in seconds to suspend the coroutine"},"fname":"wait","realm":"sh","description":"\nSuspends the coroutine for a number of seconds. Note that the coroutine will not resume automatically, but any attempts to resume the coroutine while it is waiting will not resume the coroutine and act as if the coroutine suspended itself immediately.","name":"coroutine_library.wait","library":"coroutine"},"create":{"summary":"\nCreates a new coroutine.","ret":"coroutine","class":"function","private":false,"library":"coroutine","fname":"create","realm":"sh","param":{"1":"func","func":"Function of the coroutine"},"name":"coroutine_library.create","description":"\nCreates a new coroutine."},"yield":{"summary":"\nSuspends the currently running coroutine.","ret":"Any values passed to the coroutine","class":"function","private":false,"library":"coroutine","fname":"yield","realm":"sh","param":{"1":"...","...":"optional parameters that will be returned to the main thread"},"name":"coroutine_library.yield","description":"\nSuspends the currently running coroutine. May not be called outside a coroutine."}},"name":"coroutine","description":"\nCoroutine library"},{"summary":"\nCreates a new coroutine.","ret":"coroutine","class":"function","private":false,"library":"coroutine","fname":"create","realm":"sh","param":{"1":"func","func":"Function of the coroutine"},"name":"coroutine_library.create","description":"\nCreates a new coroutine."},{"summary":"\nCreates a new coroutine.","ret":"A function that, when called, resumes the created coroutine. Any parameters to that function will be passed to the coroutine.","class":"function","private":false,"library":"coroutine","fname":"wrap","realm":"sh","param":{"1":"func","func":"Function of the coroutine"},"name":"coroutine_library.wrap","description":"\nCreates a new coroutine."},{"summary":"\nResumes a suspended coroutine.","ret":"Any values the coroutine is returning to the main thread","class":"function","private":false,"library":"coroutine","fname":"resume","realm":"sh","param":{"1":"thread","2":"...","...":"optional parameters that will be passed to the coroutine","thread":"coroutine to resume"},"name":"coroutine_library.resume","description":"\nResumes a suspended coroutine. Note that, in contrast to Lua's native coroutine.resume function, it will not run in protected mode and can throw an error."},{"summary":"\nSuspends the currently running coroutine.","ret":"Any values passed to the coroutine","class":"function","private":false,"library":"coroutine","fname":"yield","realm":"sh","param":{"1":"...","...":"optional parameters that will be returned to the main thread"},"name":"coroutine_library.yield","description":"\nSuspends the currently running coroutine. May not be called outside a coroutine."},{"summary":"\nReturns the status of the coroutine.","ret":"Either \"suspended\", \"running\", \"normal\" or \"dead\"","class":"function","private":false,"library":"coroutine","fname":"status","realm":"sh","param":{"1":"thread","thread":"The coroutine"},"name":"coroutine_library.status","description":"\nReturns the status of the coroutine."},{"summary":"\nReturns the coroutine that is currently running.","ret":"Currently running coroutine","class":"function","private":false,"library":"coroutine","fname":"running","realm":"sh","param":[],"name":"coroutine_library.running","description":"\nReturns the coroutine that is currently running."},{"summary":"\nSuspends the coroutine for a number of seconds.","class":"function","private":false,"param":{"1":"time","time":"Time in seconds to suspend the coroutine"},"fname":"wait","realm":"sh","description":"\nSuspends the coroutine for a number of seconds. Note that the coroutine will not resume automatically, but any attempts to resume the coroutine while it is waiting will not resume the coroutine and act as if the coroutine suspended itself immediately.","name":"coroutine_library.wait","library":"coroutine"}],"name":"libs_sh/coroutine.lua","description":"\nCoroutine library"},"libs_cl/render.lua":{"summary":"\n \nRender library \n ","tables":{"1":"Screen information table","2":"Vertex Format","Vertex Format":{"summary":"\nVertex format ","classForced":true,"field":{"1":"x","2":"y","3":"u","4":"v","y":"Y coordinate","x":"X coordinate","v":"V coordinate (optional, default is 0)","u":"U coordinate (optional, default is 0)"},"class":"table","description":"\nVertex format","name":"Vertex Format","param":[]},"Screen information table":{"summary":"\n ","class":"table","classForced":true,"field":{"1":"Name","2":"offset","3":"RS","4":"RatioX","5":"x1","6":"x2","7":"y1","8":"y2","9":"z","10":"rot","x2":"Corner of screen in local coordinates (relative to offset?)","RS":"Resolution/scale","rot":"Screen rotation","Name":"Pretty name of model","RatioX":"Inverted Aspect ratio (height divided by width)","offset":"Offset of screen from prop","y2":"Corner of screen in local coordinates (relative to offset?)","x1":"Corner of screen in local coordinates (relative to offset?)","z":"Screen plane offset in local coordinates (relative to offset?)","y1":"Corner of screen in local coordinates (relative to offset?)"},"name":"Screen information table","description":"\n"}},"functions":{"1":"render_library.capturePixels","2":"render_library.clear","3":"render_library.clearBuffersObeyStencil","4":"render_library.clearDepth","5":"render_library.clearStencil","6":"render_library.clearStencilBufferRectangle","7":"render_library.createFont","8":"render_library.createMaterial","9":"render_library.createRenderTarget","10":"render_library.cursorPos","11":"render_library.destroyRenderTarget","12":"render_library.destroyTexture","13":"render_library.disableScissorRect","14":"render_library.draw3DBeam","15":"render_library.draw3DBox","16":"render_library.draw3DLine","17":"render_library.draw3DQuad","18":"render_library.draw3DQuadUV","19":"render_library.draw3DSphere","20":"render_library.draw3DSprite","21":"render_library.draw3DWireframeBox","22":"render_library.draw3DWireframeSphere","23":"render_library.drawCircle","24":"render_library.drawLine","25":"render_library.drawPoly","26":"render_library.drawRect","27":"render_library.drawRectFast","28":"render_library.drawRectOutline","29":"render_library.drawRoundedBox","30":"render_library.drawRoundedBoxEx","31":"render_library.drawSimpleText","32":"render_library.drawText","33":"render_library.drawTexturedRect","34":"render_library.drawTexturedRectFast","35":"render_library.drawTexturedRectRotated","36":"render_library.drawTexturedRectRotatedFast","37":"render_library.drawTexturedRectUV","38":"render_library.drawTexturedRectUVFast","39":"render_library.enableClipping","40":"render_library.enableDepth","41":"render_library.enableScissorRect","42":"render_library.getDefaultFont","43":"render_library.getGameResolution","44":"render_library.getResolution","45":"render_library.getScreenEntity","46":"render_library.getScreenInfo","47":"render_library.getTextSize","48":"render_library.isHUDActive","49":"render_library.isInRenderView","50":"render_library.overrideBlend","51":"render_library.parseMarkup","52":"render_library.popCustomClipPlane","53":"render_library.popMatrix","54":"render_library.popViewMatrix","55":"render_library.pushCustomClipPlane","56":"render_library.pushMatrix","57":"render_library.pushViewMatrix","58":"render_library.readPixel","59":"render_library.renderView","60":"render_library.renderViewsLeft","61":"render_library.selectRenderTarget","62":"render_library.setBackgroundColor","63":"render_library.setColor","64":"render_library.setCullMode","65":"render_library.setFilterMag","66":"render_library.setFilterMin","67":"render_library.setFont","68":"render_library.setHUDActive","69":"render_library.setLightingMode","70":"render_library.setMaterial","71":"render_library.setRGBA","72":"render_library.setRenderTargetTexture","73":"render_library.setStencilCompareFunction","74":"render_library.setStencilEnable","75":"render_library.setStencilFailOperation","76":"render_library.setStencilPassOperation","77":"render_library.setStencilReferenceValue","78":"render_library.setStencilTestMask","79":"render_library.setStencilWriteMask","80":"render_library.setStencilZFailOperation","81":"render_library.setTextureFromScreen","82":"render_library.traceSurfaceColor","render_library.setFilterMag":{"summary":"\nSets the texture filtering function when viewing a close texture ","class":"function","private":false,"param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"fname":"setFilterMag","realm":"cl","description":"\nSets the texture filtering function when viewing a close texture","name":"render_library.setFilterMag","library":"render"},"render_library.setFont":{"summary":"\nSets the font ","class":"function","usage":"Use a font created by render.createFont or use one of these already defined fonts: \n- DebugFixed \n- DebugFixedSmall \n- Default \n- Marlett \n- Trebuchet18 \n- Trebuchet24 \n- HudHintTextLarge \n- HudHintTextSmall \n- CenterPrintText \n- HudSelectionText \n- CloseCaption_Normal \n- CloseCaption_Bold \n- CloseCaption_BoldItalic \n- ChatFont \n- TargetID \n- TargetIDSmall \n- HL2MPTypeDeath \n- BudgetLabel \n- HudNumbers \n- DermaDefault \n- DermaDefaultBold \n- DermaLarge","private":false,"library":"render","fname":"setFont","realm":"cl","param":{"1":"font","font":"The font to use"},"name":"render_library.setFont","description":"\nSets the font"},"render_library.renderView":{"summary":"\nRenders the scene with the specified viewData to the current active render target.","class":"function","private":false,"param":{"1":"tbl","tbl":"view The view data to be used in the rendering. See http://wiki.garrysmod.com/page/Structures/ViewData. There's an additional key drawviewer used to tell the engine whether the local player model should be rendered."},"fname":"renderView","realm":"cl","description":"\nRenders the scene with the specified viewData to the current active render target.","name":"render_library.renderView","library":"render"},"render_library.getDefaultFont":{"summary":"\nGets the default font ","ret":"Default font","class":"function","private":false,"library":"render","fname":"getDefaultFont","realm":"cl","param":[],"name":"render_library.getDefaultFont","description":"\nGets the default font"},"render_library.setStencilReferenceValue":{"summary":"\nSets the reference value which will be used for all stencil operations.","class":"function","private":false,"param":{"1":"referenceValue","referenceValue":"Reference value."},"fname":"setStencilReferenceValue","realm":"cl","description":"\nSets the reference value which will be used for all stencil operations. This is an unsigned integer.","name":"render_library.setStencilReferenceValue","library":"render"},"render_library.drawTexturedRectUVFast":{"summary":"\nDraws a textured rectangle with UV coordinates \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"startU","6":"startV","7":"endU","8":"endV","9":"UVHack","startV":"Texture mapping at rectangle origin","x":"Top left corner x","UVHack":"If enabled, will scale the UVs to compensate for internal bug. Should be true for user created materials.","w":"Width","y":"Top left corner y","h":"Height","startU":"Texture mapping at rectangle origin","endV":"Texture mapping at rectangle end"},"fname":"drawTexturedRectUVFast","realm":"cl","description":"\nDraws a textured rectangle with UV coordinates \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectUVFast","library":"render"},"render_library.drawTexturedRectUV":{"summary":"\nDraws a textured rectangle with UV coordinates ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"startU","6":"startV","7":"endU","8":"endV","startV":"Texture mapping at rectangle origin","x":"Top left corner x","w":"Width","y":"Top left corner y","h":"Height","startU":"Texture mapping at rectangle origin","endV":"Texture mapping at rectangle end"},"fname":"drawTexturedRectUV","realm":"cl","description":"\nDraws a textured rectangle with UV coordinates","name":"render_library.drawTexturedRectUV","library":"render"},"render_library.drawCircle":{"summary":"\nDraws a circle outline ","class":"function","private":false,"param":{"1":"x","2":"y","3":"r","y":"Center y coordinate","x":"Center x coordinate","r":"Radius"},"fname":"drawCircle","realm":"cl","description":"\nDraws a circle outline","name":"render_library.drawCircle","library":"render"},"render_library.draw3DSprite":{"summary":"\nDraws a sprite in 3d space.","class":"function","private":false,"param":{"1":"pos","2":"width","3":"height","width":"Width of the sprite.","height":"Height of the sprite.","pos":"Position of the sprite."},"fname":"draw3DSprite","realm":"cl","description":"\nDraws a sprite in 3d space.","name":"render_library.draw3DSprite","library":"render"},"render_library.draw3DSphere":{"summary":"\nDraws a sphere ","class":"function","private":false,"param":{"1":"pos","2":"radius","3":"longitudeSteps","4":"latitudeSteps","longitudeSteps":"The amount of longitude steps. The larger this number is, the smoother the sphere is","pos":"Position of the sphere","radius":"Radius of the sphere","latitudeSteps":"The amount of latitude steps. The larger this number is, the smoother the sphere is"},"fname":"draw3DSphere","realm":"cl","description":"\nDraws a sphere","name":"render_library.draw3DSphere","library":"render"},"render_library.destroyTexture":{"summary":"\nReleases the texture.","class":"function","private":false,"param":{"1":"mat","mat":"The material object"},"fname":"destroyTexture","realm":"cl","description":"\nReleases the texture. Required if you reach the maximum url textures.","name":"render_library.destroyTexture","library":"render"},"render_library.parseMarkup":{"summary":"\nConstructs a markup object for quick styled text drawing.","ret":"The markup object. See https://wiki.garrysmod.com/page/Category:MarkupObject","class":"function","private":false,"library":"render","fname":"parseMarkup","realm":"cl","param":{"1":"str","2":"maxsize","maxsize":"The max width of the markup","str":"The markup string to parse"},"name":"render_library.parseMarkup","description":"\nConstructs a markup object for quick styled text drawing."},"render_library.selectRenderTarget":{"summary":"\nSelects the render target to draw on.","class":"function","private":false,"param":{"1":"name","name":"Name of the render target to use"},"fname":"selectRenderTarget","realm":"cl","description":"\nSelects the render target to draw on. \nNil for the visible RT.","name":"render_library.selectRenderTarget","library":"render"},"render_library.clear":{"summary":"\nClears the active render target ","class":"function","private":false,"param":{"1":"clr","2":"depth","clr":"Color type to clear with","depth":"Boolean if should clear depth"},"fname":"clear","realm":"cl","description":"\nClears the active render target","name":"render_library.clear","library":"render"},"render_library.setStencilWriteMask":{"summary":"\nSets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer.","class":"function","private":false,"param":{"1":"mask","mask":"The mask bitflag."},"fname":"setStencilWriteMask","realm":"cl","description":"\nSets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer.","name":"render_library.setStencilWriteMask","library":"render"},"render_library.drawRectOutline":{"summary":"\nDraws a rectangle outline using the current color.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y integer coordinate","x":"Top left corner x integer coordinate","h":"Height","w":"Width"},"fname":"drawRectOutline","realm":"cl","description":"\nDraws a rectangle outline using the current color.","name":"render_library.drawRectOutline","library":"render"},"render_library.setHUDActive":{"summary":"\nSets the current instance to allow HUD drawing.","class":"function","private":false,"param":{"1":"active","active":"Whether hud hooks should be active. true to force on, false to force off, nil to restore default."},"fname":"setHUDActive","realm":"cl","description":"\nSets the current instance to allow HUD drawing. Only works for owner of the chip","name":"render_library.setHUDActive","library":"render"},"render_library.capturePixels":{"summary":"\nDumps the current render target and allows the pixels to be accessed by render.readPixel.","class":"function","private":false,"param":[],"fname":"capturePixels","realm":"cl","description":"\nDumps the current render target and allows the pixels to be accessed by render.readPixel.","name":"render_library.capturePixels","library":"render"},"render_library.pushMatrix":{"summary":"\nPushes a matrix onto the matrix stack.","class":"function","private":false,"param":{"1":"m","2":"world","world":"Should the transformation be relative to the screen or world?","m":"The matrix"},"fname":"pushMatrix","realm":"cl","description":"\nPushes a matrix onto the matrix stack.","name":"render_library.pushMatrix","library":"render"},"render_library.setBackgroundColor":{"summary":"\nSets background color of screen ","class":"function","private":false,"param":{"1":"col","2":"screen","col":"Color of background"},"fname":"setBackgroundColor","realm":"cl","description":"\nSets background color of screen","name":"render_library.setBackgroundColor","library":"render"},"render_library.getTextSize":{"summary":"\nGets the size of the specified text.","ret":["width of the text","height of the text"],"class":"function","private":false,"library":"render","fname":"getTextSize","realm":"cl","param":{"1":"text","text":"Text to get the size of"},"name":"render_library.getTextSize","description":"\nGets the size of the specified text. Don't forget to use setFont before calling this function"},"render_library.draw3DQuadUV":{"summary":"\nDraws 2 connected triangles with custom UVs.","class":"function","private":false,"param":{"1":"vert1","2":"vert2","3":"vert3","4":"vert4","vert4":"The fourth vertex.","vert1":"First vertex. {x, y, z, u, v}","vert3":"The third vertex.","vert2":"The second vertex."},"fname":"draw3DQuadUV","realm":"cl","description":"\nDraws 2 connected triangles with custom UVs.","name":"render_library.draw3DQuadUV","library":"render"},"render_library.drawTexturedRectFast":{"summary":"\nDraws a textured rectangle \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawTexturedRectFast","realm":"cl","description":"\nDraws a textured rectangle \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectFast","library":"render"},"render_library.createMaterial":{"summary":"\nLooks up a texture by file name and creates an UnlitGeneric material with it.","ret":"The material. Use with render.setMaterial to draw with it.","class":"function","private":false,"library":"render","fname":"createMaterial","realm":"cl","param":{"1":"tx","2":"cb","3":"done","done":"An optional callback called when the image is done loading. Passes the material, url","tx":"Texture file path, a http url, or image data: https://en.wikipedia.org/wiki/Data_URI_scheme","cb":"An optional callback called when loading is done. Passes nil if it fails or Passes the material, url, width, height, and layout function which can be called with x, y, w, h to reposition the image in the texture."},"name":"render_library.createMaterial","description":"\nLooks up a texture by file name and creates an UnlitGeneric material with it. \nAlso supports image URLs or image data: https://en.wikipedia.org/wiki/Data_URI_scheme \nMake sure to store the material to use it rather than calling this slow function repeatedly. \nNOTE: This no longer supports material names. Use texture names instead (Textures are .vtf, material are .vmt)"},"render_library.enableDepth":{"summary":"\nEnables or disables Depth Buffer ","class":"function","private":false,"param":{"1":"enable","enable":"true to enable"},"fname":"enableDepth","realm":"cl","description":"\nEnables or disables Depth Buffer","name":"render_library.enableDepth","library":"render"},"render_library.getScreenEntity":{"summary":"\nReturns the entity currently being rendered to ","ret":"Entity of the screen or hud being rendered","class":"function","private":false,"library":"render","fname":"getScreenEntity","realm":"cl","param":[],"name":"render_library.getScreenEntity","description":"\nReturns the entity currently being rendered to"},"render_library.draw3DBox":{"summary":"\nDraws a box in 3D space ","class":"function","private":false,"param":{"1":"origin","2":"angle","3":"mins","4":"maxs","mins":"Start position of the box, relative to origin.","angle":"Orientation of the box","maxs":"End position of the box, relative to origin.","origin":"Origin of the box."},"fname":"draw3DBox","realm":"cl","description":"\nDraws a box in 3D space","name":"render_library.draw3DBox","library":"render"},"render_library.isHUDActive":{"summary":"\nChecks if a hud component is connected to the Starfall Chip ","class":"function","private":false,"param":[],"fname":"isHUDActive","realm":"cl","description":"\nChecks if a hud component is connected to the Starfall Chip","name":"render_library.isHUDActive","library":"render"},"render_library.setStencilFailOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the compare function was not successful.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilFailOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the compare function was not successful. More: http://wiki.garrysmod.com/page/render/SetStencilFailOperation","name":"render_library.setStencilFailOperation","library":"render"},"render_library.enableClipping":{"summary":"\nSets the status of the clip renderer, returning previous state.","ret":"Previous clipping state.","class":"function","private":false,"library":"render","fname":"enableClipping","realm":"cl","param":{"1":"state","state":"New clipping state."},"name":"render_library.enableClipping","description":"\nSets the status of the clip renderer, returning previous state."},"render_library.clearStencilBufferRectangle":{"summary":"\nSets the stencil value in a specified rect.","class":"function","private":false,"param":{"1":"originX","2":"originY","3":"endX","4":"endY","5":"stencilValue","stencilValue":"Value to set cleared stencil buffer to.","endX":"The end X coordinate of the rectangle.","originX":"X origin of the rectangle.","endY":"The end Y coordinate of the rectangle.","originY":"Y origin of the rectangle."},"fname":"clearStencilBufferRectangle","realm":"cl","description":"\nSets the stencil value in a specified rect.","name":"render_library.clearStencilBufferRectangle","library":"render"},"render_library.drawTexturedRect":{"summary":"\nDraws a textured rectangle ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawTexturedRect","realm":"cl","description":"\nDraws a textured rectangle","name":"render_library.drawTexturedRect","library":"render"},"render_library.popViewMatrix":{"summary":"\nPops a view matrix from the matrix stack.","class":"function","private":false,"param":[],"fname":"popViewMatrix","realm":"cl","description":"\nPops a view matrix from the matrix stack.","name":"render_library.popViewMatrix","library":"render"},"render_library.drawRoundedBox":{"summary":"\nDraws a rounded rectangle using the current color ","class":"function","private":false,"param":{"1":"r","2":"x","3":"y","4":"w","5":"h","x":"Top left corner x coordinate","w":"Width","r":"The corner radius","h":"Height","y":"Top left corner y coordinate"},"fname":"drawRoundedBox","realm":"cl","description":"\nDraws a rounded rectangle using the current color","name":"render_library.drawRoundedBox","library":"render"},"render_library.setStencilZFailOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilZFailOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails. More: http://wiki.garrysmod.com/page/render/SetStencilZFailOperation","name":"render_library.setStencilZFailOperation","library":"render"},"render_library.overrideBlend":{"summary":"\nEnables blend mode control.","class":"function","private":false,"param":{"1":"on","2":"srcBlend","3":"destBlend","4":"blendFunc","5":"srcBlendAlpha","6":"destBlendAlpha","7":"blendFuncAlpha","blendFuncAlpha":"Optional Number http://wiki.garrysmod.com/page/Enums/BLENDFUNC","srcBlend":"Number http://wiki.garrysmod.com/page/Enums/BLEND","destBlendAlpha":"Optional Number","srcBlendAlpha":"Optional Number http://wiki.garrysmod.com/page/Enums/BLEND","blendFunc":"Number http://wiki.garrysmod.com/page/Enums/BLENDFUNC","on":"Whether to control the blend mode of upcoming rendering","destBlend":"Number"},"fname":"overrideBlend","realm":"cl","description":"\nEnables blend mode control. Read OpenGL or DirectX docs for more info","name":"render_library.overrideBlend","library":"render"},"render_library.draw3DWireframeBox":{"summary":"\nDraws a wireframe box in 3D space ","class":"function","private":false,"param":{"1":"origin","2":"angle","3":"mins","4":"maxs","mins":"Start position of the box, relative to origin.","angle":"Orientation of the box","maxs":"End position of the box, relative to origin.","origin":"Origin of the box."},"fname":"draw3DWireframeBox","realm":"cl","description":"\nDraws a wireframe box in 3D space","name":"render_library.draw3DWireframeBox","library":"render"},"render_library.clearStencil":{"summary":"\nResets all values in the stencil buffer to zero.","class":"function","private":false,"param":[],"fname":"clearStencil","realm":"cl","description":"\nResets all values in the stencil buffer to zero.","name":"render_library.clearStencil","library":"render"},"render_library.setStencilTestMask":{"summary":"\nSets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","class":"function","private":false,"param":{"1":"mask","mask":"The mask bitflag."},"fname":"setStencilTestMask","realm":"cl","description":"\nSets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","name":"render_library.setStencilTestMask","library":"render"},"render_library.setFilterMin":{"summary":"\nSets the texture filtering function when viewing a far texture ","class":"function","private":false,"param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"fname":"setFilterMin","realm":"cl","description":"\nSets the texture filtering function when viewing a far texture","name":"render_library.setFilterMin","library":"render"},"render_library.drawRect":{"summary":"\nDraws a rectangle using the current color ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawRect","realm":"cl","description":"\nDraws a rectangle using the current color","name":"render_library.drawRect","library":"render"},"render_library.traceSurfaceColor":{"summary":"\nDoes a trace and returns the color of the textel the trace hits.","ret":"The color","class":"function","private":false,"library":"render","fname":"traceSurfaceColor","realm":"cl","param":{"1":"vec1","2":"vec2","vec2":"The ending vector","vec1":"The starting vector"},"name":"render_library.traceSurfaceColor","description":"\nDoes a trace and returns the color of the textel the trace hits."},"render_library.readPixel":{"summary":"\nReads the color of the specified pixel.","ret":"Color object with ( r, g, b, 255 ) from the specified pixel.","class":"function","private":false,"library":"render","fname":"readPixel","realm":"cl","param":{"1":"x","2":"y","y":"Pixel y-coordinate.","x":"Pixel x-coordinate."},"name":"render_library.readPixel","description":"\nReads the color of the specified pixel."},"render_library.setMaterial":{"summary":"\nSets the current render material ","class":"function","private":false,"param":{"1":"mat","mat":"The material object"},"fname":"setMaterial","realm":"cl","description":"\nSets the current render material","name":"render_library.setMaterial","library":"render"},"render_library.drawSimpleText":{"summary":"\nDraws text more easily and quickly but no new lines or tabs.","class":"function","private":false,"param":{"1":"x","2":"y","3":"text","4":"xalign","5":"yalign","x":"X coordinate","y":"Y coordinate","yalign":"Text y alignment","xalign":"Text x alignment","text":"Text to draw"},"fname":"drawSimpleText","realm":"cl","description":"\nDraws text more easily and quickly but no new lines or tabs.","name":"render_library.drawSimpleText","library":"render"},"render_library.setColor":{"summary":"\nSets the draw color ","class":"function","private":false,"param":{"1":"clr","clr":"Color type"},"fname":"setColor","realm":"cl","description":"\nSets the draw color","name":"render_library.setColor","library":"render"},"render_library.disableScissorRect":{"summary":"\nDisables a scissoring rect which limits the drawing area.","class":"function","private":false,"param":[],"fname":"disableScissorRect","realm":"cl","description":"\nDisables a scissoring rect which limits the drawing area.","name":"render_library.disableScissorRect","library":"render"},"render_library.draw3DWireframeSphere":{"summary":"\nDraws a wireframe sphere ","class":"function","private":false,"param":{"1":"pos","2":"radius","3":"longitudeSteps","4":"latitudeSteps","longitudeSteps":"The amount of longitude steps. The larger this number is, the smoother the sphere is","pos":"Position of the sphere","radius":"Radius of the sphere","latitudeSteps":"The amount of latitude steps. The larger this number is, the smoother the sphere is"},"fname":"draw3DWireframeSphere","realm":"cl","description":"\nDraws a wireframe sphere","name":"render_library.draw3DWireframeSphere","library":"render"},"render_library.getResolution":{"summary":"\nReturns the render context's width and height ","classForced":true,"ret":["the X size of the current render context","the Y size of the current render context"],"class":"function","param":[],"private":false,"fname":"getResolution","library":"render","realm":"cl","name":"render_library.getResolution","description":"\nReturns the render context's width and height"},"render_library.clearDepth":{"summary":"\nResets the depth buffer ","class":"function","private":false,"param":[],"fname":"clearDepth","realm":"cl","description":"\nResets the depth buffer","name":"render_library.clearDepth","library":"render"},"render_library.setLightingMode":{"summary":"\nSets the lighting mode ","class":"function","private":false,"param":{"1":"mode","mode":"The lighting mode. 0 - Default, 1 - Fullbright, 2 - Increased Fullbright"},"fname":"setLightingMode","realm":"cl","description":"\nSets the lighting mode","name":"render_library.setLightingMode","library":"render"},"render_library.drawTexturedRectRotatedFast":{"summary":"\nDraws a rotated, textured rectangle.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"rot","x":"X coordinate of center of rect","w":"Width","y":"Y coordinate of center of rect","h":"Height","rot":"Rotation in degrees"},"fname":"drawTexturedRectRotatedFast","realm":"cl","description":"\nDraws a rotated, textured rectangle. \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectRotatedFast","library":"render"},"render_library.popCustomClipPlane":{"summary":"\nRemoves the current active clipping plane from the clip plane stack.","class":"function","private":false,"param":[],"fname":"popCustomClipPlane","realm":"cl","description":"\nRemoves the current active clipping plane from the clip plane stack.","name":"render_library.popCustomClipPlane","library":"render"},"render_library.renderViewsLeft":{"summary":"\nReturns how many render.renderView calls can be done in the current frame.","class":"function","private":false,"param":[],"fname":"renderViewsLeft","realm":"cl","description":"\nReturns how many render.renderView calls can be done in the current frame.","name":"render_library.renderViewsLeft","library":"render"},"render_library.setCullMode":{"summary":"\nChanges the cull mode ","class":"function","private":false,"param":{"1":"mode","mode":"Cull mode. 0 for counter clock wise, 1 for clock wise"},"fname":"setCullMode","realm":"cl","description":"\nChanges the cull mode","name":"render_library.setCullMode","library":"render"},"render_library.pushCustomClipPlane":{"summary":"\nPushes a new clipping plane of the clip plane stack.","class":"function","private":false,"param":{"1":"normal","2":"distance","normal":"The normal of the clipping plane.","distance":"The normal of the clipping plane."},"fname":"pushCustomClipPlane","realm":"cl","description":"\nPushes a new clipping plane of the clip plane stack.","name":"render_library.pushCustomClipPlane","library":"render"},"render_library.isInRenderView":{"summary":"\nReturns whether render.renderView is being executed.","class":"function","private":false,"param":[],"fname":"isInRenderView","realm":"cl","description":"\nReturns whether render.renderView is being executed.","name":"render_library.isInRenderView","library":"render"},"render_library.getGameResolution":{"summary":"\nReturns width and height of the game window.","classForced":true,"ret":["the X size of the game window","the Y size of the game window"],"class":"function","param":[],"private":false,"fname":"getGameResolution","library":"render","realm":"cl","name":"render_library.getGameResolution","description":"\nReturns width and height of the game window. If a rendertarget is selected, will return 1024, 1024"},"render_library.setStencilEnable":{"summary":"\nSets whether stencil tests are carried out for each rendered pixel.","class":"function","private":false,"param":{"1":"enable","enable":"true to enable, false to disable"},"fname":"setStencilEnable","realm":"cl","description":"\nSets whether stencil tests are carried out for each rendered pixel. Only pixels passing the stencil test are written to the render target.","name":"render_library.setStencilEnable","library":"render"},"render_library.getScreenInfo":{"summary":"\nReturns information about the screen, such as world offsets, dimentions, and rotation.","ret":"A table describing the screen.","class":"function","private":false,"library":"render","fname":"getScreenInfo","realm":"cl","param":{"1":"e","e":"The screen to get info from."},"name":"render_library.getScreenInfo","description":"\nReturns information about the screen, such as world offsets, dimentions, and rotation. \nNote: this does a table copy so move it out of your draw hook"},"render_library.createFont":{"summary":"\nCreates a font.","class":"function","usage":"\nBase font can be one of (keep in mind that these may not exist on all clients if they are not shipped with starfall): \n- Akbar \n- Coolvetica \n- Roboto \n- Roboto Mono \n- FontAwesome \n- Courier New \n- Verdana \n- Arial \n- HalfLife2 \n- hl2mp \n- csd \n- Tahoma \n- Trebuchet \n- Trebuchet MS \n- DejaVu Sans Mono \n- Lucida Console \n- Times New Roman","private":false,"library":"render","fname":"createFont","realm":"cl","param":{"1":"font","2":"size","3":"weight","4":"antialias","5":"additive","6":"shadow","7":"outline","8":"blur","9":"extended","outline":"Enable outline?","size":"Font size","font":"Base font to use","antialias":"Antialias font?","additive":"If true, adds brightness to pixels behind it rather than drawing over them.","blur":"Enable blur?","extended":"Allows the font to display glyphs outside of Latin-1 range. Unicode code points above 0xFFFF are not supported. Required to use FontAwesome","weight":"Font weight (default: 400)","shadow":"Enable drop shadow?"},"name":"render_library.createFont","description":"\nCreates a font. Does not require rendering hook"},"render_library.setRGBA":{"summary":"\nSets the draw color by RGBA values ","class":"function","private":false,"param":["r","g","b","a"],"fname":"setRGBA","realm":"cl","description":"\nSets the draw color by RGBA values","name":"render_library.setRGBA","library":"render"},"render_library.cursorPos":{"summary":"\nGets a 2D cursor position where ply is aiming at the current rendered screen or nil if they aren't aiming at it.","ret":["x position","y position"],"class":"function","private":false,"library":"render","fname":"cursorPos","realm":"cl","param":{"1":"ply","2":"screen","screen":"An explicit screen to get the cursor pos of (default: The current rendering screen using 'render' hook)","ply":"player to get cursor position from (default: player())"},"name":"render_library.cursorPos","description":"\nGets a 2D cursor position where ply is aiming at the current rendered screen or nil if they aren't aiming at it."},"render_library.draw3DQuad":{"summary":"\nDraws 2 connected triangles.","class":"function","private":false,"param":{"1":"vert1","2":"vert2","3":"vert3","4":"vert4","vert4":"The fourth vertex.","vert1":"First vertex.","vert3":"The third vertex.","vert2":"The second vertex."},"fname":"draw3DQuad","realm":"cl","description":"\nDraws 2 connected triangles.","name":"render_library.draw3DQuad","library":"render"},"render_library.drawTexturedRectRotated":{"summary":"\nDraws a rotated, textured rectangle.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"rot","x":"X coordinate of center of rect","w":"Width","y":"Y coordinate of center of rect","h":"Height","rot":"Rotation in degrees"},"fname":"drawTexturedRectRotated","realm":"cl","description":"\nDraws a rotated, textured rectangle.","name":"render_library.drawTexturedRectRotated","library":"render"},"render_library.drawPoly":{"summary":"\nDraws a polygon.","class":"function","private":false,"param":{"1":"poly","poly":"Table of polygon vertices. Texture coordinates are optional. {{x=x1, y=y1, u=u1, v=v1}, ... }"},"fname":"drawPoly","realm":"cl","description":"\nDraws a polygon.","name":"render_library.drawPoly","library":"render"},"render_library.popMatrix":{"summary":"\nPops a matrix from the matrix stack.","class":"function","private":false,"param":[],"fname":"popMatrix","realm":"cl","description":"\nPops a matrix from the matrix stack.","name":"render_library.popMatrix","library":"render"},"render_library.drawRectFast":{"summary":"\nDraws a rectangle using the current color \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawRectFast","realm":"cl","description":"\nDraws a rectangle using the current color \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawRectFast","library":"render"},"render_library.draw3DBeam":{"summary":"\nDraws textured beam.","class":"function","private":false,"param":{"1":"startPos","2":"endPos","3":"width","4":"textureStart","5":"textureEnd","textureEnd":"The end coordinate of the texture used.","textureStart":"The start coordinate of the texture used.","endPos":"Beam end position.","startPos":"Beam start position.","width":"The width of the beam."},"fname":"draw3DBeam","realm":"cl","description":"\nDraws textured beam.","name":"render_library.draw3DBeam","library":"render"},"render_library.drawLine":{"summary":"\nDraws a line.","class":"function","private":false,"param":{"1":"x1","2":"y1","3":"x2","4":"y2","y1":"Y start integer coordinate","x1":"X start integer coordinate","y2":"Y end integer coordinate","x2":"X end interger coordinate"},"fname":"drawLine","realm":"cl","description":"\nDraws a line. Use 3D functions for float coordinates","name":"render_library.drawLine","library":"render"},"render_library.destroyRenderTarget":{"summary":"\nReleases the rendertarget.","class":"function","private":false,"param":{"1":"name","name":"Rendertarget name"},"fname":"destroyRenderTarget","realm":"cl","description":"\nReleases the rendertarget. Required if you reach the maximum rendertargets.","name":"render_library.destroyRenderTarget","library":"render"},"render_library.setRenderTargetTexture":{"summary":"\nSets the active texture to the render target with the specified name.","class":"function","private":false,"param":{"1":"name","name":"Name of the render target to use"},"fname":"setRenderTargetTexture","realm":"cl","description":"\nSets the active texture to the render target with the specified name. \nNil to reset.","name":"render_library.setRenderTargetTexture","library":"render"},"render_library.setStencilPassOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the compare function was successful.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilPassOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the compare function was successful. More: http://wiki.garrysmod.com/page/render/SetStencilPassOperation","name":"render_library.setStencilPassOperation","library":"render"},"render_library.enableScissorRect":{"summary":"\nEnables a scissoring rect which limits the drawing area.","class":"function","private":false,"param":{"1":"startX","2":"startY","3":"endX","4":"endY","endX":"Y end coordinate of the scissor rect.","startY":"Y start coordinate of the scissor rect.","startX":"X start coordinate of the scissor rect."},"fname":"enableScissorRect","realm":"cl","description":"\nEnables a scissoring rect which limits the drawing area. Only works 2D contexts such as HUD or render targets.","name":"render_library.enableScissorRect","library":"render"},"render_library.drawRoundedBoxEx":{"summary":"\nDraws a rounded rectangle using the current color ","class":"function","private":false,"param":{"1":"r","2":"x","3":"y","4":"w","5":"h","6":"tl","7":"tr","8":"bl","9":"br","x":"Top left corner x coordinate","tl":"Boolean Top left corner","br":"Boolean Bottom right corner","bl":"Boolean Bottom left corner","w":"Width","tr":"Boolean Top right corner","h":"Height","y":"Top left corner y coordinate","r":"The corner radius"},"fname":"drawRoundedBoxEx","realm":"cl","description":"\nDraws a rounded rectangle using the current color","name":"render_library.drawRoundedBoxEx","library":"render"},"render_library.setTextureFromScreen":{"summary":"\nSets the texture of a screen entity ","class":"function","private":false,"param":{"1":"ent","ent":"Screen entity"},"fname":"setTextureFromScreen","realm":"cl","description":"\nSets the texture of a screen entity","name":"render_library.setTextureFromScreen","library":"render"},"render_library.createRenderTarget":{"summary":"\nCreates a new render target to draw onto.","class":"function","private":false,"param":{"1":"name","name":"The name of the render target"},"fname":"createRenderTarget","realm":"cl","description":"\nCreates a new render target to draw onto. \nThe dimensions will always be 1024x1024","name":"render_library.createRenderTarget","library":"render"},"render_library.clearBuffersObeyStencil":{"summary":"\nClears the current rendertarget for obeying the current stencil buffer conditions.","class":"function","private":false,"param":{"1":"r","2":"g","3":"b","4":"a","5":"depth","r":"Value of the red channel to clear the current rt with.","b":"Value of the blue channel to clear the current rt with.","depth":"Clear the depth buffer.","g":"Value of the green channel to clear the current rt with."},"fname":"clearBuffersObeyStencil","realm":"cl","description":"\nClears the current rendertarget for obeying the current stencil buffer conditions.","name":"render_library.clearBuffersObeyStencil","library":"render"},"render_library.pushViewMatrix":{"summary":"\nPushes a perspective matrix onto the view matrix stack.","class":"function","private":false,"param":{"1":"tbl","tbl":"The view matrix data. See http://wiki.garrysmod.com/page/Structures/RenderCamData"},"fname":"pushViewMatrix","realm":"cl","description":"\nPushes a perspective matrix onto the view matrix stack.","name":"render_library.pushViewMatrix","library":"render"},"render_library.setStencilCompareFunction":{"summary":"\nSets the compare function of the stencil.","class":"function","private":false,"param":{"1":"compareFunction","compareFunction":""},"fname":"setStencilCompareFunction","realm":"cl","description":"\nSets the compare function of the stencil. More: http://wiki.garrysmod.com/page/render/SetStencilCompareFunction","name":"render_library.setStencilCompareFunction","library":"render"},"render_library.drawText":{"summary":"\nDraws text with newlines and tabs ","class":"function","private":false,"param":{"1":"x","2":"y","3":"text","4":"alignment","y":"Y coordinate","x":"X coordinate","alignment":"Text alignment","text":"Text to draw"},"fname":"drawText","realm":"cl","description":"\nDraws text with newlines and tabs","name":"render_library.drawText","library":"render"},"render_library.draw3DLine":{"summary":"\nDraws a 3D Line ","class":"function","private":false,"param":{"1":"startPos","2":"endPos","startPos":"Starting position","endPos":"Ending position"},"fname":"draw3DLine","realm":"cl","description":"\nDraws a 3D Line","name":"render_library.draw3DLine","library":"render"}},"libraries":{"1":"render","render":{"summary":"\nRender library.","entity":"starfall_screen","tables":[],"field":{"1":"TEXT_ALIGN_LEFT","2":"TEXT_ALIGN_CENTER","3":"TEXT_ALIGN_RIGHT","4":"TEXT_ALIGN_TOP","5":"TEXT_ALIGN_BOTTOM","TEXT_ALIGN_LEFT":"","TEXT_ALIGN_BOTTOM":"","TEXT_ALIGN_RIGHT":"","TEXT_ALIGN_CENTER":"","TEXT_ALIGN_TOP":""},"libtbl":"render_library","fields":[],"class":"library","functions":{"1":"capturePixels","2":"clear","3":"clearBuffersObeyStencil","4":"clearDepth","5":"clearStencil","6":"clearStencilBufferRectangle","7":"createFont","8":"createMaterial","9":"createRenderTarget","10":"cursorPos","11":"destroyRenderTarget","12":"destroyTexture","13":"disableScissorRect","14":"draw3DBeam","15":"draw3DBox","16":"draw3DLine","17":"draw3DQuad","18":"draw3DQuadUV","19":"draw3DSphere","20":"draw3DSprite","21":"draw3DWireframeBox","22":"draw3DWireframeSphere","23":"drawCircle","24":"drawLine","25":"drawPoly","26":"drawRect","27":"drawRectFast","28":"drawRectOutline","29":"drawRoundedBox","30":"drawRoundedBoxEx","31":"drawSimpleText","32":"drawText","33":"drawTexturedRect","34":"drawTexturedRectFast","35":"drawTexturedRectRotated","36":"drawTexturedRectRotatedFast","37":"drawTexturedRectUV","38":"drawTexturedRectUVFast","39":"enableClipping","40":"enableDepth","41":"enableScissorRect","42":"getDefaultFont","43":"getGameResolution","44":"getResolution","45":"getScreenEntity","46":"getScreenInfo","47":"getTextSize","48":"isHUDActive","49":"isInRenderView","50":"overrideBlend","51":"parseMarkup","52":"popCustomClipPlane","53":"popMatrix","54":"popViewMatrix","55":"pushCustomClipPlane","56":"pushMatrix","57":"pushViewMatrix","58":"readPixel","59":"renderView","60":"renderViewsLeft","61":"selectRenderTarget","62":"setBackgroundColor","63":"setColor","64":"setCullMode","65":"setFilterMag","66":"setFilterMin","67":"setFont","68":"setHUDActive","69":"setLightingMode","70":"setMaterial","71":"setRGBA","72":"setRenderTargetTexture","73":"setStencilCompareFunction","74":"setStencilEnable","75":"setStencilFailOperation","76":"setStencilPassOperation","77":"setStencilReferenceValue","78":"setStencilTestMask","79":"setStencilWriteMask","80":"setStencilZFailOperation","81":"setTextureFromScreen","82":"traceSurfaceColor","setRenderTargetTexture":{"summary":"\nSets the active texture to the render target with the specified name.","class":"function","private":false,"param":{"1":"name","name":"Name of the render target to use"},"fname":"setRenderTargetTexture","realm":"cl","description":"\nSets the active texture to the render target with the specified name. \nNil to reset.","name":"render_library.setRenderTargetTexture","library":"render"},"getScreenEntity":{"summary":"\nReturns the entity currently being rendered to ","ret":"Entity of the screen or hud being rendered","class":"function","private":false,"library":"render","fname":"getScreenEntity","realm":"cl","param":[],"name":"render_library.getScreenEntity","description":"\nReturns the entity currently being rendered to"},"setStencilCompareFunction":{"summary":"\nSets the compare function of the stencil.","class":"function","private":false,"param":{"1":"compareFunction","compareFunction":""},"fname":"setStencilCompareFunction","realm":"cl","description":"\nSets the compare function of the stencil. More: http://wiki.garrysmod.com/page/render/SetStencilCompareFunction","name":"render_library.setStencilCompareFunction","library":"render"},"enableScissorRect":{"summary":"\nEnables a scissoring rect which limits the drawing area.","class":"function","private":false,"param":{"1":"startX","2":"startY","3":"endX","4":"endY","endX":"Y end coordinate of the scissor rect.","startY":"Y start coordinate of the scissor rect.","startX":"X start coordinate of the scissor rect."},"fname":"enableScissorRect","realm":"cl","description":"\nEnables a scissoring rect which limits the drawing area. Only works 2D contexts such as HUD or render targets.","name":"render_library.enableScissorRect","library":"render"},"setRGBA":{"summary":"\nSets the draw color by RGBA values ","class":"function","private":false,"param":["r","g","b","a"],"fname":"setRGBA","realm":"cl","description":"\nSets the draw color by RGBA values","name":"render_library.setRGBA","library":"render"},"setFilterMag":{"summary":"\nSets the texture filtering function when viewing a close texture ","class":"function","private":false,"param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"fname":"setFilterMag","realm":"cl","description":"\nSets the texture filtering function when viewing a close texture","name":"render_library.setFilterMag","library":"render"},"clearBuffersObeyStencil":{"summary":"\nClears the current rendertarget for obeying the current stencil buffer conditions.","class":"function","private":false,"param":{"1":"r","2":"g","3":"b","4":"a","5":"depth","r":"Value of the red channel to clear the current rt with.","b":"Value of the blue channel to clear the current rt with.","depth":"Clear the depth buffer.","g":"Value of the green channel to clear the current rt with."},"fname":"clearBuffersObeyStencil","realm":"cl","description":"\nClears the current rendertarget for obeying the current stencil buffer conditions.","name":"render_library.clearBuffersObeyStencil","library":"render"},"renderViewsLeft":{"summary":"\nReturns how many render.renderView calls can be done in the current frame.","class":"function","private":false,"param":[],"fname":"renderViewsLeft","realm":"cl","description":"\nReturns how many render.renderView calls can be done in the current frame.","name":"render_library.renderViewsLeft","library":"render"},"isInRenderView":{"summary":"\nReturns whether render.renderView is being executed.","class":"function","private":false,"param":[],"fname":"isInRenderView","realm":"cl","description":"\nReturns whether render.renderView is being executed.","name":"render_library.isInRenderView","library":"render"},"setLightingMode":{"summary":"\nSets the lighting mode ","class":"function","private":false,"param":{"1":"mode","mode":"The lighting mode. 0 - Default, 1 - Fullbright, 2 - Increased Fullbright"},"fname":"setLightingMode","realm":"cl","description":"\nSets the lighting mode","name":"render_library.setLightingMode","library":"render"},"setStencilFailOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the compare function was not successful.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilFailOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the compare function was not successful. More: http://wiki.garrysmod.com/page/render/SetStencilFailOperation","name":"render_library.setStencilFailOperation","library":"render"},"overrideBlend":{"summary":"\nEnables blend mode control.","class":"function","private":false,"param":{"1":"on","2":"srcBlend","3":"destBlend","4":"blendFunc","5":"srcBlendAlpha","6":"destBlendAlpha","7":"blendFuncAlpha","blendFuncAlpha":"Optional Number http://wiki.garrysmod.com/page/Enums/BLENDFUNC","srcBlend":"Number http://wiki.garrysmod.com/page/Enums/BLEND","destBlendAlpha":"Optional Number","srcBlendAlpha":"Optional Number http://wiki.garrysmod.com/page/Enums/BLEND","blendFunc":"Number http://wiki.garrysmod.com/page/Enums/BLENDFUNC","on":"Whether to control the blend mode of upcoming rendering","destBlend":"Number"},"fname":"overrideBlend","realm":"cl","description":"\nEnables blend mode control. Read OpenGL or DirectX docs for more info","name":"render_library.overrideBlend","library":"render"},"drawCircle":{"summary":"\nDraws a circle outline ","class":"function","private":false,"param":{"1":"x","2":"y","3":"r","y":"Center y coordinate","x":"Center x coordinate","r":"Radius"},"fname":"drawCircle","realm":"cl","description":"\nDraws a circle outline","name":"render_library.drawCircle","library":"render"},"draw3DSprite":{"summary":"\nDraws a sprite in 3d space.","class":"function","private":false,"param":{"1":"pos","2":"width","3":"height","width":"Width of the sprite.","height":"Height of the sprite.","pos":"Position of the sprite."},"fname":"draw3DSprite","realm":"cl","description":"\nDraws a sprite in 3d space.","name":"render_library.draw3DSprite","library":"render"},"drawTexturedRectRotatedFast":{"summary":"\nDraws a rotated, textured rectangle.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"rot","x":"X coordinate of center of rect","w":"Width","y":"Y coordinate of center of rect","h":"Height","rot":"Rotation in degrees"},"fname":"drawTexturedRectRotatedFast","realm":"cl","description":"\nDraws a rotated, textured rectangle. \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectRotatedFast","library":"render"},"getDefaultFont":{"summary":"\nGets the default font ","ret":"Default font","class":"function","private":false,"library":"render","fname":"getDefaultFont","realm":"cl","param":[],"name":"render_library.getDefaultFont","description":"\nGets the default font"},"setFilterMin":{"summary":"\nSets the texture filtering function when viewing a far texture ","class":"function","private":false,"param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"fname":"setFilterMin","realm":"cl","description":"\nSets the texture filtering function when viewing a far texture","name":"render_library.setFilterMin","library":"render"},"drawText":{"summary":"\nDraws text with newlines and tabs ","class":"function","private":false,"param":{"1":"x","2":"y","3":"text","4":"alignment","y":"Y coordinate","x":"X coordinate","alignment":"Text alignment","text":"Text to draw"},"fname":"drawText","realm":"cl","description":"\nDraws text with newlines and tabs","name":"render_library.drawText","library":"render"},"drawRoundedBox":{"summary":"\nDraws a rounded rectangle using the current color ","class":"function","private":false,"param":{"1":"r","2":"x","3":"y","4":"w","5":"h","x":"Top left corner x coordinate","w":"Width","r":"The corner radius","h":"Height","y":"Top left corner y coordinate"},"fname":"drawRoundedBox","realm":"cl","description":"\nDraws a rounded rectangle using the current color","name":"render_library.drawRoundedBox","library":"render"},"setMaterial":{"summary":"\nSets the current render material ","class":"function","private":false,"param":{"1":"mat","mat":"The material object"},"fname":"setMaterial","realm":"cl","description":"\nSets the current render material","name":"render_library.setMaterial","library":"render"},"enableClipping":{"summary":"\nSets the status of the clip renderer, returning previous state.","ret":"Previous clipping state.","class":"function","private":false,"library":"render","fname":"enableClipping","realm":"cl","param":{"1":"state","state":"New clipping state."},"name":"render_library.enableClipping","description":"\nSets the status of the clip renderer, returning previous state."},"drawSimpleText":{"summary":"\nDraws text more easily and quickly but no new lines or tabs.","class":"function","private":false,"param":{"1":"x","2":"y","3":"text","4":"xalign","5":"yalign","x":"X coordinate","y":"Y coordinate","yalign":"Text y alignment","xalign":"Text x alignment","text":"Text to draw"},"fname":"drawSimpleText","realm":"cl","description":"\nDraws text more easily and quickly but no new lines or tabs.","name":"render_library.drawSimpleText","library":"render"},"draw3DBox":{"summary":"\nDraws a box in 3D space ","class":"function","private":false,"param":{"1":"origin","2":"angle","3":"mins","4":"maxs","mins":"Start position of the box, relative to origin.","angle":"Orientation of the box","maxs":"End position of the box, relative to origin.","origin":"Origin of the box."},"fname":"draw3DBox","realm":"cl","description":"\nDraws a box in 3D space","name":"render_library.draw3DBox","library":"render"},"createMaterial":{"summary":"\nLooks up a texture by file name and creates an UnlitGeneric material with it.","ret":"The material. Use with render.setMaterial to draw with it.","class":"function","private":false,"library":"render","fname":"createMaterial","realm":"cl","param":{"1":"tx","2":"cb","3":"done","done":"An optional callback called when the image is done loading. Passes the material, url","tx":"Texture file path, a http url, or image data: https://en.wikipedia.org/wiki/Data_URI_scheme","cb":"An optional callback called when loading is done. Passes nil if it fails or Passes the material, url, width, height, and layout function which can be called with x, y, w, h to reposition the image in the texture."},"name":"render_library.createMaterial","description":"\nLooks up a texture by file name and creates an UnlitGeneric material with it. \nAlso supports image URLs or image data: https://en.wikipedia.org/wiki/Data_URI_scheme \nMake sure to store the material to use it rather than calling this slow function repeatedly. \nNOTE: This no longer supports material names. Use texture names instead (Textures are .vtf, material are .vmt)"},"drawRoundedBoxEx":{"summary":"\nDraws a rounded rectangle using the current color ","class":"function","private":false,"param":{"1":"r","2":"x","3":"y","4":"w","5":"h","6":"tl","7":"tr","8":"bl","9":"br","x":"Top left corner x coordinate","tl":"Boolean Top left corner","br":"Boolean Bottom right corner","bl":"Boolean Bottom left corner","w":"Width","tr":"Boolean Top right corner","h":"Height","y":"Top left corner y coordinate","r":"The corner radius"},"fname":"drawRoundedBoxEx","realm":"cl","description":"\nDraws a rounded rectangle using the current color","name":"render_library.drawRoundedBoxEx","library":"render"},"drawRectOutline":{"summary":"\nDraws a rectangle outline using the current color.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y integer coordinate","x":"Top left corner x integer coordinate","h":"Height","w":"Width"},"fname":"drawRectOutline","realm":"cl","description":"\nDraws a rectangle outline using the current color.","name":"render_library.drawRectOutline","library":"render"},"parseMarkup":{"summary":"\nConstructs a markup object for quick styled text drawing.","ret":"The markup object. See https://wiki.garrysmod.com/page/Category:MarkupObject","class":"function","private":false,"library":"render","fname":"parseMarkup","realm":"cl","param":{"1":"str","2":"maxsize","maxsize":"The max width of the markup","str":"The markup string to parse"},"name":"render_library.parseMarkup","description":"\nConstructs a markup object for quick styled text drawing."},"destroyTexture":{"summary":"\nReleases the texture.","class":"function","private":false,"param":{"1":"mat","mat":"The material object"},"fname":"destroyTexture","realm":"cl","description":"\nReleases the texture. Required if you reach the maximum url textures.","name":"render_library.destroyTexture","library":"render"},"getResolution":{"summary":"\nReturns the render context's width and height ","classForced":true,"ret":["the X size of the current render context","the Y size of the current render context"],"class":"function","param":[],"private":false,"fname":"getResolution","library":"render","realm":"cl","name":"render_library.getResolution","description":"\nReturns the render context's width and height"},"traceSurfaceColor":{"summary":"\nDoes a trace and returns the color of the textel the trace hits.","ret":"The color","class":"function","private":false,"library":"render","fname":"traceSurfaceColor","realm":"cl","param":{"1":"vec1","2":"vec2","vec2":"The ending vector","vec1":"The starting vector"},"name":"render_library.traceSurfaceColor","description":"\nDoes a trace and returns the color of the textel the trace hits."},"setStencilPassOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the compare function was successful.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilPassOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the compare function was successful. More: http://wiki.garrysmod.com/page/render/SetStencilPassOperation","name":"render_library.setStencilPassOperation","library":"render"},"drawRect":{"summary":"\nDraws a rectangle using the current color ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawRect","realm":"cl","description":"\nDraws a rectangle using the current color","name":"render_library.drawRect","library":"render"},"clear":{"summary":"\nClears the active render target ","class":"function","private":false,"param":{"1":"clr","2":"depth","clr":"Color type to clear with","depth":"Boolean if should clear depth"},"fname":"clear","realm":"cl","description":"\nClears the active render target","name":"render_library.clear","library":"render"},"setStencilReferenceValue":{"summary":"\nSets the reference value which will be used for all stencil operations.","class":"function","private":false,"param":{"1":"referenceValue","referenceValue":"Reference value."},"fname":"setStencilReferenceValue","realm":"cl","description":"\nSets the reference value which will be used for all stencil operations. This is an unsigned integer.","name":"render_library.setStencilReferenceValue","library":"render"},"draw3DLine":{"summary":"\nDraws a 3D Line ","class":"function","private":false,"param":{"1":"startPos","2":"endPos","startPos":"Starting position","endPos":"Ending position"},"fname":"draw3DLine","realm":"cl","description":"\nDraws a 3D Line","name":"render_library.draw3DLine","library":"render"},"draw3DWireframeBox":{"summary":"\nDraws a wireframe box in 3D space ","class":"function","private":false,"param":{"1":"origin","2":"angle","3":"mins","4":"maxs","mins":"Start position of the box, relative to origin.","angle":"Orientation of the box","maxs":"End position of the box, relative to origin.","origin":"Origin of the box."},"fname":"draw3DWireframeBox","realm":"cl","description":"\nDraws a wireframe box in 3D space","name":"render_library.draw3DWireframeBox","library":"render"},"draw3DWireframeSphere":{"summary":"\nDraws a wireframe sphere ","class":"function","private":false,"param":{"1":"pos","2":"radius","3":"longitudeSteps","4":"latitudeSteps","longitudeSteps":"The amount of longitude steps. The larger this number is, the smoother the sphere is","pos":"Position of the sphere","radius":"Radius of the sphere","latitudeSteps":"The amount of latitude steps. The larger this number is, the smoother the sphere is"},"fname":"draw3DWireframeSphere","realm":"cl","description":"\nDraws a wireframe sphere","name":"render_library.draw3DWireframeSphere","library":"render"},"drawRectFast":{"summary":"\nDraws a rectangle using the current color \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawRectFast","realm":"cl","description":"\nDraws a rectangle using the current color \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawRectFast","library":"render"},"drawTexturedRect":{"summary":"\nDraws a textured rectangle ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawTexturedRect","realm":"cl","description":"\nDraws a textured rectangle","name":"render_library.drawTexturedRect","library":"render"},"getGameResolution":{"summary":"\nReturns width and height of the game window.","classForced":true,"ret":["the X size of the game window","the Y size of the game window"],"class":"function","param":[],"private":false,"fname":"getGameResolution","library":"render","realm":"cl","name":"render_library.getGameResolution","description":"\nReturns width and height of the game window. If a rendertarget is selected, will return 1024, 1024"},"setColor":{"summary":"\nSets the draw color ","class":"function","private":false,"param":{"1":"clr","clr":"Color type"},"fname":"setColor","realm":"cl","description":"\nSets the draw color","name":"render_library.setColor","library":"render"},"setTextureFromScreen":{"summary":"\nSets the texture of a screen entity ","class":"function","private":false,"param":{"1":"ent","ent":"Screen entity"},"fname":"setTextureFromScreen","realm":"cl","description":"\nSets the texture of a screen entity","name":"render_library.setTextureFromScreen","library":"render"},"getScreenInfo":{"summary":"\nReturns information about the screen, such as world offsets, dimentions, and rotation.","ret":"A table describing the screen.","class":"function","private":false,"library":"render","fname":"getScreenInfo","realm":"cl","param":{"1":"e","e":"The screen to get info from."},"name":"render_library.getScreenInfo","description":"\nReturns information about the screen, such as world offsets, dimentions, and rotation. \nNote: this does a table copy so move it out of your draw hook"},"setBackgroundColor":{"summary":"\nSets background color of screen ","class":"function","private":false,"param":{"1":"col","2":"screen","col":"Color of background"},"fname":"setBackgroundColor","realm":"cl","description":"\nSets background color of screen","name":"render_library.setBackgroundColor","library":"render"},"setStencilZFailOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilZFailOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails. More: http://wiki.garrysmod.com/page/render/SetStencilZFailOperation","name":"render_library.setStencilZFailOperation","library":"render"},"capturePixels":{"summary":"\nDumps the current render target and allows the pixels to be accessed by render.readPixel.","class":"function","private":false,"param":[],"fname":"capturePixels","realm":"cl","description":"\nDumps the current render target and allows the pixels to be accessed by render.readPixel.","name":"render_library.capturePixels","library":"render"},"drawTexturedRectFast":{"summary":"\nDraws a textured rectangle \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawTexturedRectFast","realm":"cl","description":"\nDraws a textured rectangle \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectFast","library":"render"},"draw3DBeam":{"summary":"\nDraws textured beam.","class":"function","private":false,"param":{"1":"startPos","2":"endPos","3":"width","4":"textureStart","5":"textureEnd","textureEnd":"The end coordinate of the texture used.","textureStart":"The start coordinate of the texture used.","endPos":"Beam end position.","startPos":"Beam start position.","width":"The width of the beam."},"fname":"draw3DBeam","realm":"cl","description":"\nDraws textured beam.","name":"render_library.draw3DBeam","library":"render"},"setStencilEnable":{"summary":"\nSets whether stencil tests are carried out for each rendered pixel.","class":"function","private":false,"param":{"1":"enable","enable":"true to enable, false to disable"},"fname":"setStencilEnable","realm":"cl","description":"\nSets whether stencil tests are carried out for each rendered pixel. Only pixels passing the stencil test are written to the render target.","name":"render_library.setStencilEnable","library":"render"},"drawPoly":{"summary":"\nDraws a polygon.","class":"function","private":false,"param":{"1":"poly","poly":"Table of polygon vertices. Texture coordinates are optional. {{x=x1, y=y1, u=u1, v=v1}, ... }"},"fname":"drawPoly","realm":"cl","description":"\nDraws a polygon.","name":"render_library.drawPoly","library":"render"},"setCullMode":{"summary":"\nChanges the cull mode ","class":"function","private":false,"param":{"1":"mode","mode":"Cull mode. 0 for counter clock wise, 1 for clock wise"},"fname":"setCullMode","realm":"cl","description":"\nChanges the cull mode","name":"render_library.setCullMode","library":"render"},"setHUDActive":{"summary":"\nSets the current instance to allow HUD drawing.","class":"function","private":false,"param":{"1":"active","active":"Whether hud hooks should be active. true to force on, false to force off, nil to restore default."},"fname":"setHUDActive","realm":"cl","description":"\nSets the current instance to allow HUD drawing. Only works for owner of the chip","name":"render_library.setHUDActive","library":"render"},"readPixel":{"summary":"\nReads the color of the specified pixel.","ret":"Color object with ( r, g, b, 255 ) from the specified pixel.","class":"function","private":false,"library":"render","fname":"readPixel","realm":"cl","param":{"1":"x","2":"y","y":"Pixel y-coordinate.","x":"Pixel x-coordinate."},"name":"render_library.readPixel","description":"\nReads the color of the specified pixel."},"selectRenderTarget":{"summary":"\nSelects the render target to draw on.","class":"function","private":false,"param":{"1":"name","name":"Name of the render target to use"},"fname":"selectRenderTarget","realm":"cl","description":"\nSelects the render target to draw on. \nNil for the visible RT.","name":"render_library.selectRenderTarget","library":"render"},"pushMatrix":{"summary":"\nPushes a matrix onto the matrix stack.","class":"function","private":false,"param":{"1":"m","2":"world","world":"Should the transformation be relative to the screen or world?","m":"The matrix"},"fname":"pushMatrix","realm":"cl","description":"\nPushes a matrix onto the matrix stack.","name":"render_library.pushMatrix","library":"render"},"setStencilTestMask":{"summary":"\nSets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","class":"function","private":false,"param":{"1":"mask","mask":"The mask bitflag."},"fname":"setStencilTestMask","realm":"cl","description":"\nSets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","name":"render_library.setStencilTestMask","library":"render"},"destroyRenderTarget":{"summary":"\nReleases the rendertarget.","class":"function","private":false,"param":{"1":"name","name":"Rendertarget name"},"fname":"destroyRenderTarget","realm":"cl","description":"\nReleases the rendertarget. Required if you reach the maximum rendertargets.","name":"render_library.destroyRenderTarget","library":"render"},"popCustomClipPlane":{"summary":"\nRemoves the current active clipping plane from the clip plane stack.","class":"function","private":false,"param":[],"fname":"popCustomClipPlane","realm":"cl","description":"\nRemoves the current active clipping plane from the clip plane stack.","name":"render_library.popCustomClipPlane","library":"render"},"pushViewMatrix":{"summary":"\nPushes a perspective matrix onto the view matrix stack.","class":"function","private":false,"param":{"1":"tbl","tbl":"The view matrix data. See http://wiki.garrysmod.com/page/Structures/RenderCamData"},"fname":"pushViewMatrix","realm":"cl","description":"\nPushes a perspective matrix onto the view matrix stack.","name":"render_library.pushViewMatrix","library":"render"},"pushCustomClipPlane":{"summary":"\nPushes a new clipping plane of the clip plane stack.","class":"function","private":false,"param":{"1":"normal","2":"distance","normal":"The normal of the clipping plane.","distance":"The normal of the clipping plane."},"fname":"pushCustomClipPlane","realm":"cl","description":"\nPushes a new clipping plane of the clip plane stack.","name":"render_library.pushCustomClipPlane","library":"render"},"renderView":{"summary":"\nRenders the scene with the specified viewData to the current active render target.","class":"function","private":false,"param":{"1":"tbl","tbl":"view The view data to be used in the rendering. See http://wiki.garrysmod.com/page/Structures/ViewData. There's an additional key drawviewer used to tell the engine whether the local player model should be rendered."},"fname":"renderView","realm":"cl","description":"\nRenders the scene with the specified viewData to the current active render target.","name":"render_library.renderView","library":"render"},"getTextSize":{"summary":"\nGets the size of the specified text.","ret":["width of the text","height of the text"],"class":"function","private":false,"library":"render","fname":"getTextSize","realm":"cl","param":{"1":"text","text":"Text to get the size of"},"name":"render_library.getTextSize","description":"\nGets the size of the specified text. Don't forget to use setFont before calling this function"},"isHUDActive":{"summary":"\nChecks if a hud component is connected to the Starfall Chip ","class":"function","private":false,"param":[],"fname":"isHUDActive","realm":"cl","description":"\nChecks if a hud component is connected to the Starfall Chip","name":"render_library.isHUDActive","library":"render"},"disableScissorRect":{"summary":"\nDisables a scissoring rect which limits the drawing area.","class":"function","private":false,"param":[],"fname":"disableScissorRect","realm":"cl","description":"\nDisables a scissoring rect which limits the drawing area.","name":"render_library.disableScissorRect","library":"render"},"cursorPos":{"summary":"\nGets a 2D cursor position where ply is aiming at the current rendered screen or nil if they aren't aiming at it.","ret":["x position","y position"],"class":"function","private":false,"library":"render","fname":"cursorPos","realm":"cl","param":{"1":"ply","2":"screen","screen":"An explicit screen to get the cursor pos of (default: The current rendering screen using 'render' hook)","ply":"player to get cursor position from (default: player())"},"name":"render_library.cursorPos","description":"\nGets a 2D cursor position where ply is aiming at the current rendered screen or nil if they aren't aiming at it."},"draw3DSphere":{"summary":"\nDraws a sphere ","class":"function","private":false,"param":{"1":"pos","2":"radius","3":"longitudeSteps","4":"latitudeSteps","longitudeSteps":"The amount of longitude steps. The larger this number is, the smoother the sphere is","pos":"Position of the sphere","radius":"Radius of the sphere","latitudeSteps":"The amount of latitude steps. The larger this number is, the smoother the sphere is"},"fname":"draw3DSphere","realm":"cl","description":"\nDraws a sphere","name":"render_library.draw3DSphere","library":"render"},"clearStencilBufferRectangle":{"summary":"\nSets the stencil value in a specified rect.","class":"function","private":false,"param":{"1":"originX","2":"originY","3":"endX","4":"endY","5":"stencilValue","stencilValue":"Value to set cleared stencil buffer to.","endX":"The end X coordinate of the rectangle.","originX":"X origin of the rectangle.","endY":"The end Y coordinate of the rectangle.","originY":"Y origin of the rectangle."},"fname":"clearStencilBufferRectangle","realm":"cl","description":"\nSets the stencil value in a specified rect.","name":"render_library.clearStencilBufferRectangle","library":"render"},"clearDepth":{"summary":"\nResets the depth buffer ","class":"function","private":false,"param":[],"fname":"clearDepth","realm":"cl","description":"\nResets the depth buffer","name":"render_library.clearDepth","library":"render"},"draw3DQuad":{"summary":"\nDraws 2 connected triangles.","class":"function","private":false,"param":{"1":"vert1","2":"vert2","3":"vert3","4":"vert4","vert4":"The fourth vertex.","vert1":"First vertex.","vert3":"The third vertex.","vert2":"The second vertex."},"fname":"draw3DQuad","realm":"cl","description":"\nDraws 2 connected triangles.","name":"render_library.draw3DQuad","library":"render"},"popMatrix":{"summary":"\nPops a matrix from the matrix stack.","class":"function","private":false,"param":[],"fname":"popMatrix","realm":"cl","description":"\nPops a matrix from the matrix stack.","name":"render_library.popMatrix","library":"render"},"setFont":{"summary":"\nSets the font ","class":"function","usage":"Use a font created by render.createFont or use one of these already defined fonts: \n- DebugFixed \n- DebugFixedSmall \n- Default \n- Marlett \n- Trebuchet18 \n- Trebuchet24 \n- HudHintTextLarge \n- HudHintTextSmall \n- CenterPrintText \n- HudSelectionText \n- CloseCaption_Normal \n- CloseCaption_Bold \n- CloseCaption_BoldItalic \n- ChatFont \n- TargetID \n- TargetIDSmall \n- HL2MPTypeDeath \n- BudgetLabel \n- HudNumbers \n- DermaDefault \n- DermaDefaultBold \n- DermaLarge","private":false,"library":"render","fname":"setFont","realm":"cl","param":{"1":"font","font":"The font to use"},"name":"render_library.setFont","description":"\nSets the font"},"createFont":{"summary":"\nCreates a font.","class":"function","usage":"\nBase font can be one of (keep in mind that these may not exist on all clients if they are not shipped with starfall): \n- Akbar \n- Coolvetica \n- Roboto \n- Roboto Mono \n- FontAwesome \n- Courier New \n- Verdana \n- Arial \n- HalfLife2 \n- hl2mp \n- csd \n- Tahoma \n- Trebuchet \n- Trebuchet MS \n- DejaVu Sans Mono \n- Lucida Console \n- Times New Roman","private":false,"library":"render","fname":"createFont","realm":"cl","param":{"1":"font","2":"size","3":"weight","4":"antialias","5":"additive","6":"shadow","7":"outline","8":"blur","9":"extended","outline":"Enable outline?","size":"Font size","font":"Base font to use","antialias":"Antialias font?","additive":"If true, adds brightness to pixels behind it rather than drawing over them.","blur":"Enable blur?","extended":"Allows the font to display glyphs outside of Latin-1 range. Unicode code points above 0xFFFF are not supported. Required to use FontAwesome","weight":"Font weight (default: 400)","shadow":"Enable drop shadow?"},"name":"render_library.createFont","description":"\nCreates a font. Does not require rendering hook"},"drawTexturedRectRotated":{"summary":"\nDraws a rotated, textured rectangle.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"rot","x":"X coordinate of center of rect","w":"Width","y":"Y coordinate of center of rect","h":"Height","rot":"Rotation in degrees"},"fname":"drawTexturedRectRotated","realm":"cl","description":"\nDraws a rotated, textured rectangle.","name":"render_library.drawTexturedRectRotated","library":"render"},"enableDepth":{"summary":"\nEnables or disables Depth Buffer ","class":"function","private":false,"param":{"1":"enable","enable":"true to enable"},"fname":"enableDepth","realm":"cl","description":"\nEnables or disables Depth Buffer","name":"render_library.enableDepth","library":"render"},"createRenderTarget":{"summary":"\nCreates a new render target to draw onto.","class":"function","private":false,"param":{"1":"name","name":"The name of the render target"},"fname":"createRenderTarget","realm":"cl","description":"\nCreates a new render target to draw onto. \nThe dimensions will always be 1024x1024","name":"render_library.createRenderTarget","library":"render"},"drawTexturedRectUVFast":{"summary":"\nDraws a textured rectangle with UV coordinates \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"startU","6":"startV","7":"endU","8":"endV","9":"UVHack","startV":"Texture mapping at rectangle origin","x":"Top left corner x","UVHack":"If enabled, will scale the UVs to compensate for internal bug. Should be true for user created materials.","w":"Width","y":"Top left corner y","h":"Height","startU":"Texture mapping at rectangle origin","endV":"Texture mapping at rectangle end"},"fname":"drawTexturedRectUVFast","realm":"cl","description":"\nDraws a textured rectangle with UV coordinates \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectUVFast","library":"render"},"clearStencil":{"summary":"\nResets all values in the stencil buffer to zero.","class":"function","private":false,"param":[],"fname":"clearStencil","realm":"cl","description":"\nResets all values in the stencil buffer to zero.","name":"render_library.clearStencil","library":"render"},"drawTexturedRectUV":{"summary":"\nDraws a textured rectangle with UV coordinates ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"startU","6":"startV","7":"endU","8":"endV","startV":"Texture mapping at rectangle origin","x":"Top left corner x","w":"Width","y":"Top left corner y","h":"Height","startU":"Texture mapping at rectangle origin","endV":"Texture mapping at rectangle end"},"fname":"drawTexturedRectUV","realm":"cl","description":"\nDraws a textured rectangle with UV coordinates","name":"render_library.drawTexturedRectUV","library":"render"},"draw3DQuadUV":{"summary":"\nDraws 2 connected triangles with custom UVs.","class":"function","private":false,"param":{"1":"vert1","2":"vert2","3":"vert3","4":"vert4","vert4":"The fourth vertex.","vert1":"First vertex. {x, y, z, u, v}","vert3":"The third vertex.","vert2":"The second vertex."},"fname":"draw3DQuadUV","realm":"cl","description":"\nDraws 2 connected triangles with custom UVs.","name":"render_library.draw3DQuadUV","library":"render"},"popViewMatrix":{"summary":"\nPops a view matrix from the matrix stack.","class":"function","private":false,"param":[],"fname":"popViewMatrix","realm":"cl","description":"\nPops a view matrix from the matrix stack.","name":"render_library.popViewMatrix","library":"render"},"drawLine":{"summary":"\nDraws a line.","class":"function","private":false,"param":{"1":"x1","2":"y1","3":"x2","4":"y2","y1":"Y start integer coordinate","x1":"X start integer coordinate","y2":"Y end integer coordinate","x2":"X end interger coordinate"},"fname":"drawLine","realm":"cl","description":"\nDraws a line. Use 3D functions for float coordinates","name":"render_library.drawLine","library":"render"},"setStencilWriteMask":{"summary":"\nSets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer.","class":"function","private":false,"param":{"1":"mask","mask":"The mask bitflag."},"fname":"setStencilWriteMask","realm":"cl","description":"\nSets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer.","name":"render_library.setStencilWriteMask","library":"render"}},"name":"render","description":"\nRender library. Screens are 512x512 units. Most functions require \nthat you be in the rendering hook to call, otherwise an error is \nthrown. +x is right, +y is down"}},"type":"file","doc":[{"summary":"\n \nRender library \n ","description":"\n \nRender library \n"},{"summary":"\nCalled when a frame is requested to be drawn on screen.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a frame is requested to be drawn on screen. (2D/3D Context)","realm":"cl","name":"render","param":[]},{"summary":"\nCalled when a frame is requested to be drawn on hud.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a frame is requested to be drawn on hud. (2D Context)","realm":"cl","name":"drawhud","param":[]},{"summary":"\nCalled when a hud element is attempting to be drawn ","classForced":true,"class":"hook","client":true,"description":"\nCalled when a hud element is attempting to be drawn","realm":"cl","name":"hudshoulddraw","param":{"1":"string","string":"The name of the hud element trying to be drawn"}},{"summary":"\nCalled before drawing HUD (2D Context) ","classForced":true,"class":"hook","client":true,"description":"\nCalled before drawing HUD (2D Context)","realm":"cl","name":"predrawhud","param":[]},{"summary":"\nCalled after drawing HUD (2D Context) ","classForced":true,"class":"hook","client":true,"description":"\nCalled after drawing HUD (2D Context)","realm":"cl","name":"postdrawhud","param":[]},{"summary":"\nCalled when a frame is requested to be drawn.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a frame is requested to be drawn. Doesn't require a screen or HUD but only works on rendertargets. (2D Context)","realm":"cl","name":"renderoffscreen","param":[]},{"summary":"\nCalled when the player connects to a HUD component linked to the Starfall Chip ","classForced":true,"class":"hook","client":true,"description":"\nCalled when the player connects to a HUD component linked to the Starfall Chip","realm":"cl","name":"hudconnected","param":[]},{"summary":"\nCalled when the player disconnects from a HUD component linked to the Starfall Chip ","classForced":true,"class":"hook","client":true,"description":"\nCalled when the player disconnects from a HUD component linked to the Starfall Chip","realm":"cl","name":"huddisconnected","param":[]},{"summary":"\nCalled before entities are drawn.","classForced":true,"class":"hook","client":true,"description":"\nCalled before entities are drawn. You can't render anything, but you can edit hologram matrices before they are drawn.","realm":"cl","name":"hologrammatrix","param":[]},{"summary":"\nCalled before opaque entities are drawn.","classForced":true,"class":"hook","client":true,"description":"\nCalled before opaque entities are drawn. (Only works with HUD) (3D context)","realm":"cl","name":"predrawopaquerenderables","param":{"1":"boolean","boolean":"isDrawSkybox Whether the current draw is drawing the skybox."}},{"summary":"\nCalled after opaque entities are drawn.","classForced":true,"class":"hook","client":true,"description":"\nCalled after opaque entities are drawn. (Only works with HUD) (3D context)","realm":"cl","name":"postdrawopaquerenderables","param":{"1":"boolean","boolean":"isDrawSkybox Whether the current draw is drawing the skybox."}},{"summary":"\nCalled when the engine wants to calculate the player's view ","classForced":true,"ret":"table Table containing information for the camera. {origin=camera origin, angles=camera angles, fov=camera fov, znear=znear, zfar=zfar, drawviewer=drawviewer, ortho=ortho table}","class":"hook","client":true,"description":"\nCalled when the engine wants to calculate the player's view","realm":"cl","name":"calcview","param":{"1":"pos","2":"ang","3":"fov","4":"znear","5":"zfar","zfar":"Current far plane of the camera","pos":"Current position of the camera","znear":"Current near plane of the camera","ang":"Current angles of the camera","fov":"Current fov of the camera"}},{"summary":"\nRender library.","entity":"starfall_screen","tables":[],"field":{"1":"TEXT_ALIGN_LEFT","2":"TEXT_ALIGN_CENTER","3":"TEXT_ALIGN_RIGHT","4":"TEXT_ALIGN_TOP","5":"TEXT_ALIGN_BOTTOM","TEXT_ALIGN_LEFT":"","TEXT_ALIGN_BOTTOM":"","TEXT_ALIGN_RIGHT":"","TEXT_ALIGN_CENTER":"","TEXT_ALIGN_TOP":""},"libtbl":"render_library","fields":[],"class":"library","functions":{"1":"capturePixels","2":"clear","3":"clearBuffersObeyStencil","4":"clearDepth","5":"clearStencil","6":"clearStencilBufferRectangle","7":"createFont","8":"createMaterial","9":"createRenderTarget","10":"cursorPos","11":"destroyRenderTarget","12":"destroyTexture","13":"disableScissorRect","14":"draw3DBeam","15":"draw3DBox","16":"draw3DLine","17":"draw3DQuad","18":"draw3DQuadUV","19":"draw3DSphere","20":"draw3DSprite","21":"draw3DWireframeBox","22":"draw3DWireframeSphere","23":"drawCircle","24":"drawLine","25":"drawPoly","26":"drawRect","27":"drawRectFast","28":"drawRectOutline","29":"drawRoundedBox","30":"drawRoundedBoxEx","31":"drawSimpleText","32":"drawText","33":"drawTexturedRect","34":"drawTexturedRectFast","35":"drawTexturedRectRotated","36":"drawTexturedRectRotatedFast","37":"drawTexturedRectUV","38":"drawTexturedRectUVFast","39":"enableClipping","40":"enableDepth","41":"enableScissorRect","42":"getDefaultFont","43":"getGameResolution","44":"getResolution","45":"getScreenEntity","46":"getScreenInfo","47":"getTextSize","48":"isHUDActive","49":"isInRenderView","50":"overrideBlend","51":"parseMarkup","52":"popCustomClipPlane","53":"popMatrix","54":"popViewMatrix","55":"pushCustomClipPlane","56":"pushMatrix","57":"pushViewMatrix","58":"readPixel","59":"renderView","60":"renderViewsLeft","61":"selectRenderTarget","62":"setBackgroundColor","63":"setColor","64":"setCullMode","65":"setFilterMag","66":"setFilterMin","67":"setFont","68":"setHUDActive","69":"setLightingMode","70":"setMaterial","71":"setRGBA","72":"setRenderTargetTexture","73":"setStencilCompareFunction","74":"setStencilEnable","75":"setStencilFailOperation","76":"setStencilPassOperation","77":"setStencilReferenceValue","78":"setStencilTestMask","79":"setStencilWriteMask","80":"setStencilZFailOperation","81":"setTextureFromScreen","82":"traceSurfaceColor","setRenderTargetTexture":{"summary":"\nSets the active texture to the render target with the specified name.","class":"function","private":false,"param":{"1":"name","name":"Name of the render target to use"},"fname":"setRenderTargetTexture","realm":"cl","description":"\nSets the active texture to the render target with the specified name. \nNil to reset.","name":"render_library.setRenderTargetTexture","library":"render"},"getScreenEntity":{"summary":"\nReturns the entity currently being rendered to ","ret":"Entity of the screen or hud being rendered","class":"function","private":false,"library":"render","fname":"getScreenEntity","realm":"cl","param":[],"name":"render_library.getScreenEntity","description":"\nReturns the entity currently being rendered to"},"setStencilCompareFunction":{"summary":"\nSets the compare function of the stencil.","class":"function","private":false,"param":{"1":"compareFunction","compareFunction":""},"fname":"setStencilCompareFunction","realm":"cl","description":"\nSets the compare function of the stencil. More: http://wiki.garrysmod.com/page/render/SetStencilCompareFunction","name":"render_library.setStencilCompareFunction","library":"render"},"enableScissorRect":{"summary":"\nEnables a scissoring rect which limits the drawing area.","class":"function","private":false,"param":{"1":"startX","2":"startY","3":"endX","4":"endY","endX":"Y end coordinate of the scissor rect.","startY":"Y start coordinate of the scissor rect.","startX":"X start coordinate of the scissor rect."},"fname":"enableScissorRect","realm":"cl","description":"\nEnables a scissoring rect which limits the drawing area. Only works 2D contexts such as HUD or render targets.","name":"render_library.enableScissorRect","library":"render"},"setRGBA":{"summary":"\nSets the draw color by RGBA values ","class":"function","private":false,"param":["r","g","b","a"],"fname":"setRGBA","realm":"cl","description":"\nSets the draw color by RGBA values","name":"render_library.setRGBA","library":"render"},"setFilterMag":{"summary":"\nSets the texture filtering function when viewing a close texture ","class":"function","private":false,"param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"fname":"setFilterMag","realm":"cl","description":"\nSets the texture filtering function when viewing a close texture","name":"render_library.setFilterMag","library":"render"},"clearBuffersObeyStencil":{"summary":"\nClears the current rendertarget for obeying the current stencil buffer conditions.","class":"function","private":false,"param":{"1":"r","2":"g","3":"b","4":"a","5":"depth","r":"Value of the red channel to clear the current rt with.","b":"Value of the blue channel to clear the current rt with.","depth":"Clear the depth buffer.","g":"Value of the green channel to clear the current rt with."},"fname":"clearBuffersObeyStencil","realm":"cl","description":"\nClears the current rendertarget for obeying the current stencil buffer conditions.","name":"render_library.clearBuffersObeyStencil","library":"render"},"renderViewsLeft":{"summary":"\nReturns how many render.renderView calls can be done in the current frame.","class":"function","private":false,"param":[],"fname":"renderViewsLeft","realm":"cl","description":"\nReturns how many render.renderView calls can be done in the current frame.","name":"render_library.renderViewsLeft","library":"render"},"isInRenderView":{"summary":"\nReturns whether render.renderView is being executed.","class":"function","private":false,"param":[],"fname":"isInRenderView","realm":"cl","description":"\nReturns whether render.renderView is being executed.","name":"render_library.isInRenderView","library":"render"},"setLightingMode":{"summary":"\nSets the lighting mode ","class":"function","private":false,"param":{"1":"mode","mode":"The lighting mode. 0 - Default, 1 - Fullbright, 2 - Increased Fullbright"},"fname":"setLightingMode","realm":"cl","description":"\nSets the lighting mode","name":"render_library.setLightingMode","library":"render"},"setStencilFailOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the compare function was not successful.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilFailOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the compare function was not successful. More: http://wiki.garrysmod.com/page/render/SetStencilFailOperation","name":"render_library.setStencilFailOperation","library":"render"},"overrideBlend":{"summary":"\nEnables blend mode control.","class":"function","private":false,"param":{"1":"on","2":"srcBlend","3":"destBlend","4":"blendFunc","5":"srcBlendAlpha","6":"destBlendAlpha","7":"blendFuncAlpha","blendFuncAlpha":"Optional Number http://wiki.garrysmod.com/page/Enums/BLENDFUNC","srcBlend":"Number http://wiki.garrysmod.com/page/Enums/BLEND","destBlendAlpha":"Optional Number","srcBlendAlpha":"Optional Number http://wiki.garrysmod.com/page/Enums/BLEND","blendFunc":"Number http://wiki.garrysmod.com/page/Enums/BLENDFUNC","on":"Whether to control the blend mode of upcoming rendering","destBlend":"Number"},"fname":"overrideBlend","realm":"cl","description":"\nEnables blend mode control. Read OpenGL or DirectX docs for more info","name":"render_library.overrideBlend","library":"render"},"drawCircle":{"summary":"\nDraws a circle outline ","class":"function","private":false,"param":{"1":"x","2":"y","3":"r","y":"Center y coordinate","x":"Center x coordinate","r":"Radius"},"fname":"drawCircle","realm":"cl","description":"\nDraws a circle outline","name":"render_library.drawCircle","library":"render"},"draw3DSprite":{"summary":"\nDraws a sprite in 3d space.","class":"function","private":false,"param":{"1":"pos","2":"width","3":"height","width":"Width of the sprite.","height":"Height of the sprite.","pos":"Position of the sprite."},"fname":"draw3DSprite","realm":"cl","description":"\nDraws a sprite in 3d space.","name":"render_library.draw3DSprite","library":"render"},"drawTexturedRectRotatedFast":{"summary":"\nDraws a rotated, textured rectangle.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"rot","x":"X coordinate of center of rect","w":"Width","y":"Y coordinate of center of rect","h":"Height","rot":"Rotation in degrees"},"fname":"drawTexturedRectRotatedFast","realm":"cl","description":"\nDraws a rotated, textured rectangle. \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectRotatedFast","library":"render"},"getDefaultFont":{"summary":"\nGets the default font ","ret":"Default font","class":"function","private":false,"library":"render","fname":"getDefaultFont","realm":"cl","param":[],"name":"render_library.getDefaultFont","description":"\nGets the default font"},"setFilterMin":{"summary":"\nSets the texture filtering function when viewing a far texture ","class":"function","private":false,"param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"fname":"setFilterMin","realm":"cl","description":"\nSets the texture filtering function when viewing a far texture","name":"render_library.setFilterMin","library":"render"},"drawText":{"summary":"\nDraws text with newlines and tabs ","class":"function","private":false,"param":{"1":"x","2":"y","3":"text","4":"alignment","y":"Y coordinate","x":"X coordinate","alignment":"Text alignment","text":"Text to draw"},"fname":"drawText","realm":"cl","description":"\nDraws text with newlines and tabs","name":"render_library.drawText","library":"render"},"drawRoundedBox":{"summary":"\nDraws a rounded rectangle using the current color ","class":"function","private":false,"param":{"1":"r","2":"x","3":"y","4":"w","5":"h","x":"Top left corner x coordinate","w":"Width","r":"The corner radius","h":"Height","y":"Top left corner y coordinate"},"fname":"drawRoundedBox","realm":"cl","description":"\nDraws a rounded rectangle using the current color","name":"render_library.drawRoundedBox","library":"render"},"setMaterial":{"summary":"\nSets the current render material ","class":"function","private":false,"param":{"1":"mat","mat":"The material object"},"fname":"setMaterial","realm":"cl","description":"\nSets the current render material","name":"render_library.setMaterial","library":"render"},"enableClipping":{"summary":"\nSets the status of the clip renderer, returning previous state.","ret":"Previous clipping state.","class":"function","private":false,"library":"render","fname":"enableClipping","realm":"cl","param":{"1":"state","state":"New clipping state."},"name":"render_library.enableClipping","description":"\nSets the status of the clip renderer, returning previous state."},"drawSimpleText":{"summary":"\nDraws text more easily and quickly but no new lines or tabs.","class":"function","private":false,"param":{"1":"x","2":"y","3":"text","4":"xalign","5":"yalign","x":"X coordinate","y":"Y coordinate","yalign":"Text y alignment","xalign":"Text x alignment","text":"Text to draw"},"fname":"drawSimpleText","realm":"cl","description":"\nDraws text more easily and quickly but no new lines or tabs.","name":"render_library.drawSimpleText","library":"render"},"draw3DBox":{"summary":"\nDraws a box in 3D space ","class":"function","private":false,"param":{"1":"origin","2":"angle","3":"mins","4":"maxs","mins":"Start position of the box, relative to origin.","angle":"Orientation of the box","maxs":"End position of the box, relative to origin.","origin":"Origin of the box."},"fname":"draw3DBox","realm":"cl","description":"\nDraws a box in 3D space","name":"render_library.draw3DBox","library":"render"},"createMaterial":{"summary":"\nLooks up a texture by file name and creates an UnlitGeneric material with it.","ret":"The material. Use with render.setMaterial to draw with it.","class":"function","private":false,"library":"render","fname":"createMaterial","realm":"cl","param":{"1":"tx","2":"cb","3":"done","done":"An optional callback called when the image is done loading. Passes the material, url","tx":"Texture file path, a http url, or image data: https://en.wikipedia.org/wiki/Data_URI_scheme","cb":"An optional callback called when loading is done. Passes nil if it fails or Passes the material, url, width, height, and layout function which can be called with x, y, w, h to reposition the image in the texture."},"name":"render_library.createMaterial","description":"\nLooks up a texture by file name and creates an UnlitGeneric material with it. \nAlso supports image URLs or image data: https://en.wikipedia.org/wiki/Data_URI_scheme \nMake sure to store the material to use it rather than calling this slow function repeatedly. \nNOTE: This no longer supports material names. Use texture names instead (Textures are .vtf, material are .vmt)"},"drawRoundedBoxEx":{"summary":"\nDraws a rounded rectangle using the current color ","class":"function","private":false,"param":{"1":"r","2":"x","3":"y","4":"w","5":"h","6":"tl","7":"tr","8":"bl","9":"br","x":"Top left corner x coordinate","tl":"Boolean Top left corner","br":"Boolean Bottom right corner","bl":"Boolean Bottom left corner","w":"Width","tr":"Boolean Top right corner","h":"Height","y":"Top left corner y coordinate","r":"The corner radius"},"fname":"drawRoundedBoxEx","realm":"cl","description":"\nDraws a rounded rectangle using the current color","name":"render_library.drawRoundedBoxEx","library":"render"},"drawRectOutline":{"summary":"\nDraws a rectangle outline using the current color.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y integer coordinate","x":"Top left corner x integer coordinate","h":"Height","w":"Width"},"fname":"drawRectOutline","realm":"cl","description":"\nDraws a rectangle outline using the current color.","name":"render_library.drawRectOutline","library":"render"},"parseMarkup":{"summary":"\nConstructs a markup object for quick styled text drawing.","ret":"The markup object. See https://wiki.garrysmod.com/page/Category:MarkupObject","class":"function","private":false,"library":"render","fname":"parseMarkup","realm":"cl","param":{"1":"str","2":"maxsize","maxsize":"The max width of the markup","str":"The markup string to parse"},"name":"render_library.parseMarkup","description":"\nConstructs a markup object for quick styled text drawing."},"destroyTexture":{"summary":"\nReleases the texture.","class":"function","private":false,"param":{"1":"mat","mat":"The material object"},"fname":"destroyTexture","realm":"cl","description":"\nReleases the texture. Required if you reach the maximum url textures.","name":"render_library.destroyTexture","library":"render"},"getResolution":{"summary":"\nReturns the render context's width and height ","classForced":true,"ret":["the X size of the current render context","the Y size of the current render context"],"class":"function","param":[],"private":false,"fname":"getResolution","library":"render","realm":"cl","name":"render_library.getResolution","description":"\nReturns the render context's width and height"},"traceSurfaceColor":{"summary":"\nDoes a trace and returns the color of the textel the trace hits.","ret":"The color","class":"function","private":false,"library":"render","fname":"traceSurfaceColor","realm":"cl","param":{"1":"vec1","2":"vec2","vec2":"The ending vector","vec1":"The starting vector"},"name":"render_library.traceSurfaceColor","description":"\nDoes a trace and returns the color of the textel the trace hits."},"setStencilPassOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the compare function was successful.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilPassOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the compare function was successful. More: http://wiki.garrysmod.com/page/render/SetStencilPassOperation","name":"render_library.setStencilPassOperation","library":"render"},"drawRect":{"summary":"\nDraws a rectangle using the current color ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawRect","realm":"cl","description":"\nDraws a rectangle using the current color","name":"render_library.drawRect","library":"render"},"clear":{"summary":"\nClears the active render target ","class":"function","private":false,"param":{"1":"clr","2":"depth","clr":"Color type to clear with","depth":"Boolean if should clear depth"},"fname":"clear","realm":"cl","description":"\nClears the active render target","name":"render_library.clear","library":"render"},"setStencilReferenceValue":{"summary":"\nSets the reference value which will be used for all stencil operations.","class":"function","private":false,"param":{"1":"referenceValue","referenceValue":"Reference value."},"fname":"setStencilReferenceValue","realm":"cl","description":"\nSets the reference value which will be used for all stencil operations. This is an unsigned integer.","name":"render_library.setStencilReferenceValue","library":"render"},"draw3DLine":{"summary":"\nDraws a 3D Line ","class":"function","private":false,"param":{"1":"startPos","2":"endPos","startPos":"Starting position","endPos":"Ending position"},"fname":"draw3DLine","realm":"cl","description":"\nDraws a 3D Line","name":"render_library.draw3DLine","library":"render"},"draw3DWireframeBox":{"summary":"\nDraws a wireframe box in 3D space ","class":"function","private":false,"param":{"1":"origin","2":"angle","3":"mins","4":"maxs","mins":"Start position of the box, relative to origin.","angle":"Orientation of the box","maxs":"End position of the box, relative to origin.","origin":"Origin of the box."},"fname":"draw3DWireframeBox","realm":"cl","description":"\nDraws a wireframe box in 3D space","name":"render_library.draw3DWireframeBox","library":"render"},"draw3DWireframeSphere":{"summary":"\nDraws a wireframe sphere ","class":"function","private":false,"param":{"1":"pos","2":"radius","3":"longitudeSteps","4":"latitudeSteps","longitudeSteps":"The amount of longitude steps. The larger this number is, the smoother the sphere is","pos":"Position of the sphere","radius":"Radius of the sphere","latitudeSteps":"The amount of latitude steps. The larger this number is, the smoother the sphere is"},"fname":"draw3DWireframeSphere","realm":"cl","description":"\nDraws a wireframe sphere","name":"render_library.draw3DWireframeSphere","library":"render"},"drawRectFast":{"summary":"\nDraws a rectangle using the current color \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawRectFast","realm":"cl","description":"\nDraws a rectangle using the current color \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawRectFast","library":"render"},"drawTexturedRect":{"summary":"\nDraws a textured rectangle ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawTexturedRect","realm":"cl","description":"\nDraws a textured rectangle","name":"render_library.drawTexturedRect","library":"render"},"getGameResolution":{"summary":"\nReturns width and height of the game window.","classForced":true,"ret":["the X size of the game window","the Y size of the game window"],"class":"function","param":[],"private":false,"fname":"getGameResolution","library":"render","realm":"cl","name":"render_library.getGameResolution","description":"\nReturns width and height of the game window. If a rendertarget is selected, will return 1024, 1024"},"setColor":{"summary":"\nSets the draw color ","class":"function","private":false,"param":{"1":"clr","clr":"Color type"},"fname":"setColor","realm":"cl","description":"\nSets the draw color","name":"render_library.setColor","library":"render"},"setTextureFromScreen":{"summary":"\nSets the texture of a screen entity ","class":"function","private":false,"param":{"1":"ent","ent":"Screen entity"},"fname":"setTextureFromScreen","realm":"cl","description":"\nSets the texture of a screen entity","name":"render_library.setTextureFromScreen","library":"render"},"getScreenInfo":{"summary":"\nReturns information about the screen, such as world offsets, dimentions, and rotation.","ret":"A table describing the screen.","class":"function","private":false,"library":"render","fname":"getScreenInfo","realm":"cl","param":{"1":"e","e":"The screen to get info from."},"name":"render_library.getScreenInfo","description":"\nReturns information about the screen, such as world offsets, dimentions, and rotation. \nNote: this does a table copy so move it out of your draw hook"},"setBackgroundColor":{"summary":"\nSets background color of screen ","class":"function","private":false,"param":{"1":"col","2":"screen","col":"Color of background"},"fname":"setBackgroundColor","realm":"cl","description":"\nSets background color of screen","name":"render_library.setBackgroundColor","library":"render"},"setStencilZFailOperation":{"summary":"\nSets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilZFailOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails. More: http://wiki.garrysmod.com/page/render/SetStencilZFailOperation","name":"render_library.setStencilZFailOperation","library":"render"},"capturePixels":{"summary":"\nDumps the current render target and allows the pixels to be accessed by render.readPixel.","class":"function","private":false,"param":[],"fname":"capturePixels","realm":"cl","description":"\nDumps the current render target and allows the pixels to be accessed by render.readPixel.","name":"render_library.capturePixels","library":"render"},"drawTexturedRectFast":{"summary":"\nDraws a textured rectangle \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawTexturedRectFast","realm":"cl","description":"\nDraws a textured rectangle \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectFast","library":"render"},"draw3DBeam":{"summary":"\nDraws textured beam.","class":"function","private":false,"param":{"1":"startPos","2":"endPos","3":"width","4":"textureStart","5":"textureEnd","textureEnd":"The end coordinate of the texture used.","textureStart":"The start coordinate of the texture used.","endPos":"Beam end position.","startPos":"Beam start position.","width":"The width of the beam."},"fname":"draw3DBeam","realm":"cl","description":"\nDraws textured beam.","name":"render_library.draw3DBeam","library":"render"},"setStencilEnable":{"summary":"\nSets whether stencil tests are carried out for each rendered pixel.","class":"function","private":false,"param":{"1":"enable","enable":"true to enable, false to disable"},"fname":"setStencilEnable","realm":"cl","description":"\nSets whether stencil tests are carried out for each rendered pixel. Only pixels passing the stencil test are written to the render target.","name":"render_library.setStencilEnable","library":"render"},"drawPoly":{"summary":"\nDraws a polygon.","class":"function","private":false,"param":{"1":"poly","poly":"Table of polygon vertices. Texture coordinates are optional. {{x=x1, y=y1, u=u1, v=v1}, ... }"},"fname":"drawPoly","realm":"cl","description":"\nDraws a polygon.","name":"render_library.drawPoly","library":"render"},"setCullMode":{"summary":"\nChanges the cull mode ","class":"function","private":false,"param":{"1":"mode","mode":"Cull mode. 0 for counter clock wise, 1 for clock wise"},"fname":"setCullMode","realm":"cl","description":"\nChanges the cull mode","name":"render_library.setCullMode","library":"render"},"setHUDActive":{"summary":"\nSets the current instance to allow HUD drawing.","class":"function","private":false,"param":{"1":"active","active":"Whether hud hooks should be active. true to force on, false to force off, nil to restore default."},"fname":"setHUDActive","realm":"cl","description":"\nSets the current instance to allow HUD drawing. Only works for owner of the chip","name":"render_library.setHUDActive","library":"render"},"readPixel":{"summary":"\nReads the color of the specified pixel.","ret":"Color object with ( r, g, b, 255 ) from the specified pixel.","class":"function","private":false,"library":"render","fname":"readPixel","realm":"cl","param":{"1":"x","2":"y","y":"Pixel y-coordinate.","x":"Pixel x-coordinate."},"name":"render_library.readPixel","description":"\nReads the color of the specified pixel."},"selectRenderTarget":{"summary":"\nSelects the render target to draw on.","class":"function","private":false,"param":{"1":"name","name":"Name of the render target to use"},"fname":"selectRenderTarget","realm":"cl","description":"\nSelects the render target to draw on. \nNil for the visible RT.","name":"render_library.selectRenderTarget","library":"render"},"pushMatrix":{"summary":"\nPushes a matrix onto the matrix stack.","class":"function","private":false,"param":{"1":"m","2":"world","world":"Should the transformation be relative to the screen or world?","m":"The matrix"},"fname":"pushMatrix","realm":"cl","description":"\nPushes a matrix onto the matrix stack.","name":"render_library.pushMatrix","library":"render"},"setStencilTestMask":{"summary":"\nSets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","class":"function","private":false,"param":{"1":"mask","mask":"The mask bitflag."},"fname":"setStencilTestMask","realm":"cl","description":"\nSets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","name":"render_library.setStencilTestMask","library":"render"},"destroyRenderTarget":{"summary":"\nReleases the rendertarget.","class":"function","private":false,"param":{"1":"name","name":"Rendertarget name"},"fname":"destroyRenderTarget","realm":"cl","description":"\nReleases the rendertarget. Required if you reach the maximum rendertargets.","name":"render_library.destroyRenderTarget","library":"render"},"popCustomClipPlane":{"summary":"\nRemoves the current active clipping plane from the clip plane stack.","class":"function","private":false,"param":[],"fname":"popCustomClipPlane","realm":"cl","description":"\nRemoves the current active clipping plane from the clip plane stack.","name":"render_library.popCustomClipPlane","library":"render"},"pushViewMatrix":{"summary":"\nPushes a perspective matrix onto the view matrix stack.","class":"function","private":false,"param":{"1":"tbl","tbl":"The view matrix data. See http://wiki.garrysmod.com/page/Structures/RenderCamData"},"fname":"pushViewMatrix","realm":"cl","description":"\nPushes a perspective matrix onto the view matrix stack.","name":"render_library.pushViewMatrix","library":"render"},"pushCustomClipPlane":{"summary":"\nPushes a new clipping plane of the clip plane stack.","class":"function","private":false,"param":{"1":"normal","2":"distance","normal":"The normal of the clipping plane.","distance":"The normal of the clipping plane."},"fname":"pushCustomClipPlane","realm":"cl","description":"\nPushes a new clipping plane of the clip plane stack.","name":"render_library.pushCustomClipPlane","library":"render"},"renderView":{"summary":"\nRenders the scene with the specified viewData to the current active render target.","class":"function","private":false,"param":{"1":"tbl","tbl":"view The view data to be used in the rendering. See http://wiki.garrysmod.com/page/Structures/ViewData. There's an additional key drawviewer used to tell the engine whether the local player model should be rendered."},"fname":"renderView","realm":"cl","description":"\nRenders the scene with the specified viewData to the current active render target.","name":"render_library.renderView","library":"render"},"getTextSize":{"summary":"\nGets the size of the specified text.","ret":["width of the text","height of the text"],"class":"function","private":false,"library":"render","fname":"getTextSize","realm":"cl","param":{"1":"text","text":"Text to get the size of"},"name":"render_library.getTextSize","description":"\nGets the size of the specified text. Don't forget to use setFont before calling this function"},"isHUDActive":{"summary":"\nChecks if a hud component is connected to the Starfall Chip ","class":"function","private":false,"param":[],"fname":"isHUDActive","realm":"cl","description":"\nChecks if a hud component is connected to the Starfall Chip","name":"render_library.isHUDActive","library":"render"},"disableScissorRect":{"summary":"\nDisables a scissoring rect which limits the drawing area.","class":"function","private":false,"param":[],"fname":"disableScissorRect","realm":"cl","description":"\nDisables a scissoring rect which limits the drawing area.","name":"render_library.disableScissorRect","library":"render"},"cursorPos":{"summary":"\nGets a 2D cursor position where ply is aiming at the current rendered screen or nil if they aren't aiming at it.","ret":["x position","y position"],"class":"function","private":false,"library":"render","fname":"cursorPos","realm":"cl","param":{"1":"ply","2":"screen","screen":"An explicit screen to get the cursor pos of (default: The current rendering screen using 'render' hook)","ply":"player to get cursor position from (default: player())"},"name":"render_library.cursorPos","description":"\nGets a 2D cursor position where ply is aiming at the current rendered screen or nil if they aren't aiming at it."},"draw3DSphere":{"summary":"\nDraws a sphere ","class":"function","private":false,"param":{"1":"pos","2":"radius","3":"longitudeSteps","4":"latitudeSteps","longitudeSteps":"The amount of longitude steps. The larger this number is, the smoother the sphere is","pos":"Position of the sphere","radius":"Radius of the sphere","latitudeSteps":"The amount of latitude steps. The larger this number is, the smoother the sphere is"},"fname":"draw3DSphere","realm":"cl","description":"\nDraws a sphere","name":"render_library.draw3DSphere","library":"render"},"clearStencilBufferRectangle":{"summary":"\nSets the stencil value in a specified rect.","class":"function","private":false,"param":{"1":"originX","2":"originY","3":"endX","4":"endY","5":"stencilValue","stencilValue":"Value to set cleared stencil buffer to.","endX":"The end X coordinate of the rectangle.","originX":"X origin of the rectangle.","endY":"The end Y coordinate of the rectangle.","originY":"Y origin of the rectangle."},"fname":"clearStencilBufferRectangle","realm":"cl","description":"\nSets the stencil value in a specified rect.","name":"render_library.clearStencilBufferRectangle","library":"render"},"clearDepth":{"summary":"\nResets the depth buffer ","class":"function","private":false,"param":[],"fname":"clearDepth","realm":"cl","description":"\nResets the depth buffer","name":"render_library.clearDepth","library":"render"},"draw3DQuad":{"summary":"\nDraws 2 connected triangles.","class":"function","private":false,"param":{"1":"vert1","2":"vert2","3":"vert3","4":"vert4","vert4":"The fourth vertex.","vert1":"First vertex.","vert3":"The third vertex.","vert2":"The second vertex."},"fname":"draw3DQuad","realm":"cl","description":"\nDraws 2 connected triangles.","name":"render_library.draw3DQuad","library":"render"},"popMatrix":{"summary":"\nPops a matrix from the matrix stack.","class":"function","private":false,"param":[],"fname":"popMatrix","realm":"cl","description":"\nPops a matrix from the matrix stack.","name":"render_library.popMatrix","library":"render"},"setFont":{"summary":"\nSets the font ","class":"function","usage":"Use a font created by render.createFont or use one of these already defined fonts: \n- DebugFixed \n- DebugFixedSmall \n- Default \n- Marlett \n- Trebuchet18 \n- Trebuchet24 \n- HudHintTextLarge \n- HudHintTextSmall \n- CenterPrintText \n- HudSelectionText \n- CloseCaption_Normal \n- CloseCaption_Bold \n- CloseCaption_BoldItalic \n- ChatFont \n- TargetID \n- TargetIDSmall \n- HL2MPTypeDeath \n- BudgetLabel \n- HudNumbers \n- DermaDefault \n- DermaDefaultBold \n- DermaLarge","private":false,"library":"render","fname":"setFont","realm":"cl","param":{"1":"font","font":"The font to use"},"name":"render_library.setFont","description":"\nSets the font"},"createFont":{"summary":"\nCreates a font.","class":"function","usage":"\nBase font can be one of (keep in mind that these may not exist on all clients if they are not shipped with starfall): \n- Akbar \n- Coolvetica \n- Roboto \n- Roboto Mono \n- FontAwesome \n- Courier New \n- Verdana \n- Arial \n- HalfLife2 \n- hl2mp \n- csd \n- Tahoma \n- Trebuchet \n- Trebuchet MS \n- DejaVu Sans Mono \n- Lucida Console \n- Times New Roman","private":false,"library":"render","fname":"createFont","realm":"cl","param":{"1":"font","2":"size","3":"weight","4":"antialias","5":"additive","6":"shadow","7":"outline","8":"blur","9":"extended","outline":"Enable outline?","size":"Font size","font":"Base font to use","antialias":"Antialias font?","additive":"If true, adds brightness to pixels behind it rather than drawing over them.","blur":"Enable blur?","extended":"Allows the font to display glyphs outside of Latin-1 range. Unicode code points above 0xFFFF are not supported. Required to use FontAwesome","weight":"Font weight (default: 400)","shadow":"Enable drop shadow?"},"name":"render_library.createFont","description":"\nCreates a font. Does not require rendering hook"},"drawTexturedRectRotated":{"summary":"\nDraws a rotated, textured rectangle.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"rot","x":"X coordinate of center of rect","w":"Width","y":"Y coordinate of center of rect","h":"Height","rot":"Rotation in degrees"},"fname":"drawTexturedRectRotated","realm":"cl","description":"\nDraws a rotated, textured rectangle.","name":"render_library.drawTexturedRectRotated","library":"render"},"enableDepth":{"summary":"\nEnables or disables Depth Buffer ","class":"function","private":false,"param":{"1":"enable","enable":"true to enable"},"fname":"enableDepth","realm":"cl","description":"\nEnables or disables Depth Buffer","name":"render_library.enableDepth","library":"render"},"createRenderTarget":{"summary":"\nCreates a new render target to draw onto.","class":"function","private":false,"param":{"1":"name","name":"The name of the render target"},"fname":"createRenderTarget","realm":"cl","description":"\nCreates a new render target to draw onto. \nThe dimensions will always be 1024x1024","name":"render_library.createRenderTarget","library":"render"},"drawTexturedRectUVFast":{"summary":"\nDraws a textured rectangle with UV coordinates \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"startU","6":"startV","7":"endU","8":"endV","9":"UVHack","startV":"Texture mapping at rectangle origin","x":"Top left corner x","UVHack":"If enabled, will scale the UVs to compensate for internal bug. Should be true for user created materials.","w":"Width","y":"Top left corner y","h":"Height","startU":"Texture mapping at rectangle origin","endV":"Texture mapping at rectangle end"},"fname":"drawTexturedRectUVFast","realm":"cl","description":"\nDraws a textured rectangle with UV coordinates \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectUVFast","library":"render"},"clearStencil":{"summary":"\nResets all values in the stencil buffer to zero.","class":"function","private":false,"param":[],"fname":"clearStencil","realm":"cl","description":"\nResets all values in the stencil buffer to zero.","name":"render_library.clearStencil","library":"render"},"drawTexturedRectUV":{"summary":"\nDraws a textured rectangle with UV coordinates ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"startU","6":"startV","7":"endU","8":"endV","startV":"Texture mapping at rectangle origin","x":"Top left corner x","w":"Width","y":"Top left corner y","h":"Height","startU":"Texture mapping at rectangle origin","endV":"Texture mapping at rectangle end"},"fname":"drawTexturedRectUV","realm":"cl","description":"\nDraws a textured rectangle with UV coordinates","name":"render_library.drawTexturedRectUV","library":"render"},"draw3DQuadUV":{"summary":"\nDraws 2 connected triangles with custom UVs.","class":"function","private":false,"param":{"1":"vert1","2":"vert2","3":"vert3","4":"vert4","vert4":"The fourth vertex.","vert1":"First vertex. {x, y, z, u, v}","vert3":"The third vertex.","vert2":"The second vertex."},"fname":"draw3DQuadUV","realm":"cl","description":"\nDraws 2 connected triangles with custom UVs.","name":"render_library.draw3DQuadUV","library":"render"},"popViewMatrix":{"summary":"\nPops a view matrix from the matrix stack.","class":"function","private":false,"param":[],"fname":"popViewMatrix","realm":"cl","description":"\nPops a view matrix from the matrix stack.","name":"render_library.popViewMatrix","library":"render"},"drawLine":{"summary":"\nDraws a line.","class":"function","private":false,"param":{"1":"x1","2":"y1","3":"x2","4":"y2","y1":"Y start integer coordinate","x1":"X start integer coordinate","y2":"Y end integer coordinate","x2":"X end interger coordinate"},"fname":"drawLine","realm":"cl","description":"\nDraws a line. Use 3D functions for float coordinates","name":"render_library.drawLine","library":"render"},"setStencilWriteMask":{"summary":"\nSets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer.","class":"function","private":false,"param":{"1":"mask","mask":"The mask bitflag."},"fname":"setStencilWriteMask","realm":"cl","description":"\nSets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer.","name":"render_library.setStencilWriteMask","library":"render"}},"name":"render","description":"\nRender library. Screens are 512x512 units. Most functions require \nthat you be in the rendering hook to call, otherwise an error is \nthrown. +x is right, +y is down"},{"summary":"\nVertex format ","classForced":true,"field":{"1":"x","2":"y","3":"u","4":"v","y":"Y coordinate","x":"X coordinate","v":"V coordinate (optional, default is 0)","u":"U coordinate (optional, default is 0)"},"class":"table","description":"\nVertex format","name":"Vertex Format","param":[]},{"summary":"\nSets whether stencil tests are carried out for each rendered pixel.","class":"function","private":false,"param":{"1":"enable","enable":"true to enable, false to disable"},"fname":"setStencilEnable","realm":"cl","description":"\nSets whether stencil tests are carried out for each rendered pixel. Only pixels passing the stencil test are written to the render target.","name":"render_library.setStencilEnable","library":"render"},{"summary":"\nResets all values in the stencil buffer to zero.","class":"function","private":false,"param":[],"fname":"clearStencil","realm":"cl","description":"\nResets all values in the stencil buffer to zero.","name":"render_library.clearStencil","library":"render"},{"summary":"\nClears the current rendertarget for obeying the current stencil buffer conditions.","class":"function","private":false,"param":{"1":"r","2":"g","3":"b","4":"a","5":"depth","r":"Value of the red channel to clear the current rt with.","b":"Value of the blue channel to clear the current rt with.","depth":"Clear the depth buffer.","g":"Value of the green channel to clear the current rt with."},"fname":"clearBuffersObeyStencil","realm":"cl","description":"\nClears the current rendertarget for obeying the current stencil buffer conditions.","name":"render_library.clearBuffersObeyStencil","library":"render"},{"summary":"\nSets the stencil value in a specified rect.","class":"function","private":false,"param":{"1":"originX","2":"originY","3":"endX","4":"endY","5":"stencilValue","stencilValue":"Value to set cleared stencil buffer to.","endX":"The end X coordinate of the rectangle.","originX":"X origin of the rectangle.","endY":"The end Y coordinate of the rectangle.","originY":"Y origin of the rectangle."},"fname":"clearStencilBufferRectangle","realm":"cl","description":"\nSets the stencil value in a specified rect.","name":"render_library.clearStencilBufferRectangle","library":"render"},{"summary":"\nSets the compare function of the stencil.","class":"function","private":false,"param":{"1":"compareFunction","compareFunction":""},"fname":"setStencilCompareFunction","realm":"cl","description":"\nSets the compare function of the stencil. More: http://wiki.garrysmod.com/page/render/SetStencilCompareFunction","name":"render_library.setStencilCompareFunction","library":"render"},{"summary":"\nSets the operation to be performed on the stencil buffer values if the compare function was not successful.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilFailOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the compare function was not successful. More: http://wiki.garrysmod.com/page/render/SetStencilFailOperation","name":"render_library.setStencilFailOperation","library":"render"},{"summary":"\nSets the operation to be performed on the stencil buffer values if the compare function was successful.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilPassOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the compare function was successful. More: http://wiki.garrysmod.com/page/render/SetStencilPassOperation","name":"render_library.setStencilPassOperation","library":"render"},{"summary":"\nSets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails.","class":"function","private":false,"param":{"1":"operation","operation":""},"fname":"setStencilZFailOperation","realm":"cl","description":"\nSets the operation to be performed on the stencil buffer values if the stencil test is passed but the depth buffer test fails. More: http://wiki.garrysmod.com/page/render/SetStencilZFailOperation","name":"render_library.setStencilZFailOperation","library":"render"},{"summary":"\nSets the reference value which will be used for all stencil operations.","class":"function","private":false,"param":{"1":"referenceValue","referenceValue":"Reference value."},"fname":"setStencilReferenceValue","realm":"cl","description":"\nSets the reference value which will be used for all stencil operations. This is an unsigned integer.","name":"render_library.setStencilReferenceValue","library":"render"},{"summary":"\nSets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","class":"function","private":false,"param":{"1":"mask","mask":"The mask bitflag."},"fname":"setStencilTestMask","realm":"cl","description":"\nSets the unsigned 8-bit test bitflag mask to be used for any stencil testing.","name":"render_library.setStencilTestMask","library":"render"},{"summary":"\nSets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer.","class":"function","private":false,"param":{"1":"mask","mask":"The mask bitflag."},"fname":"setStencilWriteMask","realm":"cl","description":"\nSets the unsigned 8-bit write bitflag mask to be used for any writes to the stencil buffer.","name":"render_library.setStencilWriteMask","library":"render"},{"summary":"\nPushes a matrix onto the matrix stack.","class":"function","private":false,"param":{"1":"m","2":"world","world":"Should the transformation be relative to the screen or world?","m":"The matrix"},"fname":"pushMatrix","realm":"cl","description":"\nPushes a matrix onto the matrix stack.","name":"render_library.pushMatrix","library":"render"},{"summary":"\nEnables a scissoring rect which limits the drawing area.","class":"function","private":false,"param":{"1":"startX","2":"startY","3":"endX","4":"endY","endX":"Y end coordinate of the scissor rect.","startY":"Y start coordinate of the scissor rect.","startX":"X start coordinate of the scissor rect."},"fname":"enableScissorRect","realm":"cl","description":"\nEnables a scissoring rect which limits the drawing area. Only works 2D contexts such as HUD or render targets.","name":"render_library.enableScissorRect","library":"render"},{"summary":"\nDisables a scissoring rect which limits the drawing area.","class":"function","private":false,"param":[],"fname":"disableScissorRect","realm":"cl","description":"\nDisables a scissoring rect which limits the drawing area.","name":"render_library.disableScissorRect","library":"render"},{"summary":"\nPops a matrix from the matrix stack.","class":"function","private":false,"param":[],"fname":"popMatrix","realm":"cl","description":"\nPops a matrix from the matrix stack.","name":"render_library.popMatrix","library":"render"},{"summary":"\nPushes a perspective matrix onto the view matrix stack.","class":"function","private":false,"param":{"1":"tbl","tbl":"The view matrix data. See http://wiki.garrysmod.com/page/Structures/RenderCamData"},"fname":"pushViewMatrix","realm":"cl","description":"\nPushes a perspective matrix onto the view matrix stack.","name":"render_library.pushViewMatrix","library":"render"},{"summary":"\nPops a view matrix from the matrix stack.","class":"function","private":false,"param":[],"fname":"popViewMatrix","realm":"cl","description":"\nPops a view matrix from the matrix stack.","name":"render_library.popViewMatrix","library":"render"},{"summary":"\nSets background color of screen ","class":"function","private":false,"param":{"1":"col","2":"screen","col":"Color of background"},"fname":"setBackgroundColor","realm":"cl","description":"\nSets background color of screen","name":"render_library.setBackgroundColor","library":"render"},{"summary":"\nSets the lighting mode ","class":"function","private":false,"param":{"1":"mode","mode":"The lighting mode. 0 - Default, 1 - Fullbright, 2 - Increased Fullbright"},"fname":"setLightingMode","realm":"cl","description":"\nSets the lighting mode","name":"render_library.setLightingMode","library":"render"},{"summary":"\nSets the draw color ","class":"function","private":false,"param":{"1":"clr","clr":"Color type"},"fname":"setColor","realm":"cl","description":"\nSets the draw color","name":"render_library.setColor","library":"render"},{"summary":"\nSets the draw color by RGBA values ","class":"function","private":false,"param":["r","g","b","a"],"fname":"setRGBA","realm":"cl","description":"\nSets the draw color by RGBA values","name":"render_library.setRGBA","library":"render"},{"summary":"\nLooks up a texture by file name and creates an UnlitGeneric material with it.","ret":"The material. Use with render.setMaterial to draw with it.","class":"function","private":false,"library":"render","fname":"createMaterial","realm":"cl","param":{"1":"tx","2":"cb","3":"done","done":"An optional callback called when the image is done loading. Passes the material, url","tx":"Texture file path, a http url, or image data: https://en.wikipedia.org/wiki/Data_URI_scheme","cb":"An optional callback called when loading is done. Passes nil if it fails or Passes the material, url, width, height, and layout function which can be called with x, y, w, h to reposition the image in the texture."},"name":"render_library.createMaterial","description":"\nLooks up a texture by file name and creates an UnlitGeneric material with it. \nAlso supports image URLs or image data: https://en.wikipedia.org/wiki/Data_URI_scheme \nMake sure to store the material to use it rather than calling this slow function repeatedly. \nNOTE: This no longer supports material names. Use texture names instead (Textures are .vtf, material are .vmt)"},{"summary":"\nReleases the texture.","class":"function","private":false,"param":{"1":"mat","mat":"The material object"},"fname":"destroyTexture","realm":"cl","description":"\nReleases the texture. Required if you reach the maximum url textures.","name":"render_library.destroyTexture","library":"render"},{"summary":"\nSets the current render material ","class":"function","private":false,"param":{"1":"mat","mat":"The material object"},"fname":"setMaterial","realm":"cl","description":"\nSets the current render material","name":"render_library.setMaterial","library":"render"},{"summary":"\nCreates a new render target to draw onto.","class":"function","private":false,"param":{"1":"name","name":"The name of the render target"},"fname":"createRenderTarget","realm":"cl","description":"\nCreates a new render target to draw onto. \nThe dimensions will always be 1024x1024","name":"render_library.createRenderTarget","library":"render"},{"summary":"\nReleases the rendertarget.","class":"function","private":false,"param":{"1":"name","name":"Rendertarget name"},"fname":"destroyRenderTarget","realm":"cl","description":"\nReleases the rendertarget. Required if you reach the maximum rendertargets.","name":"render_library.destroyRenderTarget","library":"render"},{"summary":"\nSelects the render target to draw on.","class":"function","private":false,"param":{"1":"name","name":"Name of the render target to use"},"fname":"selectRenderTarget","realm":"cl","description":"\nSelects the render target to draw on. \nNil for the visible RT.","name":"render_library.selectRenderTarget","library":"render"},{"summary":"\nSets the active texture to the render target with the specified name.","class":"function","private":false,"param":{"1":"name","name":"Name of the render target to use"},"fname":"setRenderTargetTexture","realm":"cl","description":"\nSets the active texture to the render target with the specified name. \nNil to reset.","name":"render_library.setRenderTargetTexture","library":"render"},{"summary":"\nSets the texture of a screen entity ","class":"function","private":false,"param":{"1":"ent","ent":"Screen entity"},"fname":"setTextureFromScreen","realm":"cl","description":"\nSets the texture of a screen entity","name":"render_library.setTextureFromScreen","library":"render"},{"summary":"\nSets the texture filtering function when viewing a close texture ","class":"function","private":false,"param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"fname":"setFilterMag","realm":"cl","description":"\nSets the texture filtering function when viewing a close texture","name":"render_library.setFilterMag","library":"render"},{"summary":"\nSets the texture filtering function when viewing a far texture ","class":"function","private":false,"param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"fname":"setFilterMin","realm":"cl","description":"\nSets the texture filtering function when viewing a far texture","name":"render_library.setFilterMin","library":"render"},{"summary":"\nChanges the cull mode ","class":"function","private":false,"param":{"1":"mode","mode":"Cull mode. 0 for counter clock wise, 1 for clock wise"},"fname":"setCullMode","realm":"cl","description":"\nChanges the cull mode","name":"render_library.setCullMode","library":"render"},{"summary":"\nClears the active render target ","class":"function","private":false,"param":{"1":"clr","2":"depth","clr":"Color type to clear with","depth":"Boolean if should clear depth"},"fname":"clear","realm":"cl","description":"\nClears the active render target","name":"render_library.clear","library":"render"},{"summary":"\nDraws a rounded rectangle using the current color ","class":"function","private":false,"param":{"1":"r","2":"x","3":"y","4":"w","5":"h","x":"Top left corner x coordinate","w":"Width","r":"The corner radius","h":"Height","y":"Top left corner y coordinate"},"fname":"drawRoundedBox","realm":"cl","description":"\nDraws a rounded rectangle using the current color","name":"render_library.drawRoundedBox","library":"render"},{"summary":"\nDraws a rounded rectangle using the current color ","class":"function","private":false,"param":{"1":"r","2":"x","3":"y","4":"w","5":"h","6":"tl","7":"tr","8":"bl","9":"br","x":"Top left corner x coordinate","tl":"Boolean Top left corner","br":"Boolean Bottom right corner","bl":"Boolean Bottom left corner","w":"Width","tr":"Boolean Top right corner","h":"Height","y":"Top left corner y coordinate","r":"The corner radius"},"fname":"drawRoundedBoxEx","realm":"cl","description":"\nDraws a rounded rectangle using the current color","name":"render_library.drawRoundedBoxEx","library":"render"},{"summary":"\nDraws a rectangle using the current color \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawRectFast","realm":"cl","description":"\nDraws a rectangle using the current color \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawRectFast","library":"render"},{"summary":"\nDraws a rectangle using the current color ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawRect","realm":"cl","description":"\nDraws a rectangle using the current color","name":"render_library.drawRect","library":"render"},{"summary":"\nDraws a rectangle outline using the current color.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y integer coordinate","x":"Top left corner x integer coordinate","h":"Height","w":"Width"},"fname":"drawRectOutline","realm":"cl","description":"\nDraws a rectangle outline using the current color.","name":"render_library.drawRectOutline","library":"render"},{"summary":"\nDraws a circle outline ","class":"function","private":false,"param":{"1":"x","2":"y","3":"r","y":"Center y coordinate","x":"Center x coordinate","r":"Radius"},"fname":"drawCircle","realm":"cl","description":"\nDraws a circle outline","name":"render_library.drawCircle","library":"render"},{"summary":"\nDraws a textured rectangle \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawTexturedRectFast","realm":"cl","description":"\nDraws a textured rectangle \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectFast","library":"render"},{"summary":"\nDraws a textured rectangle ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","y":"Top left corner y","x":"Top left corner x","h":"Height","w":"Width"},"fname":"drawTexturedRect","realm":"cl","description":"\nDraws a textured rectangle","name":"render_library.drawTexturedRect","library":"render"},{"summary":"\nDraws a textured rectangle with UV coordinates \nFaster, but uses integer coordinates and will get clipped by user's screen resolution ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"startU","6":"startV","7":"endU","8":"endV","9":"UVHack","startV":"Texture mapping at rectangle origin","x":"Top left corner x","UVHack":"If enabled, will scale the UVs to compensate for internal bug. Should be true for user created materials.","w":"Width","y":"Top left corner y","h":"Height","startU":"Texture mapping at rectangle origin","endV":"Texture mapping at rectangle end"},"fname":"drawTexturedRectUVFast","realm":"cl","description":"\nDraws a textured rectangle with UV coordinates \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectUVFast","library":"render"},{"summary":"\nDraws a textured rectangle with UV coordinates ","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"startU","6":"startV","7":"endU","8":"endV","startV":"Texture mapping at rectangle origin","x":"Top left corner x","w":"Width","y":"Top left corner y","h":"Height","startU":"Texture mapping at rectangle origin","endV":"Texture mapping at rectangle end"},"fname":"drawTexturedRectUV","realm":"cl","description":"\nDraws a textured rectangle with UV coordinates","name":"render_library.drawTexturedRectUV","library":"render"},{"summary":"\nDraws a rotated, textured rectangle.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"rot","x":"X coordinate of center of rect","w":"Width","y":"Y coordinate of center of rect","h":"Height","rot":"Rotation in degrees"},"fname":"drawTexturedRectRotatedFast","realm":"cl","description":"\nDraws a rotated, textured rectangle. \nFaster, but uses integer coordinates and will get clipped by user's screen resolution","name":"render_library.drawTexturedRectRotatedFast","library":"render"},{"summary":"\nDraws a rotated, textured rectangle.","class":"function","private":false,"param":{"1":"x","2":"y","3":"w","4":"h","5":"rot","x":"X coordinate of center of rect","w":"Width","y":"Y coordinate of center of rect","h":"Height","rot":"Rotation in degrees"},"fname":"drawTexturedRectRotated","realm":"cl","description":"\nDraws a rotated, textured rectangle.","name":"render_library.drawTexturedRectRotated","library":"render"},{"summary":"\nDraws a line.","class":"function","private":false,"param":{"1":"x1","2":"y1","3":"x2","4":"y2","y1":"Y start integer coordinate","x1":"X start integer coordinate","y2":"Y end integer coordinate","x2":"X end interger coordinate"},"fname":"drawLine","realm":"cl","description":"\nDraws a line. Use 3D functions for float coordinates","name":"render_library.drawLine","library":"render"},{"summary":"\nCreates a font.","class":"function","usage":"\nBase font can be one of (keep in mind that these may not exist on all clients if they are not shipped with starfall): \n- Akbar \n- Coolvetica \n- Roboto \n- Roboto Mono \n- FontAwesome \n- Courier New \n- Verdana \n- Arial \n- HalfLife2 \n- hl2mp \n- csd \n- Tahoma \n- Trebuchet \n- Trebuchet MS \n- DejaVu Sans Mono \n- Lucida Console \n- Times New Roman","private":false,"library":"render","fname":"createFont","realm":"cl","param":{"1":"font","2":"size","3":"weight","4":"antialias","5":"additive","6":"shadow","7":"outline","8":"blur","9":"extended","outline":"Enable outline?","size":"Font size","font":"Base font to use","antialias":"Antialias font?","additive":"If true, adds brightness to pixels behind it rather than drawing over them.","blur":"Enable blur?","extended":"Allows the font to display glyphs outside of Latin-1 range. Unicode code points above 0xFFFF are not supported. Required to use FontAwesome","weight":"Font weight (default: 400)","shadow":"Enable drop shadow?"},"name":"render_library.createFont","description":"\nCreates a font. Does not require rendering hook"},{"summary":"\nGets the size of the specified text.","ret":["width of the text","height of the text"],"class":"function","private":false,"library":"render","fname":"getTextSize","realm":"cl","param":{"1":"text","text":"Text to get the size of"},"name":"render_library.getTextSize","description":"\nGets the size of the specified text. Don't forget to use setFont before calling this function"},{"summary":"\nSets the font ","class":"function","usage":"Use a font created by render.createFont or use one of these already defined fonts: \n- DebugFixed \n- DebugFixedSmall \n- Default \n- Marlett \n- Trebuchet18 \n- Trebuchet24 \n- HudHintTextLarge \n- HudHintTextSmall \n- CenterPrintText \n- HudSelectionText \n- CloseCaption_Normal \n- CloseCaption_Bold \n- CloseCaption_BoldItalic \n- ChatFont \n- TargetID \n- TargetIDSmall \n- HL2MPTypeDeath \n- BudgetLabel \n- HudNumbers \n- DermaDefault \n- DermaDefaultBold \n- DermaLarge","private":false,"library":"render","fname":"setFont","realm":"cl","param":{"1":"font","font":"The font to use"},"name":"render_library.setFont","description":"\nSets the font"},{"summary":"\nGets the default font ","ret":"Default font","class":"function","private":false,"library":"render","fname":"getDefaultFont","realm":"cl","param":[],"name":"render_library.getDefaultFont","description":"\nGets the default font"},{"summary":"\nDraws text with newlines and tabs ","class":"function","private":false,"param":{"1":"x","2":"y","3":"text","4":"alignment","y":"Y coordinate","x":"X coordinate","alignment":"Text alignment","text":"Text to draw"},"fname":"drawText","realm":"cl","description":"\nDraws text with newlines and tabs","name":"render_library.drawText","library":"render"},{"summary":"\nDraws text more easily and quickly but no new lines or tabs.","class":"function","private":false,"param":{"1":"x","2":"y","3":"text","4":"xalign","5":"yalign","x":"X coordinate","y":"Y coordinate","yalign":"Text y alignment","xalign":"Text x alignment","text":"Text to draw"},"fname":"drawSimpleText","realm":"cl","description":"\nDraws text more easily and quickly but no new lines or tabs.","name":"render_library.drawSimpleText","library":"render"},{"summary":"\nConstructs a markup object for quick styled text drawing.","ret":"The markup object. See https://wiki.garrysmod.com/page/Category:MarkupObject","class":"function","private":false,"library":"render","fname":"parseMarkup","realm":"cl","param":{"1":"str","2":"maxsize","maxsize":"The max width of the markup","str":"The markup string to parse"},"name":"render_library.parseMarkup","description":"\nConstructs a markup object for quick styled text drawing."},{"summary":"\nDraws a polygon.","class":"function","private":false,"param":{"1":"poly","poly":"Table of polygon vertices. Texture coordinates are optional. {{x=x1, y=y1, u=u1, v=v1}, ... }"},"fname":"drawPoly","realm":"cl","description":"\nDraws a polygon.","name":"render_library.drawPoly","library":"render"},{"summary":"\nEnables or disables Depth Buffer ","class":"function","private":false,"param":{"1":"enable","enable":"true to enable"},"fname":"enableDepth","realm":"cl","description":"\nEnables or disables Depth Buffer","name":"render_library.enableDepth","library":"render"},{"summary":"\nEnables blend mode control.","class":"function","private":false,"param":{"1":"on","2":"srcBlend","3":"destBlend","4":"blendFunc","5":"srcBlendAlpha","6":"destBlendAlpha","7":"blendFuncAlpha","blendFuncAlpha":"Optional Number http://wiki.garrysmod.com/page/Enums/BLENDFUNC","srcBlend":"Number http://wiki.garrysmod.com/page/Enums/BLEND","destBlendAlpha":"Optional Number","srcBlendAlpha":"Optional Number http://wiki.garrysmod.com/page/Enums/BLEND","blendFunc":"Number http://wiki.garrysmod.com/page/Enums/BLENDFUNC","on":"Whether to control the blend mode of upcoming rendering","destBlend":"Number"},"fname":"overrideBlend","realm":"cl","description":"\nEnables blend mode control. Read OpenGL or DirectX docs for more info","name":"render_library.overrideBlend","library":"render"},{"summary":"\nResets the depth buffer ","class":"function","private":false,"param":[],"fname":"clearDepth","realm":"cl","description":"\nResets the depth buffer","name":"render_library.clearDepth","library":"render"},{"summary":"\nDraws a sprite in 3d space.","class":"function","private":false,"param":{"1":"pos","2":"width","3":"height","width":"Width of the sprite.","height":"Height of the sprite.","pos":"Position of the sprite."},"fname":"draw3DSprite","realm":"cl","description":"\nDraws a sprite in 3d space.","name":"render_library.draw3DSprite","library":"render"},{"summary":"\nDraws a sphere ","class":"function","private":false,"param":{"1":"pos","2":"radius","3":"longitudeSteps","4":"latitudeSteps","longitudeSteps":"The amount of longitude steps. The larger this number is, the smoother the sphere is","pos":"Position of the sphere","radius":"Radius of the sphere","latitudeSteps":"The amount of latitude steps. The larger this number is, the smoother the sphere is"},"fname":"draw3DSphere","realm":"cl","description":"\nDraws a sphere","name":"render_library.draw3DSphere","library":"render"},{"summary":"\nDraws a wireframe sphere ","class":"function","private":false,"param":{"1":"pos","2":"radius","3":"longitudeSteps","4":"latitudeSteps","longitudeSteps":"The amount of longitude steps. The larger this number is, the smoother the sphere is","pos":"Position of the sphere","radius":"Radius of the sphere","latitudeSteps":"The amount of latitude steps. The larger this number is, the smoother the sphere is"},"fname":"draw3DWireframeSphere","realm":"cl","description":"\nDraws a wireframe sphere","name":"render_library.draw3DWireframeSphere","library":"render"},{"summary":"\nDraws a 3D Line ","class":"function","private":false,"param":{"1":"startPos","2":"endPos","startPos":"Starting position","endPos":"Ending position"},"fname":"draw3DLine","realm":"cl","description":"\nDraws a 3D Line","name":"render_library.draw3DLine","library":"render"},{"summary":"\nDraws a box in 3D space ","class":"function","private":false,"param":{"1":"origin","2":"angle","3":"mins","4":"maxs","mins":"Start position of the box, relative to origin.","angle":"Orientation of the box","maxs":"End position of the box, relative to origin.","origin":"Origin of the box."},"fname":"draw3DBox","realm":"cl","description":"\nDraws a box in 3D space","name":"render_library.draw3DBox","library":"render"},{"summary":"\nDraws a wireframe box in 3D space ","class":"function","private":false,"param":{"1":"origin","2":"angle","3":"mins","4":"maxs","mins":"Start position of the box, relative to origin.","angle":"Orientation of the box","maxs":"End position of the box, relative to origin.","origin":"Origin of the box."},"fname":"draw3DWireframeBox","realm":"cl","description":"\nDraws a wireframe box in 3D space","name":"render_library.draw3DWireframeBox","library":"render"},{"summary":"\nDraws textured beam.","class":"function","private":false,"param":{"1":"startPos","2":"endPos","3":"width","4":"textureStart","5":"textureEnd","textureEnd":"The end coordinate of the texture used.","textureStart":"The start coordinate of the texture used.","endPos":"Beam end position.","startPos":"Beam start position.","width":"The width of the beam."},"fname":"draw3DBeam","realm":"cl","description":"\nDraws textured beam.","name":"render_library.draw3DBeam","library":"render"},{"summary":"\nDraws 2 connected triangles.","class":"function","private":false,"param":{"1":"vert1","2":"vert2","3":"vert3","4":"vert4","vert4":"The fourth vertex.","vert1":"First vertex.","vert3":"The third vertex.","vert2":"The second vertex."},"fname":"draw3DQuad","realm":"cl","description":"\nDraws 2 connected triangles.","name":"render_library.draw3DQuad","library":"render"},{"summary":"\nDraws 2 connected triangles with custom UVs.","class":"function","private":false,"param":{"1":"vert1","2":"vert2","3":"vert3","4":"vert4","vert4":"The fourth vertex.","vert1":"First vertex. {x, y, z, u, v}","vert3":"The third vertex.","vert2":"The second vertex."},"fname":"draw3DQuadUV","realm":"cl","description":"\nDraws 2 connected triangles with custom UVs.","name":"render_library.draw3DQuadUV","library":"render"},{"summary":"\nGets a 2D cursor position where ply is aiming at the current rendered screen or nil if they aren't aiming at it.","ret":["x position","y position"],"class":"function","private":false,"library":"render","fname":"cursorPos","realm":"cl","param":{"1":"ply","2":"screen","screen":"An explicit screen to get the cursor pos of (default: The current rendering screen using 'render' hook)","ply":"player to get cursor position from (default: player())"},"name":"render_library.cursorPos","description":"\nGets a 2D cursor position where ply is aiming at the current rendered screen or nil if they aren't aiming at it."},{"summary":"\nReturns information about the screen, such as world offsets, dimentions, and rotation.","ret":"A table describing the screen.","class":"function","private":false,"library":"render","fname":"getScreenInfo","realm":"cl","param":{"1":"e","e":"The screen to get info from."},"name":"render_library.getScreenInfo","description":"\nReturns information about the screen, such as world offsets, dimentions, and rotation. \nNote: this does a table copy so move it out of your draw hook"},{"summary":"\nReturns the entity currently being rendered to ","ret":"Entity of the screen or hud being rendered","class":"function","private":false,"library":"render","fname":"getScreenEntity","realm":"cl","param":[],"name":"render_library.getScreenEntity","description":"\nReturns the entity currently being rendered to"},{"summary":"\nDumps the current render target and allows the pixels to be accessed by render.readPixel.","class":"function","private":false,"param":[],"fname":"capturePixels","realm":"cl","description":"\nDumps the current render target and allows the pixels to be accessed by render.readPixel.","name":"render_library.capturePixels","library":"render"},{"summary":"\nReads the color of the specified pixel.","ret":"Color object with ( r, g, b, 255 ) from the specified pixel.","class":"function","private":false,"library":"render","fname":"readPixel","realm":"cl","param":{"1":"x","2":"y","y":"Pixel y-coordinate.","x":"Pixel x-coordinate."},"name":"render_library.readPixel","description":"\nReads the color of the specified pixel."},{"summary":"\nReturns the render context's width and height ","classForced":true,"ret":["the X size of the current render context","the Y size of the current render context"],"class":"function","param":[],"private":false,"fname":"getResolution","library":"render","realm":"cl","name":"render_library.getResolution","description":"\nReturns the render context's width and height"},{"summary":"\nReturns width and height of the game window.","classForced":true,"ret":["the X size of the game window","the Y size of the game window"],"class":"function","param":[],"private":false,"fname":"getGameResolution","library":"render","realm":"cl","name":"render_library.getGameResolution","description":"\nReturns width and height of the game window. If a rendertarget is selected, will return 1024, 1024"},{"summary":"\nDoes a trace and returns the color of the textel the trace hits.","ret":"The color","class":"function","private":false,"library":"render","fname":"traceSurfaceColor","realm":"cl","param":{"1":"vec1","2":"vec2","vec2":"The ending vector","vec1":"The starting vector"},"name":"render_library.traceSurfaceColor","description":"\nDoes a trace and returns the color of the textel the trace hits."},{"summary":"\nChecks if a hud component is connected to the Starfall Chip ","class":"function","private":false,"param":[],"fname":"isHUDActive","realm":"cl","description":"\nChecks if a hud component is connected to the Starfall Chip","name":"render_library.isHUDActive","library":"render"},{"summary":"\nRenders the scene with the specified viewData to the current active render target.","class":"function","private":false,"param":{"1":"tbl","tbl":"view The view data to be used in the rendering. See http://wiki.garrysmod.com/page/Structures/ViewData. There's an additional key drawviewer used to tell the engine whether the local player model should be rendered."},"fname":"renderView","realm":"cl","description":"\nRenders the scene with the specified viewData to the current active render target.","name":"render_library.renderView","library":"render"},{"summary":"\nReturns whether render.renderView is being executed.","class":"function","private":false,"param":[],"fname":"isInRenderView","realm":"cl","description":"\nReturns whether render.renderView is being executed.","name":"render_library.isInRenderView","library":"render"},{"summary":"\nReturns how many render.renderView calls can be done in the current frame.","class":"function","private":false,"param":[],"fname":"renderViewsLeft","realm":"cl","description":"\nReturns how many render.renderView calls can be done in the current frame.","name":"render_library.renderViewsLeft","library":"render"},{"summary":"\nSets the status of the clip renderer, returning previous state.","ret":"Previous clipping state.","class":"function","private":false,"library":"render","fname":"enableClipping","realm":"cl","param":{"1":"state","state":"New clipping state."},"name":"render_library.enableClipping","description":"\nSets the status of the clip renderer, returning previous state."},{"summary":"\nPushes a new clipping plane of the clip plane stack.","class":"function","private":false,"param":{"1":"normal","2":"distance","normal":"The normal of the clipping plane.","distance":"The normal of the clipping plane."},"fname":"pushCustomClipPlane","realm":"cl","description":"\nPushes a new clipping plane of the clip plane stack.","name":"render_library.pushCustomClipPlane","library":"render"},{"summary":"\nRemoves the current active clipping plane from the clip plane stack.","class":"function","private":false,"param":[],"fname":"popCustomClipPlane","realm":"cl","description":"\nRemoves the current active clipping plane from the clip plane stack.","name":"render_library.popCustomClipPlane","library":"render"},{"summary":"\nSets the current instance to allow HUD drawing.","class":"function","private":false,"param":{"1":"active","active":"Whether hud hooks should be active. true to force on, false to force off, nil to restore default."},"fname":"setHUDActive","realm":"cl","description":"\nSets the current instance to allow HUD drawing. Only works for owner of the chip","name":"render_library.setHUDActive","library":"render"},{"summary":"\nCalled when a player uses the screen ","classForced":true,"realm":"cl","description":"\nCalled when a player uses the screen","class":"hook","name":"starfallUsed","param":{"1":"activator","2":"used","used":"The screen or chip entity that was used","activator":"Player who used the screen or chip"}},{"summary":"\n ","class":"table","classForced":true,"field":{"1":"Name","2":"offset","3":"RS","4":"RatioX","5":"x1","6":"x2","7":"y1","8":"y2","9":"z","10":"rot","x2":"Corner of screen in local coordinates (relative to offset?)","RS":"Resolution/scale","rot":"Screen rotation","Name":"Pretty name of model","RatioX":"Inverted Aspect ratio (height divided by width)","offset":"Offset of screen from prop","y2":"Corner of screen in local coordinates (relative to offset?)","x1":"Corner of screen in local coordinates (relative to offset?)","z":"Screen plane offset in local coordinates (relative to offset?)","y1":"Corner of screen in local coordinates (relative to offset?)"},"name":"Screen information table","description":"\n"}],"name":"libs_cl/render.lua","description":"\n \nRender library \n"},"libs_cl/joystick.lua":{"summary":"\nJoystick library.","tables":[],"functions":{"1":"joystick_library.getAxis","2":"joystick_library.getButton","3":"joystick_library.getName","4":"joystick_library.getPov","5":"joystick_library.numAxes","6":"joystick_library.numButtons","7":"joystick_library.numJoysticks","8":"joystick_library.numPovs","joystick_library.getPov":{"summary":"\nGets the pov data value.","ret":"0 - 65535 where 32767 is the middle.","class":"function","private":false,"library":"joystick","fname":"getPov","realm":"cl","param":{"1":"enum","2":"pov","pov":"Joystick pov number. Ranges from 0 to 7.","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getPov","description":"\nGets the pov data value."},"joystick_library.getButton":{"summary":"\nReturns if the button is pushed or not ","ret":"0 or 1","class":"function","private":false,"library":"joystick","fname":"getButton","realm":"cl","param":{"1":"enum","2":"button","button":"Joystick button number. Starts at 0","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getButton","description":"\nReturns if the button is pushed or not"},"joystick_library.numButtons":{"summary":"\nGets the number of detected buttons on a joystick ","ret":"Number of buttons","class":"function","private":false,"library":"joystick","fname":"numButtons","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numButtons","description":"\nGets the number of detected buttons on a joystick"},"joystick_library.getAxis":{"summary":"\nGets the axis data value.","ret":"0 - 65535 where 32767 is the middle.","class":"function","private":false,"library":"joystick","fname":"getAxis","realm":"cl","param":{"1":"enum","2":"axis","axis":"Joystick axis number. Ranges from 0 to 7.","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getAxis","description":"\nGets the axis data value."},"joystick_library.getName":{"summary":"\nGets the hardware name of the joystick ","ret":"Name of the device","class":"function","private":false,"library":"joystick","fname":"getName","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getName","description":"\nGets the hardware name of the joystick"},"joystick_library.numPovs":{"summary":"\nGets the number of detected povs on a joystick ","ret":"Number of povs","class":"function","private":false,"library":"joystick","fname":"numPovs","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numPovs","description":"\nGets the number of detected povs on a joystick"},"joystick_library.numAxes":{"summary":"\nGets the number of detected axes on a joystick ","ret":"Number of axes","class":"function","private":false,"library":"joystick","fname":"numAxes","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numAxes","description":"\nGets the number of detected axes on a joystick"},"joystick_library.numJoysticks":{"summary":"\nGets the number of detected joysticks.","ret":"Number of joysticks","class":"function","private":false,"library":"joystick","fname":"numJoysticks","realm":"cl","param":[],"name":"joystick_library.numJoysticks","description":"\nGets the number of detected joysticks."}},"libraries":{"1":"joystick","joystick":{"summary":"\nJoystick library.","tables":[],"client":true,"libtbl":"joystick_library","fields":[],"class":"library","functions":{"1":"getAxis","2":"getButton","3":"getName","4":"getPov","5":"numAxes","6":"numButtons","7":"numJoysticks","8":"numPovs","numJoysticks":{"summary":"\nGets the number of detected joysticks.","ret":"Number of joysticks","class":"function","private":false,"library":"joystick","fname":"numJoysticks","realm":"cl","param":[],"name":"joystick_library.numJoysticks","description":"\nGets the number of detected joysticks."},"numButtons":{"summary":"\nGets the number of detected buttons on a joystick ","ret":"Number of buttons","class":"function","private":false,"library":"joystick","fname":"numButtons","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numButtons","description":"\nGets the number of detected buttons on a joystick"},"numPovs":{"summary":"\nGets the number of detected povs on a joystick ","ret":"Number of povs","class":"function","private":false,"library":"joystick","fname":"numPovs","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numPovs","description":"\nGets the number of detected povs on a joystick"},"numAxes":{"summary":"\nGets the number of detected axes on a joystick ","ret":"Number of axes","class":"function","private":false,"library":"joystick","fname":"numAxes","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numAxes","description":"\nGets the number of detected axes on a joystick"},"getAxis":{"summary":"\nGets the axis data value.","ret":"0 - 65535 where 32767 is the middle.","class":"function","private":false,"library":"joystick","fname":"getAxis","realm":"cl","param":{"1":"enum","2":"axis","axis":"Joystick axis number. Ranges from 0 to 7.","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getAxis","description":"\nGets the axis data value."},"getName":{"summary":"\nGets the hardware name of the joystick ","ret":"Name of the device","class":"function","private":false,"library":"joystick","fname":"getName","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getName","description":"\nGets the hardware name of the joystick"},"getButton":{"summary":"\nReturns if the button is pushed or not ","ret":"0 or 1","class":"function","private":false,"library":"joystick","fname":"getButton","realm":"cl","param":{"1":"enum","2":"button","button":"Joystick button number. Starts at 0","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getButton","description":"\nReturns if the button is pushed or not"},"getPov":{"summary":"\nGets the pov data value.","ret":"0 - 65535 where 32767 is the middle.","class":"function","private":false,"library":"joystick","fname":"getPov","realm":"cl","param":{"1":"enum","2":"pov","pov":"Joystick pov number. Ranges from 0 to 7.","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getPov","description":"\nGets the pov data value."}},"name":"joystick","description":"\nJoystick library."}},"type":"file","doc":[{"summary":"\nJoystick library.","tables":[],"client":true,"libtbl":"joystick_library","fields":[],"class":"library","functions":{"1":"getAxis","2":"getButton","3":"getName","4":"getPov","5":"numAxes","6":"numButtons","7":"numJoysticks","8":"numPovs","numJoysticks":{"summary":"\nGets the number of detected joysticks.","ret":"Number of joysticks","class":"function","private":false,"library":"joystick","fname":"numJoysticks","realm":"cl","param":[],"name":"joystick_library.numJoysticks","description":"\nGets the number of detected joysticks."},"numButtons":{"summary":"\nGets the number of detected buttons on a joystick ","ret":"Number of buttons","class":"function","private":false,"library":"joystick","fname":"numButtons","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numButtons","description":"\nGets the number of detected buttons on a joystick"},"numPovs":{"summary":"\nGets the number of detected povs on a joystick ","ret":"Number of povs","class":"function","private":false,"library":"joystick","fname":"numPovs","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numPovs","description":"\nGets the number of detected povs on a joystick"},"numAxes":{"summary":"\nGets the number of detected axes on a joystick ","ret":"Number of axes","class":"function","private":false,"library":"joystick","fname":"numAxes","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numAxes","description":"\nGets the number of detected axes on a joystick"},"getAxis":{"summary":"\nGets the axis data value.","ret":"0 - 65535 where 32767 is the middle.","class":"function","private":false,"library":"joystick","fname":"getAxis","realm":"cl","param":{"1":"enum","2":"axis","axis":"Joystick axis number. Ranges from 0 to 7.","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getAxis","description":"\nGets the axis data value."},"getName":{"summary":"\nGets the hardware name of the joystick ","ret":"Name of the device","class":"function","private":false,"library":"joystick","fname":"getName","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getName","description":"\nGets the hardware name of the joystick"},"getButton":{"summary":"\nReturns if the button is pushed or not ","ret":"0 or 1","class":"function","private":false,"library":"joystick","fname":"getButton","realm":"cl","param":{"1":"enum","2":"button","button":"Joystick button number. Starts at 0","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getButton","description":"\nReturns if the button is pushed or not"},"getPov":{"summary":"\nGets the pov data value.","ret":"0 - 65535 where 32767 is the middle.","class":"function","private":false,"library":"joystick","fname":"getPov","realm":"cl","param":{"1":"enum","2":"pov","pov":"Joystick pov number. Ranges from 0 to 7.","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getPov","description":"\nGets the pov data value."}},"name":"joystick","description":"\nJoystick library."},{"summary":"\nGets the axis data value.","ret":"0 - 65535 where 32767 is the middle.","class":"function","private":false,"library":"joystick","fname":"getAxis","realm":"cl","param":{"1":"enum","2":"axis","axis":"Joystick axis number. Ranges from 0 to 7.","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getAxis","description":"\nGets the axis data value."},{"summary":"\nGets the pov data value.","ret":"0 - 65535 where 32767 is the middle.","class":"function","private":false,"library":"joystick","fname":"getPov","realm":"cl","param":{"1":"enum","2":"pov","pov":"Joystick pov number. Ranges from 0 to 7.","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getPov","description":"\nGets the pov data value."},{"summary":"\nReturns if the button is pushed or not ","ret":"0 or 1","class":"function","private":false,"library":"joystick","fname":"getButton","realm":"cl","param":{"1":"enum","2":"button","button":"Joystick button number. Starts at 0","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getButton","description":"\nReturns if the button is pushed or not"},{"summary":"\nGets the hardware name of the joystick ","ret":"Name of the device","class":"function","private":false,"library":"joystick","fname":"getName","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.getName","description":"\nGets the hardware name of the joystick"},{"summary":"\nGets the number of detected joysticks.","ret":"Number of joysticks","class":"function","private":false,"library":"joystick","fname":"numJoysticks","realm":"cl","param":[],"name":"joystick_library.numJoysticks","description":"\nGets the number of detected joysticks."},{"summary":"\nGets the number of detected axes on a joystick ","ret":"Number of axes","class":"function","private":false,"library":"joystick","fname":"numAxes","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numAxes","description":"\nGets the number of detected axes on a joystick"},{"summary":"\nGets the number of detected povs on a joystick ","ret":"Number of povs","class":"function","private":false,"library":"joystick","fname":"numPovs","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numPovs","description":"\nGets the number of detected povs on a joystick"},{"summary":"\nGets the number of detected buttons on a joystick ","ret":"Number of buttons","class":"function","private":false,"library":"joystick","fname":"numButtons","realm":"cl","param":{"1":"enum","enum":"Joystick number. Starts at 0"},"name":"joystick_library.numButtons","description":"\nGets the number of detected buttons on a joystick"}],"name":"libs_cl/joystick.lua","description":"\nJoystick library."},"libs_sh/effect.lua":{"summary":"\nEffect type ","tables":[],"functions":{"1":"effect_library.create","2":"effect_library.effectsLeft","3":"effect_methods:getAngles","4":"effect_methods:getAttachment","5":"effect_methods:getColor","6":"effect_methods:getDamageType","7":"effect_methods:getEntIndex","8":"effect_methods:getEntity","9":"effect_methods:getFlags","10":"effect_methods:getHitBox","11":"effect_methods:getMagnitude","12":"effect_methods:getMaterialIndex","13":"effect_methods:getNormal","14":"effect_methods:getOrigin","15":"effect_methods:getRadius","16":"effect_methods:getScale","17":"effect_methods:getStart","18":"effect_methods:getSurfaceProp","19":"effect_methods:play","20":"effect_methods:setAngles","21":"effect_methods:setAttachment","22":"effect_methods:setColor","23":"effect_methods:setDamageType","24":"effect_methods:setEntIndex","25":"effect_methods:setEntity","26":"effect_methods:setFlags","27":"effect_methods:setHitBox","28":"effect_methods:setMagnitude","29":"effect_methods:setMaterialIndex","30":"effect_methods:setNormal","31":"effect_methods:setOrigin","32":"effect_methods:setRadius","33":"effect_methods:setScale","34":"effect_methods:setStart","35":"effect_methods:setSurfaceProp","effect_methods:setSurfaceProp":{"summary":"\nSets the effect's surface property ","class":"function","private":false,"param":{"1":"prop","prop":"The surface property"},"fname":"setSurfaceProp","realm":"sh","name":"effect_methods:setSurfaceProp","classlib":"Effect","description":"\nSets the effect's surface property"},"effect_methods:getAttachment":{"summary":"\nReturns the effect's attachment ","ret":"the effect's attachment","class":"function","private":false,"classlib":"Effect","fname":"getAttachment","realm":"sh","param":[],"name":"effect_methods:getAttachment","description":"\nReturns the effect's attachment"},"effect_library.create":{"summary":"\nCreates an effect data structure ","ret":"Effect Object","class":"function","private":false,"library":"effect","fname":"create","realm":"sh","param":[],"name":"effect_library.create","description":"\nCreates an effect data structure"},"effect_methods:setDamageType":{"summary":"\nSets the effect's damage type ","class":"function","private":false,"param":{"1":"dmgtype","dmgtype":"The damage type"},"fname":"setDamageType","realm":"sh","name":"effect_methods:setDamageType","classlib":"Effect","description":"\nSets the effect's damage type"},"effect_methods:getOrigin":{"summary":"\nReturns the effect's origin ","ret":"the effect's origin","class":"function","private":false,"classlib":"Effect","fname":"getOrigin","realm":"sh","param":[],"name":"effect_methods:getOrigin","description":"\nReturns the effect's origin"},"effect_methods:getColor":{"summary":"\nReturns the effect's color ","ret":"the effect's color","class":"function","private":false,"classlib":"Effect","fname":"getColor","realm":"sh","param":[],"name":"effect_methods:getColor","description":"\nReturns the effect's color"},"effect_methods:getScale":{"summary":"\nReturns the effect's scale ","ret":"the effect's scale","class":"function","private":false,"classlib":"Effect","fname":"getScale","realm":"sh","param":[],"name":"effect_methods:getScale","description":"\nReturns the effect's scale"},"effect_methods:setFlags":{"summary":"\nSets the effect's flags ","class":"function","private":false,"param":{"1":"flags","flags":"The flags"},"fname":"setFlags","realm":"sh","name":"effect_methods:setFlags","classlib":"Effect","description":"\nSets the effect's flags"},"effect_methods:getStart":{"summary":"\nReturns the effect's start position ","ret":"the effect's start position","class":"function","private":false,"classlib":"Effect","fname":"getStart","realm":"sh","param":[],"name":"effect_methods:getStart","description":"\nReturns the effect's start position"},"effect_methods:getMaterialIndex":{"summary":"\nReturns the effect's material index ","ret":"the effect's material index","class":"function","private":false,"classlib":"Effect","fname":"getMaterialIndex","realm":"sh","param":[],"name":"effect_methods:getMaterialIndex","description":"\nReturns the effect's material index"},"effect_methods:getAngles":{"summary":"\nReturns the effect's angle ","ret":"the effect's angle","class":"function","private":false,"classlib":"Effect","fname":"getAngles","realm":"sh","param":[],"name":"effect_methods:getAngles","description":"\nReturns the effect's angle"},"effect_methods:setMaterialIndex":{"summary":"\nSets the effect's material index ","class":"function","private":false,"param":{"1":"mat","mat":"The material index"},"fname":"setMaterialIndex","realm":"sh","name":"effect_methods:setMaterialIndex","classlib":"Effect","description":"\nSets the effect's material index"},"effect_methods:setAttachment":{"summary":"\nSets the effect's attachment ","class":"function","private":false,"param":{"1":"attachment","attachment":"The attachment"},"fname":"setAttachment","realm":"sh","name":"effect_methods:setAttachment","classlib":"Effect","description":"\nSets the effect's attachment"},"effect_methods:setEntity":{"summary":"\nSets the effect's entity ","class":"function","private":false,"param":{"1":"ent","ent":"The entity"},"fname":"setEntity","realm":"sh","name":"effect_methods:setEntity","classlib":"Effect","description":"\nSets the effect's entity"},"effect_methods:setStart":{"summary":"\nSets the effect's start ","class":"function","private":false,"param":{"1":"start","start":"The vector start"},"fname":"setStart","realm":"sh","name":"effect_methods:setStart","classlib":"Effect","description":"\nSets the effect's start"},"effect_methods:setScale":{"summary":"\nSets the effect's scale ","class":"function","private":false,"param":{"1":"scale","scale":"The number scale"},"fname":"setScale","realm":"sh","name":"effect_methods:setScale","classlib":"Effect","description":"\nSets the effect's scale"},"effect_methods:setAngles":{"summary":"\nSets the effect's angles ","class":"function","private":false,"param":{"1":"ang","ang":"The angles"},"fname":"setAngles","realm":"sh","name":"effect_methods:setAngles","classlib":"Effect","description":"\nSets the effect's angles"},"effect_methods:setNormal":{"summary":"\nSets the effect's normal ","class":"function","private":false,"param":{"1":"normal","normal":"The vector normal"},"fname":"setNormal","realm":"sh","name":"effect_methods:setNormal","classlib":"Effect","description":"\nSets the effect's normal"},"effect_methods:play":{"summary":"\nPlays the effect ","class":"function","private":false,"param":{"1":"eff","eff":"The effect type to play"},"fname":"play","realm":"sh","name":"effect_methods:play","classlib":"Effect","description":"\nPlays the effect"},"effect_methods:setColor":{"summary":"\nSets the effect's color ","class":"function","private":false,"param":{"1":"color","color":"The color represented by a byte 0-255. wtf?"},"fname":"setColor","realm":"sh","name":"effect_methods:setColor","classlib":"Effect","description":"\nSets the effect's color"},"effect_methods:setMagnitude":{"summary":"\nSets the effect's magnitude ","class":"function","private":false,"param":{"1":"magnitude","magnitude":"The magnitude"},"fname":"setMagnitude","realm":"sh","name":"effect_methods:setMagnitude","classlib":"Effect","description":"\nSets the effect's magnitude"},"effect_methods:getHitBox":{"summary":"\nReturns the effect's hitbox ","ret":"the effect's hitbox","class":"function","private":false,"classlib":"Effect","fname":"getHitBox","realm":"sh","param":[],"name":"effect_methods:getHitBox","description":"\nReturns the effect's hitbox"},"effect_methods:setHitBox":{"summary":"\nSets the effect's hitbox ","class":"function","private":false,"param":{"1":"hitbox","hitbox":"The hitbox"},"fname":"setHitBox","realm":"sh","name":"effect_methods:setHitBox","classlib":"Effect","description":"\nSets the effect's hitbox"},"effect_methods:setRadius":{"summary":"\nSets the effect's radius ","class":"function","private":false,"param":{"1":"radius","radius":"The radius"},"fname":"setRadius","realm":"sh","name":"effect_methods:setRadius","classlib":"Effect","description":"\nSets the effect's radius"},"effect_methods:setEntIndex":{"summary":"\nSets the effect's entity index ","class":"function","private":false,"param":{"1":"index","index":"The entity index"},"fname":"setEntIndex","realm":"sh","name":"effect_methods:setEntIndex","classlib":"Effect","description":"\nSets the effect's entity index"},"effect_methods:setOrigin":{"summary":"\nSets the effect's origin ","class":"function","private":false,"param":{"1":"origin","origin":"The vector origin"},"fname":"setOrigin","realm":"sh","name":"effect_methods:setOrigin","classlib":"Effect","description":"\nSets the effect's origin"},"effect_methods:getRadius":{"summary":"\nReturns the effect's radius ","ret":"the effect's radius","class":"function","private":false,"classlib":"Effect","fname":"getRadius","realm":"sh","param":[],"name":"effect_methods:getRadius","description":"\nReturns the effect's radius"},"effect_methods:getDamageType":{"summary":"\nReturns the effect's damagetype ","ret":"the effect's damagetype","class":"function","private":false,"classlib":"Effect","fname":"getDamageType","realm":"sh","param":[],"name":"effect_methods:getDamageType","description":"\nReturns the effect's damagetype"},"effect_methods:getEntIndex":{"summary":"\nReturns the effect's entindex ","ret":"the effect's entindex","class":"function","private":false,"classlib":"Effect","fname":"getEntIndex","realm":"sh","param":[],"name":"effect_methods:getEntIndex","description":"\nReturns the effect's entindex"},"effect_methods:getMagnitude":{"summary":"\nReturns the effect's magnitude ","ret":"the effect's magnitude","class":"function","private":false,"classlib":"Effect","fname":"getMagnitude","realm":"sh","param":[],"name":"effect_methods:getMagnitude","description":"\nReturns the effect's magnitude"},"effect_library.effectsLeft":{"summary":"\nReturns number of effects able to be created ","ret":"number of effects able to be created","class":"function","private":false,"library":"effect","fname":"effectsLeft","realm":"sh","param":[],"name":"effect_library.effectsLeft","description":"\nReturns number of effects able to be created"},"effect_methods:getNormal":{"summary":"\nReturns the effect's normal ","ret":"the effect's normal","class":"function","private":false,"classlib":"Effect","fname":"getNormal","realm":"sh","param":[],"name":"effect_methods:getNormal","description":"\nReturns the effect's normal"},"effect_methods:getSurfaceProp":{"summary":"\nReturns the effect's surface prop ","ret":"the effect's surface prop","class":"function","private":false,"classlib":"Effect","fname":"getSurfaceProp","realm":"sh","param":[],"name":"effect_methods:getSurfaceProp","description":"\nReturns the effect's surface prop"},"effect_methods:getEntity":{"summary":"\nReturns the effect's entity ","ret":"the effect's entity","class":"function","private":false,"classlib":"Effect","fname":"getEntity","realm":"sh","param":[],"name":"effect_methods:getEntity","description":"\nReturns the effect's entity"},"effect_methods:getFlags":{"summary":"\nReturns the effect's flags ","ret":"the effect's flags","class":"function","private":false,"classlib":"Effect","fname":"getFlags","realm":"sh","param":[],"name":"effect_methods:getFlags","description":"\nReturns the effect's flags"}},"libraries":{"1":"effect","effect":{"server":true,"tables":[],"client":true,"summary":"\nEffects library.","libtbl":"effect_library","fields":[],"class":"library","functions":{"1":"create","2":"effectsLeft","create":{"summary":"\nCreates an effect data structure ","ret":"Effect Object","class":"function","private":false,"library":"effect","fname":"create","realm":"sh","param":[],"name":"effect_library.create","description":"\nCreates an effect data structure"},"effectsLeft":{"summary":"\nReturns number of effects able to be created ","ret":"number of effects able to be created","class":"function","private":false,"library":"effect","fname":"effectsLeft","realm":"sh","param":[],"name":"effect_library.effectsLeft","description":"\nReturns number of effects able to be created"}},"name":"effect","description":"\nEffects library."}},"type":"file","doc":[{"methods":{"1":"getAngles","2":"getAttachment","3":"getColor","4":"getDamageType","5":"getEntIndex","6":"getEntity","7":"getFlags","8":"getHitBox","9":"getMagnitude","10":"getMaterialIndex","11":"getNormal","12":"getOrigin","13":"getRadius","14":"getScale","15":"getStart","16":"getSurfaceProp","17":"play","18":"setAngles","19":"setAttachment","20":"setColor","21":"setDamageType","22":"setEntIndex","23":"setEntity","24":"setFlags","25":"setHitBox","26":"setMagnitude","27":"setMaterialIndex","28":"setNormal","29":"setOrigin","30":"setRadius","31":"setScale","32":"setStart","33":"setSurfaceProp","setAttachment":{"summary":"\nSets the effect's attachment ","class":"function","private":false,"param":{"1":"attachment","attachment":"The attachment"},"fname":"setAttachment","realm":"sh","name":"effect_methods:setAttachment","classlib":"Effect","description":"\nSets the effect's attachment"},"setRadius":{"summary":"\nSets the effect's radius ","class":"function","private":false,"param":{"1":"radius","radius":"The radius"},"fname":"setRadius","realm":"sh","name":"effect_methods:setRadius","classlib":"Effect","description":"\nSets the effect's radius"},"getAttachment":{"summary":"\nReturns the effect's attachment ","ret":"the effect's attachment","class":"function","private":false,"classlib":"Effect","fname":"getAttachment","realm":"sh","param":[],"name":"effect_methods:getAttachment","description":"\nReturns the effect's attachment"},"getRadius":{"summary":"\nReturns the effect's radius ","ret":"the effect's radius","class":"function","private":false,"classlib":"Effect","fname":"getRadius","realm":"sh","param":[],"name":"effect_methods:getRadius","description":"\nReturns the effect's radius"},"getScale":{"summary":"\nReturns the effect's scale ","ret":"the effect's scale","class":"function","private":false,"classlib":"Effect","fname":"getScale","realm":"sh","param":[],"name":"effect_methods:getScale","description":"\nReturns the effect's scale"},"getSurfaceProp":{"summary":"\nReturns the effect's surface prop ","ret":"the effect's surface prop","class":"function","private":false,"classlib":"Effect","fname":"getSurfaceProp","realm":"sh","param":[],"name":"effect_methods:getSurfaceProp","description":"\nReturns the effect's surface prop"},"getFlags":{"summary":"\nReturns the effect's flags ","ret":"the effect's flags","class":"function","private":false,"classlib":"Effect","fname":"getFlags","realm":"sh","param":[],"name":"effect_methods:getFlags","description":"\nReturns the effect's flags"},"setColor":{"summary":"\nSets the effect's color ","class":"function","private":false,"param":{"1":"color","color":"The color represented by a byte 0-255. wtf?"},"fname":"setColor","realm":"sh","name":"effect_methods:setColor","classlib":"Effect","description":"\nSets the effect's color"},"getEntIndex":{"summary":"\nReturns the effect's entindex ","ret":"the effect's entindex","class":"function","private":false,"classlib":"Effect","fname":"getEntIndex","realm":"sh","param":[],"name":"effect_methods:getEntIndex","description":"\nReturns the effect's entindex"},"setMaterialIndex":{"summary":"\nSets the effect's material index ","class":"function","private":false,"param":{"1":"mat","mat":"The material index"},"fname":"setMaterialIndex","realm":"sh","name":"effect_methods:setMaterialIndex","classlib":"Effect","description":"\nSets the effect's material index"},"setSurfaceProp":{"summary":"\nSets the effect's surface property ","class":"function","private":false,"param":{"1":"prop","prop":"The surface property"},"fname":"setSurfaceProp","realm":"sh","name":"effect_methods:setSurfaceProp","classlib":"Effect","description":"\nSets the effect's surface property"},"getStart":{"summary":"\nReturns the effect's start position ","ret":"the effect's start position","class":"function","private":false,"classlib":"Effect","fname":"getStart","realm":"sh","param":[],"name":"effect_methods:getStart","description":"\nReturns the effect's start position"},"setHitBox":{"summary":"\nSets the effect's hitbox ","class":"function","private":false,"param":{"1":"hitbox","hitbox":"The hitbox"},"fname":"setHitBox","realm":"sh","name":"effect_methods:setHitBox","classlib":"Effect","description":"\nSets the effect's hitbox"},"setNormal":{"summary":"\nSets the effect's normal ","class":"function","private":false,"param":{"1":"normal","normal":"The vector normal"},"fname":"setNormal","realm":"sh","name":"effect_methods:setNormal","classlib":"Effect","description":"\nSets the effect's normal"},"getColor":{"summary":"\nReturns the effect's color ","ret":"the effect's color","class":"function","private":false,"classlib":"Effect","fname":"getColor","realm":"sh","param":[],"name":"effect_methods:getColor","description":"\nReturns the effect's color"},"getOrigin":{"summary":"\nReturns the effect's origin ","ret":"the effect's origin","class":"function","private":false,"classlib":"Effect","fname":"getOrigin","realm":"sh","param":[],"name":"effect_methods:getOrigin","description":"\nReturns the effect's origin"},"setEntIndex":{"summary":"\nSets the effect's entity index ","class":"function","private":false,"param":{"1":"index","index":"The entity index"},"fname":"setEntIndex","realm":"sh","name":"effect_methods:setEntIndex","classlib":"Effect","description":"\nSets the effect's entity index"},"setStart":{"summary":"\nSets the effect's start ","class":"function","private":false,"param":{"1":"start","start":"The vector start"},"fname":"setStart","realm":"sh","name":"effect_methods:setStart","classlib":"Effect","description":"\nSets the effect's start"},"play":{"summary":"\nPlays the effect ","class":"function","private":false,"param":{"1":"eff","eff":"The effect type to play"},"fname":"play","realm":"sh","name":"effect_methods:play","classlib":"Effect","description":"\nPlays the effect"},"setMagnitude":{"summary":"\nSets the effect's magnitude ","class":"function","private":false,"param":{"1":"magnitude","magnitude":"The magnitude"},"fname":"setMagnitude","realm":"sh","name":"effect_methods:setMagnitude","classlib":"Effect","description":"\nSets the effect's magnitude"},"setAngles":{"summary":"\nSets the effect's angles ","class":"function","private":false,"param":{"1":"ang","ang":"The angles"},"fname":"setAngles","realm":"sh","name":"effect_methods:setAngles","classlib":"Effect","description":"\nSets the effect's angles"},"getEntity":{"summary":"\nReturns the effect's entity ","ret":"the effect's entity","class":"function","private":false,"classlib":"Effect","fname":"getEntity","realm":"sh","param":[],"name":"effect_methods:getEntity","description":"\nReturns the effect's entity"},"setScale":{"summary":"\nSets the effect's scale ","class":"function","private":false,"param":{"1":"scale","scale":"The number scale"},"fname":"setScale","realm":"sh","name":"effect_methods:setScale","classlib":"Effect","description":"\nSets the effect's scale"},"getHitBox":{"summary":"\nReturns the effect's hitbox ","ret":"the effect's hitbox","class":"function","private":false,"classlib":"Effect","fname":"getHitBox","realm":"sh","param":[],"name":"effect_methods:getHitBox","description":"\nReturns the effect's hitbox"},"setDamageType":{"summary":"\nSets the effect's damage type ","class":"function","private":false,"param":{"1":"dmgtype","dmgtype":"The damage type"},"fname":"setDamageType","realm":"sh","name":"effect_methods:setDamageType","classlib":"Effect","description":"\nSets the effect's damage type"},"getNormal":{"summary":"\nReturns the effect's normal ","ret":"the effect's normal","class":"function","private":false,"classlib":"Effect","fname":"getNormal","realm":"sh","param":[],"name":"effect_methods:getNormal","description":"\nReturns the effect's normal"},"getMaterialIndex":{"summary":"\nReturns the effect's material index ","ret":"the effect's material index","class":"function","private":false,"classlib":"Effect","fname":"getMaterialIndex","realm":"sh","param":[],"name":"effect_methods:getMaterialIndex","description":"\nReturns the effect's material index"},"setEntity":{"summary":"\nSets the effect's entity ","class":"function","private":false,"param":{"1":"ent","ent":"The entity"},"fname":"setEntity","realm":"sh","name":"effect_methods:setEntity","classlib":"Effect","description":"\nSets the effect's entity"},"setFlags":{"summary":"\nSets the effect's flags ","class":"function","private":false,"param":{"1":"flags","flags":"The flags"},"fname":"setFlags","realm":"sh","name":"effect_methods:setFlags","classlib":"Effect","description":"\nSets the effect's flags"},"getMagnitude":{"summary":"\nReturns the effect's magnitude ","ret":"the effect's magnitude","class":"function","private":false,"classlib":"Effect","fname":"getMagnitude","realm":"sh","param":[],"name":"effect_methods:getMagnitude","description":"\nReturns the effect's magnitude"},"setOrigin":{"summary":"\nSets the effect's origin ","class":"function","private":false,"param":{"1":"origin","origin":"The vector origin"},"fname":"setOrigin","realm":"sh","name":"effect_methods:setOrigin","classlib":"Effect","description":"\nSets the effect's origin"},"getDamageType":{"summary":"\nReturns the effect's damagetype ","ret":"the effect's damagetype","class":"function","private":false,"classlib":"Effect","fname":"getDamageType","realm":"sh","param":[],"name":"effect_methods:getDamageType","description":"\nReturns the effect's damagetype"},"getAngles":{"summary":"\nReturns the effect's angle ","ret":"the effect's angle","class":"function","private":false,"classlib":"Effect","fname":"getAngles","realm":"sh","param":[],"name":"effect_methods:getAngles","description":"\nReturns the effect's angle"}},"class":"class","client":true,"summary":"\nEffect type ","fields":[],"server":true,"typtbl":"effect_methods","name":"Effect","description":"\nEffect type"},{"server":true,"tables":[],"client":true,"summary":"\nEffects library.","libtbl":"effect_library","fields":[],"class":"library","functions":{"1":"create","2":"effectsLeft","create":{"summary":"\nCreates an effect data structure ","ret":"Effect Object","class":"function","private":false,"library":"effect","fname":"create","realm":"sh","param":[],"name":"effect_library.create","description":"\nCreates an effect data structure"},"effectsLeft":{"summary":"\nReturns number of effects able to be created ","ret":"number of effects able to be created","class":"function","private":false,"library":"effect","fname":"effectsLeft","realm":"sh","param":[],"name":"effect_library.effectsLeft","description":"\nReturns number of effects able to be created"}},"name":"effect","description":"\nEffects library."},{"summary":"\nCreates an effect data structure ","ret":"Effect Object","class":"function","private":false,"library":"effect","fname":"create","realm":"sh","param":[],"name":"effect_library.create","description":"\nCreates an effect data structure"},{"summary":"\nReturns number of effects able to be created ","ret":"number of effects able to be created","class":"function","private":false,"library":"effect","fname":"effectsLeft","realm":"sh","param":[],"name":"effect_library.effectsLeft","description":"\nReturns number of effects able to be created"},{"summary":"\nPlays the effect ","class":"function","private":false,"param":{"1":"eff","eff":"The effect type to play"},"fname":"play","realm":"sh","name":"effect_methods:play","classlib":"Effect","description":"\nPlays the effect"},{"summary":"\nReturns the effect's angle ","ret":"the effect's angle","class":"function","private":false,"classlib":"Effect","fname":"getAngles","realm":"sh","param":[],"name":"effect_methods:getAngles","description":"\nReturns the effect's angle"},{"summary":"\nReturns the effect's attachment ","ret":"the effect's attachment","class":"function","private":false,"classlib":"Effect","fname":"getAttachment","realm":"sh","param":[],"name":"effect_methods:getAttachment","description":"\nReturns the effect's attachment"},{"summary":"\nReturns the effect's color ","ret":"the effect's color","class":"function","private":false,"classlib":"Effect","fname":"getColor","realm":"sh","param":[],"name":"effect_methods:getColor","description":"\nReturns the effect's color"},{"summary":"\nReturns the effect's damagetype ","ret":"the effect's damagetype","class":"function","private":false,"classlib":"Effect","fname":"getDamageType","realm":"sh","param":[],"name":"effect_methods:getDamageType","description":"\nReturns the effect's damagetype"},{"summary":"\nReturns the effect's entindex ","ret":"the effect's entindex","class":"function","private":false,"classlib":"Effect","fname":"getEntIndex","realm":"sh","param":[],"name":"effect_methods:getEntIndex","description":"\nReturns the effect's entindex"},{"summary":"\nReturns the effect's entity ","ret":"the effect's entity","class":"function","private":false,"classlib":"Effect","fname":"getEntity","realm":"sh","param":[],"name":"effect_methods:getEntity","description":"\nReturns the effect's entity"},{"summary":"\nReturns the effect's flags ","ret":"the effect's flags","class":"function","private":false,"classlib":"Effect","fname":"getFlags","realm":"sh","param":[],"name":"effect_methods:getFlags","description":"\nReturns the effect's flags"},{"summary":"\nReturns the effect's hitbox ","ret":"the effect's hitbox","class":"function","private":false,"classlib":"Effect","fname":"getHitBox","realm":"sh","param":[],"name":"effect_methods:getHitBox","description":"\nReturns the effect's hitbox"},{"summary":"\nReturns the effect's magnitude ","ret":"the effect's magnitude","class":"function","private":false,"classlib":"Effect","fname":"getMagnitude","realm":"sh","param":[],"name":"effect_methods:getMagnitude","description":"\nReturns the effect's magnitude"},{"summary":"\nReturns the effect's material index ","ret":"the effect's material index","class":"function","private":false,"classlib":"Effect","fname":"getMaterialIndex","realm":"sh","param":[],"name":"effect_methods:getMaterialIndex","description":"\nReturns the effect's material index"},{"summary":"\nReturns the effect's normal ","ret":"the effect's normal","class":"function","private":false,"classlib":"Effect","fname":"getNormal","realm":"sh","param":[],"name":"effect_methods:getNormal","description":"\nReturns the effect's normal"},{"summary":"\nReturns the effect's origin ","ret":"the effect's origin","class":"function","private":false,"classlib":"Effect","fname":"getOrigin","realm":"sh","param":[],"name":"effect_methods:getOrigin","description":"\nReturns the effect's origin"},{"summary":"\nReturns the effect's radius ","ret":"the effect's radius","class":"function","private":false,"classlib":"Effect","fname":"getRadius","realm":"sh","param":[],"name":"effect_methods:getRadius","description":"\nReturns the effect's radius"},{"summary":"\nReturns the effect's scale ","ret":"the effect's scale","class":"function","private":false,"classlib":"Effect","fname":"getScale","realm":"sh","param":[],"name":"effect_methods:getScale","description":"\nReturns the effect's scale"},{"summary":"\nReturns the effect's start position ","ret":"the effect's start position","class":"function","private":false,"classlib":"Effect","fname":"getStart","realm":"sh","param":[],"name":"effect_methods:getStart","description":"\nReturns the effect's start position"},{"summary":"\nReturns the effect's surface prop ","ret":"the effect's surface prop","class":"function","private":false,"classlib":"Effect","fname":"getSurfaceProp","realm":"sh","param":[],"name":"effect_methods:getSurfaceProp","description":"\nReturns the effect's surface prop"},{"summary":"\nSets the effect's angles ","class":"function","private":false,"param":{"1":"ang","ang":"The angles"},"fname":"setAngles","realm":"sh","name":"effect_methods:setAngles","classlib":"Effect","description":"\nSets the effect's angles"},{"summary":"\nSets the effect's attachment ","class":"function","private":false,"param":{"1":"attachment","attachment":"The attachment"},"fname":"setAttachment","realm":"sh","name":"effect_methods:setAttachment","classlib":"Effect","description":"\nSets the effect's attachment"},{"summary":"\nSets the effect's color ","class":"function","private":false,"param":{"1":"color","color":"The color represented by a byte 0-255. wtf?"},"fname":"setColor","realm":"sh","name":"effect_methods:setColor","classlib":"Effect","description":"\nSets the effect's color"},{"summary":"\nSets the effect's damage type ","class":"function","private":false,"param":{"1":"dmgtype","dmgtype":"The damage type"},"fname":"setDamageType","realm":"sh","name":"effect_methods:setDamageType","classlib":"Effect","description":"\nSets the effect's damage type"},{"summary":"\nSets the effect's entity index ","class":"function","private":false,"param":{"1":"index","index":"The entity index"},"fname":"setEntIndex","realm":"sh","name":"effect_methods:setEntIndex","classlib":"Effect","description":"\nSets the effect's entity index"},{"summary":"\nSets the effect's entity ","class":"function","private":false,"param":{"1":"ent","ent":"The entity"},"fname":"setEntity","realm":"sh","name":"effect_methods:setEntity","classlib":"Effect","description":"\nSets the effect's entity"},{"summary":"\nSets the effect's flags ","class":"function","private":false,"param":{"1":"flags","flags":"The flags"},"fname":"setFlags","realm":"sh","name":"effect_methods:setFlags","classlib":"Effect","description":"\nSets the effect's flags"},{"summary":"\nSets the effect's hitbox ","class":"function","private":false,"param":{"1":"hitbox","hitbox":"The hitbox"},"fname":"setHitBox","realm":"sh","name":"effect_methods:setHitBox","classlib":"Effect","description":"\nSets the effect's hitbox"},{"summary":"\nSets the effect's magnitude ","class":"function","private":false,"param":{"1":"magnitude","magnitude":"The magnitude"},"fname":"setMagnitude","realm":"sh","name":"effect_methods:setMagnitude","classlib":"Effect","description":"\nSets the effect's magnitude"},{"summary":"\nSets the effect's material index ","class":"function","private":false,"param":{"1":"mat","mat":"The material index"},"fname":"setMaterialIndex","realm":"sh","name":"effect_methods:setMaterialIndex","classlib":"Effect","description":"\nSets the effect's material index"},{"summary":"\nSets the effect's normal ","class":"function","private":false,"param":{"1":"normal","normal":"The vector normal"},"fname":"setNormal","realm":"sh","name":"effect_methods:setNormal","classlib":"Effect","description":"\nSets the effect's normal"},{"summary":"\nSets the effect's origin ","class":"function","private":false,"param":{"1":"origin","origin":"The vector origin"},"fname":"setOrigin","realm":"sh","name":"effect_methods:setOrigin","classlib":"Effect","description":"\nSets the effect's origin"},{"summary":"\nSets the effect's radius ","class":"function","private":false,"param":{"1":"radius","radius":"The radius"},"fname":"setRadius","realm":"sh","name":"effect_methods:setRadius","classlib":"Effect","description":"\nSets the effect's radius"},{"summary":"\nSets the effect's scale ","class":"function","private":false,"param":{"1":"scale","scale":"The number scale"},"fname":"setScale","realm":"sh","name":"effect_methods:setScale","classlib":"Effect","description":"\nSets the effect's scale"},{"summary":"\nSets the effect's start ","class":"function","private":false,"param":{"1":"start","start":"The vector start"},"fname":"setStart","realm":"sh","name":"effect_methods:setStart","classlib":"Effect","description":"\nSets the effect's start"},{"summary":"\nSets the effect's surface property ","class":"function","private":false,"param":{"1":"prop","prop":"The surface property"},"fname":"setSurfaceProp","realm":"sh","name":"effect_methods:setSurfaceProp","classlib":"Effect","description":"\nSets the effect's surface property"}],"name":"libs_sh/effect.lua","description":"\nEffect type"},"libs_sh/builtins.lua":{"summary":"\n \nBuiltins.","tables":{"1":"SF.DefaultEnvironment.math","2":"SF.DefaultEnvironment.os","3":"SF.DefaultEnvironment.string","4":"SF.DefaultEnvironment.table","SF.DefaultEnvironment.os":{"summary":"\nThe os library.","classForced":true,"class":"table","tname":"os","description":"\nThe os library. http://wiki.garrysmod.com/page/Category:os","param":[],"name":"SF.DefaultEnvironment.os","library":"builtin"},"SF.DefaultEnvironment.table":{"summary":"\nTable library.","classForced":true,"class":"table","tname":"table","description":"\nTable library. http://wiki.garrysmod.com/page/Category:table","param":[],"name":"SF.DefaultEnvironment.table","library":"builtin"},"SF.DefaultEnvironment.math":{"summary":"\nThe math library.","classForced":true,"class":"table","tname":"math","description":"\nThe math library. http://wiki.garrysmod.com/page/Category:math","param":[],"name":"SF.DefaultEnvironment.math","library":"builtin"},"SF.DefaultEnvironment.string":{"summary":"\nString library http://wiki.garrysmod.com/page/Category:string ","classForced":true,"class":"table","tname":"string","description":"\nString library http://wiki.garrysmod.com/page/Category:string","param":[],"name":"SF.DefaultEnvironment.string","library":"builtin"}},"functions":{"1":"SF.DefaultEnvironment.assert","2":"SF.DefaultEnvironment.chip","3":"SF.DefaultEnvironment.class","4":"SF.DefaultEnvironment.concmd","5":"SF.DefaultEnvironment.crc","6":"SF.DefaultEnvironment.debugGetInfo","7":"SF.DefaultEnvironment.dodir","8":"SF.DefaultEnvironment.dofile","9":"SF.DefaultEnvironment.entity","10":"SF.DefaultEnvironment.error","11":"SF.DefaultEnvironment.eyeAngles","12":"SF.DefaultEnvironment.eyePos","13":"SF.DefaultEnvironment.eyeVector","14":"SF.DefaultEnvironment.getLibraries","15":"SF.DefaultEnvironment.getScripts","16":"SF.DefaultEnvironment.getUserdata","17":"SF.DefaultEnvironment.getfenv","18":"SF.DefaultEnvironment.getmetatable","19":"SF.DefaultEnvironment.hasPermission","20":"SF.DefaultEnvironment.ipairs","21":"SF.DefaultEnvironment.isFirstTimePredicted","22":"SF.DefaultEnvironment.isValid","23":"SF.DefaultEnvironment.loadstring","24":"SF.DefaultEnvironment.localToWorld","25":"SF.DefaultEnvironment.next","26":"SF.DefaultEnvironment.owner","27":"SF.DefaultEnvironment.pairs","28":"SF.DefaultEnvironment.pcall","29":"SF.DefaultEnvironment.permissionRequestSatisfied","30":"SF.DefaultEnvironment.player","31":"SF.DefaultEnvironment.printMessage","32":"SF.DefaultEnvironment.printTable","33":"SF.DefaultEnvironment.quotaAverage","34":"SF.DefaultEnvironment.quotaMax","35":"SF.DefaultEnvironment.quotaTotalAverage","36":"SF.DefaultEnvironment.quotaTotalUsed","37":"SF.DefaultEnvironment.quotaUsed","38":"SF.DefaultEnvironment.ramAverage","39":"SF.DefaultEnvironment.ramUsed","40":"SF.DefaultEnvironment.rawget","41":"SF.DefaultEnvironment.rawset","42":"SF.DefaultEnvironment.require","43":"SF.DefaultEnvironment.requiredir","44":"SF.DefaultEnvironment.select","45":"SF.DefaultEnvironment.setClipboardText","46":"SF.DefaultEnvironment.setName","47":"SF.DefaultEnvironment.setSoftQuota","48":"SF.DefaultEnvironment.setTypeMethod","49":"SF.DefaultEnvironment.setUserdata","50":"SF.DefaultEnvironment.setfenv","51":"SF.DefaultEnvironment.setmetatable","52":"SF.DefaultEnvironment.setupPermissionRequest","53":"SF.DefaultEnvironment.throw","54":"SF.DefaultEnvironment.tonumber","55":"SF.DefaultEnvironment.tostring","56":"SF.DefaultEnvironment.try","57":"SF.DefaultEnvironment.type","58":"SF.DefaultEnvironment.unpack","59":"SF.DefaultEnvironment.version","60":"SF.DefaultEnvironment.worldToLocal","61":"SF.DefaultEnvironment.xpcall","SF.DefaultEnvironment.ramAverage":{"summary":"\nGets the moving average of ram usage of the lua environment ","ret":"The ram used in bytes","class":"function","private":false,"library":"builtin","fname":"ramAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.ramAverage","description":"\nGets the moving average of ram usage of the lua environment"},"SF.DefaultEnvironment.select":{"summary":"\nUsed to select single values from a vararg or get the count of values in it.","classForced":true,"ret":"Returns a number or vararg, depending on the select method.","class":"function","description":"\nUsed to select single values from a vararg or get the count of values in it.","fname":"select","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.select","param":{"1":"parameter","2":"vararg","vararg":"","parameter":""}},"SF.DefaultEnvironment.entity":{"summary":"\nReturns the entity with index 'num' ","classForced":true,"ret":"entity","class":"function","description":"\nReturns the entity with index 'num'","fname":"entity","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.entity","param":{"1":"num","num":"Entity index"}},"SF.DefaultEnvironment.dofile":{"summary":"\nRuns an included script, but does not cache the result.","ret":"Return value of the script","class":"function","private":false,"library":"builtin","fname":"dofile","realm":"sh","param":{"1":"file","file":"The file to include. Make sure to --@include it"},"name":"SF.DefaultEnvironment.dofile","description":"\nRuns an included script, but does not cache the result. \nPretty much like standard Lua dofile()"},"SF.DefaultEnvironment.unpack":{"summary":"\nThis function takes a numeric indexed table and return all the members as a vararg.","classForced":true,"ret":"Elements of tbl","class":"function","description":"\nThis function takes a numeric indexed table and return all the members as a vararg.","fname":"unpack","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.unpack","param":{"1":"tbl","tbl":""}},"SF.DefaultEnvironment.quotaUsed":{"summary":"\nReturns the current count for this Think's CPU Time.","ret":"Current quota used this Think","class":"function","private":false,"library":"builtin","fname":"quotaUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaUsed","description":"\nReturns the current count for this Think's CPU Time. \nThis value increases as more executions are done, may not be exactly as you want. \nIf used on screens, will show 0 if only rendering is done. Operations must be done in the Think loop for them to be counted."},"SF.DefaultEnvironment.permissionRequestSatisfied":{"summary":"\nIs permission request fully satisfied.","ret":"Boolean of whether the client gave all permissions specified in last request or not.","class":"function","client":true,"private":false,"library":"builtin","fname":"permissionRequestSatisfied","realm":"cl","param":[],"name":"SF.DefaultEnvironment.permissionRequestSatisfied","description":"\nIs permission request fully satisfied."},"SF.DefaultEnvironment.debugGetInfo":{"summary":"\nGLua's getinfo() \nReturns a DebugInfo structure containing the passed function's info (https://wiki.garrysmod.com/page/Structures/DebugInfo) ","ret":"DebugInfo table","class":"function","private":false,"library":"builtin","fname":"debugGetInfo","realm":"sh","param":{"1":"funcOrStackLevel","2":"fields","funcOrStackLevel":"Function or stack level to get info about. Defaults to stack level 0.","fields":"A string that specifies the information to be retrieved. Defaults to all (flnSu)."},"name":"SF.DefaultEnvironment.debugGetInfo","description":"\nGLua's getinfo() \nReturns a DebugInfo structure containing the passed function's info (https://wiki.garrysmod.com/page/Structures/DebugInfo)"},"SF.DefaultEnvironment.quotaTotalUsed":{"summary":"\nReturns the total used time for all chips by the player.","ret":"Total used CPU time of all your chips.","class":"function","private":false,"library":"builtin","fname":"quotaTotalUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaTotalUsed","description":"\nReturns the total used time for all chips by the player."},"SF.DefaultEnvironment.printMessage":{"summary":"\nPrints a message to your chat, console, or the center of your screen.","class":"function","private":false,"param":{"1":"mtype","2":"text","text":"The message text.","mtype":"How the message should be displayed. See http://wiki.garrysmod.com/page/Enums/HUD"},"fname":"printMessage","realm":"sh","description":"\nPrints a message to your chat, console, or the center of your screen.","name":"SF.DefaultEnvironment.printMessage","library":"builtin"},"SF.DefaultEnvironment.owner":{"summary":"\nReturns whoever created the chip ","classForced":true,"ret":"Owner entity","class":"function","description":"\nReturns whoever created the chip","fname":"owner","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.owner","param":[]},"SF.DefaultEnvironment.setUserdata":{"server":true,"class":"function","library":"builtin","private":false,"summary":"\nSets the chip's userdata that the duplicator tool saves.","fname":"setUserdata","realm":"sv","param":{"1":"str","str":"String data"},"name":"SF.DefaultEnvironment.setUserdata","description":"\nSets the chip's userdata that the duplicator tool saves. max 1MiB; can be changed with convar sf_userdata_max"},"SF.DefaultEnvironment.localToWorld":{"summary":"\nTranslates the specified position and angle from the specified local coordinate system ","ret":["worldPos","worldAngles"],"class":"function","private":false,"library":"builtin","fname":"localToWorld","realm":"sh","param":{"1":"localPos","2":"localAng","3":"originPos","4":"originAngle","localPos":"The position vector that should be translated to world coordinates","localAng":"The angle that should be converted to a world angle","originPos":"The origin point of the source coordinate system, in world coordinates","originAngle":"The angles of the source coordinate system, as a world angle"},"name":"SF.DefaultEnvironment.localToWorld","description":"\nTranslates the specified position and angle from the specified local coordinate system"},"SF.DefaultEnvironment.eyePos":{"summary":"\nReturns the local player's camera position ","ret":"The local player's camera position","class":"function","client":true,"private":false,"library":"builtin","fname":"eyePos","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyePos","description":"\nReturns the local player's camera position"},"SF.DefaultEnvironment.worldToLocal":{"summary":"\nTranslates the specified position and angle into the specified coordinate system ","ret":["localPos","localAngles"],"class":"function","private":false,"library":"builtin","fname":"worldToLocal","realm":"sh","param":{"1":"pos","2":"ang","3":"newSystemOrigin","4":"newSystemAngles","ang":"The angles that should be translated from the current to the new system","pos":"The position that should be translated from the current to the new system","newSystemAngles":"The angles of the system to translate to","newSystemOrigin":"The origin of the system to translate to"},"name":"SF.DefaultEnvironment.worldToLocal","description":"\nTranslates the specified position and angle into the specified coordinate system"},"SF.DefaultEnvironment.isValid":{"summary":"\nReturns if the table has an isValid function and isValid returns true.","ret":"If it is valid","class":"function","private":false,"library":"builtin","fname":"isValid","realm":"sh","param":{"1":"object","object":"Table to check"},"name":"SF.DefaultEnvironment.isValid","description":"\nReturns if the table has an isValid function and isValid returns true."},"SF.DefaultEnvironment.isFirstTimePredicted":{"summary":"\nReturns if this is the first time this hook was predicted.","classForced":true,"ret":"Boolean","class":"function","description":"\nReturns if this is the first time this hook was predicted.","fname":"isFirstTimePredicted","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.isFirstTimePredicted","param":[]},"SF.DefaultEnvironment.quotaTotalAverage":{"summary":"\nReturns the total average time for all chips by the player.","ret":"Total average CPU Time of all your chips.","class":"function","private":false,"library":"builtin","fname":"quotaTotalAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaTotalAverage","description":"\nReturns the total average time for all chips by the player."},"SF.DefaultEnvironment.setmetatable":{"summary":"\nSets, changes or removes a table's metatable.","classForced":true,"ret":"tbl with metatable set to meta","class":"function","description":"\nSets, changes or removes a table's metatable. Doesn't work on most internal metatables","fname":"setmetatable","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.setmetatable","param":{"1":"tbl","2":"meta","tbl":"The table to set the metatable of","meta":"The metatable to use"}},"SF.DefaultEnvironment.error":{"summary":"\nThrows a raw exception.","class":"function","private":false,"param":{"1":"msg","2":"level","level":"Which level in the stacktrace to blame. Defaults to 1","msg":"Exception message"},"fname":"error","realm":"sh","description":"\nThrows a raw exception.","name":"SF.DefaultEnvironment.error","library":"builtin"},"SF.DefaultEnvironment.throw":{"summary":"\nThrows an exception ","class":"function","private":false,"param":{"1":"msg","2":"level","3":"uncatchable","level":"Which level in the stacktrace to blame. Defaults to 1","msg":"Message string","uncatchable":"Makes this exception uncatchable"},"fname":"throw","realm":"sh","description":"\nThrows an exception","name":"SF.DefaultEnvironment.throw","library":"builtin"},"SF.DefaultEnvironment.printTable":{"summary":"\nPrints a table to player's chat ","class":"function","private":false,"param":{"1":"tbl","tbl":"Table to print"},"fname":"printTable","realm":"sh","description":"\nPrints a table to player's chat","name":"SF.DefaultEnvironment.printTable","library":"builtin"},"SF.DefaultEnvironment.getLibraries":{"summary":"\nGets a list of all libraries ","ret":"Table containing the names of each available library","class":"function","private":false,"library":"builtin","fname":"getLibraries","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getLibraries","description":"\nGets a list of all libraries"},"SF.DefaultEnvironment.try":{"summary":"\nTry to execute a function and catch possible exceptions \nSimilar to xpcall, but a bit more in-depth ","class":"function","private":false,"param":{"1":"func","2":"catch","func":"Function to execute","catch":"Optional function to execute in case func fails"},"fname":"try","realm":"sh","description":"\nTry to execute a function and catch possible exceptions \nSimilar to xpcall, but a bit more in-depth","name":"SF.DefaultEnvironment.try","library":"builtin"},"SF.DefaultEnvironment.requiredir":{"summary":"\nRuns an included script and caches the result.","ret":"Table of return values of the scripts","class":"function","private":false,"library":"builtin","fname":"requiredir","realm":"sh","param":{"1":"dir","2":"loadpriority","loadpriority":"Table of files that should be loaded before any others in the directory","dir":"The directory to include. Make sure to --@includedir it"},"name":"SF.DefaultEnvironment.requiredir","description":"\nRuns an included script and caches the result. \nWorks pretty much like standard Lua require()"},"SF.DefaultEnvironment.xpcall":{"summary":"\nLua's xpcall with SF throw implementation, and a traceback for debugging.","ret":["Status of the execution; true for success, false for failure.","The returns of the first function if execution succeeded, otherwise the return values of the error callback."],"class":"function","private":false,"library":"builtin","fname":"xpcall","realm":"sh","param":{"1":"func","2":"callback","3":"...","func":"The function to call initially.","callback":"The function to be called if execution of the first fails; the error message and stack trace are passed.","...":"Varargs to pass to the initial function."},"name":"SF.DefaultEnvironment.xpcall","description":"\nLua's xpcall with SF throw implementation, and a traceback for debugging. \nAttempts to call the first function. If the execution succeeds, this returns true followed by the returns of the function. \nIf execution fails, this returns false and the second function is called with the error message, and the stack trace."},"SF.DefaultEnvironment.quotaMax":{"summary":"\nGets the CPU Time max.","ret":"Max SysTime allowed to take for execution of the chip in a Think.","class":"function","private":false,"library":"builtin","fname":"quotaMax","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaMax","description":"\nGets the CPU Time max. \nCPU Time is stored in a buffer of N elements, if the average of this exceeds quotaMax, the chip will error."},"SF.DefaultEnvironment.pcall":{"summary":"\nLua's pcall with SF throw implementation \nCalls a function and catches an error that can be thrown while the execution of the call.","ret":["If the function had no errors occur within it.","If an error occurred, this will be a string containing the error message. Otherwise, this will be the return values of the function passed in."],"class":"function","private":false,"library":"builtin","fname":"pcall","realm":"sh","param":{"1":"func","2":"...","3":"arguments","func":"Function to be executed and of which the errors should be caught of","arguments":"Arguments to call the function with."},"name":"SF.DefaultEnvironment.pcall","description":"\nLua's pcall with SF throw implementation \nCalls a function and catches an error that can be thrown while the execution of the call."},"SF.DefaultEnvironment.getfenv":{"summary":"\nSimple version of Lua's getfenv \nReturns the current environment ","ret":"Current environment","class":"function","private":false,"library":"builtin","fname":"getfenv","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getfenv","description":"\nSimple version of Lua's getfenv \nReturns the current environment"},"SF.DefaultEnvironment.setTypeMethod":{"summary":"\nSet's metamethod on SF type ","class":"function","private":false,"param":{"1":"sfType","2":"methodName","3":"method","sfType":"Name of SF type","method":"Method to set","methodName":"Name of method"},"fname":"setTypeMethod","realm":"sh","description":"\nSet's metamethod on SF type","name":"SF.DefaultEnvironment.setTypeMethod","library":"builtin"},"SF.DefaultEnvironment.concmd":{"server":true,"class":"function","client":true,"library":"builtin","private":false,"summary":"\nExecute a console command ","fname":"concmd","realm":"sh","param":{"1":"cmd","cmd":"Command to execute"},"name":"SF.DefaultEnvironment.concmd","description":"\nExecute a console command"},"SF.DefaultEnvironment.rawget":{"summary":"\nGets the value of a table index without invoking a metamethod ","ret":"The value of the index","class":"function","private":false,"library":"builtin","fname":"rawget","realm":"sh","param":{"1":"table","2":"key","3":"value","key":"The index of the table","table":"The table to get the value from"},"name":"SF.DefaultEnvironment.rawget","description":"\nGets the value of a table index without invoking a metamethod"},"SF.DefaultEnvironment.setfenv":{"summary":"\nLua's setfenv \nWorks like setfenv, but is restricted on functions ","ret":"func with environment set to tbl","class":"function","private":false,"library":"builtin","fname":"setfenv","realm":"sh","param":{"1":"func","2":"tbl","func":"Function to change environment of","tbl":"New environment"},"name":"SF.DefaultEnvironment.setfenv","description":"\nLua's setfenv \nWorks like setfenv, but is restricted on functions"},"SF.DefaultEnvironment.quotaAverage":{"summary":"\nGets the Average CPU Time in the buffer ","ret":"Average CPU Time of the buffer.","class":"function","private":false,"library":"builtin","fname":"quotaAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaAverage","description":"\nGets the Average CPU Time in the buffer"},"SF.DefaultEnvironment.assert":{"summary":"\nIf the result of the first argument is false or nil, an error is thrown with the second argument as the message.","classForced":true,"class":"function","param":{"1":"condition","2":"msg","msg":"","condition":""},"private":false,"fname":"assert","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.assert","description":"\nIf the result of the first argument is false or nil, an error is thrown with the second argument as the message."},"SF.DefaultEnvironment.loadstring":{"summary":"\nGLua's loadstring \nWorks like loadstring, except that it executes by default in the main environment ","ret":"Function of str","class":"function","private":false,"library":"builtin","fname":"loadstring","realm":"sh","param":{"1":"str","2":"name","str":"String to execute"},"name":"SF.DefaultEnvironment.loadstring","description":"\nGLua's loadstring \nWorks like loadstring, except that it executes by default in the main environment"},"SF.DefaultEnvironment.type":{"summary":"\nReturns a string representing the name of the type of the passed object.","classForced":true,"ret":"The name of the object's type.","class":"function","param":{"1":"obj","obj":"Object to get type of"},"private":false,"fname":"type","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.type","description":"\nReturns a string representing the name of the type of the passed object."},"SF.DefaultEnvironment.tostring":{"summary":"\nAttempts to convert the value to a string.","classForced":true,"ret":"obj as string","class":"function","description":"\nAttempts to convert the value to a string.","fname":"tostring","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.tostring","param":{"1":"obj","obj":""}},"SF.DefaultEnvironment.require":{"summary":"\nRuns an included script and caches the result.","ret":"Return value of the script","class":"function","private":false,"library":"builtin","fname":"require","realm":"sh","param":{"1":"file","file":"The file to include. Make sure to --@include it"},"name":"SF.DefaultEnvironment.require","description":"\nRuns an included script and caches the result. \nWorks pretty much like standard Lua require()"},"SF.DefaultEnvironment.tonumber":{"summary":"\nAttempts to convert the value to a number.","classForced":true,"ret":"obj as number","class":"function","description":"\nAttempts to convert the value to a number.","fname":"tonumber","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.tonumber","param":{"1":"obj","obj":""}},"SF.DefaultEnvironment.crc":{"summary":"\nGenerates the CRC checksum of the specified string.","classForced":true,"ret":"The unsigned 32 bit checksum as a string","class":"function","description":"\nGenerates the CRC checksum of the specified string. (https://en.wikipedia.org/wiki/Cyclic_redundancy_check)","fname":"crc","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.crc","param":{"1":"stringToHash","stringToHash":"The string to calculate the checksum of"}},"SF.DefaultEnvironment.getScripts":{"summary":"\nReturns the table of scripts used by the chip ","ret":"Table of scripts used by the chip","class":"function","private":false,"library":"builtin","fname":"getScripts","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getScripts","description":"\nReturns the table of scripts used by the chip"},"SF.DefaultEnvironment.eyeVector":{"summary":"\nReturns the local player's camera forward vector ","ret":"The local player's camera forward vector","class":"function","client":true,"private":false,"library":"builtin","fname":"eyeVector","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyeVector","description":"\nReturns the local player's camera forward vector"},"SF.DefaultEnvironment.eyeAngles":{"summary":"\nReturns the local player's camera angles ","ret":"The local player's camera angles","class":"function","client":true,"private":false,"library":"builtin","fname":"eyeAngles","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyeAngles","description":"\nReturns the local player's camera angles"},"SF.DefaultEnvironment.chip":{"summary":"\nReturns the entity representing a processor that this script is running on.","classForced":true,"ret":"Starfall entity","class":"function","description":"\nReturns the entity representing a processor that this script is running on.","fname":"chip","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.chip","param":[]},"SF.DefaultEnvironment.version":{"summary":"\nGets the starfall version ","ret":"Starfall version","class":"function","private":false,"library":"builtin","fname":"version","realm":"sh","param":[],"name":"SF.DefaultEnvironment.version","description":"\nGets the starfall version"},"SF.DefaultEnvironment.hasPermission":{"summary":"\nChecks if the chip is capable of performing an action.","class":"function","private":false,"param":{"1":"perm","2":"obj","obj":"Optional object to pass to the permission system.","perm":"The permission id to check"},"fname":"hasPermission","realm":"sh","description":"\nChecks if the chip is capable of performing an action.","name":"SF.DefaultEnvironment.hasPermission","library":"builtin"},"SF.DefaultEnvironment.ramUsed":{"summary":"\nGets the current ram usage of the lua environment ","ret":"The ram used in bytes","class":"function","private":false,"library":"builtin","fname":"ramUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.ramUsed","description":"\nGets the current ram usage of the lua environment"},"SF.DefaultEnvironment.getUserdata":{"server":true,"ret":"String data","class":"function","library":"builtin","private":false,"summary":"\nGets the chip's userdata that the duplicator tool loads ","fname":"getUserdata","realm":"sv","param":[],"name":"SF.DefaultEnvironment.getUserdata","description":"\nGets the chip's userdata that the duplicator tool loads"},"SF.DefaultEnvironment.ipairs":{"summary":"\nReturns an iterator function for a for loop, to return ordered key-value pairs from a table.","classForced":true,"ret":["Iterator function","Table tbl","0 as current index"],"class":"function","description":"\nReturns an iterator function for a for loop, to return ordered key-value pairs from a table.","fname":"ipairs","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.ipairs","param":{"1":"tbl","tbl":"Table to iterate over"}},"SF.DefaultEnvironment.next":{"summary":"\nReturns the next key and value pair in a table.","classForced":true,"ret":["Key or nil","Value or nil"],"class":"function","description":"\nReturns the next key and value pair in a table.","fname":"next","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.next","param":{"1":"tbl","2":"k","tbl":"Table to get the next key-value pair of","k":"Previous key (can be nil)"}},"SF.DefaultEnvironment.player":{"summary":"\nSame as owner() on the server.","classForced":true,"ret":"Returns player with given UserID or if none specified then returns either the owner (server) or the local player (client)","class":"function","description":"\nSame as owner() on the server. On the client, returns the local player","fname":"player","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.player","param":[]},"SF.DefaultEnvironment.setName":{"summary":"\nSets the chip's display name ","class":"function","client":true,"private":false,"library":"builtin","fname":"setName","realm":"cl","param":{"1":"name","name":"Name"},"name":"SF.DefaultEnvironment.setName","description":"\nSets the chip's display name"},"SF.DefaultEnvironment.setSoftQuota":{"summary":"\nSets a CPU soft quota which will trigger a catchable error if the cpu goes over a certain amount.","class":"function","private":false,"param":{"1":"quota","quota":"The threshold where the soft error will be thrown. Ratio of current cpu to the max cpu usage. 0.5 is 50%"},"fname":"setSoftQuota","realm":"sh","description":"\nSets a CPU soft quota which will trigger a catchable error if the cpu goes over a certain amount.","name":"SF.DefaultEnvironment.setSoftQuota","library":"builtin"},"SF.DefaultEnvironment.rawset":{"summary":"\nSet the value of a table index without invoking a metamethod ","class":"function","private":false,"param":{"1":"table","2":"key","3":"value","value":"The value to set the index equal to","key":"The index of the table","table":"The table to modify"},"fname":"rawset","realm":"sh","description":"\nSet the value of a table index without invoking a metamethod","name":"SF.DefaultEnvironment.rawset","library":"builtin"},"SF.DefaultEnvironment.pairs":{"summary":"\nReturns an iterator function for a for loop that will return the values of the specified table in an arbitrary order.","classForced":true,"ret":["Iterator function","Table tbl","nil as current index"],"class":"function","description":"\nReturns an iterator function for a for loop that will return the values of the specified table in an arbitrary order.","fname":"pairs","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.pairs","param":{"1":"tbl","tbl":"Table to iterate over"}},"SF.DefaultEnvironment.getmetatable":{"summary":"\nReturns the metatable of an object.","ret":"The metatable of tbl","class":"function","private":false,"library":"builtin","fname":"getmetatable","realm":"sh","param":{"1":"tbl","tbl":"Table to get metatable of"},"name":"SF.DefaultEnvironment.getmetatable","description":"\nReturns the metatable of an object. Doesn't work on most internal metatables"},"SF.DefaultEnvironment.dodir":{"summary":"\nRuns an included directory, but does not cache the result.","ret":"Table of return values of the scripts","class":"function","private":false,"library":"builtin","fname":"dodir","realm":"sh","param":{"1":"dir","2":"loadpriority","loadpriority":"Table of files that should be loaded before any others in the directory","dir":"The directory to include. Make sure to --@includedir it"},"name":"SF.DefaultEnvironment.dodir","description":"\nRuns an included directory, but does not cache the result."},"SF.DefaultEnvironment.class":{"summary":"\nCreates a 'middleclass' class object that can be used similarly to Java/C++ classes.","class":"function","private":false,"param":{"1":"name","2":"super","name":"The string name of the class","super":"The (optional) parent class to inherit from"},"fname":"class","realm":"sh","description":"\nCreates a 'middleclass' class object that can be used similarly to Java/C++ classes. See https://github.com/kikito/middleclass for examples.","name":"SF.DefaultEnvironment.class","library":"builtin"},"SF.DefaultEnvironment.setupPermissionRequest":{"summary":"\nSetups request for overriding permissions.","class":"function","client":true,"private":false,"library":"builtin","fname":"setupPermissionRequest","realm":"cl","param":{"1":"perms","2":"desc","3":"showOnUse","desc":"Description attached to request.","showOnUse":"Whether request will popup when player uses chip or linked screen.","perms":"Table of overridable permissions' names."},"name":"SF.DefaultEnvironment.setupPermissionRequest","description":"\nSetups request for overriding permissions."},"SF.DefaultEnvironment.setClipboardText":{"summary":"\nSets clipboard text.","class":"function","private":false,"param":{"1":"txt","txt":"Text to set to the clipboard"},"fname":"setClipboardText","realm":"sh","description":"\nSets clipboard text. Only works on the owner of the chip.","name":"SF.DefaultEnvironment.setClipboardText","library":"builtin"}},"libraries":{"1":"builtin","builtin":{"server":true,"classForced":true,"class":"library","client":true,"summary":"\nBuilt in values.","tables":{"1":"math","2":"os","3":"string","4":"table","os":{"summary":"\nThe os library.","classForced":true,"class":"table","tname":"os","description":"\nThe os library. http://wiki.garrysmod.com/page/Category:os","param":[],"name":"SF.DefaultEnvironment.os","library":"builtin"},"table":{"summary":"\nTable library.","classForced":true,"class":"table","tname":"table","description":"\nTable library. http://wiki.garrysmod.com/page/Category:table","param":[],"name":"SF.DefaultEnvironment.table","library":"builtin"},"math":{"summary":"\nThe math library.","classForced":true,"class":"table","tname":"math","description":"\nThe math library. http://wiki.garrysmod.com/page/Category:math","param":[],"name":"SF.DefaultEnvironment.math","library":"builtin"},"string":{"summary":"\nString library http://wiki.garrysmod.com/page/Category:string ","classForced":true,"class":"table","tname":"string","description":"\nString library http://wiki.garrysmod.com/page/Category:string","param":[],"name":"SF.DefaultEnvironment.string","library":"builtin"}},"functions":{"1":"assert","2":"chip","3":"class","4":"concmd","5":"crc","6":"debugGetInfo","7":"dodir","8":"dofile","9":"entity","10":"error","11":"eyeAngles","12":"eyePos","13":"eyeVector","14":"getLibraries","15":"getScripts","16":"getUserdata","17":"getfenv","18":"getmetatable","19":"hasPermission","20":"ipairs","21":"isFirstTimePredicted","22":"isValid","23":"loadstring","24":"localToWorld","25":"next","26":"owner","27":"pairs","28":"pcall","29":"permissionRequestSatisfied","30":"player","31":"printMessage","32":"printTable","33":"quotaAverage","34":"quotaMax","35":"quotaTotalAverage","36":"quotaTotalUsed","37":"quotaUsed","38":"ramAverage","39":"ramUsed","40":"rawget","41":"rawset","42":"require","43":"requiredir","44":"select","45":"setClipboardText","46":"setName","47":"setSoftQuota","48":"setTypeMethod","49":"setUserdata","50":"setfenv","51":"setmetatable","52":"setupPermissionRequest","53":"throw","54":"tonumber","55":"tostring","56":"try","57":"type","58":"unpack","59":"version","60":"worldToLocal","61":"xpcall","localToWorld":{"summary":"\nTranslates the specified position and angle from the specified local coordinate system ","ret":["worldPos","worldAngles"],"class":"function","private":false,"library":"builtin","fname":"localToWorld","realm":"sh","param":{"1":"localPos","2":"localAng","3":"originPos","4":"originAngle","localPos":"The position vector that should be translated to world coordinates","localAng":"The angle that should be converted to a world angle","originPos":"The origin point of the source coordinate system, in world coordinates","originAngle":"The angles of the source coordinate system, as a world angle"},"name":"SF.DefaultEnvironment.localToWorld","description":"\nTranslates the specified position and angle from the specified local coordinate system"},"version":{"summary":"\nGets the starfall version ","ret":"Starfall version","class":"function","private":false,"library":"builtin","fname":"version","realm":"sh","param":[],"name":"SF.DefaultEnvironment.version","description":"\nGets the starfall version"},"assert":{"summary":"\nIf the result of the first argument is false or nil, an error is thrown with the second argument as the message.","classForced":true,"class":"function","param":{"1":"condition","2":"msg","msg":"","condition":""},"private":false,"fname":"assert","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.assert","description":"\nIf the result of the first argument is false or nil, an error is thrown with the second argument as the message."},"tostring":{"summary":"\nAttempts to convert the value to a string.","classForced":true,"ret":"obj as string","class":"function","description":"\nAttempts to convert the value to a string.","fname":"tostring","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.tostring","param":{"1":"obj","obj":""}},"crc":{"summary":"\nGenerates the CRC checksum of the specified string.","classForced":true,"ret":"The unsigned 32 bit checksum as a string","class":"function","description":"\nGenerates the CRC checksum of the specified string. (https://en.wikipedia.org/wiki/Cyclic_redundancy_check)","fname":"crc","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.crc","param":{"1":"stringToHash","stringToHash":"The string to calculate the checksum of"}},"tonumber":{"summary":"\nAttempts to convert the value to a number.","classForced":true,"ret":"obj as number","class":"function","description":"\nAttempts to convert the value to a number.","fname":"tonumber","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.tonumber","param":{"1":"obj","obj":""}},"throw":{"summary":"\nThrows an exception ","class":"function","private":false,"param":{"1":"msg","2":"level","3":"uncatchable","level":"Which level in the stacktrace to blame. Defaults to 1","msg":"Message string","uncatchable":"Makes this exception uncatchable"},"fname":"throw","realm":"sh","description":"\nThrows an exception","name":"SF.DefaultEnvironment.throw","library":"builtin"},"rawget":{"summary":"\nGets the value of a table index without invoking a metamethod ","ret":"The value of the index","class":"function","private":false,"library":"builtin","fname":"rawget","realm":"sh","param":{"1":"table","2":"key","3":"value","key":"The index of the table","table":"The table to get the value from"},"name":"SF.DefaultEnvironment.rawget","description":"\nGets the value of a table index without invoking a metamethod"},"ramUsed":{"summary":"\nGets the current ram usage of the lua environment ","ret":"The ram used in bytes","class":"function","private":false,"library":"builtin","fname":"ramUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.ramUsed","description":"\nGets the current ram usage of the lua environment"},"class":{"summary":"\nCreates a 'middleclass' class object that can be used similarly to Java/C++ classes.","class":"function","private":false,"param":{"1":"name","2":"super","name":"The string name of the class","super":"The (optional) parent class to inherit from"},"fname":"class","realm":"sh","description":"\nCreates a 'middleclass' class object that can be used similarly to Java/C++ classes. See https://github.com/kikito/middleclass for examples.","name":"SF.DefaultEnvironment.class","library":"builtin"},"ramAverage":{"summary":"\nGets the moving average of ram usage of the lua environment ","ret":"The ram used in bytes","class":"function","private":false,"library":"builtin","fname":"ramAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.ramAverage","description":"\nGets the moving average of ram usage of the lua environment"},"isFirstTimePredicted":{"summary":"\nReturns if this is the first time this hook was predicted.","classForced":true,"ret":"Boolean","class":"function","description":"\nReturns if this is the first time this hook was predicted.","fname":"isFirstTimePredicted","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.isFirstTimePredicted","param":[]},"worldToLocal":{"summary":"\nTranslates the specified position and angle into the specified coordinate system ","ret":["localPos","localAngles"],"class":"function","private":false,"library":"builtin","fname":"worldToLocal","realm":"sh","param":{"1":"pos","2":"ang","3":"newSystemOrigin","4":"newSystemAngles","ang":"The angles that should be translated from the current to the new system","pos":"The position that should be translated from the current to the new system","newSystemAngles":"The angles of the system to translate to","newSystemOrigin":"The origin of the system to translate to"},"name":"SF.DefaultEnvironment.worldToLocal","description":"\nTranslates the specified position and angle into the specified coordinate system"},"dodir":{"summary":"\nRuns an included directory, but does not cache the result.","ret":"Table of return values of the scripts","class":"function","private":false,"library":"builtin","fname":"dodir","realm":"sh","param":{"1":"dir","2":"loadpriority","loadpriority":"Table of files that should be loaded before any others in the directory","dir":"The directory to include. Make sure to --@includedir it"},"name":"SF.DefaultEnvironment.dodir","description":"\nRuns an included directory, but does not cache the result."},"error":{"summary":"\nThrows a raw exception.","class":"function","private":false,"param":{"1":"msg","2":"level","level":"Which level in the stacktrace to blame. Defaults to 1","msg":"Exception message"},"fname":"error","realm":"sh","description":"\nThrows a raw exception.","name":"SF.DefaultEnvironment.error","library":"builtin"},"ipairs":{"summary":"\nReturns an iterator function for a for loop, to return ordered key-value pairs from a table.","classForced":true,"ret":["Iterator function","Table tbl","0 as current index"],"class":"function","description":"\nReturns an iterator function for a for loop, to return ordered key-value pairs from a table.","fname":"ipairs","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.ipairs","param":{"1":"tbl","tbl":"Table to iterate over"}},"try":{"summary":"\nTry to execute a function and catch possible exceptions \nSimilar to xpcall, but a bit more in-depth ","class":"function","private":false,"param":{"1":"func","2":"catch","func":"Function to execute","catch":"Optional function to execute in case func fails"},"fname":"try","realm":"sh","description":"\nTry to execute a function and catch possible exceptions \nSimilar to xpcall, but a bit more in-depth","name":"SF.DefaultEnvironment.try","library":"builtin"},"xpcall":{"summary":"\nLua's xpcall with SF throw implementation, and a traceback for debugging.","ret":["Status of the execution; true for success, false for failure.","The returns of the first function if execution succeeded, otherwise the return values of the error callback."],"class":"function","private":false,"library":"builtin","fname":"xpcall","realm":"sh","param":{"1":"func","2":"callback","3":"...","func":"The function to call initially.","callback":"The function to be called if execution of the first fails; the error message and stack trace are passed.","...":"Varargs to pass to the initial function."},"name":"SF.DefaultEnvironment.xpcall","description":"\nLua's xpcall with SF throw implementation, and a traceback for debugging. \nAttempts to call the first function. If the execution succeeds, this returns true followed by the returns of the function. \nIf execution fails, this returns false and the second function is called with the error message, and the stack trace."},"getfenv":{"summary":"\nSimple version of Lua's getfenv \nReturns the current environment ","ret":"Current environment","class":"function","private":false,"library":"builtin","fname":"getfenv","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getfenv","description":"\nSimple version of Lua's getfenv \nReturns the current environment"},"debugGetInfo":{"summary":"\nGLua's getinfo() \nReturns a DebugInfo structure containing the passed function's info (https://wiki.garrysmod.com/page/Structures/DebugInfo) ","ret":"DebugInfo table","class":"function","private":false,"library":"builtin","fname":"debugGetInfo","realm":"sh","param":{"1":"funcOrStackLevel","2":"fields","funcOrStackLevel":"Function or stack level to get info about. Defaults to stack level 0.","fields":"A string that specifies the information to be retrieved. Defaults to all (flnSu)."},"name":"SF.DefaultEnvironment.debugGetInfo","description":"\nGLua's getinfo() \nReturns a DebugInfo structure containing the passed function's info (https://wiki.garrysmod.com/page/Structures/DebugInfo)"},"quotaUsed":{"summary":"\nReturns the current count for this Think's CPU Time.","ret":"Current quota used this Think","class":"function","private":false,"library":"builtin","fname":"quotaUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaUsed","description":"\nReturns the current count for this Think's CPU Time. \nThis value increases as more executions are done, may not be exactly as you want. \nIf used on screens, will show 0 if only rendering is done. Operations must be done in the Think loop for them to be counted."},"pcall":{"summary":"\nLua's pcall with SF throw implementation \nCalls a function and catches an error that can be thrown while the execution of the call.","ret":["If the function had no errors occur within it.","If an error occurred, this will be a string containing the error message. Otherwise, this will be the return values of the function passed in."],"class":"function","private":false,"library":"builtin","fname":"pcall","realm":"sh","param":{"1":"func","2":"...","3":"arguments","func":"Function to be executed and of which the errors should be caught of","arguments":"Arguments to call the function with."},"name":"SF.DefaultEnvironment.pcall","description":"\nLua's pcall with SF throw implementation \nCalls a function and catches an error that can be thrown while the execution of the call."},"setSoftQuota":{"summary":"\nSets a CPU soft quota which will trigger a catchable error if the cpu goes over a certain amount.","class":"function","private":false,"param":{"1":"quota","quota":"The threshold where the soft error will be thrown. Ratio of current cpu to the max cpu usage. 0.5 is 50%"},"fname":"setSoftQuota","realm":"sh","description":"\nSets a CPU soft quota which will trigger a catchable error if the cpu goes over a certain amount.","name":"SF.DefaultEnvironment.setSoftQuota","library":"builtin"},"quotaAverage":{"summary":"\nGets the Average CPU Time in the buffer ","ret":"Average CPU Time of the buffer.","class":"function","private":false,"library":"builtin","fname":"quotaAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaAverage","description":"\nGets the Average CPU Time in the buffer"},"setName":{"summary":"\nSets the chip's display name ","class":"function","client":true,"private":false,"library":"builtin","fname":"setName","realm":"cl","param":{"1":"name","name":"Name"},"name":"SF.DefaultEnvironment.setName","description":"\nSets the chip's display name"},"setfenv":{"summary":"\nLua's setfenv \nWorks like setfenv, but is restricted on functions ","ret":"func with environment set to tbl","class":"function","private":false,"library":"builtin","fname":"setfenv","realm":"sh","param":{"1":"func","2":"tbl","func":"Function to change environment of","tbl":"New environment"},"name":"SF.DefaultEnvironment.setfenv","description":"\nLua's setfenv \nWorks like setfenv, but is restricted on functions"},"loadstring":{"summary":"\nGLua's loadstring \nWorks like loadstring, except that it executes by default in the main environment ","ret":"Function of str","class":"function","private":false,"library":"builtin","fname":"loadstring","realm":"sh","param":{"1":"str","2":"name","str":"String to execute"},"name":"SF.DefaultEnvironment.loadstring","description":"\nGLua's loadstring \nWorks like loadstring, except that it executes by default in the main environment"},"quotaTotalAverage":{"summary":"\nReturns the total average time for all chips by the player.","ret":"Total average CPU Time of all your chips.","class":"function","private":false,"library":"builtin","fname":"quotaTotalAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaTotalAverage","description":"\nReturns the total average time for all chips by the player."},"isValid":{"summary":"\nReturns if the table has an isValid function and isValid returns true.","ret":"If it is valid","class":"function","private":false,"library":"builtin","fname":"isValid","realm":"sh","param":{"1":"object","object":"Table to check"},"name":"SF.DefaultEnvironment.isValid","description":"\nReturns if the table has an isValid function and isValid returns true."},"concmd":{"server":true,"class":"function","client":true,"library":"builtin","private":false,"summary":"\nExecute a console command ","fname":"concmd","realm":"sh","param":{"1":"cmd","cmd":"Command to execute"},"name":"SF.DefaultEnvironment.concmd","description":"\nExecute a console command"},"getScripts":{"summary":"\nReturns the table of scripts used by the chip ","ret":"Table of scripts used by the chip","class":"function","private":false,"library":"builtin","fname":"getScripts","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getScripts","description":"\nReturns the table of scripts used by the chip"},"eyeVector":{"summary":"\nReturns the local player's camera forward vector ","ret":"The local player's camera forward vector","class":"function","client":true,"private":false,"library":"builtin","fname":"eyeVector","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyeVector","description":"\nReturns the local player's camera forward vector"},"getLibraries":{"summary":"\nGets a list of all libraries ","ret":"Table containing the names of each available library","class":"function","private":false,"library":"builtin","fname":"getLibraries","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getLibraries","description":"\nGets a list of all libraries"},"rawset":{"summary":"\nSet the value of a table index without invoking a metamethod ","class":"function","private":false,"param":{"1":"table","2":"key","3":"value","value":"The value to set the index equal to","key":"The index of the table","table":"The table to modify"},"fname":"rawset","realm":"sh","description":"\nSet the value of a table index without invoking a metamethod","name":"SF.DefaultEnvironment.rawset","library":"builtin"},"setupPermissionRequest":{"summary":"\nSetups request for overriding permissions.","class":"function","client":true,"private":false,"library":"builtin","fname":"setupPermissionRequest","realm":"cl","param":{"1":"perms","2":"desc","3":"showOnUse","desc":"Description attached to request.","showOnUse":"Whether request will popup when player uses chip or linked screen.","perms":"Table of overridable permissions' names."},"name":"SF.DefaultEnvironment.setupPermissionRequest","description":"\nSetups request for overriding permissions."},"requiredir":{"summary":"\nRuns an included script and caches the result.","ret":"Table of return values of the scripts","class":"function","private":false,"library":"builtin","fname":"requiredir","realm":"sh","param":{"1":"dir","2":"loadpriority","loadpriority":"Table of files that should be loaded before any others in the directory","dir":"The directory to include. Make sure to --@includedir it"},"name":"SF.DefaultEnvironment.requiredir","description":"\nRuns an included script and caches the result. \nWorks pretty much like standard Lua require()"},"require":{"summary":"\nRuns an included script and caches the result.","ret":"Return value of the script","class":"function","private":false,"library":"builtin","fname":"require","realm":"sh","param":{"1":"file","file":"The file to include. Make sure to --@include it"},"name":"SF.DefaultEnvironment.require","description":"\nRuns an included script and caches the result. \nWorks pretty much like standard Lua require()"},"player":{"summary":"\nSame as owner() on the server.","classForced":true,"ret":"Returns player with given UserID or if none specified then returns either the owner (server) or the local player (client)","class":"function","description":"\nSame as owner() on the server. On the client, returns the local player","fname":"player","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.player","param":[]},"setClipboardText":{"summary":"\nSets clipboard text.","class":"function","private":false,"param":{"1":"txt","txt":"Text to set to the clipboard"},"fname":"setClipboardText","realm":"sh","description":"\nSets clipboard text. Only works on the owner of the chip.","name":"SF.DefaultEnvironment.setClipboardText","library":"builtin"},"eyePos":{"summary":"\nReturns the local player's camera position ","ret":"The local player's camera position","class":"function","client":true,"private":false,"library":"builtin","fname":"eyePos","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyePos","description":"\nReturns the local player's camera position"},"dofile":{"summary":"\nRuns an included script, but does not cache the result.","ret":"Return value of the script","class":"function","private":false,"library":"builtin","fname":"dofile","realm":"sh","param":{"1":"file","file":"The file to include. Make sure to --@include it"},"name":"SF.DefaultEnvironment.dofile","description":"\nRuns an included script, but does not cache the result. \nPretty much like standard Lua dofile()"},"printMessage":{"summary":"\nPrints a message to your chat, console, or the center of your screen.","class":"function","private":false,"param":{"1":"mtype","2":"text","text":"The message text.","mtype":"How the message should be displayed. See http://wiki.garrysmod.com/page/Enums/HUD"},"fname":"printMessage","realm":"sh","description":"\nPrints a message to your chat, console, or the center of your screen.","name":"SF.DefaultEnvironment.printMessage","library":"builtin"},"printTable":{"summary":"\nPrints a table to player's chat ","class":"function","private":false,"param":{"1":"tbl","tbl":"Table to print"},"fname":"printTable","realm":"sh","description":"\nPrints a table to player's chat","name":"SF.DefaultEnvironment.printTable","library":"builtin"},"setTypeMethod":{"summary":"\nSet's metamethod on SF type ","class":"function","private":false,"param":{"1":"sfType","2":"methodName","3":"method","sfType":"Name of SF type","method":"Method to set","methodName":"Name of method"},"fname":"setTypeMethod","realm":"sh","description":"\nSet's metamethod on SF type","name":"SF.DefaultEnvironment.setTypeMethod","library":"builtin"},"getUserdata":{"server":true,"ret":"String data","class":"function","library":"builtin","private":false,"summary":"\nGets the chip's userdata that the duplicator tool loads ","fname":"getUserdata","realm":"sv","param":[],"name":"SF.DefaultEnvironment.getUserdata","description":"\nGets the chip's userdata that the duplicator tool loads"},"setUserdata":{"server":true,"class":"function","library":"builtin","private":false,"summary":"\nSets the chip's userdata that the duplicator tool saves.","fname":"setUserdata","realm":"sv","param":{"1":"str","str":"String data"},"name":"SF.DefaultEnvironment.setUserdata","description":"\nSets the chip's userdata that the duplicator tool saves. max 1MiB; can be changed with convar sf_userdata_max"},"pairs":{"summary":"\nReturns an iterator function for a for loop that will return the values of the specified table in an arbitrary order.","classForced":true,"ret":["Iterator function","Table tbl","nil as current index"],"class":"function","description":"\nReturns an iterator function for a for loop that will return the values of the specified table in an arbitrary order.","fname":"pairs","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.pairs","param":{"1":"tbl","tbl":"Table to iterate over"}},"chip":{"summary":"\nReturns the entity representing a processor that this script is running on.","classForced":true,"ret":"Starfall entity","class":"function","description":"\nReturns the entity representing a processor that this script is running on.","fname":"chip","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.chip","param":[]},"unpack":{"summary":"\nThis function takes a numeric indexed table and return all the members as a vararg.","classForced":true,"ret":"Elements of tbl","class":"function","description":"\nThis function takes a numeric indexed table and return all the members as a vararg.","fname":"unpack","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.unpack","param":{"1":"tbl","tbl":""}},"entity":{"summary":"\nReturns the entity with index 'num' ","classForced":true,"ret":"entity","class":"function","description":"\nReturns the entity with index 'num'","fname":"entity","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.entity","param":{"1":"num","num":"Entity index"}},"next":{"summary":"\nReturns the next key and value pair in a table.","classForced":true,"ret":["Key or nil","Value or nil"],"class":"function","description":"\nReturns the next key and value pair in a table.","fname":"next","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.next","param":{"1":"tbl","2":"k","tbl":"Table to get the next key-value pair of","k":"Previous key (can be nil)"}},"hasPermission":{"summary":"\nChecks if the chip is capable of performing an action.","class":"function","private":false,"param":{"1":"perm","2":"obj","obj":"Optional object to pass to the permission system.","perm":"The permission id to check"},"fname":"hasPermission","realm":"sh","description":"\nChecks if the chip is capable of performing an action.","name":"SF.DefaultEnvironment.hasPermission","library":"builtin"},"quotaMax":{"summary":"\nGets the CPU Time max.","ret":"Max SysTime allowed to take for execution of the chip in a Think.","class":"function","private":false,"library":"builtin","fname":"quotaMax","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaMax","description":"\nGets the CPU Time max. \nCPU Time is stored in a buffer of N elements, if the average of this exceeds quotaMax, the chip will error."},"owner":{"summary":"\nReturns whoever created the chip ","classForced":true,"ret":"Owner entity","class":"function","description":"\nReturns whoever created the chip","fname":"owner","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.owner","param":[]},"setmetatable":{"summary":"\nSets, changes or removes a table's metatable.","classForced":true,"ret":"tbl with metatable set to meta","class":"function","description":"\nSets, changes or removes a table's metatable. Doesn't work on most internal metatables","fname":"setmetatable","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.setmetatable","param":{"1":"tbl","2":"meta","tbl":"The table to set the metatable of","meta":"The metatable to use"}},"select":{"summary":"\nUsed to select single values from a vararg or get the count of values in it.","classForced":true,"ret":"Returns a number or vararg, depending on the select method.","class":"function","description":"\nUsed to select single values from a vararg or get the count of values in it.","fname":"select","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.select","param":{"1":"parameter","2":"vararg","vararg":"","parameter":""}},"quotaTotalUsed":{"summary":"\nReturns the total used time for all chips by the player.","ret":"Total used CPU time of all your chips.","class":"function","private":false,"library":"builtin","fname":"quotaTotalUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaTotalUsed","description":"\nReturns the total used time for all chips by the player."},"type":{"summary":"\nReturns a string representing the name of the type of the passed object.","classForced":true,"ret":"The name of the object's type.","class":"function","param":{"1":"obj","obj":"Object to get type of"},"private":false,"fname":"type","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.type","description":"\nReturns a string representing the name of the type of the passed object."},"getmetatable":{"summary":"\nReturns the metatable of an object.","ret":"The metatable of tbl","class":"function","private":false,"library":"builtin","fname":"getmetatable","realm":"sh","param":{"1":"tbl","tbl":"Table to get metatable of"},"name":"SF.DefaultEnvironment.getmetatable","description":"\nReturns the metatable of an object. Doesn't work on most internal metatables"},"eyeAngles":{"summary":"\nReturns the local player's camera angles ","ret":"The local player's camera angles","class":"function","client":true,"private":false,"library":"builtin","fname":"eyeAngles","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyeAngles","description":"\nReturns the local player's camera angles"},"permissionRequestSatisfied":{"summary":"\nIs permission request fully satisfied.","ret":"Boolean of whether the client gave all permissions specified in last request or not.","class":"function","client":true,"private":false,"library":"builtin","fname":"permissionRequestSatisfied","realm":"cl","param":[],"name":"SF.DefaultEnvironment.permissionRequestSatisfied","description":"\nIs permission request fully satisfied."}},"libtbl":"SF.DefaultEnvironment","fields":{"1":"CLIENT","2":"SERVER","SERVER":{"summary":"\nConstant that denotes whether the code is executed on the server ","classForced":true,"class":"field","description":"\nConstant that denotes whether the code is executed on the server","param":[],"name":"SF.DefaultEnvironment.SERVER","library":"builtin"},"CLIENT":{"summary":"\nConstant that denotes whether the code is executed on the client ","classForced":true,"class":"field","description":"\nConstant that denotes whether the code is executed on the client","param":[],"name":"SF.DefaultEnvironment.CLIENT","library":"builtin"}},"name":"builtin","description":"\nBuilt in values. These don't need to be loaded; they are in the default environment."}},"type":"file","doc":[{"summary":"\n \nBuiltins.","param":[],"description":"\n \nBuiltins. \nFunctions built-in to the default environment \n"},{"server":true,"classForced":true,"class":"library","client":true,"summary":"\nBuilt in values.","tables":{"1":"math","2":"os","3":"string","4":"table","os":{"summary":"\nThe os library.","classForced":true,"class":"table","tname":"os","description":"\nThe os library. http://wiki.garrysmod.com/page/Category:os","param":[],"name":"SF.DefaultEnvironment.os","library":"builtin"},"table":{"summary":"\nTable library.","classForced":true,"class":"table","tname":"table","description":"\nTable library. http://wiki.garrysmod.com/page/Category:table","param":[],"name":"SF.DefaultEnvironment.table","library":"builtin"},"math":{"summary":"\nThe math library.","classForced":true,"class":"table","tname":"math","description":"\nThe math library. http://wiki.garrysmod.com/page/Category:math","param":[],"name":"SF.DefaultEnvironment.math","library":"builtin"},"string":{"summary":"\nString library http://wiki.garrysmod.com/page/Category:string ","classForced":true,"class":"table","tname":"string","description":"\nString library http://wiki.garrysmod.com/page/Category:string","param":[],"name":"SF.DefaultEnvironment.string","library":"builtin"}},"functions":{"1":"assert","2":"chip","3":"class","4":"concmd","5":"crc","6":"debugGetInfo","7":"dodir","8":"dofile","9":"entity","10":"error","11":"eyeAngles","12":"eyePos","13":"eyeVector","14":"getLibraries","15":"getScripts","16":"getUserdata","17":"getfenv","18":"getmetatable","19":"hasPermission","20":"ipairs","21":"isFirstTimePredicted","22":"isValid","23":"loadstring","24":"localToWorld","25":"next","26":"owner","27":"pairs","28":"pcall","29":"permissionRequestSatisfied","30":"player","31":"printMessage","32":"printTable","33":"quotaAverage","34":"quotaMax","35":"quotaTotalAverage","36":"quotaTotalUsed","37":"quotaUsed","38":"ramAverage","39":"ramUsed","40":"rawget","41":"rawset","42":"require","43":"requiredir","44":"select","45":"setClipboardText","46":"setName","47":"setSoftQuota","48":"setTypeMethod","49":"setUserdata","50":"setfenv","51":"setmetatable","52":"setupPermissionRequest","53":"throw","54":"tonumber","55":"tostring","56":"try","57":"type","58":"unpack","59":"version","60":"worldToLocal","61":"xpcall","localToWorld":{"summary":"\nTranslates the specified position and angle from the specified local coordinate system ","ret":["worldPos","worldAngles"],"class":"function","private":false,"library":"builtin","fname":"localToWorld","realm":"sh","param":{"1":"localPos","2":"localAng","3":"originPos","4":"originAngle","localPos":"The position vector that should be translated to world coordinates","localAng":"The angle that should be converted to a world angle","originPos":"The origin point of the source coordinate system, in world coordinates","originAngle":"The angles of the source coordinate system, as a world angle"},"name":"SF.DefaultEnvironment.localToWorld","description":"\nTranslates the specified position and angle from the specified local coordinate system"},"version":{"summary":"\nGets the starfall version ","ret":"Starfall version","class":"function","private":false,"library":"builtin","fname":"version","realm":"sh","param":[],"name":"SF.DefaultEnvironment.version","description":"\nGets the starfall version"},"assert":{"summary":"\nIf the result of the first argument is false or nil, an error is thrown with the second argument as the message.","classForced":true,"class":"function","param":{"1":"condition","2":"msg","msg":"","condition":""},"private":false,"fname":"assert","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.assert","description":"\nIf the result of the first argument is false or nil, an error is thrown with the second argument as the message."},"tostring":{"summary":"\nAttempts to convert the value to a string.","classForced":true,"ret":"obj as string","class":"function","description":"\nAttempts to convert the value to a string.","fname":"tostring","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.tostring","param":{"1":"obj","obj":""}},"crc":{"summary":"\nGenerates the CRC checksum of the specified string.","classForced":true,"ret":"The unsigned 32 bit checksum as a string","class":"function","description":"\nGenerates the CRC checksum of the specified string. (https://en.wikipedia.org/wiki/Cyclic_redundancy_check)","fname":"crc","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.crc","param":{"1":"stringToHash","stringToHash":"The string to calculate the checksum of"}},"tonumber":{"summary":"\nAttempts to convert the value to a number.","classForced":true,"ret":"obj as number","class":"function","description":"\nAttempts to convert the value to a number.","fname":"tonumber","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.tonumber","param":{"1":"obj","obj":""}},"throw":{"summary":"\nThrows an exception ","class":"function","private":false,"param":{"1":"msg","2":"level","3":"uncatchable","level":"Which level in the stacktrace to blame. Defaults to 1","msg":"Message string","uncatchable":"Makes this exception uncatchable"},"fname":"throw","realm":"sh","description":"\nThrows an exception","name":"SF.DefaultEnvironment.throw","library":"builtin"},"rawget":{"summary":"\nGets the value of a table index without invoking a metamethod ","ret":"The value of the index","class":"function","private":false,"library":"builtin","fname":"rawget","realm":"sh","param":{"1":"table","2":"key","3":"value","key":"The index of the table","table":"The table to get the value from"},"name":"SF.DefaultEnvironment.rawget","description":"\nGets the value of a table index without invoking a metamethod"},"ramUsed":{"summary":"\nGets the current ram usage of the lua environment ","ret":"The ram used in bytes","class":"function","private":false,"library":"builtin","fname":"ramUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.ramUsed","description":"\nGets the current ram usage of the lua environment"},"class":{"summary":"\nCreates a 'middleclass' class object that can be used similarly to Java/C++ classes.","class":"function","private":false,"param":{"1":"name","2":"super","name":"The string name of the class","super":"The (optional) parent class to inherit from"},"fname":"class","realm":"sh","description":"\nCreates a 'middleclass' class object that can be used similarly to Java/C++ classes. See https://github.com/kikito/middleclass for examples.","name":"SF.DefaultEnvironment.class","library":"builtin"},"ramAverage":{"summary":"\nGets the moving average of ram usage of the lua environment ","ret":"The ram used in bytes","class":"function","private":false,"library":"builtin","fname":"ramAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.ramAverage","description":"\nGets the moving average of ram usage of the lua environment"},"isFirstTimePredicted":{"summary":"\nReturns if this is the first time this hook was predicted.","classForced":true,"ret":"Boolean","class":"function","description":"\nReturns if this is the first time this hook was predicted.","fname":"isFirstTimePredicted","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.isFirstTimePredicted","param":[]},"worldToLocal":{"summary":"\nTranslates the specified position and angle into the specified coordinate system ","ret":["localPos","localAngles"],"class":"function","private":false,"library":"builtin","fname":"worldToLocal","realm":"sh","param":{"1":"pos","2":"ang","3":"newSystemOrigin","4":"newSystemAngles","ang":"The angles that should be translated from the current to the new system","pos":"The position that should be translated from the current to the new system","newSystemAngles":"The angles of the system to translate to","newSystemOrigin":"The origin of the system to translate to"},"name":"SF.DefaultEnvironment.worldToLocal","description":"\nTranslates the specified position and angle into the specified coordinate system"},"dodir":{"summary":"\nRuns an included directory, but does not cache the result.","ret":"Table of return values of the scripts","class":"function","private":false,"library":"builtin","fname":"dodir","realm":"sh","param":{"1":"dir","2":"loadpriority","loadpriority":"Table of files that should be loaded before any others in the directory","dir":"The directory to include. Make sure to --@includedir it"},"name":"SF.DefaultEnvironment.dodir","description":"\nRuns an included directory, but does not cache the result."},"error":{"summary":"\nThrows a raw exception.","class":"function","private":false,"param":{"1":"msg","2":"level","level":"Which level in the stacktrace to blame. Defaults to 1","msg":"Exception message"},"fname":"error","realm":"sh","description":"\nThrows a raw exception.","name":"SF.DefaultEnvironment.error","library":"builtin"},"ipairs":{"summary":"\nReturns an iterator function for a for loop, to return ordered key-value pairs from a table.","classForced":true,"ret":["Iterator function","Table tbl","0 as current index"],"class":"function","description":"\nReturns an iterator function for a for loop, to return ordered key-value pairs from a table.","fname":"ipairs","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.ipairs","param":{"1":"tbl","tbl":"Table to iterate over"}},"try":{"summary":"\nTry to execute a function and catch possible exceptions \nSimilar to xpcall, but a bit more in-depth ","class":"function","private":false,"param":{"1":"func","2":"catch","func":"Function to execute","catch":"Optional function to execute in case func fails"},"fname":"try","realm":"sh","description":"\nTry to execute a function and catch possible exceptions \nSimilar to xpcall, but a bit more in-depth","name":"SF.DefaultEnvironment.try","library":"builtin"},"xpcall":{"summary":"\nLua's xpcall with SF throw implementation, and a traceback for debugging.","ret":["Status of the execution; true for success, false for failure.","The returns of the first function if execution succeeded, otherwise the return values of the error callback."],"class":"function","private":false,"library":"builtin","fname":"xpcall","realm":"sh","param":{"1":"func","2":"callback","3":"...","func":"The function to call initially.","callback":"The function to be called if execution of the first fails; the error message and stack trace are passed.","...":"Varargs to pass to the initial function."},"name":"SF.DefaultEnvironment.xpcall","description":"\nLua's xpcall with SF throw implementation, and a traceback for debugging. \nAttempts to call the first function. If the execution succeeds, this returns true followed by the returns of the function. \nIf execution fails, this returns false and the second function is called with the error message, and the stack trace."},"getfenv":{"summary":"\nSimple version of Lua's getfenv \nReturns the current environment ","ret":"Current environment","class":"function","private":false,"library":"builtin","fname":"getfenv","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getfenv","description":"\nSimple version of Lua's getfenv \nReturns the current environment"},"debugGetInfo":{"summary":"\nGLua's getinfo() \nReturns a DebugInfo structure containing the passed function's info (https://wiki.garrysmod.com/page/Structures/DebugInfo) ","ret":"DebugInfo table","class":"function","private":false,"library":"builtin","fname":"debugGetInfo","realm":"sh","param":{"1":"funcOrStackLevel","2":"fields","funcOrStackLevel":"Function or stack level to get info about. Defaults to stack level 0.","fields":"A string that specifies the information to be retrieved. Defaults to all (flnSu)."},"name":"SF.DefaultEnvironment.debugGetInfo","description":"\nGLua's getinfo() \nReturns a DebugInfo structure containing the passed function's info (https://wiki.garrysmod.com/page/Structures/DebugInfo)"},"quotaUsed":{"summary":"\nReturns the current count for this Think's CPU Time.","ret":"Current quota used this Think","class":"function","private":false,"library":"builtin","fname":"quotaUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaUsed","description":"\nReturns the current count for this Think's CPU Time. \nThis value increases as more executions are done, may not be exactly as you want. \nIf used on screens, will show 0 if only rendering is done. Operations must be done in the Think loop for them to be counted."},"pcall":{"summary":"\nLua's pcall with SF throw implementation \nCalls a function and catches an error that can be thrown while the execution of the call.","ret":["If the function had no errors occur within it.","If an error occurred, this will be a string containing the error message. Otherwise, this will be the return values of the function passed in."],"class":"function","private":false,"library":"builtin","fname":"pcall","realm":"sh","param":{"1":"func","2":"...","3":"arguments","func":"Function to be executed and of which the errors should be caught of","arguments":"Arguments to call the function with."},"name":"SF.DefaultEnvironment.pcall","description":"\nLua's pcall with SF throw implementation \nCalls a function and catches an error that can be thrown while the execution of the call."},"setSoftQuota":{"summary":"\nSets a CPU soft quota which will trigger a catchable error if the cpu goes over a certain amount.","class":"function","private":false,"param":{"1":"quota","quota":"The threshold where the soft error will be thrown. Ratio of current cpu to the max cpu usage. 0.5 is 50%"},"fname":"setSoftQuota","realm":"sh","description":"\nSets a CPU soft quota which will trigger a catchable error if the cpu goes over a certain amount.","name":"SF.DefaultEnvironment.setSoftQuota","library":"builtin"},"quotaAverage":{"summary":"\nGets the Average CPU Time in the buffer ","ret":"Average CPU Time of the buffer.","class":"function","private":false,"library":"builtin","fname":"quotaAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaAverage","description":"\nGets the Average CPU Time in the buffer"},"setName":{"summary":"\nSets the chip's display name ","class":"function","client":true,"private":false,"library":"builtin","fname":"setName","realm":"cl","param":{"1":"name","name":"Name"},"name":"SF.DefaultEnvironment.setName","description":"\nSets the chip's display name"},"setfenv":{"summary":"\nLua's setfenv \nWorks like setfenv, but is restricted on functions ","ret":"func with environment set to tbl","class":"function","private":false,"library":"builtin","fname":"setfenv","realm":"sh","param":{"1":"func","2":"tbl","func":"Function to change environment of","tbl":"New environment"},"name":"SF.DefaultEnvironment.setfenv","description":"\nLua's setfenv \nWorks like setfenv, but is restricted on functions"},"loadstring":{"summary":"\nGLua's loadstring \nWorks like loadstring, except that it executes by default in the main environment ","ret":"Function of str","class":"function","private":false,"library":"builtin","fname":"loadstring","realm":"sh","param":{"1":"str","2":"name","str":"String to execute"},"name":"SF.DefaultEnvironment.loadstring","description":"\nGLua's loadstring \nWorks like loadstring, except that it executes by default in the main environment"},"quotaTotalAverage":{"summary":"\nReturns the total average time for all chips by the player.","ret":"Total average CPU Time of all your chips.","class":"function","private":false,"library":"builtin","fname":"quotaTotalAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaTotalAverage","description":"\nReturns the total average time for all chips by the player."},"isValid":{"summary":"\nReturns if the table has an isValid function and isValid returns true.","ret":"If it is valid","class":"function","private":false,"library":"builtin","fname":"isValid","realm":"sh","param":{"1":"object","object":"Table to check"},"name":"SF.DefaultEnvironment.isValid","description":"\nReturns if the table has an isValid function and isValid returns true."},"concmd":{"server":true,"class":"function","client":true,"library":"builtin","private":false,"summary":"\nExecute a console command ","fname":"concmd","realm":"sh","param":{"1":"cmd","cmd":"Command to execute"},"name":"SF.DefaultEnvironment.concmd","description":"\nExecute a console command"},"getScripts":{"summary":"\nReturns the table of scripts used by the chip ","ret":"Table of scripts used by the chip","class":"function","private":false,"library":"builtin","fname":"getScripts","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getScripts","description":"\nReturns the table of scripts used by the chip"},"eyeVector":{"summary":"\nReturns the local player's camera forward vector ","ret":"The local player's camera forward vector","class":"function","client":true,"private":false,"library":"builtin","fname":"eyeVector","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyeVector","description":"\nReturns the local player's camera forward vector"},"getLibraries":{"summary":"\nGets a list of all libraries ","ret":"Table containing the names of each available library","class":"function","private":false,"library":"builtin","fname":"getLibraries","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getLibraries","description":"\nGets a list of all libraries"},"rawset":{"summary":"\nSet the value of a table index without invoking a metamethod ","class":"function","private":false,"param":{"1":"table","2":"key","3":"value","value":"The value to set the index equal to","key":"The index of the table","table":"The table to modify"},"fname":"rawset","realm":"sh","description":"\nSet the value of a table index without invoking a metamethod","name":"SF.DefaultEnvironment.rawset","library":"builtin"},"setupPermissionRequest":{"summary":"\nSetups request for overriding permissions.","class":"function","client":true,"private":false,"library":"builtin","fname":"setupPermissionRequest","realm":"cl","param":{"1":"perms","2":"desc","3":"showOnUse","desc":"Description attached to request.","showOnUse":"Whether request will popup when player uses chip or linked screen.","perms":"Table of overridable permissions' names."},"name":"SF.DefaultEnvironment.setupPermissionRequest","description":"\nSetups request for overriding permissions."},"requiredir":{"summary":"\nRuns an included script and caches the result.","ret":"Table of return values of the scripts","class":"function","private":false,"library":"builtin","fname":"requiredir","realm":"sh","param":{"1":"dir","2":"loadpriority","loadpriority":"Table of files that should be loaded before any others in the directory","dir":"The directory to include. Make sure to --@includedir it"},"name":"SF.DefaultEnvironment.requiredir","description":"\nRuns an included script and caches the result. \nWorks pretty much like standard Lua require()"},"require":{"summary":"\nRuns an included script and caches the result.","ret":"Return value of the script","class":"function","private":false,"library":"builtin","fname":"require","realm":"sh","param":{"1":"file","file":"The file to include. Make sure to --@include it"},"name":"SF.DefaultEnvironment.require","description":"\nRuns an included script and caches the result. \nWorks pretty much like standard Lua require()"},"player":{"summary":"\nSame as owner() on the server.","classForced":true,"ret":"Returns player with given UserID or if none specified then returns either the owner (server) or the local player (client)","class":"function","description":"\nSame as owner() on the server. On the client, returns the local player","fname":"player","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.player","param":[]},"setClipboardText":{"summary":"\nSets clipboard text.","class":"function","private":false,"param":{"1":"txt","txt":"Text to set to the clipboard"},"fname":"setClipboardText","realm":"sh","description":"\nSets clipboard text. Only works on the owner of the chip.","name":"SF.DefaultEnvironment.setClipboardText","library":"builtin"},"eyePos":{"summary":"\nReturns the local player's camera position ","ret":"The local player's camera position","class":"function","client":true,"private":false,"library":"builtin","fname":"eyePos","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyePos","description":"\nReturns the local player's camera position"},"dofile":{"summary":"\nRuns an included script, but does not cache the result.","ret":"Return value of the script","class":"function","private":false,"library":"builtin","fname":"dofile","realm":"sh","param":{"1":"file","file":"The file to include. Make sure to --@include it"},"name":"SF.DefaultEnvironment.dofile","description":"\nRuns an included script, but does not cache the result. \nPretty much like standard Lua dofile()"},"printMessage":{"summary":"\nPrints a message to your chat, console, or the center of your screen.","class":"function","private":false,"param":{"1":"mtype","2":"text","text":"The message text.","mtype":"How the message should be displayed. See http://wiki.garrysmod.com/page/Enums/HUD"},"fname":"printMessage","realm":"sh","description":"\nPrints a message to your chat, console, or the center of your screen.","name":"SF.DefaultEnvironment.printMessage","library":"builtin"},"printTable":{"summary":"\nPrints a table to player's chat ","class":"function","private":false,"param":{"1":"tbl","tbl":"Table to print"},"fname":"printTable","realm":"sh","description":"\nPrints a table to player's chat","name":"SF.DefaultEnvironment.printTable","library":"builtin"},"setTypeMethod":{"summary":"\nSet's metamethod on SF type ","class":"function","private":false,"param":{"1":"sfType","2":"methodName","3":"method","sfType":"Name of SF type","method":"Method to set","methodName":"Name of method"},"fname":"setTypeMethod","realm":"sh","description":"\nSet's metamethod on SF type","name":"SF.DefaultEnvironment.setTypeMethod","library":"builtin"},"getUserdata":{"server":true,"ret":"String data","class":"function","library":"builtin","private":false,"summary":"\nGets the chip's userdata that the duplicator tool loads ","fname":"getUserdata","realm":"sv","param":[],"name":"SF.DefaultEnvironment.getUserdata","description":"\nGets the chip's userdata that the duplicator tool loads"},"setUserdata":{"server":true,"class":"function","library":"builtin","private":false,"summary":"\nSets the chip's userdata that the duplicator tool saves.","fname":"setUserdata","realm":"sv","param":{"1":"str","str":"String data"},"name":"SF.DefaultEnvironment.setUserdata","description":"\nSets the chip's userdata that the duplicator tool saves. max 1MiB; can be changed with convar sf_userdata_max"},"pairs":{"summary":"\nReturns an iterator function for a for loop that will return the values of the specified table in an arbitrary order.","classForced":true,"ret":["Iterator function","Table tbl","nil as current index"],"class":"function","description":"\nReturns an iterator function for a for loop that will return the values of the specified table in an arbitrary order.","fname":"pairs","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.pairs","param":{"1":"tbl","tbl":"Table to iterate over"}},"chip":{"summary":"\nReturns the entity representing a processor that this script is running on.","classForced":true,"ret":"Starfall entity","class":"function","description":"\nReturns the entity representing a processor that this script is running on.","fname":"chip","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.chip","param":[]},"unpack":{"summary":"\nThis function takes a numeric indexed table and return all the members as a vararg.","classForced":true,"ret":"Elements of tbl","class":"function","description":"\nThis function takes a numeric indexed table and return all the members as a vararg.","fname":"unpack","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.unpack","param":{"1":"tbl","tbl":""}},"entity":{"summary":"\nReturns the entity with index 'num' ","classForced":true,"ret":"entity","class":"function","description":"\nReturns the entity with index 'num'","fname":"entity","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.entity","param":{"1":"num","num":"Entity index"}},"next":{"summary":"\nReturns the next key and value pair in a table.","classForced":true,"ret":["Key or nil","Value or nil"],"class":"function","description":"\nReturns the next key and value pair in a table.","fname":"next","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.next","param":{"1":"tbl","2":"k","tbl":"Table to get the next key-value pair of","k":"Previous key (can be nil)"}},"hasPermission":{"summary":"\nChecks if the chip is capable of performing an action.","class":"function","private":false,"param":{"1":"perm","2":"obj","obj":"Optional object to pass to the permission system.","perm":"The permission id to check"},"fname":"hasPermission","realm":"sh","description":"\nChecks if the chip is capable of performing an action.","name":"SF.DefaultEnvironment.hasPermission","library":"builtin"},"quotaMax":{"summary":"\nGets the CPU Time max.","ret":"Max SysTime allowed to take for execution of the chip in a Think.","class":"function","private":false,"library":"builtin","fname":"quotaMax","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaMax","description":"\nGets the CPU Time max. \nCPU Time is stored in a buffer of N elements, if the average of this exceeds quotaMax, the chip will error."},"owner":{"summary":"\nReturns whoever created the chip ","classForced":true,"ret":"Owner entity","class":"function","description":"\nReturns whoever created the chip","fname":"owner","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.owner","param":[]},"setmetatable":{"summary":"\nSets, changes or removes a table's metatable.","classForced":true,"ret":"tbl with metatable set to meta","class":"function","description":"\nSets, changes or removes a table's metatable. Doesn't work on most internal metatables","fname":"setmetatable","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.setmetatable","param":{"1":"tbl","2":"meta","tbl":"The table to set the metatable of","meta":"The metatable to use"}},"select":{"summary":"\nUsed to select single values from a vararg or get the count of values in it.","classForced":true,"ret":"Returns a number or vararg, depending on the select method.","class":"function","description":"\nUsed to select single values from a vararg or get the count of values in it.","fname":"select","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.select","param":{"1":"parameter","2":"vararg","vararg":"","parameter":""}},"quotaTotalUsed":{"summary":"\nReturns the total used time for all chips by the player.","ret":"Total used CPU time of all your chips.","class":"function","private":false,"library":"builtin","fname":"quotaTotalUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaTotalUsed","description":"\nReturns the total used time for all chips by the player."},"type":{"summary":"\nReturns a string representing the name of the type of the passed object.","classForced":true,"ret":"The name of the object's type.","class":"function","param":{"1":"obj","obj":"Object to get type of"},"private":false,"fname":"type","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.type","description":"\nReturns a string representing the name of the type of the passed object."},"getmetatable":{"summary":"\nReturns the metatable of an object.","ret":"The metatable of tbl","class":"function","private":false,"library":"builtin","fname":"getmetatable","realm":"sh","param":{"1":"tbl","tbl":"Table to get metatable of"},"name":"SF.DefaultEnvironment.getmetatable","description":"\nReturns the metatable of an object. Doesn't work on most internal metatables"},"eyeAngles":{"summary":"\nReturns the local player's camera angles ","ret":"The local player's camera angles","class":"function","client":true,"private":false,"library":"builtin","fname":"eyeAngles","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyeAngles","description":"\nReturns the local player's camera angles"},"permissionRequestSatisfied":{"summary":"\nIs permission request fully satisfied.","ret":"Boolean of whether the client gave all permissions specified in last request or not.","class":"function","client":true,"private":false,"library":"builtin","fname":"permissionRequestSatisfied","realm":"cl","param":[],"name":"SF.DefaultEnvironment.permissionRequestSatisfied","description":"\nIs permission request fully satisfied."}},"libtbl":"SF.DefaultEnvironment","fields":{"1":"CLIENT","2":"SERVER","SERVER":{"summary":"\nConstant that denotes whether the code is executed on the server ","classForced":true,"class":"field","description":"\nConstant that denotes whether the code is executed on the server","param":[],"name":"SF.DefaultEnvironment.SERVER","library":"builtin"},"CLIENT":{"summary":"\nConstant that denotes whether the code is executed on the client ","classForced":true,"class":"field","description":"\nConstant that denotes whether the code is executed on the client","param":[],"name":"SF.DefaultEnvironment.CLIENT","library":"builtin"}},"name":"builtin","description":"\nBuilt in values. These don't need to be loaded; they are in the default environment."},{"summary":"\nReturns the entity representing a processor that this script is running on.","classForced":true,"ret":"Starfall entity","class":"function","description":"\nReturns the entity representing a processor that this script is running on.","fname":"chip","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.chip","param":[]},{"summary":"\nReturns whoever created the chip ","classForced":true,"ret":"Owner entity","class":"function","description":"\nReturns whoever created the chip","fname":"owner","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.owner","param":[]},{"summary":"\nSame as owner() on the server.","classForced":true,"ret":"Returns player with given UserID or if none specified then returns either the owner (server) or the local player (client)","class":"function","description":"\nSame as owner() on the server. On the client, returns the local player","fname":"player","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.player","param":[]},{"summary":"\nReturns the entity with index 'num' ","classForced":true,"ret":"entity","class":"function","description":"\nReturns the entity with index 'num'","fname":"entity","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.entity","param":{"1":"num","num":"Entity index"}},{"summary":"\nUsed to select single values from a vararg or get the count of values in it.","classForced":true,"ret":"Returns a number or vararg, depending on the select method.","class":"function","description":"\nUsed to select single values from a vararg or get the count of values in it.","fname":"select","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.select","param":{"1":"parameter","2":"vararg","vararg":"","parameter":""}},{"summary":"\nAttempts to convert the value to a string.","classForced":true,"ret":"obj as string","class":"function","description":"\nAttempts to convert the value to a string.","fname":"tostring","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.tostring","param":{"1":"obj","obj":""}},{"summary":"\nAttempts to convert the value to a number.","classForced":true,"ret":"obj as number","class":"function","description":"\nAttempts to convert the value to a number.","fname":"tonumber","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.tonumber","param":{"1":"obj","obj":""}},{"summary":"\nReturns an iterator function for a for loop, to return ordered key-value pairs from a table.","classForced":true,"ret":["Iterator function","Table tbl","0 as current index"],"class":"function","description":"\nReturns an iterator function for a for loop, to return ordered key-value pairs from a table.","fname":"ipairs","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.ipairs","param":{"1":"tbl","tbl":"Table to iterate over"}},{"summary":"\nReturns an iterator function for a for loop that will return the values of the specified table in an arbitrary order.","classForced":true,"ret":["Iterator function","Table tbl","nil as current index"],"class":"function","description":"\nReturns an iterator function for a for loop that will return the values of the specified table in an arbitrary order.","fname":"pairs","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.pairs","param":{"1":"tbl","tbl":"Table to iterate over"}},{"summary":"\nReturns a string representing the name of the type of the passed object.","classForced":true,"ret":"The name of the object's type.","class":"function","param":{"1":"obj","obj":"Object to get type of"},"private":false,"fname":"type","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.type","description":"\nReturns a string representing the name of the type of the passed object."},{"summary":"\nReturns the next key and value pair in a table.","classForced":true,"ret":["Key or nil","Value or nil"],"class":"function","description":"\nReturns the next key and value pair in a table.","fname":"next","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.next","param":{"1":"tbl","2":"k","tbl":"Table to get the next key-value pair of","k":"Previous key (can be nil)"}},{"summary":"\nIf the result of the first argument is false or nil, an error is thrown with the second argument as the message.","classForced":true,"class":"function","param":{"1":"condition","2":"msg","msg":"","condition":""},"private":false,"fname":"assert","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.assert","description":"\nIf the result of the first argument is false or nil, an error is thrown with the second argument as the message."},{"summary":"\nThis function takes a numeric indexed table and return all the members as a vararg.","classForced":true,"ret":"Elements of tbl","class":"function","description":"\nThis function takes a numeric indexed table and return all the members as a vararg.","fname":"unpack","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.unpack","param":{"1":"tbl","tbl":""}},{"summary":"\nSets, changes or removes a table's metatable.","classForced":true,"ret":"tbl with metatable set to meta","class":"function","description":"\nSets, changes or removes a table's metatable. Doesn't work on most internal metatables","fname":"setmetatable","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.setmetatable","param":{"1":"tbl","2":"meta","tbl":"The table to set the metatable of","meta":"The metatable to use"}},{"summary":"\nReturns the metatable of an object.","ret":"The metatable of tbl","class":"function","private":false,"library":"builtin","fname":"getmetatable","realm":"sh","param":{"1":"tbl","tbl":"Table to get metatable of"},"name":"SF.DefaultEnvironment.getmetatable","description":"\nReturns the metatable of an object. Doesn't work on most internal metatables"},{"summary":"\nGenerates the CRC checksum of the specified string.","classForced":true,"ret":"The unsigned 32 bit checksum as a string","class":"function","description":"\nGenerates the CRC checksum of the specified string. (https://en.wikipedia.org/wiki/Cyclic_redundancy_check)","fname":"crc","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.crc","param":{"1":"stringToHash","stringToHash":"The string to calculate the checksum of"}},{"summary":"\nConstant that denotes whether the code is executed on the client ","classForced":true,"class":"field","description":"\nConstant that denotes whether the code is executed on the client","param":[],"name":"SF.DefaultEnvironment.CLIENT","library":"builtin"},{"summary":"\nConstant that denotes whether the code is executed on the server ","classForced":true,"class":"field","description":"\nConstant that denotes whether the code is executed on the server","param":[],"name":"SF.DefaultEnvironment.SERVER","library":"builtin"},{"summary":"\nReturns if this is the first time this hook was predicted.","classForced":true,"ret":"Boolean","class":"function","description":"\nReturns if this is the first time this hook was predicted.","fname":"isFirstTimePredicted","library":"builtin","realm":"sh","name":"SF.DefaultEnvironment.isFirstTimePredicted","param":[]},{"summary":"\nReturns the current count for this Think's CPU Time.","ret":"Current quota used this Think","class":"function","private":false,"library":"builtin","fname":"quotaUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaUsed","description":"\nReturns the current count for this Think's CPU Time. \nThis value increases as more executions are done, may not be exactly as you want. \nIf used on screens, will show 0 if only rendering is done. Operations must be done in the Think loop for them to be counted."},{"summary":"\nGets the Average CPU Time in the buffer ","ret":"Average CPU Time of the buffer.","class":"function","private":false,"library":"builtin","fname":"quotaAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaAverage","description":"\nGets the Average CPU Time in the buffer"},{"summary":"\nGets the current ram usage of the lua environment ","ret":"The ram used in bytes","class":"function","private":false,"library":"builtin","fname":"ramUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.ramUsed","description":"\nGets the current ram usage of the lua environment"},{"summary":"\nGets the moving average of ram usage of the lua environment ","ret":"The ram used in bytes","class":"function","private":false,"library":"builtin","fname":"ramAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.ramAverage","description":"\nGets the moving average of ram usage of the lua environment"},{"summary":"\nGets the starfall version ","ret":"Starfall version","class":"function","private":false,"library":"builtin","fname":"version","realm":"sh","param":[],"name":"SF.DefaultEnvironment.version","description":"\nGets the starfall version"},{"summary":"\nReturns the total used time for all chips by the player.","ret":"Total used CPU time of all your chips.","class":"function","private":false,"library":"builtin","fname":"quotaTotalUsed","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaTotalUsed","description":"\nReturns the total used time for all chips by the player."},{"summary":"\nReturns the total average time for all chips by the player.","ret":"Total average CPU Time of all your chips.","class":"function","private":false,"library":"builtin","fname":"quotaTotalAverage","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaTotalAverage","description":"\nReturns the total average time for all chips by the player."},{"summary":"\nGets the CPU Time max.","ret":"Max SysTime allowed to take for execution of the chip in a Think.","class":"function","private":false,"library":"builtin","fname":"quotaMax","realm":"sh","param":[],"name":"SF.DefaultEnvironment.quotaMax","description":"\nGets the CPU Time max. \nCPU Time is stored in a buffer of N elements, if the average of this exceeds quotaMax, the chip will error."},{"summary":"\nSets a CPU soft quota which will trigger a catchable error if the cpu goes over a certain amount.","class":"function","private":false,"param":{"1":"quota","quota":"The threshold where the soft error will be thrown. Ratio of current cpu to the max cpu usage. 0.5 is 50%"},"fname":"setSoftQuota","realm":"sh","description":"\nSets a CPU soft quota which will trigger a catchable error if the cpu goes over a certain amount.","name":"SF.DefaultEnvironment.setSoftQuota","library":"builtin"},{"summary":"\nChecks if the chip is capable of performing an action.","class":"function","private":false,"param":{"1":"perm","2":"obj","obj":"Optional object to pass to the permission system.","perm":"The permission id to check"},"fname":"hasPermission","realm":"sh","description":"\nChecks if the chip is capable of performing an action.","name":"SF.DefaultEnvironment.hasPermission","library":"builtin"},{"summary":"\nCalled when local client changed instance permissions ","classForced":true,"class":"hook","client":true,"description":"\nCalled when local client changed instance permissions","realm":"cl","name":"permissionrequest","param":[]},{"summary":"\nSetups request for overriding permissions.","class":"function","client":true,"private":false,"library":"builtin","fname":"setupPermissionRequest","realm":"cl","param":{"1":"perms","2":"desc","3":"showOnUse","desc":"Description attached to request.","showOnUse":"Whether request will popup when player uses chip or linked screen.","perms":"Table of overridable permissions' names."},"name":"SF.DefaultEnvironment.setupPermissionRequest","description":"\nSetups request for overriding permissions."},{"summary":"\nIs permission request fully satisfied.","ret":"Boolean of whether the client gave all permissions specified in last request or not.","class":"function","client":true,"private":false,"library":"builtin","fname":"permissionRequestSatisfied","realm":"cl","param":[],"name":"SF.DefaultEnvironment.permissionRequestSatisfied","description":"\nIs permission request fully satisfied."},{"summary":"\nString library http://wiki.garrysmod.com/page/Category:string ","classForced":true,"class":"table","tname":"string","description":"\nString library http://wiki.garrysmod.com/page/Category:string","param":[],"name":"SF.DefaultEnvironment.string","library":"builtin"},{"summary":"\nThe math library.","classForced":true,"class":"table","tname":"math","description":"\nThe math library. http://wiki.garrysmod.com/page/Category:math","param":[],"name":"SF.DefaultEnvironment.math","library":"builtin"},{"summary":"\nThe os library.","classForced":true,"class":"table","tname":"os","description":"\nThe os library. http://wiki.garrysmod.com/page/Category:os","param":[],"name":"SF.DefaultEnvironment.os","library":"builtin"},{"summary":"\nTable library.","classForced":true,"class":"table","tname":"table","description":"\nTable library. http://wiki.garrysmod.com/page/Category:table","param":[],"name":"SF.DefaultEnvironment.table","library":"builtin"},{"summary":"\nGets a list of all libraries ","ret":"Table containing the names of each available library","class":"function","private":false,"library":"builtin","fname":"getLibraries","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getLibraries","description":"\nGets a list of all libraries"},{"summary":"\nSet the value of a table index without invoking a metamethod ","class":"function","private":false,"param":{"1":"table","2":"key","3":"value","value":"The value to set the index equal to","key":"The index of the table","table":"The table to modify"},"fname":"rawset","realm":"sh","description":"\nSet the value of a table index without invoking a metamethod","name":"SF.DefaultEnvironment.rawset","library":"builtin"},{"summary":"\nGets the value of a table index without invoking a metamethod ","ret":"The value of the index","class":"function","private":false,"library":"builtin","fname":"rawget","realm":"sh","param":{"1":"table","2":"key","3":"value","key":"The index of the table","table":"The table to get the value from"},"name":"SF.DefaultEnvironment.rawget","description":"\nGets the value of a table index without invoking a metamethod"},{"summary":"\nPrints a table to player's chat ","class":"function","private":false,"param":{"1":"tbl","tbl":"Table to print"},"fname":"printTable","realm":"sh","description":"\nPrints a table to player's chat","name":"SF.DefaultEnvironment.printTable","library":"builtin"},{"server":true,"class":"function","client":true,"library":"builtin","private":false,"summary":"\nExecute a console command ","fname":"concmd","realm":"sh","param":{"1":"cmd","cmd":"Command to execute"},"name":"SF.DefaultEnvironment.concmd","description":"\nExecute a console command"},{"server":true,"class":"function","library":"builtin","private":false,"summary":"\nSets the chip's userdata that the duplicator tool saves.","fname":"setUserdata","realm":"sv","param":{"1":"str","str":"String data"},"name":"SF.DefaultEnvironment.setUserdata","description":"\nSets the chip's userdata that the duplicator tool saves. max 1MiB; can be changed with convar sf_userdata_max"},{"server":true,"ret":"String data","class":"function","library":"builtin","private":false,"summary":"\nGets the chip's userdata that the duplicator tool loads ","fname":"getUserdata","realm":"sv","param":[],"name":"SF.DefaultEnvironment.getUserdata","description":"\nGets the chip's userdata that the duplicator tool loads"},{"summary":"\nSets the chip's display name ","class":"function","client":true,"private":false,"library":"builtin","fname":"setName","realm":"cl","param":{"1":"name","name":"Name"},"name":"SF.DefaultEnvironment.setName","description":"\nSets the chip's display name"},{"summary":"\nSets clipboard text.","class":"function","private":false,"param":{"1":"txt","txt":"Text to set to the clipboard"},"fname":"setClipboardText","realm":"sh","description":"\nSets clipboard text. Only works on the owner of the chip.","name":"SF.DefaultEnvironment.setClipboardText","library":"builtin"},{"summary":"\nPrints a message to your chat, console, or the center of your screen.","class":"function","private":false,"param":{"1":"mtype","2":"text","text":"The message text.","mtype":"How the message should be displayed. See http://wiki.garrysmod.com/page/Enums/HUD"},"fname":"printMessage","realm":"sh","description":"\nPrints a message to your chat, console, or the center of your screen.","name":"SF.DefaultEnvironment.printMessage","library":"builtin"},{"summary":"\nReturns the local player's camera angles ","ret":"The local player's camera angles","class":"function","client":true,"private":false,"library":"builtin","fname":"eyeAngles","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyeAngles","description":"\nReturns the local player's camera angles"},{"summary":"\nReturns the local player's camera position ","ret":"The local player's camera position","class":"function","client":true,"private":false,"library":"builtin","fname":"eyePos","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyePos","description":"\nReturns the local player's camera position"},{"summary":"\nReturns the local player's camera forward vector ","ret":"The local player's camera forward vector","class":"function","client":true,"private":false,"library":"builtin","fname":"eyeVector","realm":"cl","param":[],"name":"SF.DefaultEnvironment.eyeVector","description":"\nReturns the local player's camera forward vector"},{"summary":"\nReturns the table of scripts used by the chip ","ret":"Table of scripts used by the chip","class":"function","private":false,"library":"builtin","fname":"getScripts","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getScripts","description":"\nReturns the table of scripts used by the chip"},{"summary":"\nRuns an included script and caches the result.","ret":"Return value of the script","class":"function","private":false,"library":"builtin","fname":"require","realm":"sh","param":{"1":"file","file":"The file to include. Make sure to --@include it"},"name":"SF.DefaultEnvironment.require","description":"\nRuns an included script and caches the result. \nWorks pretty much like standard Lua require()"},{"summary":"\nRuns an included script and caches the result.","ret":"Table of return values of the scripts","class":"function","private":false,"library":"builtin","fname":"requiredir","realm":"sh","param":{"1":"dir","2":"loadpriority","loadpriority":"Table of files that should be loaded before any others in the directory","dir":"The directory to include. Make sure to --@includedir it"},"name":"SF.DefaultEnvironment.requiredir","description":"\nRuns an included script and caches the result. \nWorks pretty much like standard Lua require()"},{"summary":"\nRuns an included script, but does not cache the result.","ret":"Return value of the script","class":"function","private":false,"library":"builtin","fname":"dofile","realm":"sh","param":{"1":"file","file":"The file to include. Make sure to --@include it"},"name":"SF.DefaultEnvironment.dofile","description":"\nRuns an included script, but does not cache the result. \nPretty much like standard Lua dofile()"},{"summary":"\nRuns an included directory, but does not cache the result.","ret":"Table of return values of the scripts","class":"function","private":false,"library":"builtin","fname":"dodir","realm":"sh","param":{"1":"dir","2":"loadpriority","loadpriority":"Table of files that should be loaded before any others in the directory","dir":"The directory to include. Make sure to --@includedir it"},"name":"SF.DefaultEnvironment.dodir","description":"\nRuns an included directory, but does not cache the result."},{"summary":"\nGLua's loadstring \nWorks like loadstring, except that it executes by default in the main environment ","ret":"Function of str","class":"function","private":false,"library":"builtin","fname":"loadstring","realm":"sh","param":{"1":"str","2":"name","str":"String to execute"},"name":"SF.DefaultEnvironment.loadstring","description":"\nGLua's loadstring \nWorks like loadstring, except that it executes by default in the main environment"},{"summary":"\nLua's setfenv \nWorks like setfenv, but is restricted on functions ","ret":"func with environment set to tbl","class":"function","private":false,"library":"builtin","fname":"setfenv","realm":"sh","param":{"1":"func","2":"tbl","func":"Function to change environment of","tbl":"New environment"},"name":"SF.DefaultEnvironment.setfenv","description":"\nLua's setfenv \nWorks like setfenv, but is restricted on functions"},{"summary":"\nSet's metamethod on SF type ","class":"function","private":false,"param":{"1":"sfType","2":"methodName","3":"method","sfType":"Name of SF type","method":"Method to set","methodName":"Name of method"},"fname":"setTypeMethod","realm":"sh","description":"\nSet's metamethod on SF type","name":"SF.DefaultEnvironment.setTypeMethod","library":"builtin"},{"summary":"\nSimple version of Lua's getfenv \nReturns the current environment ","ret":"Current environment","class":"function","private":false,"library":"builtin","fname":"getfenv","realm":"sh","param":[],"name":"SF.DefaultEnvironment.getfenv","description":"\nSimple version of Lua's getfenv \nReturns the current environment"},{"summary":"\nGLua's getinfo() \nReturns a DebugInfo structure containing the passed function's info (https://wiki.garrysmod.com/page/Structures/DebugInfo) ","ret":"DebugInfo table","class":"function","private":false,"library":"builtin","fname":"debugGetInfo","realm":"sh","param":{"1":"funcOrStackLevel","2":"fields","funcOrStackLevel":"Function or stack level to get info about. Defaults to stack level 0.","fields":"A string that specifies the information to be retrieved. Defaults to all (flnSu)."},"name":"SF.DefaultEnvironment.debugGetInfo","description":"\nGLua's getinfo() \nReturns a DebugInfo structure containing the passed function's info (https://wiki.garrysmod.com/page/Structures/DebugInfo)"},{"summary":"\nLua's pcall with SF throw implementation \nCalls a function and catches an error that can be thrown while the execution of the call.","ret":["If the function had no errors occur within it.","If an error occurred, this will be a string containing the error message. Otherwise, this will be the return values of the function passed in."],"class":"function","private":false,"library":"builtin","fname":"pcall","realm":"sh","param":{"1":"func","2":"...","3":"arguments","func":"Function to be executed and of which the errors should be caught of","arguments":"Arguments to call the function with."},"name":"SF.DefaultEnvironment.pcall","description":"\nLua's pcall with SF throw implementation \nCalls a function and catches an error that can be thrown while the execution of the call."},{"summary":"\nLua's xpcall with SF throw implementation, and a traceback for debugging.","ret":["Status of the execution; true for success, false for failure.","The returns of the first function if execution succeeded, otherwise the return values of the error callback."],"class":"function","private":false,"library":"builtin","fname":"xpcall","realm":"sh","param":{"1":"func","2":"callback","3":"...","func":"The function to call initially.","callback":"The function to be called if execution of the first fails; the error message and stack trace are passed.","...":"Varargs to pass to the initial function."},"name":"SF.DefaultEnvironment.xpcall","description":"\nLua's xpcall with SF throw implementation, and a traceback for debugging. \nAttempts to call the first function. If the execution succeeds, this returns true followed by the returns of the function. \nIf execution fails, this returns false and the second function is called with the error message, and the stack trace."},{"summary":"\nTry to execute a function and catch possible exceptions \nSimilar to xpcall, but a bit more in-depth ","class":"function","private":false,"param":{"1":"func","2":"catch","func":"Function to execute","catch":"Optional function to execute in case func fails"},"fname":"try","realm":"sh","description":"\nTry to execute a function and catch possible exceptions \nSimilar to xpcall, but a bit more in-depth","name":"SF.DefaultEnvironment.try","library":"builtin"},{"summary":"\nThrows an exception ","class":"function","private":false,"param":{"1":"msg","2":"level","3":"uncatchable","level":"Which level in the stacktrace to blame. Defaults to 1","msg":"Message string","uncatchable":"Makes this exception uncatchable"},"fname":"throw","realm":"sh","description":"\nThrows an exception","name":"SF.DefaultEnvironment.throw","library":"builtin"},{"summary":"\nThrows a raw exception.","class":"function","private":false,"param":{"1":"msg","2":"level","level":"Which level in the stacktrace to blame. Defaults to 1","msg":"Exception message"},"fname":"error","realm":"sh","description":"\nThrows a raw exception.","name":"SF.DefaultEnvironment.error","library":"builtin"},{"summary":"\nReturns if the table has an isValid function and isValid returns true.","ret":"If it is valid","class":"function","private":false,"library":"builtin","fname":"isValid","realm":"sh","param":{"1":"object","object":"Table to check"},"name":"SF.DefaultEnvironment.isValid","description":"\nReturns if the table has an isValid function and isValid returns true."},{"summary":"\nTranslates the specified position and angle into the specified coordinate system ","ret":["localPos","localAngles"],"class":"function","private":false,"library":"builtin","fname":"worldToLocal","realm":"sh","param":{"1":"pos","2":"ang","3":"newSystemOrigin","4":"newSystemAngles","ang":"The angles that should be translated from the current to the new system","pos":"The position that should be translated from the current to the new system","newSystemAngles":"The angles of the system to translate to","newSystemOrigin":"The origin of the system to translate to"},"name":"SF.DefaultEnvironment.worldToLocal","description":"\nTranslates the specified position and angle into the specified coordinate system"},{"summary":"\nTranslates the specified position and angle from the specified local coordinate system ","ret":["worldPos","worldAngles"],"class":"function","private":false,"library":"builtin","fname":"localToWorld","realm":"sh","param":{"1":"localPos","2":"localAng","3":"originPos","4":"originAngle","localPos":"The position vector that should be translated to world coordinates","localAng":"The angle that should be converted to a world angle","originPos":"The origin point of the source coordinate system, in world coordinates","originAngle":"The angles of the source coordinate system, as a world angle"},"name":"SF.DefaultEnvironment.localToWorld","description":"\nTranslates the specified position and angle from the specified local coordinate system"},{"summary":"\nCreates a 'middleclass' class object that can be used similarly to Java/C++ classes.","class":"function","private":false,"param":{"1":"name","2":"super","name":"The string name of the class","super":"The (optional) parent class to inherit from"},"fname":"class","realm":"sh","description":"\nCreates a 'middleclass' class object that can be used similarly to Java/C++ classes. See https://github.com/kikito/middleclass for examples.","name":"SF.DefaultEnvironment.class","library":"builtin"}],"name":"libs_sh/builtins.lua","description":"\n \nBuiltins. \nFunctions built-in to the default environment \n"},"permissions/providers_sv/usergroups.lua":{"summary":"\nProvides permissions for usergroups ","tables":[],"functions":[],"libraries":[],"type":"file","doc":[{"summary":"\nProvides permissions for usergroups ","param":[],"description":"\nProvides permissions for usergroups"}],"name":"permissions/providers_sv/usergroups.lua","description":"\nProvides permissions for usergroups"},"libs_cl/xinput.lua":{"summary":"\nA simpler, hook-based, and more-powerful controller input library.","tables":[],"functions":{"1":"xinput_library.getBatteryLevel","2":"xinput_library.getButton","3":"xinput_library.getControllers","4":"xinput_library.getState","5":"xinput_library.getStick","6":"xinput_library.getTrigger","7":"xinput_library.setRumble","xinput_library.getButton":{"summary":"\nGets whether the button on the controller is currently pushed down.","classForced":true,"ret":"bool","class":"function","description":"\nGets whether the button on the controller is currently pushed down.","fname":"getButton","library":"xinput","realm":"cl","name":"xinput_library.getButton","param":{"1":"id","2":"button","button":"The button to check for. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_","id":"Controller number. Starts at 0"}},"xinput_library.setRumble":{"summary":"\nSets the rumble on the controller.","class":"function","private":false,"param":{"1":"id","2":"softPercent","3":"hardPercent","softPercent":"A number between 0.0-1.0 for how much the soft rumble motor should vibrate.","hardPercent":"A number between 0.0-1.0 for how much the hard rumble motor should vibrate.","id":"Controller number. Starts at 0"},"fname":"setRumble","realm":"cl","description":"\nSets the rumble on the controller.","name":"xinput_library.setRumble","library":"xinput"},"xinput_library.getStick":{"summary":"\nGets the current coordinates of the stick on the controller.","classForced":true,"ret":"Two numbers for the X and Y coordinates, respectively, each being between -32768 - 32767 inclusive","class":"function","description":"\nGets the current coordinates of the stick on the controller.","fname":"getStick","library":"xinput","realm":"cl","name":"xinput_library.getStick","param":{"1":"id","2":"stick","stick":"Which stick to use. 0 is left","id":"Controller number. Starts at 0"}},"xinput_library.getBatteryLevel":{"summary":"\nAttempts to check the battery level of the controller.","classForced":true,"ret":"If successful: a number between 0.0-1.0 inclusive. If unsuccessful: false, and a string error message","class":"function","description":"\nAttempts to check the battery level of the controller.","fname":"getBatteryLevel","library":"xinput","realm":"cl","name":"xinput_library.getBatteryLevel","param":{"1":"id","id":"Controller number. Starts at 0"}},"xinput_library.getState":{"summary":"\nGets the state of the controller.","classForced":true,"ret":"Table containing all input data of the controller, or false if the controller is not connected. The table uses this struct: https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad","class":"function","description":"\nGets the state of the controller.","fname":"getState","library":"xinput","realm":"cl","name":"xinput_library.getState","param":{"1":"id","id":"Controller number. Starts at 0"}},"xinput_library.getTrigger":{"summary":"\nGets the current position of the trigger on the controller.","classForced":true,"ret":"0-255 inclusive","class":"function","description":"\nGets the current position of the trigger on the controller.","fname":"getTrigger","library":"xinput","realm":"cl","name":"xinput_library.getTrigger","param":{"1":"id","2":"trigger","trigger":"Which trigger to use. 0 is left","id":"Controller number. Starts at 0"}},"xinput_library.getControllers":{"summary":"\nGets all of the connected controllers.","classForced":true,"ret":"A table where each key is the ID of the controller that is connected. Disconnected controllers are not placed in the table.","class":"function","description":"\nGets all of the connected controllers.","fname":"getControllers","library":"xinput","realm":"cl","name":"xinput_library.getControllers","param":[]}},"libraries":{"1":"xinput","xinput":{"summary":"\nA simpler, hook-based, and more-powerful controller input library.","tables":[],"client":true,"libtbl":"xinput_library","fields":[],"class":"library","functions":{"1":"getBatteryLevel","2":"getButton","3":"getControllers","4":"getState","5":"getStick","6":"getTrigger","7":"setRumble","setRumble":{"summary":"\nSets the rumble on the controller.","class":"function","private":false,"param":{"1":"id","2":"softPercent","3":"hardPercent","softPercent":"A number between 0.0-1.0 for how much the soft rumble motor should vibrate.","hardPercent":"A number between 0.0-1.0 for how much the hard rumble motor should vibrate.","id":"Controller number. Starts at 0"},"fname":"setRumble","realm":"cl","description":"\nSets the rumble on the controller.","name":"xinput_library.setRumble","library":"xinput"},"getTrigger":{"summary":"\nGets the current position of the trigger on the controller.","classForced":true,"ret":"0-255 inclusive","class":"function","description":"\nGets the current position of the trigger on the controller.","fname":"getTrigger","library":"xinput","realm":"cl","name":"xinput_library.getTrigger","param":{"1":"id","2":"trigger","trigger":"Which trigger to use. 0 is left","id":"Controller number. Starts at 0"}},"getStick":{"summary":"\nGets the current coordinates of the stick on the controller.","classForced":true,"ret":"Two numbers for the X and Y coordinates, respectively, each being between -32768 - 32767 inclusive","class":"function","description":"\nGets the current coordinates of the stick on the controller.","fname":"getStick","library":"xinput","realm":"cl","name":"xinput_library.getStick","param":{"1":"id","2":"stick","stick":"Which stick to use. 0 is left","id":"Controller number. Starts at 0"}},"getBatteryLevel":{"summary":"\nAttempts to check the battery level of the controller.","classForced":true,"ret":"If successful: a number between 0.0-1.0 inclusive. If unsuccessful: false, and a string error message","class":"function","description":"\nAttempts to check the battery level of the controller.","fname":"getBatteryLevel","library":"xinput","realm":"cl","name":"xinput_library.getBatteryLevel","param":{"1":"id","id":"Controller number. Starts at 0"}},"getState":{"summary":"\nGets the state of the controller.","classForced":true,"ret":"Table containing all input data of the controller, or false if the controller is not connected. The table uses this struct: https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad","class":"function","description":"\nGets the state of the controller.","fname":"getState","library":"xinput","realm":"cl","name":"xinput_library.getState","param":{"1":"id","id":"Controller number. Starts at 0"}},"getButton":{"summary":"\nGets whether the button on the controller is currently pushed down.","classForced":true,"ret":"bool","class":"function","description":"\nGets whether the button on the controller is currently pushed down.","fname":"getButton","library":"xinput","realm":"cl","name":"xinput_library.getButton","param":{"1":"id","2":"button","button":"The button to check for. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_","id":"Controller number. Starts at 0"}},"getControllers":{"summary":"\nGets all of the connected controllers.","classForced":true,"ret":"A table where each key is the ID of the controller that is connected. Disconnected controllers are not placed in the table.","class":"function","description":"\nGets all of the connected controllers.","fname":"getControllers","library":"xinput","realm":"cl","name":"xinput_library.getControllers","param":[]}},"name":"xinput","description":"\nA simpler, hook-based, and more-powerful controller input library. Inputs are not lost between rendered frames, and there is support for rumble. Note: the client must have the XInput lua binary module installed in order to access this library. See more at https://github.com/mitterdoo/garrysmod-xinput"}},"type":"file","doc":[{"summary":"\nA simpler, hook-based, and more-powerful controller input library.","tables":[],"client":true,"libtbl":"xinput_library","fields":[],"class":"library","functions":{"1":"getBatteryLevel","2":"getButton","3":"getControllers","4":"getState","5":"getStick","6":"getTrigger","7":"setRumble","setRumble":{"summary":"\nSets the rumble on the controller.","class":"function","private":false,"param":{"1":"id","2":"softPercent","3":"hardPercent","softPercent":"A number between 0.0-1.0 for how much the soft rumble motor should vibrate.","hardPercent":"A number between 0.0-1.0 for how much the hard rumble motor should vibrate.","id":"Controller number. Starts at 0"},"fname":"setRumble","realm":"cl","description":"\nSets the rumble on the controller.","name":"xinput_library.setRumble","library":"xinput"},"getTrigger":{"summary":"\nGets the current position of the trigger on the controller.","classForced":true,"ret":"0-255 inclusive","class":"function","description":"\nGets the current position of the trigger on the controller.","fname":"getTrigger","library":"xinput","realm":"cl","name":"xinput_library.getTrigger","param":{"1":"id","2":"trigger","trigger":"Which trigger to use. 0 is left","id":"Controller number. Starts at 0"}},"getStick":{"summary":"\nGets the current coordinates of the stick on the controller.","classForced":true,"ret":"Two numbers for the X and Y coordinates, respectively, each being between -32768 - 32767 inclusive","class":"function","description":"\nGets the current coordinates of the stick on the controller.","fname":"getStick","library":"xinput","realm":"cl","name":"xinput_library.getStick","param":{"1":"id","2":"stick","stick":"Which stick to use. 0 is left","id":"Controller number. Starts at 0"}},"getBatteryLevel":{"summary":"\nAttempts to check the battery level of the controller.","classForced":true,"ret":"If successful: a number between 0.0-1.0 inclusive. If unsuccessful: false, and a string error message","class":"function","description":"\nAttempts to check the battery level of the controller.","fname":"getBatteryLevel","library":"xinput","realm":"cl","name":"xinput_library.getBatteryLevel","param":{"1":"id","id":"Controller number. Starts at 0"}},"getState":{"summary":"\nGets the state of the controller.","classForced":true,"ret":"Table containing all input data of the controller, or false if the controller is not connected. The table uses this struct: https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad","class":"function","description":"\nGets the state of the controller.","fname":"getState","library":"xinput","realm":"cl","name":"xinput_library.getState","param":{"1":"id","id":"Controller number. Starts at 0"}},"getButton":{"summary":"\nGets whether the button on the controller is currently pushed down.","classForced":true,"ret":"bool","class":"function","description":"\nGets whether the button on the controller is currently pushed down.","fname":"getButton","library":"xinput","realm":"cl","name":"xinput_library.getButton","param":{"1":"id","2":"button","button":"The button to check for. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_","id":"Controller number. Starts at 0"}},"getControllers":{"summary":"\nGets all of the connected controllers.","classForced":true,"ret":"A table where each key is the ID of the controller that is connected. Disconnected controllers are not placed in the table.","class":"function","description":"\nGets all of the connected controllers.","fname":"getControllers","library":"xinput","realm":"cl","name":"xinput_library.getControllers","param":[]}},"name":"xinput","description":"\nA simpler, hook-based, and more-powerful controller input library. Inputs are not lost between rendered frames, and there is support for rumble. Note: the client must have the XInput lua binary module installed in order to access this library. See more at https://github.com/mitterdoo/garrysmod-xinput"},{"summary":"\nGets the state of the controller.","classForced":true,"ret":"Table containing all input data of the controller, or false if the controller is not connected. The table uses this struct: https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad","class":"function","description":"\nGets the state of the controller.","fname":"getState","library":"xinput","realm":"cl","name":"xinput_library.getState","param":{"1":"id","id":"Controller number. Starts at 0"}},{"summary":"\nGets whether the button on the controller is currently pushed down.","classForced":true,"ret":"bool","class":"function","description":"\nGets whether the button on the controller is currently pushed down.","fname":"getButton","library":"xinput","realm":"cl","name":"xinput_library.getButton","param":{"1":"id","2":"button","button":"The button to check for. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_","id":"Controller number. Starts at 0"}},{"summary":"\nGets the current position of the trigger on the controller.","classForced":true,"ret":"0-255 inclusive","class":"function","description":"\nGets the current position of the trigger on the controller.","fname":"getTrigger","library":"xinput","realm":"cl","name":"xinput_library.getTrigger","param":{"1":"id","2":"trigger","trigger":"Which trigger to use. 0 is left","id":"Controller number. Starts at 0"}},{"summary":"\nGets the current coordinates of the stick on the controller.","classForced":true,"ret":"Two numbers for the X and Y coordinates, respectively, each being between -32768 - 32767 inclusive","class":"function","description":"\nGets the current coordinates of the stick on the controller.","fname":"getStick","library":"xinput","realm":"cl","name":"xinput_library.getStick","param":{"1":"id","2":"stick","stick":"Which stick to use. 0 is left","id":"Controller number. Starts at 0"}},{"summary":"\nAttempts to check the battery level of the controller.","classForced":true,"ret":"If successful: a number between 0.0-1.0 inclusive. If unsuccessful: false, and a string error message","class":"function","description":"\nAttempts to check the battery level of the controller.","fname":"getBatteryLevel","library":"xinput","realm":"cl","name":"xinput_library.getBatteryLevel","param":{"1":"id","id":"Controller number. Starts at 0"}},{"summary":"\nGets all of the connected controllers.","classForced":true,"ret":"A table where each key is the ID of the controller that is connected. Disconnected controllers are not placed in the table.","class":"function","description":"\nGets all of the connected controllers.","fname":"getControllers","library":"xinput","realm":"cl","name":"xinput_library.getControllers","param":[]},{"summary":"\nSets the rumble on the controller.","class":"function","private":false,"param":{"1":"id","2":"softPercent","3":"hardPercent","softPercent":"A number between 0.0-1.0 for how much the soft rumble motor should vibrate.","hardPercent":"A number between 0.0-1.0 for how much the hard rumble motor should vibrate.","id":"Controller number. Starts at 0"},"fname":"setRumble","realm":"cl","description":"\nSets the rumble on the controller.","name":"xinput_library.setRumble","library":"xinput"},{"summary":"\nCalled when a controller has been connected.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a controller has been connected. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputConnected","param":{"1":"id","2":"when","when":"The timer.realtime() at which this event occurred.","id":"Controller number. Starts at 0"}},{"summary":"\nCalled when a controller has been disconnected.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a controller has been disconnected. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputDisconnected","param":{"1":"id","2":"when","when":"The timer.realtime() at which this event occurred.","id":"Controller number. Starts at 0"}},{"summary":"\nCalled when a controller button has been pressed.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a controller button has been pressed. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputPressed","param":{"1":"id","2":"button","3":"when","button":"The button that was pushed. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_","when":"The timer.realtime() at which this event occurred.","id":"Controller number. Starts at 0"}},{"summary":"\nCalled when a controller button has been released.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a controller button has been released. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputReleased","param":{"1":"id","2":"button","3":"when","button":"The button that was released. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_","when":"The timer.realtime() at which this event occurred.","id":"Controller number. Starts at 0"}},{"summary":"\nCalled when a trigger on the controller has moved.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a trigger on the controller has moved. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputTrigger","param":{"1":"id","2":"trigger","3":"value","4":"when","when":"The timer.realtime() at which this event occurred.","trigger":"The trigger that was moved. 0 is left","value":"The position of the trigger. 0-255 inclusive","id":"Controller number. Starts at 0"}},{"summary":"\nCalled when a stick on the controller has moved.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a stick on the controller has moved. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputStick","param":{"1":"id","2":"stick","3":"x","4":"y","5":"when","x":"The X coordinate of the trigger. -32768 - 32767 inclusive","id":"Controller number. Starts at 0","y":"The Y coordinate of the trigger. -32768 - 32767 inclusive","when":"The timer.realtime() at which this event occurred.","stick":"The stick that was moved. 0 is left"}}],"name":"libs_cl/xinput.lua","description":"\nA simpler, hook-based, and more-powerful controller input library. Inputs are not lost between rendered frames, and there is support for rumble. Note: the client must have the XInput lua binary module installed in order to access this library. See more at https://github.com/mitterdoo/garrysmod-xinput"},"permissions/core.lua":{"summary":"\n \nSF Permissions management \n ","tables":[],"functions":{"1":"P.check","2":"P.refreshSettingsCache","3":"P.registerCustomProvider","4":"P.registerPrivilege","5":"P.registerProvider","P.registerCustomProvider":{"private":false,"param":{"1":"provider","2":"privileges","3":"exclusive","provider":"the provider to be registered","exclusive":"if true, this provider will replace all existing providers for the privilege. (Addons loaded later may add aditional providers)","privileges":"table of privs this provider will be added to"},"realm":"ss","summary":"\nAdds a provider which will be used on specified permissions.","class":"function","name":"P.registerCustomProvider","description":"\nAdds a provider which will be used on specified permissions. (Meant for outside addons) \nProviders must implement the {@link SF.Permissions.Provider} interface."},"P.refreshSettingsCache":{"private":false,"param":[],"realm":"ss","summary":"\nRefreshes cache of settings in provider ","class":"function","name":"P.refreshSettingsCache","description":"\nRefreshes cache of settings in provider"},"P.registerProvider":{"private":false,"param":{"1":"provider","provider":"the provider to be registered"},"realm":"ss","summary":"\nAdds a provider implementation to the set used by this library.","class":"function","name":"P.registerProvider","description":"\nAdds a provider implementation to the set used by this library. \nProviders must implement the {@link SF.Permissions.Provider} interface."},"P.check":{"private":false,"param":{"1":"instance","2":"target","3":"key","target":"the object on which the action is being performed","key":"a string identifying the action being performed","instance":"The instance checking permission"},"realm":"ss","summary":"\nChecks whether a player may perform an action.","class":"function","name":"P.check","description":"\nChecks whether a player may perform an action."},"P.registerPrivilege":{"private":false,"param":{"1":"id","2":"name","3":"description","4":"arg","description":"a short description of the privilege","name":"Human readable name of the privilege","id":"unique identifier of the privilege being registered"},"realm":"ss","summary":"\nRegisters a privilege ","class":"function","name":"P.registerPrivilege","description":"\nRegisters a privilege"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nSF Permissions management \n ","param":[],"description":"\n \nSF Permissions management \n"},{"private":false,"param":{"1":"provider","provider":"the provider to be registered"},"realm":"ss","summary":"\nAdds a provider implementation to the set used by this library.","class":"function","name":"P.registerProvider","description":"\nAdds a provider implementation to the set used by this library. \nProviders must implement the {@link SF.Permissions.Provider} interface."},{"private":false,"param":[],"realm":"ss","summary":"\nRefreshes cache of settings in provider ","class":"function","name":"P.refreshSettingsCache","description":"\nRefreshes cache of settings in provider"},{"private":false,"param":{"1":"provider","2":"privileges","3":"exclusive","provider":"the provider to be registered","exclusive":"if true, this provider will replace all existing providers for the privilege. (Addons loaded later may add aditional providers)","privileges":"table of privs this provider will be added to"},"realm":"ss","summary":"\nAdds a provider which will be used on specified permissions.","class":"function","name":"P.registerCustomProvider","description":"\nAdds a provider which will be used on specified permissions. (Meant for outside addons) \nProviders must implement the {@link SF.Permissions.Provider} interface."},{"private":false,"param":{"1":"id","2":"name","3":"description","4":"arg","description":"a short description of the privilege","name":"Human readable name of the privilege","id":"unique identifier of the privilege being registered"},"realm":"ss","summary":"\nRegisters a privilege ","class":"function","name":"P.registerPrivilege","description":"\nRegisters a privilege"},{"private":false,"param":{"1":"instance","2":"target","3":"key","target":"the object on which the action is being performed","key":"a string identifying the action being performed","instance":"The instance checking permission"},"realm":"ss","summary":"\nChecks whether a player may perform an action.","class":"function","name":"P.check","description":"\nChecks whether a player may perform an action."}],"name":"permissions/core.lua","description":"\n \nSF Permissions management \n"},"libs_sh/timer.lua":{"summary":"\n \nTime library \n ","tables":[],"functions":{"1":"timer_library.adjust","2":"timer_library.create","3":"timer_library.curtime","4":"timer_library.exists","5":"timer_library.frametime","6":"timer_library.getTimersLeft","7":"timer_library.pause","8":"timer_library.realtime","9":"timer_library.remove","10":"timer_library.repsleft","11":"timer_library.simple","12":"timer_library.start","13":"timer_library.stop","14":"timer_library.systime","15":"timer_library.timeleft","16":"timer_library.toggle","17":"timer_library.unpause","timer_library.adjust":{"summary":"\nAdjusts a timer ","ret":"true if succeeded","class":"function","private":false,"library":"timer","fname":"adjust","realm":"sh","param":{"1":"name","2":"delay","3":"reps","4":"func","func":"(Optional) The function to call when the tiemr is fired","reps":"(Optional) The repititions of the tiemr. 0 = infinte, nil = 1","name":"The timer name","delay":"The time, in seconds, to set the timer to."},"name":"timer_library.adjust","description":"\nAdjusts a timer"},"timer_library.realtime":{"summary":"\nReturns the uptime of the game/server in seconds (to at least 4 decimal places) ","class":"function","private":false,"param":[],"fname":"realtime","realm":"sh","description":"\nReturns the uptime of the game/server in seconds (to at least 4 decimal places)","name":"timer_library.realtime","library":"timer"},"timer_library.create":{"summary":"\nCreates (and starts) a timer ","class":"function","private":false,"param":{"1":"name","2":"delay","3":"reps","4":"func","func":"The function to call when the timer is fired","reps":"The repititions of the tiemr. 0 = infinte, nil = 1","name":"The timer name","delay":"The time, in seconds, to set the timer to."},"fname":"create","realm":"sh","description":"\nCreates (and starts) a timer","name":"timer_library.create","library":"timer"},"timer_library.pause":{"summary":"\nPauses a timer ","ret":"false if the timer didn't exist or was already paused, true otherwise.","class":"function","private":false,"library":"timer","fname":"pause","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.pause","description":"\nPauses a timer"},"timer_library.simple":{"summary":"\nCreates a simple timer, has no name, can't be stopped, paused, or destroyed.","class":"function","private":false,"param":{"1":"delay","2":"func","func":"the function to call when the timer is fired","delay":"the time, in second, to set the timer to"},"fname":"simple","realm":"sh","description":"\nCreates a simple timer, has no name, can't be stopped, paused, or destroyed.","name":"timer_library.simple","library":"timer"},"timer_library.systime":{"summary":"\nReturns a highly accurate time in seconds since the start up, ideal for benchmarking.","class":"function","private":false,"param":[],"fname":"systime","realm":"sh","description":"\nReturns a highly accurate time in seconds since the start up, ideal for benchmarking.","name":"timer_library.systime","library":"timer"},"timer_library.remove":{"summary":"\nStops and removes the timer.","class":"function","private":false,"param":{"1":"name","name":"The timer name"},"fname":"remove","realm":"sh","description":"\nStops and removes the timer.","name":"timer_library.remove","library":"timer"},"timer_library.stop":{"summary":"\nStops a timer ","ret":"false if the timer didn't exist or was already stopped, true otherwise.","class":"function","private":false,"library":"timer","fname":"stop","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.stop","description":"\nStops a timer"},"timer_library.frametime":{"summary":"\nReturns time between frames on client and ticks on server.","class":"function","private":false,"param":[],"fname":"frametime","realm":"sh","description":"\nReturns time between frames on client and ticks on server. Same thing as G.FrameTime in GLua","name":"timer_library.frametime","library":"timer"},"timer_library.getTimersLeft":{"summary":"\nReturns number of available timers ","ret":"Number of available timers","class":"function","private":false,"library":"timer","fname":"getTimersLeft","realm":"sh","param":[],"name":"timer_library.getTimersLeft","description":"\nReturns number of available timers"},"timer_library.repsleft":{"summary":"\nReturns amount of repetitions/executions left before the timer destroys itself.","ret":"The amount of executions left. Nil if timer doesnt exist","class":"function","private":false,"library":"timer","fname":"repsleft","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.repsleft","description":"\nReturns amount of repetitions/executions left before the timer destroys itself."},"timer_library.timeleft":{"summary":"\nReturns amount of time left (in seconds) before the timer executes its function.","ret":"The amount of time left (in seconds). If the timer is paused, the amount will be negative. Nil if timer doesnt exist","class":"function","private":false,"library":"timer","fname":"timeleft","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.timeleft","description":"\nReturns amount of time left (in seconds) before the timer executes its function."},"timer_library.toggle":{"summary":"\nRuns either timer.pause or timer.unpause based on the timer's current status.","ret":"status of the timer.","class":"function","private":false,"library":"timer","fname":"toggle","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.toggle","description":"\nRuns either timer.pause or timer.unpause based on the timer's current status."},"timer_library.curtime":{"summary":"\nReturns the uptime of the server in seconds (to at least 4 decimal places) ","class":"function","private":false,"param":[],"fname":"curtime","realm":"sh","description":"\nReturns the uptime of the server in seconds (to at least 4 decimal places)","name":"timer_library.curtime","library":"timer"},"timer_library.start":{"summary":"\nStarts a timer ","ret":"true if the timer exists, false if it doesn't.","class":"function","private":false,"library":"timer","fname":"start","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.start","description":"\nStarts a timer"},"timer_library.unpause":{"summary":"\nUnpauses a timer ","ret":"false if the timer didn't exist or was already running, true otherwise.","class":"function","private":false,"library":"timer","fname":"unpause","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.unpause","description":"\nUnpauses a timer"},"timer_library.exists":{"summary":"\nChecks if a timer exists ","ret":"bool if the timer exists","class":"function","private":false,"library":"timer","fname":"exists","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.exists","description":"\nChecks if a timer exists"}},"libraries":{"1":"timer","timer":{"server":true,"tables":[],"client":true,"summary":"\nDeals with time and timers.","libtbl":"timer_library","fields":[],"class":"library","functions":{"1":"adjust","2":"create","3":"curtime","4":"exists","5":"frametime","6":"getTimersLeft","7":"pause","8":"realtime","9":"remove","10":"repsleft","11":"simple","12":"start","13":"stop","14":"systime","15":"timeleft","16":"toggle","17":"unpause","exists":{"summary":"\nChecks if a timer exists ","ret":"bool if the timer exists","class":"function","private":false,"library":"timer","fname":"exists","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.exists","description":"\nChecks if a timer exists"},"realtime":{"summary":"\nReturns the uptime of the game/server in seconds (to at least 4 decimal places) ","class":"function","private":false,"param":[],"fname":"realtime","realm":"sh","description":"\nReturns the uptime of the game/server in seconds (to at least 4 decimal places)","name":"timer_library.realtime","library":"timer"},"create":{"summary":"\nCreates (and starts) a timer ","class":"function","private":false,"param":{"1":"name","2":"delay","3":"reps","4":"func","func":"The function to call when the timer is fired","reps":"The repititions of the tiemr. 0 = infinte, nil = 1","name":"The timer name","delay":"The time, in seconds, to set the timer to."},"fname":"create","realm":"sh","description":"\nCreates (and starts) a timer","name":"timer_library.create","library":"timer"},"getTimersLeft":{"summary":"\nReturns number of available timers ","ret":"Number of available timers","class":"function","private":false,"library":"timer","fname":"getTimersLeft","realm":"sh","param":[],"name":"timer_library.getTimersLeft","description":"\nReturns number of available timers"},"start":{"summary":"\nStarts a timer ","ret":"true if the timer exists, false if it doesn't.","class":"function","private":false,"library":"timer","fname":"start","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.start","description":"\nStarts a timer"},"timeleft":{"summary":"\nReturns amount of time left (in seconds) before the timer executes its function.","ret":"The amount of time left (in seconds). If the timer is paused, the amount will be negative. Nil if timer doesnt exist","class":"function","private":false,"library":"timer","fname":"timeleft","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.timeleft","description":"\nReturns amount of time left (in seconds) before the timer executes its function."},"frametime":{"summary":"\nReturns time between frames on client and ticks on server.","class":"function","private":false,"param":[],"fname":"frametime","realm":"sh","description":"\nReturns time between frames on client and ticks on server. Same thing as G.FrameTime in GLua","name":"timer_library.frametime","library":"timer"},"adjust":{"summary":"\nAdjusts a timer ","ret":"true if succeeded","class":"function","private":false,"library":"timer","fname":"adjust","realm":"sh","param":{"1":"name","2":"delay","3":"reps","4":"func","func":"(Optional) The function to call when the tiemr is fired","reps":"(Optional) The repititions of the tiemr. 0 = infinte, nil = 1","name":"The timer name","delay":"The time, in seconds, to set the timer to."},"name":"timer_library.adjust","description":"\nAdjusts a timer"},"pause":{"summary":"\nPauses a timer ","ret":"false if the timer didn't exist or was already paused, true otherwise.","class":"function","private":false,"library":"timer","fname":"pause","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.pause","description":"\nPauses a timer"},"systime":{"summary":"\nReturns a highly accurate time in seconds since the start up, ideal for benchmarking.","class":"function","private":false,"param":[],"fname":"systime","realm":"sh","description":"\nReturns a highly accurate time in seconds since the start up, ideal for benchmarking.","name":"timer_library.systime","library":"timer"},"repsleft":{"summary":"\nReturns amount of repetitions/executions left before the timer destroys itself.","ret":"The amount of executions left. Nil if timer doesnt exist","class":"function","private":false,"library":"timer","fname":"repsleft","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.repsleft","description":"\nReturns amount of repetitions/executions left before the timer destroys itself."},"curtime":{"summary":"\nReturns the uptime of the server in seconds (to at least 4 decimal places) ","class":"function","private":false,"param":[],"fname":"curtime","realm":"sh","description":"\nReturns the uptime of the server in seconds (to at least 4 decimal places)","name":"timer_library.curtime","library":"timer"},"unpause":{"summary":"\nUnpauses a timer ","ret":"false if the timer didn't exist or was already running, true otherwise.","class":"function","private":false,"library":"timer","fname":"unpause","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.unpause","description":"\nUnpauses a timer"},"toggle":{"summary":"\nRuns either timer.pause or timer.unpause based on the timer's current status.","ret":"status of the timer.","class":"function","private":false,"library":"timer","fname":"toggle","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.toggle","description":"\nRuns either timer.pause or timer.unpause based on the timer's current status."},"stop":{"summary":"\nStops a timer ","ret":"false if the timer didn't exist or was already stopped, true otherwise.","class":"function","private":false,"library":"timer","fname":"stop","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.stop","description":"\nStops a timer"},"simple":{"summary":"\nCreates a simple timer, has no name, can't be stopped, paused, or destroyed.","class":"function","private":false,"param":{"1":"delay","2":"func","func":"the function to call when the timer is fired","delay":"the time, in second, to set the timer to"},"fname":"simple","realm":"sh","description":"\nCreates a simple timer, has no name, can't be stopped, paused, or destroyed.","name":"timer_library.simple","library":"timer"},"remove":{"summary":"\nStops and removes the timer.","class":"function","private":false,"param":{"1":"name","name":"The timer name"},"fname":"remove","realm":"sh","description":"\nStops and removes the timer.","name":"timer_library.remove","library":"timer"}},"name":"timer","description":"\nDeals with time and timers."}},"type":"file","doc":[{"summary":"\n \nTime library \n ","description":"\n \nTime library \n"},{"server":true,"tables":[],"client":true,"summary":"\nDeals with time and timers.","libtbl":"timer_library","fields":[],"class":"library","functions":{"1":"adjust","2":"create","3":"curtime","4":"exists","5":"frametime","6":"getTimersLeft","7":"pause","8":"realtime","9":"remove","10":"repsleft","11":"simple","12":"start","13":"stop","14":"systime","15":"timeleft","16":"toggle","17":"unpause","exists":{"summary":"\nChecks if a timer exists ","ret":"bool if the timer exists","class":"function","private":false,"library":"timer","fname":"exists","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.exists","description":"\nChecks if a timer exists"},"realtime":{"summary":"\nReturns the uptime of the game/server in seconds (to at least 4 decimal places) ","class":"function","private":false,"param":[],"fname":"realtime","realm":"sh","description":"\nReturns the uptime of the game/server in seconds (to at least 4 decimal places)","name":"timer_library.realtime","library":"timer"},"create":{"summary":"\nCreates (and starts) a timer ","class":"function","private":false,"param":{"1":"name","2":"delay","3":"reps","4":"func","func":"The function to call when the timer is fired","reps":"The repititions of the tiemr. 0 = infinte, nil = 1","name":"The timer name","delay":"The time, in seconds, to set the timer to."},"fname":"create","realm":"sh","description":"\nCreates (and starts) a timer","name":"timer_library.create","library":"timer"},"getTimersLeft":{"summary":"\nReturns number of available timers ","ret":"Number of available timers","class":"function","private":false,"library":"timer","fname":"getTimersLeft","realm":"sh","param":[],"name":"timer_library.getTimersLeft","description":"\nReturns number of available timers"},"start":{"summary":"\nStarts a timer ","ret":"true if the timer exists, false if it doesn't.","class":"function","private":false,"library":"timer","fname":"start","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.start","description":"\nStarts a timer"},"timeleft":{"summary":"\nReturns amount of time left (in seconds) before the timer executes its function.","ret":"The amount of time left (in seconds). If the timer is paused, the amount will be negative. Nil if timer doesnt exist","class":"function","private":false,"library":"timer","fname":"timeleft","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.timeleft","description":"\nReturns amount of time left (in seconds) before the timer executes its function."},"frametime":{"summary":"\nReturns time between frames on client and ticks on server.","class":"function","private":false,"param":[],"fname":"frametime","realm":"sh","description":"\nReturns time between frames on client and ticks on server. Same thing as G.FrameTime in GLua","name":"timer_library.frametime","library":"timer"},"adjust":{"summary":"\nAdjusts a timer ","ret":"true if succeeded","class":"function","private":false,"library":"timer","fname":"adjust","realm":"sh","param":{"1":"name","2":"delay","3":"reps","4":"func","func":"(Optional) The function to call when the tiemr is fired","reps":"(Optional) The repititions of the tiemr. 0 = infinte, nil = 1","name":"The timer name","delay":"The time, in seconds, to set the timer to."},"name":"timer_library.adjust","description":"\nAdjusts a timer"},"pause":{"summary":"\nPauses a timer ","ret":"false if the timer didn't exist or was already paused, true otherwise.","class":"function","private":false,"library":"timer","fname":"pause","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.pause","description":"\nPauses a timer"},"systime":{"summary":"\nReturns a highly accurate time in seconds since the start up, ideal for benchmarking.","class":"function","private":false,"param":[],"fname":"systime","realm":"sh","description":"\nReturns a highly accurate time in seconds since the start up, ideal for benchmarking.","name":"timer_library.systime","library":"timer"},"repsleft":{"summary":"\nReturns amount of repetitions/executions left before the timer destroys itself.","ret":"The amount of executions left. Nil if timer doesnt exist","class":"function","private":false,"library":"timer","fname":"repsleft","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.repsleft","description":"\nReturns amount of repetitions/executions left before the timer destroys itself."},"curtime":{"summary":"\nReturns the uptime of the server in seconds (to at least 4 decimal places) ","class":"function","private":false,"param":[],"fname":"curtime","realm":"sh","description":"\nReturns the uptime of the server in seconds (to at least 4 decimal places)","name":"timer_library.curtime","library":"timer"},"unpause":{"summary":"\nUnpauses a timer ","ret":"false if the timer didn't exist or was already running, true otherwise.","class":"function","private":false,"library":"timer","fname":"unpause","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.unpause","description":"\nUnpauses a timer"},"toggle":{"summary":"\nRuns either timer.pause or timer.unpause based on the timer's current status.","ret":"status of the timer.","class":"function","private":false,"library":"timer","fname":"toggle","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.toggle","description":"\nRuns either timer.pause or timer.unpause based on the timer's current status."},"stop":{"summary":"\nStops a timer ","ret":"false if the timer didn't exist or was already stopped, true otherwise.","class":"function","private":false,"library":"timer","fname":"stop","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.stop","description":"\nStops a timer"},"simple":{"summary":"\nCreates a simple timer, has no name, can't be stopped, paused, or destroyed.","class":"function","private":false,"param":{"1":"delay","2":"func","func":"the function to call when the timer is fired","delay":"the time, in second, to set the timer to"},"fname":"simple","realm":"sh","description":"\nCreates a simple timer, has no name, can't be stopped, paused, or destroyed.","name":"timer_library.simple","library":"timer"},"remove":{"summary":"\nStops and removes the timer.","class":"function","private":false,"param":{"1":"name","name":"The timer name"},"fname":"remove","realm":"sh","description":"\nStops and removes the timer.","name":"timer_library.remove","library":"timer"}},"name":"timer","description":"\nDeals with time and timers."},{"summary":"\nReturns the uptime of the server in seconds (to at least 4 decimal places) ","class":"function","private":false,"param":[],"fname":"curtime","realm":"sh","description":"\nReturns the uptime of the server in seconds (to at least 4 decimal places)","name":"timer_library.curtime","library":"timer"},{"summary":"\nReturns the uptime of the game/server in seconds (to at least 4 decimal places) ","class":"function","private":false,"param":[],"fname":"realtime","realm":"sh","description":"\nReturns the uptime of the game/server in seconds (to at least 4 decimal places)","name":"timer_library.realtime","library":"timer"},{"summary":"\nReturns a highly accurate time in seconds since the start up, ideal for benchmarking.","class":"function","private":false,"param":[],"fname":"systime","realm":"sh","description":"\nReturns a highly accurate time in seconds since the start up, ideal for benchmarking.","name":"timer_library.systime","library":"timer"},{"summary":"\nReturns time between frames on client and ticks on server.","class":"function","private":false,"param":[],"fname":"frametime","realm":"sh","description":"\nReturns time between frames on client and ticks on server. Same thing as G.FrameTime in GLua","name":"timer_library.frametime","library":"timer"},{"summary":"\nCreates (and starts) a timer ","class":"function","private":false,"param":{"1":"name","2":"delay","3":"reps","4":"func","func":"The function to call when the timer is fired","reps":"The repititions of the tiemr. 0 = infinte, nil = 1","name":"The timer name","delay":"The time, in seconds, to set the timer to."},"fname":"create","realm":"sh","description":"\nCreates (and starts) a timer","name":"timer_library.create","library":"timer"},{"summary":"\nCreates a simple timer, has no name, can't be stopped, paused, or destroyed.","class":"function","private":false,"param":{"1":"delay","2":"func","func":"the function to call when the timer is fired","delay":"the time, in second, to set the timer to"},"fname":"simple","realm":"sh","description":"\nCreates a simple timer, has no name, can't be stopped, paused, or destroyed.","name":"timer_library.simple","library":"timer"},{"summary":"\nStops and removes the timer.","class":"function","private":false,"param":{"1":"name","name":"The timer name"},"fname":"remove","realm":"sh","description":"\nStops and removes the timer.","name":"timer_library.remove","library":"timer"},{"summary":"\nChecks if a timer exists ","ret":"bool if the timer exists","class":"function","private":false,"library":"timer","fname":"exists","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.exists","description":"\nChecks if a timer exists"},{"summary":"\nStops a timer ","ret":"false if the timer didn't exist or was already stopped, true otherwise.","class":"function","private":false,"library":"timer","fname":"stop","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.stop","description":"\nStops a timer"},{"summary":"\nStarts a timer ","ret":"true if the timer exists, false if it doesn't.","class":"function","private":false,"library":"timer","fname":"start","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.start","description":"\nStarts a timer"},{"summary":"\nAdjusts a timer ","ret":"true if succeeded","class":"function","private":false,"library":"timer","fname":"adjust","realm":"sh","param":{"1":"name","2":"delay","3":"reps","4":"func","func":"(Optional) The function to call when the tiemr is fired","reps":"(Optional) The repititions of the tiemr. 0 = infinte, nil = 1","name":"The timer name","delay":"The time, in seconds, to set the timer to."},"name":"timer_library.adjust","description":"\nAdjusts a timer"},{"summary":"\nPauses a timer ","ret":"false if the timer didn't exist or was already paused, true otherwise.","class":"function","private":false,"library":"timer","fname":"pause","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.pause","description":"\nPauses a timer"},{"summary":"\nUnpauses a timer ","ret":"false if the timer didn't exist or was already running, true otherwise.","class":"function","private":false,"library":"timer","fname":"unpause","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.unpause","description":"\nUnpauses a timer"},{"summary":"\nRuns either timer.pause or timer.unpause based on the timer's current status.","ret":"status of the timer.","class":"function","private":false,"library":"timer","fname":"toggle","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.toggle","description":"\nRuns either timer.pause or timer.unpause based on the timer's current status."},{"summary":"\nReturns amount of time left (in seconds) before the timer executes its function.","ret":"The amount of time left (in seconds). If the timer is paused, the amount will be negative. Nil if timer doesnt exist","class":"function","private":false,"library":"timer","fname":"timeleft","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.timeleft","description":"\nReturns amount of time left (in seconds) before the timer executes its function."},{"summary":"\nReturns amount of repetitions/executions left before the timer destroys itself.","ret":"The amount of executions left. Nil if timer doesnt exist","class":"function","private":false,"library":"timer","fname":"repsleft","realm":"sh","param":{"1":"name","name":"The timer name"},"name":"timer_library.repsleft","description":"\nReturns amount of repetitions/executions left before the timer destroys itself."},{"summary":"\nReturns number of available timers ","ret":"Number of available timers","class":"function","private":false,"library":"timer","fname":"getTimersLeft","realm":"sh","param":[],"name":"timer_library.getTimersLeft","description":"\nReturns number of available timers"}],"name":"libs_sh/timer.lua","description":"\n \nTime library \n"},"editor/sfhelper.lua":{"summary":"\n \nSF Helper for Starfall \nBy Jazzelhawk \n ","tables":[],"functions":{"1":"helper.updateDocView","2":"helper.updateInfoPanel","helper.updateInfoPanel":{"private":false,"param":["func","directive"],"realm":"r/","summary":"\nInfoPanel ---- \n ","class":"function","name":"helper.updateInfoPanel","description":"\nInfoPanel ---- \n"},"helper.updateDocView":{"private":false,"param":["Line","Type"],"realm":"r/","summary":"\nDoc View ---- \n ","class":"function","name":"helper.updateDocView","description":"\nDoc View ---- \n"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nSF Helper for Starfall \nBy Jazzelhawk \n ","description":"\n \nSF Helper for Starfall \nBy Jazzelhawk \n"},{"summary":"\nTO DO --- \nsearch page ","param":[],"description":"\nTO DO --- \nsearch page"},{"summary":"\nIndex View ---- \n ","param":[],"description":"\nIndex View ---- \n"},{"private":false,"param":["Line","Type"],"realm":"r/","summary":"\nDoc View ---- \n ","class":"function","name":"helper.updateDocView","description":"\nDoc View ---- \n"},{"private":false,"param":["func","directive"],"realm":"r/","summary":"\nInfoPanel ---- \n ","class":"function","name":"helper.updateInfoPanel","description":"\nInfoPanel ---- \n"},{"summary":"\nAbout View ---- \n ","param":[],"description":"\nAbout View ---- \n"}],"name":"editor/sfhelper.lua","description":"\n \nSF Helper for Starfall \nBy Jazzelhawk \n"},"libs_cl/material.lua":{"summary":"\nThe `Material` type is used to control shaders in rendering.","tables":[],"functions":{"1":"material_library.create","2":"material_library.createFromImage","3":"material_library.getColor","4":"material_library.getFloat","5":"material_library.getHeight","6":"material_library.getInt","7":"material_library.getKeyValues","8":"material_library.getMatrix","9":"material_library.getName","10":"material_library.getShader","11":"material_library.getString","12":"material_library.getTexture","13":"material_library.getVector","14":"material_library.getVectorLinear","15":"material_library.getWidth","16":"material_library.load","17":"material_methods:destroy","18":"material_methods:getColor","19":"material_methods:getFloat","20":"material_methods:getHeight","21":"material_methods:getInt","22":"material_methods:getKeyValues","23":"material_methods:getMatrix","24":"material_methods:getName","25":"material_methods:getShader","26":"material_methods:getString","27":"material_methods:getTexture","28":"material_methods:getVector","29":"material_methods:getVectorLinear","30":"material_methods:getWidth","31":"material_methods:recompute","32":"material_methods:setFloat","33":"material_methods:setInt","34":"material_methods:setMatrix","35":"material_methods:setString","36":"material_methods:setTexture","37":"material_methods:setTextureRenderTarget","38":"material_methods:setTextureURL","39":"material_methods:setUndefined","40":"material_methods:setVector","material_library.getMatrix":{"summary":"\nReturns a matrix keyvalue of a material ","ret":"The matrix value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getMatrix","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the matrix from"},"name":"material_library.getMatrix","description":"\nReturns a matrix keyvalue of a material"},"material_library.getTexture":{"summary":"\nGets a texture from a material ","ret":"The texture's name","class":"function","private":false,"library":"material","fname":"getTexture","realm":"cl","param":{"1":"path","2":"texture","path":"The path of the material (don't include .vmt in the path)","texture":"The texture key to get"},"name":"material_library.getTexture","description":"\nGets a texture from a material"},"material_methods:getShader":{"summary":"\nReturns the shader name of the material ","ret":"The shader name of the material","class":"function","private":false,"classlib":"Material","fname":"getShader","realm":"cl","param":[],"name":"material_methods:getShader","description":"\nReturns the shader name of the material"},"material_library.getInt":{"summary":"\nReturns an int keyvalue of a material ","ret":"The int value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getInt","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the int from"},"name":"material_library.getInt","description":"\nReturns an int keyvalue of a material"},"material_library.getString":{"summary":"\nReturns a string keyvalue ","ret":"The string value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getString","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the string from"},"name":"material_library.getString","description":"\nReturns a string keyvalue"},"material_methods:recompute":{"summary":"\nRefreshes the material.","class":"function","private":false,"param":[],"fname":"recompute","realm":"cl","name":"material_methods:recompute","classlib":"Material","description":"\nRefreshes the material. Sometimes needed for certain parameters to update"},"material_methods:getString":{"summary":"\nReturns a string keyvalue ","ret":"The string value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getString","realm":"cl","param":{"1":"key","key":"The key to get the string from"},"name":"material_methods:getString","description":"\nReturns a string keyvalue"},"material_library.getVectorLinear":{"summary":"\nReturns a linear color-corrected vector keyvalue of a material ","ret":"The vector value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getVectorLinear","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the vector from"},"name":"material_library.getVectorLinear","description":"\nReturns a linear color-corrected vector keyvalue of a material"},"material_library.getColor":{"summary":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material.","ret":"The color value","class":"function","private":false,"library":"material","fname":"getColor","realm":"cl","param":{"1":"path","2":"x","3":"y","path":"The path of the material (don't include .vmt in the path)","x":"The x coordinate of the pixel","y":"The y coordinate of the pixel"},"name":"material_library.getColor","description":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material."},"material_methods:getTexture":{"summary":"\nReturns a texture id keyvalue ","ret":"The string id of the texture or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getTexture","realm":"cl","param":{"1":"key","key":"The key to get the texture from"},"name":"material_methods:getTexture","description":"\nReturns a texture id keyvalue"},"material_methods:getWidth":{"summary":"\nGets the base texture set to the material's width ","ret":"The basetexture's width","class":"function","private":false,"classlib":"Material","fname":"getWidth","realm":"cl","param":[],"name":"material_methods:getWidth","description":"\nGets the base texture set to the material's width"},"material_methods:getFloat":{"summary":"\nReturns a float keyvalue ","ret":"The float value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getFloat","realm":"cl","param":{"1":"key","key":"The key to get the float from"},"name":"material_methods:getFloat","description":"\nReturns a float keyvalue"},"material_library.getWidth":{"summary":"\nReturns the width of the member texture set for $basetexture of a material ","ret":"The basetexture's width","class":"function","private":false,"library":"material","fname":"getWidth","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getWidth","description":"\nReturns the width of the member texture set for $basetexture of a material"},"material_library.getFloat":{"summary":"\nReturns a float keyvalue of a material ","ret":"The float value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getFloat","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the float from"},"name":"material_library.getFloat","description":"\nReturns a float keyvalue of a material"},"material_methods:getColor":{"summary":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material.","ret":"The color value","class":"function","private":false,"classlib":"Material","fname":"getColor","realm":"cl","param":{"1":"x","2":"y","y":"The y coordinate of the pixel","x":"The x coordinate of the pixel"},"name":"material_methods:getColor","description":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material."},"material_methods:setVector":{"summary":"\nSets a vector keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setVector","realm":"cl","name":"material_methods:setVector","classlib":"Material","description":"\nSets a vector keyvalue"},"material_methods:setTexture":{"summary":"\nSets a texture keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set. $basetexture is the key name for most purposes.","v":"The texture name to set it to."},"fname":"setTexture","realm":"cl","name":"material_methods:setTexture","classlib":"Material","description":"\nSets a texture keyvalue"},"material_methods:setTextureRenderTarget":{"summary":"\nSets a rendertarget texture to the specified texture key ","class":"function","private":false,"param":{"1":"key","2":"name","key":"The key name to set. $basetexture is the key name for most purposes.","name":"The name of the rendertarget"},"fname":"setTextureRenderTarget","realm":"cl","name":"material_methods:setTextureRenderTarget","classlib":"Material","description":"\nSets a rendertarget texture to the specified texture key"},"material_methods:getInt":{"summary":"\nReturns an int keyvalue ","ret":"The int value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getInt","realm":"cl","param":{"1":"key","key":"The key to get the int from"},"name":"material_methods:getInt","description":"\nReturns an int keyvalue"},"material_methods:setTextureURL":{"summary":"\nLoads an online image or base64 data to the specified texture key ","class":"function","private":false,"param":{"1":"key","2":"url","3":"cb","4":"done","url":"The url or base64 data","done":"An optional callback called when the image is done loading. Passes the material, url","key":"The key name to set. $basetexture is the key name for most purposes.","cb":"An optional callback called when image is loaded. Passes nil if it fails or Passes the material, url, width, height, and layout function which can be called with x, y, w, h to reposition the image in the texture"},"fname":"setTextureURL","realm":"cl","name":"material_methods:setTextureURL","classlib":"Material","description":"\nLoads an online image or base64 data to the specified texture key"},"material_methods:setUndefined":{"summary":"\nSets a keyvalue to be undefined ","class":"function","private":false,"param":{"1":"key","key":"The key name to set"},"fname":"setUndefined","realm":"cl","name":"material_methods:setUndefined","classlib":"Material","description":"\nSets a keyvalue to be undefined"},"material_library.getKeyValues":{"summary":"\nReturns a table of keyvalues from a material ","ret":"The table of keyvalues","class":"function","private":false,"library":"material","fname":"getKeyValues","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getKeyValues","description":"\nReturns a table of keyvalues from a material"},"material_methods:setString":{"summary":"\nSets a string keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setString","realm":"cl","name":"material_methods:setString","classlib":"Material","description":"\nSets a string keyvalue"},"material_library.getName":{"summary":"\nReturns a material's engine name ","ret":"The name of a material. If this material is user created, add ! to the beginning of this to use it with entity.setMaterial","class":"function","private":false,"library":"material","fname":"getName","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getName","description":"\nReturns a material's engine name"},"material_methods:setMatrix":{"summary":"\nSets a matrix keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setMatrix","realm":"cl","name":"material_methods:setMatrix","classlib":"Material","description":"\nSets a matrix keyvalue"},"material_methods:getVector":{"summary":"\nReturns a vector keyvalue ","ret":"The string id of the texture","class":"function","private":false,"classlib":"Material","fname":"getVector","realm":"cl","param":{"1":"key","key":"The key to get the vector from"},"name":"material_methods:getVector","description":"\nReturns a vector keyvalue"},"material_library.createFromImage":{"summary":"\nCreates a .jpg or .png material from file \nCan't be modified ","class":"function","private":false,"param":{"1":"path","2":"params","path":"The path to the image file","params":"The shader parameters to apply to the material. See http://wiki.garrysmod.com/page/Material_Parameters"},"fname":"createFromImage","realm":"cl","description":"\nCreates a .jpg or .png material from file \nCan't be modified","name":"material_library.createFromImage","library":"material"},"material_methods:setInt":{"summary":"\nSets an int keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setInt","realm":"cl","name":"material_methods:setInt","classlib":"Material","description":"\nSets an int keyvalue"},"material_methods:destroy":{"summary":"\nFree's a user created material allowing you to create others ","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"material_methods:destroy","classlib":"Material","description":"\nFree's a user created material allowing you to create others"},"material_methods:setFloat":{"summary":"\nSets a float keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setFloat","realm":"cl","name":"material_methods:setFloat","classlib":"Material","description":"\nSets a float keyvalue"},"material_library.create":{"summary":"\nCreates a new blank material ","class":"function","private":false,"param":{"1":"shader","shader":"The shader of the material. Must be one of \nUnlitGeneric \nVertexLitGeneric \nRefract_DX90 \nWater_DX90 \nSky_DX9 \ngmodscreenspace \nModulate_DX9"},"fname":"create","realm":"cl","description":"\nCreates a new blank material","name":"material_library.create","library":"material"},"material_methods:getKeyValues":{"summary":"\nReturns a table of material keyvalues ","ret":"The table of keyvalues","class":"function","private":false,"classlib":"Material","fname":"getKeyValues","realm":"cl","param":[],"name":"material_methods:getKeyValues","description":"\nReturns a table of material keyvalues"},"material_library.getShader":{"summary":"\nReturns the shader name of a material ","ret":"The shader name of the material","class":"function","private":false,"library":"material","fname":"getShader","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getShader","description":"\nReturns the shader name of a material"},"material_methods:getMatrix":{"summary":"\nReturns a matrix keyvalue ","ret":"The matrix value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getMatrix","realm":"cl","param":{"1":"key","key":"The key to get the matrix from"},"name":"material_methods:getMatrix","description":"\nReturns a matrix keyvalue"},"material_library.load":{"summary":"\nLoads a .vmt material or existing material.","ret":"The material object. Can't be modified.","class":"function","private":false,"library":"material","fname":"load","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.load","description":"\nLoads a .vmt material or existing material. Throws an error if the material fails to load \nExisting created materials can be loaded with ! prepended to the name \nCan't be modified"},"material_library.getHeight":{"summary":"\nReturns the height of the member texture set for $basetexture of a material ","ret":"The basetexture's height","class":"function","private":false,"library":"material","fname":"getHeight","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getHeight","description":"\nReturns the height of the member texture set for $basetexture of a material"},"material_methods:getHeight":{"summary":"\nGets the base texture set to the material's height ","ret":"The basetexture's height","class":"function","private":false,"classlib":"Material","fname":"getHeight","realm":"cl","param":[],"name":"material_methods:getHeight","description":"\nGets the base texture set to the material's height"},"material_methods:getName":{"summary":"\nReturns the material's engine name ","ret":"The name of the material. If this material is user created, add ! to the beginning of this to use it with entity.setMaterial","class":"function","private":false,"classlib":"Material","fname":"getName","realm":"cl","param":[],"name":"material_methods:getName","description":"\nReturns the material's engine name"},"material_methods:getVectorLinear":{"summary":"\nReturns a linear color-corrected vector keyvalue ","ret":"The vector value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getVectorLinear","realm":"cl","param":{"1":"key","key":"The key to get the vector from"},"name":"material_methods:getVectorLinear","description":"\nReturns a linear color-corrected vector keyvalue"},"material_library.getVector":{"summary":"\nReturns a vector keyvalue of a material ","ret":"The string id of the texture","class":"function","private":false,"library":"material","fname":"getVector","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the vector from"},"name":"material_library.getVector","description":"\nReturns a vector keyvalue of a material"}},"libraries":{"1":"material","material":{"summary":"\n`material` library is allows creating material objects which are used for controlling shaders in rendering.","tables":[],"client":true,"libtbl":"material_library","fields":[],"class":"library","functions":{"1":"create","2":"createFromImage","3":"getColor","4":"getFloat","5":"getHeight","6":"getInt","7":"getKeyValues","8":"getMatrix","9":"getName","10":"getShader","11":"getString","12":"getTexture","13":"getVector","14":"getVectorLinear","15":"getWidth","16":"load","getFloat":{"summary":"\nReturns a float keyvalue of a material ","ret":"The float value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getFloat","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the float from"},"name":"material_library.getFloat","description":"\nReturns a float keyvalue of a material"},"createFromImage":{"summary":"\nCreates a .jpg or .png material from file \nCan't be modified ","class":"function","private":false,"param":{"1":"path","2":"params","path":"The path to the image file","params":"The shader parameters to apply to the material. See http://wiki.garrysmod.com/page/Material_Parameters"},"fname":"createFromImage","realm":"cl","description":"\nCreates a .jpg or .png material from file \nCan't be modified","name":"material_library.createFromImage","library":"material"},"create":{"summary":"\nCreates a new blank material ","class":"function","private":false,"param":{"1":"shader","shader":"The shader of the material. Must be one of \nUnlitGeneric \nVertexLitGeneric \nRefract_DX90 \nWater_DX90 \nSky_DX9 \ngmodscreenspace \nModulate_DX9"},"fname":"create","realm":"cl","description":"\nCreates a new blank material","name":"material_library.create","library":"material"},"getMatrix":{"summary":"\nReturns a matrix keyvalue of a material ","ret":"The matrix value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getMatrix","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the matrix from"},"name":"material_library.getMatrix","description":"\nReturns a matrix keyvalue of a material"},"getVectorLinear":{"summary":"\nReturns a linear color-corrected vector keyvalue of a material ","ret":"The vector value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getVectorLinear","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the vector from"},"name":"material_library.getVectorLinear","description":"\nReturns a linear color-corrected vector keyvalue of a material"},"getKeyValues":{"summary":"\nReturns a table of keyvalues from a material ","ret":"The table of keyvalues","class":"function","private":false,"library":"material","fname":"getKeyValues","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getKeyValues","description":"\nReturns a table of keyvalues from a material"},"getName":{"summary":"\nReturns a material's engine name ","ret":"The name of a material. If this material is user created, add ! to the beginning of this to use it with entity.setMaterial","class":"function","private":false,"library":"material","fname":"getName","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getName","description":"\nReturns a material's engine name"},"getShader":{"summary":"\nReturns the shader name of a material ","ret":"The shader name of the material","class":"function","private":false,"library":"material","fname":"getShader","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getShader","description":"\nReturns the shader name of a material"},"getInt":{"summary":"\nReturns an int keyvalue of a material ","ret":"The int value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getInt","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the int from"},"name":"material_library.getInt","description":"\nReturns an int keyvalue of a material"},"load":{"summary":"\nLoads a .vmt material or existing material.","ret":"The material object. Can't be modified.","class":"function","private":false,"library":"material","fname":"load","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.load","description":"\nLoads a .vmt material or existing material. Throws an error if the material fails to load \nExisting created materials can be loaded with ! prepended to the name \nCan't be modified"},"getTexture":{"summary":"\nGets a texture from a material ","ret":"The texture's name","class":"function","private":false,"library":"material","fname":"getTexture","realm":"cl","param":{"1":"path","2":"texture","path":"The path of the material (don't include .vmt in the path)","texture":"The texture key to get"},"name":"material_library.getTexture","description":"\nGets a texture from a material"},"getString":{"summary":"\nReturns a string keyvalue ","ret":"The string value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getString","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the string from"},"name":"material_library.getString","description":"\nReturns a string keyvalue"},"getVector":{"summary":"\nReturns a vector keyvalue of a material ","ret":"The string id of the texture","class":"function","private":false,"library":"material","fname":"getVector","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the vector from"},"name":"material_library.getVector","description":"\nReturns a vector keyvalue of a material"},"getWidth":{"summary":"\nReturns the width of the member texture set for $basetexture of a material ","ret":"The basetexture's width","class":"function","private":false,"library":"material","fname":"getWidth","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getWidth","description":"\nReturns the width of the member texture set for $basetexture of a material"},"getColor":{"summary":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material.","ret":"The color value","class":"function","private":false,"library":"material","fname":"getColor","realm":"cl","param":{"1":"path","2":"x","3":"y","path":"The path of the material (don't include .vmt in the path)","x":"The x coordinate of the pixel","y":"The y coordinate of the pixel"},"name":"material_library.getColor","description":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material."},"getHeight":{"summary":"\nReturns the height of the member texture set for $basetexture of a material ","ret":"The basetexture's height","class":"function","private":false,"library":"material","fname":"getHeight","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getHeight","description":"\nReturns the height of the member texture set for $basetexture of a material"}},"name":"material","description":"\n`material` library is allows creating material objects which are used for controlling shaders in rendering."}},"type":"file","doc":[{"methods":{"1":"destroy","2":"getColor","3":"getFloat","4":"getHeight","5":"getInt","6":"getKeyValues","7":"getMatrix","8":"getName","9":"getShader","10":"getString","11":"getTexture","12":"getVector","13":"getVectorLinear","14":"getWidth","15":"recompute","16":"setFloat","17":"setInt","18":"setMatrix","19":"setString","20":"setTexture","21":"setTextureRenderTarget","22":"setTextureURL","23":"setUndefined","24":"setVector","getFloat":{"summary":"\nReturns a float keyvalue ","ret":"The float value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getFloat","realm":"cl","param":{"1":"key","key":"The key to get the float from"},"name":"material_methods:getFloat","description":"\nReturns a float keyvalue"},"recompute":{"summary":"\nRefreshes the material.","class":"function","private":false,"param":[],"fname":"recompute","realm":"cl","name":"material_methods:recompute","classlib":"Material","description":"\nRefreshes the material. Sometimes needed for certain parameters to update"},"getMatrix":{"summary":"\nReturns a matrix keyvalue ","ret":"The matrix value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getMatrix","realm":"cl","param":{"1":"key","key":"The key to get the matrix from"},"name":"material_methods:getMatrix","description":"\nReturns a matrix keyvalue"},"getColor":{"summary":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material.","ret":"The color value","class":"function","private":false,"classlib":"Material","fname":"getColor","realm":"cl","param":{"1":"x","2":"y","y":"The y coordinate of the pixel","x":"The x coordinate of the pixel"},"name":"material_methods:getColor","description":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material."},"getShader":{"summary":"\nReturns the shader name of the material ","ret":"The shader name of the material","class":"function","private":false,"classlib":"Material","fname":"getShader","realm":"cl","param":[],"name":"material_methods:getShader","description":"\nReturns the shader name of the material"},"setInt":{"summary":"\nSets an int keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setInt","realm":"cl","name":"material_methods:setInt","classlib":"Material","description":"\nSets an int keyvalue"},"getTexture":{"summary":"\nReturns a texture id keyvalue ","ret":"The string id of the texture or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getTexture","realm":"cl","param":{"1":"key","key":"The key to get the texture from"},"name":"material_methods:getTexture","description":"\nReturns a texture id keyvalue"},"setFloat":{"summary":"\nSets a float keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setFloat","realm":"cl","name":"material_methods:setFloat","classlib":"Material","description":"\nSets a float keyvalue"},"setTexture":{"summary":"\nSets a texture keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set. $basetexture is the key name for most purposes.","v":"The texture name to set it to."},"fname":"setTexture","realm":"cl","name":"material_methods:setTexture","classlib":"Material","description":"\nSets a texture keyvalue"},"setUndefined":{"summary":"\nSets a keyvalue to be undefined ","class":"function","private":false,"param":{"1":"key","key":"The key name to set"},"fname":"setUndefined","realm":"cl","name":"material_methods:setUndefined","classlib":"Material","description":"\nSets a keyvalue to be undefined"},"getInt":{"summary":"\nReturns an int keyvalue ","ret":"The int value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getInt","realm":"cl","param":{"1":"key","key":"The key to get the int from"},"name":"material_methods:getInt","description":"\nReturns an int keyvalue"},"getVectorLinear":{"summary":"\nReturns a linear color-corrected vector keyvalue ","ret":"The vector value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getVectorLinear","realm":"cl","param":{"1":"key","key":"The key to get the vector from"},"name":"material_methods:getVectorLinear","description":"\nReturns a linear color-corrected vector keyvalue"},"setTextureURL":{"summary":"\nLoads an online image or base64 data to the specified texture key ","class":"function","private":false,"param":{"1":"key","2":"url","3":"cb","4":"done","url":"The url or base64 data","done":"An optional callback called when the image is done loading. Passes the material, url","key":"The key name to set. $basetexture is the key name for most purposes.","cb":"An optional callback called when image is loaded. Passes nil if it fails or Passes the material, url, width, height, and layout function which can be called with x, y, w, h to reposition the image in the texture"},"fname":"setTextureURL","realm":"cl","name":"material_methods:setTextureURL","classlib":"Material","description":"\nLoads an online image or base64 data to the specified texture key"},"getKeyValues":{"summary":"\nReturns a table of material keyvalues ","ret":"The table of keyvalues","class":"function","private":false,"classlib":"Material","fname":"getKeyValues","realm":"cl","param":[],"name":"material_methods:getKeyValues","description":"\nReturns a table of material keyvalues"},"getName":{"summary":"\nReturns the material's engine name ","ret":"The name of the material. If this material is user created, add ! to the beginning of this to use it with entity.setMaterial","class":"function","private":false,"classlib":"Material","fname":"getName","realm":"cl","param":[],"name":"material_methods:getName","description":"\nReturns the material's engine name"},"destroy":{"summary":"\nFree's a user created material allowing you to create others ","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"material_methods:destroy","classlib":"Material","description":"\nFree's a user created material allowing you to create others"},"setVector":{"summary":"\nSets a vector keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setVector","realm":"cl","name":"material_methods:setVector","classlib":"Material","description":"\nSets a vector keyvalue"},"setString":{"summary":"\nSets a string keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setString","realm":"cl","name":"material_methods:setString","classlib":"Material","description":"\nSets a string keyvalue"},"setMatrix":{"summary":"\nSets a matrix keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setMatrix","realm":"cl","name":"material_methods:setMatrix","classlib":"Material","description":"\nSets a matrix keyvalue"},"getString":{"summary":"\nReturns a string keyvalue ","ret":"The string value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getString","realm":"cl","param":{"1":"key","key":"The key to get the string from"},"name":"material_methods:getString","description":"\nReturns a string keyvalue"},"getVector":{"summary":"\nReturns a vector keyvalue ","ret":"The string id of the texture","class":"function","private":false,"classlib":"Material","fname":"getVector","realm":"cl","param":{"1":"key","key":"The key to get the vector from"},"name":"material_methods:getVector","description":"\nReturns a vector keyvalue"},"setTextureRenderTarget":{"summary":"\nSets a rendertarget texture to the specified texture key ","class":"function","private":false,"param":{"1":"key","2":"name","key":"The key name to set. $basetexture is the key name for most purposes.","name":"The name of the rendertarget"},"fname":"setTextureRenderTarget","realm":"cl","name":"material_methods:setTextureRenderTarget","classlib":"Material","description":"\nSets a rendertarget texture to the specified texture key"},"getWidth":{"summary":"\nGets the base texture set to the material's width ","ret":"The basetexture's width","class":"function","private":false,"classlib":"Material","fname":"getWidth","realm":"cl","param":[],"name":"material_methods:getWidth","description":"\nGets the base texture set to the material's width"},"getHeight":{"summary":"\nGets the base texture set to the material's height ","ret":"The basetexture's height","class":"function","private":false,"classlib":"Material","fname":"getHeight","realm":"cl","param":[],"name":"material_methods:getHeight","description":"\nGets the base texture set to the material's height"}},"class":"class","client":true,"fields":[],"summary":"\nThe `Material` type is used to control shaders in rendering.","typtbl":"material_methods","name":"Material","description":"\nThe `Material` type is used to control shaders in rendering. \nFor a list of shader parameters, see https://developer.valvesoftware.com/wiki/Category:List_of_Shader_Parameters \nFor a list of $flags and $flags2, see https://developer.valvesoftware.com/wiki/Material_Flags"},{"summary":"\n`material` library is allows creating material objects which are used for controlling shaders in rendering.","tables":[],"client":true,"libtbl":"material_library","fields":[],"class":"library","functions":{"1":"create","2":"createFromImage","3":"getColor","4":"getFloat","5":"getHeight","6":"getInt","7":"getKeyValues","8":"getMatrix","9":"getName","10":"getShader","11":"getString","12":"getTexture","13":"getVector","14":"getVectorLinear","15":"getWidth","16":"load","getFloat":{"summary":"\nReturns a float keyvalue of a material ","ret":"The float value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getFloat","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the float from"},"name":"material_library.getFloat","description":"\nReturns a float keyvalue of a material"},"createFromImage":{"summary":"\nCreates a .jpg or .png material from file \nCan't be modified ","class":"function","private":false,"param":{"1":"path","2":"params","path":"The path to the image file","params":"The shader parameters to apply to the material. See http://wiki.garrysmod.com/page/Material_Parameters"},"fname":"createFromImage","realm":"cl","description":"\nCreates a .jpg or .png material from file \nCan't be modified","name":"material_library.createFromImage","library":"material"},"create":{"summary":"\nCreates a new blank material ","class":"function","private":false,"param":{"1":"shader","shader":"The shader of the material. Must be one of \nUnlitGeneric \nVertexLitGeneric \nRefract_DX90 \nWater_DX90 \nSky_DX9 \ngmodscreenspace \nModulate_DX9"},"fname":"create","realm":"cl","description":"\nCreates a new blank material","name":"material_library.create","library":"material"},"getMatrix":{"summary":"\nReturns a matrix keyvalue of a material ","ret":"The matrix value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getMatrix","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the matrix from"},"name":"material_library.getMatrix","description":"\nReturns a matrix keyvalue of a material"},"getVectorLinear":{"summary":"\nReturns a linear color-corrected vector keyvalue of a material ","ret":"The vector value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getVectorLinear","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the vector from"},"name":"material_library.getVectorLinear","description":"\nReturns a linear color-corrected vector keyvalue of a material"},"getKeyValues":{"summary":"\nReturns a table of keyvalues from a material ","ret":"The table of keyvalues","class":"function","private":false,"library":"material","fname":"getKeyValues","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getKeyValues","description":"\nReturns a table of keyvalues from a material"},"getName":{"summary":"\nReturns a material's engine name ","ret":"The name of a material. If this material is user created, add ! to the beginning of this to use it with entity.setMaterial","class":"function","private":false,"library":"material","fname":"getName","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getName","description":"\nReturns a material's engine name"},"getShader":{"summary":"\nReturns the shader name of a material ","ret":"The shader name of the material","class":"function","private":false,"library":"material","fname":"getShader","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getShader","description":"\nReturns the shader name of a material"},"getInt":{"summary":"\nReturns an int keyvalue of a material ","ret":"The int value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getInt","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the int from"},"name":"material_library.getInt","description":"\nReturns an int keyvalue of a material"},"load":{"summary":"\nLoads a .vmt material or existing material.","ret":"The material object. Can't be modified.","class":"function","private":false,"library":"material","fname":"load","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.load","description":"\nLoads a .vmt material or existing material. Throws an error if the material fails to load \nExisting created materials can be loaded with ! prepended to the name \nCan't be modified"},"getTexture":{"summary":"\nGets a texture from a material ","ret":"The texture's name","class":"function","private":false,"library":"material","fname":"getTexture","realm":"cl","param":{"1":"path","2":"texture","path":"The path of the material (don't include .vmt in the path)","texture":"The texture key to get"},"name":"material_library.getTexture","description":"\nGets a texture from a material"},"getString":{"summary":"\nReturns a string keyvalue ","ret":"The string value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getString","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the string from"},"name":"material_library.getString","description":"\nReturns a string keyvalue"},"getVector":{"summary":"\nReturns a vector keyvalue of a material ","ret":"The string id of the texture","class":"function","private":false,"library":"material","fname":"getVector","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the vector from"},"name":"material_library.getVector","description":"\nReturns a vector keyvalue of a material"},"getWidth":{"summary":"\nReturns the width of the member texture set for $basetexture of a material ","ret":"The basetexture's width","class":"function","private":false,"library":"material","fname":"getWidth","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getWidth","description":"\nReturns the width of the member texture set for $basetexture of a material"},"getColor":{"summary":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material.","ret":"The color value","class":"function","private":false,"library":"material","fname":"getColor","realm":"cl","param":{"1":"path","2":"x","3":"y","path":"The path of the material (don't include .vmt in the path)","x":"The x coordinate of the pixel","y":"The y coordinate of the pixel"},"name":"material_library.getColor","description":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material."},"getHeight":{"summary":"\nReturns the height of the member texture set for $basetexture of a material ","ret":"The basetexture's height","class":"function","private":false,"library":"material","fname":"getHeight","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getHeight","description":"\nReturns the height of the member texture set for $basetexture of a material"}},"name":"material","description":"\n`material` library is allows creating material objects which are used for controlling shaders in rendering."},{"summary":"\nLoads a .vmt material or existing material.","ret":"The material object. Can't be modified.","class":"function","private":false,"library":"material","fname":"load","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.load","description":"\nLoads a .vmt material or existing material. Throws an error if the material fails to load \nExisting created materials can be loaded with ! prepended to the name \nCan't be modified"},{"summary":"\nGets a texture from a material ","ret":"The texture's name","class":"function","private":false,"library":"material","fname":"getTexture","realm":"cl","param":{"1":"path","2":"texture","path":"The path of the material (don't include .vmt in the path)","texture":"The texture key to get"},"name":"material_library.getTexture","description":"\nGets a texture from a material"},{"summary":"\nReturns a table of keyvalues from a material ","ret":"The table of keyvalues","class":"function","private":false,"library":"material","fname":"getKeyValues","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getKeyValues","description":"\nReturns a table of keyvalues from a material"},{"summary":"\nReturns a material's engine name ","ret":"The name of a material. If this material is user created, add ! to the beginning of this to use it with entity.setMaterial","class":"function","private":false,"library":"material","fname":"getName","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getName","description":"\nReturns a material's engine name"},{"summary":"\nReturns the shader name of a material ","ret":"The shader name of the material","class":"function","private":false,"library":"material","fname":"getShader","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getShader","description":"\nReturns the shader name of a material"},{"summary":"\nReturns the width of the member texture set for $basetexture of a material ","ret":"The basetexture's width","class":"function","private":false,"library":"material","fname":"getWidth","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getWidth","description":"\nReturns the width of the member texture set for $basetexture of a material"},{"summary":"\nReturns the height of the member texture set for $basetexture of a material ","ret":"The basetexture's height","class":"function","private":false,"library":"material","fname":"getHeight","realm":"cl","param":{"1":"path","path":"The path of the material (don't include .vmt in the path)"},"name":"material_library.getHeight","description":"\nReturns the height of the member texture set for $basetexture of a material"},{"summary":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material.","ret":"The color value","class":"function","private":false,"library":"material","fname":"getColor","realm":"cl","param":{"1":"path","2":"x","3":"y","path":"The path of the material (don't include .vmt in the path)","x":"The x coordinate of the pixel","y":"The y coordinate of the pixel"},"name":"material_library.getColor","description":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material."},{"summary":"\nReturns a float keyvalue of a material ","ret":"The float value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getFloat","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the float from"},"name":"material_library.getFloat","description":"\nReturns a float keyvalue of a material"},{"summary":"\nReturns an int keyvalue of a material ","ret":"The int value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getInt","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the int from"},"name":"material_library.getInt","description":"\nReturns an int keyvalue of a material"},{"summary":"\nReturns a matrix keyvalue of a material ","ret":"The matrix value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getMatrix","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the matrix from"},"name":"material_library.getMatrix","description":"\nReturns a matrix keyvalue of a material"},{"summary":"\nReturns a string keyvalue ","ret":"The string value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getString","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the string from"},"name":"material_library.getString","description":"\nReturns a string keyvalue"},{"summary":"\nReturns a vector keyvalue of a material ","ret":"The string id of the texture","class":"function","private":false,"library":"material","fname":"getVector","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the vector from"},"name":"material_library.getVector","description":"\nReturns a vector keyvalue of a material"},{"summary":"\nReturns a linear color-corrected vector keyvalue of a material ","ret":"The vector value or nil if it doesn't exist","class":"function","private":false,"library":"material","fname":"getVectorLinear","realm":"cl","param":{"1":"path","2":"key","path":"The path of the material (don't include .vmt in the path)","key":"The key to get the vector from"},"name":"material_library.getVectorLinear","description":"\nReturns a linear color-corrected vector keyvalue of a material"},{"summary":"\nCreates a new blank material ","class":"function","private":false,"param":{"1":"shader","shader":"The shader of the material. Must be one of \nUnlitGeneric \nVertexLitGeneric \nRefract_DX90 \nWater_DX90 \nSky_DX9 \ngmodscreenspace \nModulate_DX9"},"fname":"create","realm":"cl","description":"\nCreates a new blank material","name":"material_library.create","library":"material"},{"summary":"\nCreates a .jpg or .png material from file \nCan't be modified ","class":"function","private":false,"param":{"1":"path","2":"params","path":"The path to the image file","params":"The shader parameters to apply to the material. See http://wiki.garrysmod.com/page/Material_Parameters"},"fname":"createFromImage","realm":"cl","description":"\nCreates a .jpg or .png material from file \nCan't be modified","name":"material_library.createFromImage","library":"material"},{"summary":"\nFree's a user created material allowing you to create others ","class":"function","private":false,"param":[],"fname":"destroy","realm":"cl","name":"material_methods:destroy","classlib":"Material","description":"\nFree's a user created material allowing you to create others"},{"summary":"\nReturns the material's engine name ","ret":"The name of the material. If this material is user created, add ! to the beginning of this to use it with entity.setMaterial","class":"function","private":false,"classlib":"Material","fname":"getName","realm":"cl","param":[],"name":"material_methods:getName","description":"\nReturns the material's engine name"},{"summary":"\nReturns the shader name of the material ","ret":"The shader name of the material","class":"function","private":false,"classlib":"Material","fname":"getShader","realm":"cl","param":[],"name":"material_methods:getShader","description":"\nReturns the shader name of the material"},{"summary":"\nGets the base texture set to the material's width ","ret":"The basetexture's width","class":"function","private":false,"classlib":"Material","fname":"getWidth","realm":"cl","param":[],"name":"material_methods:getWidth","description":"\nGets the base texture set to the material's width"},{"summary":"\nGets the base texture set to the material's height ","ret":"The basetexture's height","class":"function","private":false,"classlib":"Material","fname":"getHeight","realm":"cl","param":[],"name":"material_methods:getHeight","description":"\nGets the base texture set to the material's height"},{"summary":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material.","ret":"The color value","class":"function","private":false,"classlib":"Material","fname":"getColor","realm":"cl","param":{"1":"x","2":"y","y":"The y coordinate of the pixel","x":"The x coordinate of the pixel"},"name":"material_methods:getColor","description":"\nReturns a color pixel value of the $basetexture of a .png or .jpg material."},{"summary":"\nReturns a float keyvalue ","ret":"The float value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getFloat","realm":"cl","param":{"1":"key","key":"The key to get the float from"},"name":"material_methods:getFloat","description":"\nReturns a float keyvalue"},{"summary":"\nReturns an int keyvalue ","ret":"The int value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getInt","realm":"cl","param":{"1":"key","key":"The key to get the int from"},"name":"material_methods:getInt","description":"\nReturns an int keyvalue"},{"summary":"\nReturns a table of material keyvalues ","ret":"The table of keyvalues","class":"function","private":false,"classlib":"Material","fname":"getKeyValues","realm":"cl","param":[],"name":"material_methods:getKeyValues","description":"\nReturns a table of material keyvalues"},{"summary":"\nReturns a matrix keyvalue ","ret":"The matrix value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getMatrix","realm":"cl","param":{"1":"key","key":"The key to get the matrix from"},"name":"material_methods:getMatrix","description":"\nReturns a matrix keyvalue"},{"summary":"\nReturns a string keyvalue ","ret":"The string value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getString","realm":"cl","param":{"1":"key","key":"The key to get the string from"},"name":"material_methods:getString","description":"\nReturns a string keyvalue"},{"summary":"\nReturns a texture id keyvalue ","ret":"The string id of the texture or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getTexture","realm":"cl","param":{"1":"key","key":"The key to get the texture from"},"name":"material_methods:getTexture","description":"\nReturns a texture id keyvalue"},{"summary":"\nReturns a vector keyvalue ","ret":"The string id of the texture","class":"function","private":false,"classlib":"Material","fname":"getVector","realm":"cl","param":{"1":"key","key":"The key to get the vector from"},"name":"material_methods:getVector","description":"\nReturns a vector keyvalue"},{"summary":"\nReturns a linear color-corrected vector keyvalue ","ret":"The vector value or nil if it doesn't exist","class":"function","private":false,"classlib":"Material","fname":"getVectorLinear","realm":"cl","param":{"1":"key","key":"The key to get the vector from"},"name":"material_methods:getVectorLinear","description":"\nReturns a linear color-corrected vector keyvalue"},{"summary":"\nRefreshes the material.","class":"function","private":false,"param":[],"fname":"recompute","realm":"cl","name":"material_methods:recompute","classlib":"Material","description":"\nRefreshes the material. Sometimes needed for certain parameters to update"},{"summary":"\nSets a float keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setFloat","realm":"cl","name":"material_methods:setFloat","classlib":"Material","description":"\nSets a float keyvalue"},{"summary":"\nSets an int keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setInt","realm":"cl","name":"material_methods:setInt","classlib":"Material","description":"\nSets an int keyvalue"},{"summary":"\nSets a matrix keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setMatrix","realm":"cl","name":"material_methods:setMatrix","classlib":"Material","description":"\nSets a matrix keyvalue"},{"summary":"\nSets a string keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setString","realm":"cl","name":"material_methods:setString","classlib":"Material","description":"\nSets a string keyvalue"},{"summary":"\nSets a texture keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set. $basetexture is the key name for most purposes.","v":"The texture name to set it to."},"fname":"setTexture","realm":"cl","name":"material_methods:setTexture","classlib":"Material","description":"\nSets a texture keyvalue"},{"summary":"\nLoads an online image or base64 data to the specified texture key ","class":"function","private":false,"param":{"1":"key","2":"url","3":"cb","4":"done","url":"The url or base64 data","done":"An optional callback called when the image is done loading. Passes the material, url","key":"The key name to set. $basetexture is the key name for most purposes.","cb":"An optional callback called when image is loaded. Passes nil if it fails or Passes the material, url, width, height, and layout function which can be called with x, y, w, h to reposition the image in the texture"},"fname":"setTextureURL","realm":"cl","name":"material_methods:setTextureURL","classlib":"Material","description":"\nLoads an online image or base64 data to the specified texture key"},{"summary":"\nSets a rendertarget texture to the specified texture key ","class":"function","private":false,"param":{"1":"key","2":"name","key":"The key name to set. $basetexture is the key name for most purposes.","name":"The name of the rendertarget"},"fname":"setTextureRenderTarget","realm":"cl","name":"material_methods:setTextureRenderTarget","classlib":"Material","description":"\nSets a rendertarget texture to the specified texture key"},{"summary":"\nSets a keyvalue to be undefined ","class":"function","private":false,"param":{"1":"key","key":"The key name to set"},"fname":"setUndefined","realm":"cl","name":"material_methods:setUndefined","classlib":"Material","description":"\nSets a keyvalue to be undefined"},{"summary":"\nSets a vector keyvalue ","class":"function","private":false,"param":{"1":"key","2":"v","key":"The key name to set","v":"The value to set it to"},"fname":"setVector","realm":"cl","name":"material_methods:setVector","classlib":"Material","description":"\nSets a vector keyvalue"}],"name":"libs_cl/material.lua","description":"\nThe `Material` type is used to control shaders in rendering. \nFor a list of shader parameters, see https://developer.valvesoftware.com/wiki/Category:List_of_Shader_Parameters \nFor a list of $flags and $flags2, see https://developer.valvesoftware.com/wiki/Material_Flags"},"libs_sh/bit.lua":{"summary":"\n \nBit functions \n ","tables":[],"functions":{"1":"bit_library.stringstream","2":"ss_methods:getBuffer","3":"ss_methods:getString","4":"ss_methods:read","5":"ss_methods:readDouble","6":"ss_methods:readFloat","7":"ss_methods:readInt16","8":"ss_methods:readInt32","9":"ss_methods:readInt8","10":"ss_methods:readString","11":"ss_methods:readUInt16","12":"ss_methods:readUInt32","13":"ss_methods:readUInt8","14":"ss_methods:readUntil","15":"ss_methods:seek","16":"ss_methods:setEndian","17":"ss_methods:size","18":"ss_methods:skip","19":"ss_methods:tell","20":"ss_methods:write","21":"ss_methods:writeDouble","22":"ss_methods:writeFloat","23":"ss_methods:writeInt16","24":"ss_methods:writeInt32","25":"ss_methods:writeInt8","26":"ss_methods:writeString","ss_methods:readInt8":{"summary":"\nReads a signed 8-bit (one byte) integer from the byte stream and advances the buffer pointer.","ret":"The int8 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt8","realm":"sh","param":[],"name":"ss_methods:readInt8","description":"\nReads a signed 8-bit (one byte) integer from the byte stream and advances the buffer pointer."},"ss_methods:writeDouble":{"summary":"\nWrites a 8 byte IEEE754 double to the byte stream and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"The double to write"},"fname":"writeDouble","realm":"sh","name":"ss_methods:writeDouble","classlib":"StringStream","description":"\nWrites a 8 byte IEEE754 double to the byte stream and advances the buffer pointer."},"ss_methods:readDouble":{"summary":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer.","ret":"The float32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readDouble","realm":"sh","param":[],"name":"ss_methods:readDouble","description":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer."},"ss_methods:writeInt32":{"summary":"\nWrites an int to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int32 to write"},"fname":"writeInt32","realm":"sh","name":"ss_methods:writeInt32","classlib":"StringStream","description":"\nWrites an int to the buffer and advances the buffer pointer."},"ss_methods:setEndian":{"summary":"\nSets the endianness of the string stream ","class":"function","private":false,"param":{"1":"endian","endian":"The endianness of number types. \"big\" or \"little\" (default \"little\")"},"fname":"setEndian","realm":"sh","name":"ss_methods:setEndian","classlib":"StringStream","description":"\nSets the endianness of the string stream"},"ss_methods:readInt32":{"summary":"\nReads a signed 32-bit (four byte) integer from the byte stream and advances the buffer pointer.","ret":"The int32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt32","realm":"sh","param":[],"name":"ss_methods:readInt32","description":"\nReads a signed 32-bit (four byte) integer from the byte stream and advances the buffer pointer."},"ss_methods:getBuffer":{"summary":"\nReturns the internal buffer ","ret":"The buffer table","class":"function","private":false,"classlib":"StringStream","fname":"getBuffer","realm":"sh","param":[],"name":"ss_methods:getBuffer","description":"\nReturns the internal buffer"},"ss_methods:writeInt16":{"summary":"\nWrites a short to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int16 to write"},"fname":"writeInt16","realm":"sh","name":"ss_methods:writeInt16","classlib":"StringStream","description":"\nWrites a short to the buffer and advances the buffer pointer."},"ss_methods:size":{"summary":"\nTells the size of the byte stream.","ret":"The buffer size","class":"function","private":false,"classlib":"StringStream","fname":"size","realm":"sh","param":[],"name":"ss_methods:size","description":"\nTells the size of the byte stream."},"ss_methods:read":{"summary":"\nReads the specified number of bytes from the buffer and advances the buffer pointer.","ret":"A string containing the bytes","class":"function","private":false,"classlib":"StringStream","fname":"read","realm":"sh","param":{"1":"n","n":"How many bytes to read"},"name":"ss_methods:read","description":"\nReads the specified number of bytes from the buffer and advances the buffer pointer."},"ss_methods:getString":{"summary":"\nReturns the buffer as a string ","ret":"The buffer as a string","class":"function","private":false,"classlib":"StringStream","fname":"getString","realm":"sh","param":[],"name":"ss_methods:getString","description":"\nReturns the buffer as a string"},"ss_methods:readUInt32":{"summary":"\nReads an unsigned 32 bit (four byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt32","realm":"sh","param":[],"name":"ss_methods:readUInt32","description":"\nReads an unsigned 32 bit (four byte) integer from the byte stream and advances the buffer pointer."},"ss_methods:writeString":{"summary":"\nWrites a string to the buffer putting a null at the end and advances the buffer pointer.","class":"function","private":false,"param":{"1":"string","string":"The string of bytes to write"},"fname":"writeString","realm":"sh","name":"ss_methods:writeString","classlib":"StringStream","description":"\nWrites a string to the buffer putting a null at the end and advances the buffer pointer."},"ss_methods:readString":{"summary":"\nreturns a null terminated string, reads until \"\\x00\" and advances the buffer pointer.","ret":"The string of bytes read","class":"function","private":false,"classlib":"StringStream","fname":"readString","realm":"sh","param":[],"name":"ss_methods:readString","description":"\nreturns a null terminated string, reads until \"\\x00\" and advances the buffer pointer."},"ss_methods:readUInt16":{"summary":"\nReads an unsigned 16 bit (two byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint16 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt16","realm":"sh","param":[],"name":"ss_methods:readUInt16","description":"\nReads an unsigned 16 bit (two byte) integer from the byte stream and advances the buffer pointer."},"ss_methods:writeInt8":{"summary":"\nWrites a byte to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int8 to write"},"fname":"writeInt8","realm":"sh","name":"ss_methods:writeInt8","classlib":"StringStream","description":"\nWrites a byte to the buffer and advances the buffer pointer."},"bit_library.stringstream":{"summary":"\nCreates a StringStream object ","class":"function","private":false,"param":{"1":"stream","2":"i","3":"endian","i":"The initial buffer pointer (default 1)","endian":"The endianness of number types. \"big\" or \"little\" (default \"little\")","stream":"A string to set the initial buffer to (default \"\")"},"fname":"stringstream","realm":"sh","description":"\nCreates a StringStream object","name":"bit_library.stringstream","library":"bit"},"ss_methods:tell":{"summary":"\nReturns the internal position of the byte reader.","ret":"The buffer position","class":"function","private":false,"classlib":"StringStream","fname":"tell","realm":"sh","param":[],"name":"ss_methods:tell","description":"\nReturns the internal position of the byte reader."},"ss_methods:write":{"summary":"\nWrites the given string and advances the buffer pointer.","class":"function","private":false,"param":{"1":"bytes","bytes":"A string of bytes to write"},"fname":"write","realm":"sh","name":"ss_methods:write","classlib":"StringStream","description":"\nWrites the given string and advances the buffer pointer."},"ss_methods:readInt16":{"summary":"\nReads a signed 16-bit (two byte) integer from the byte stream and advances the buffer pointer.","ret":"The int16 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt16","realm":"sh","param":[],"name":"ss_methods:readInt16","description":"\nReads a signed 16-bit (two byte) integer from the byte stream and advances the buffer pointer."},"ss_methods:skip":{"summary":"\nMove the internal pointer by amount i ","class":"function","private":false,"param":{"1":"i","i":"The offset"},"fname":"skip","realm":"sh","name":"ss_methods:skip","classlib":"StringStream","description":"\nMove the internal pointer by amount i"},"ss_methods:writeFloat":{"summary":"\nWrites a 4 byte IEEE754 float to the byte stream and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"The float to write"},"fname":"writeFloat","realm":"sh","name":"ss_methods:writeFloat","classlib":"StringStream","description":"\nWrites a 4 byte IEEE754 float to the byte stream and advances the buffer pointer."},"ss_methods:readUInt8":{"summary":"\nReads an unsigned 8-bit (one byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint8 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt8","realm":"sh","param":[],"name":"ss_methods:readUInt8","description":"\nReads an unsigned 8-bit (one byte) integer from the byte stream and advances the buffer pointer."},"ss_methods:readFloat":{"summary":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer.","ret":"The float32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readFloat","realm":"sh","param":[],"name":"ss_methods:readFloat","description":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer."},"ss_methods:seek":{"summary":"\nSets internal pointer to i.","class":"function","private":false,"param":{"1":"i","i":"The position"},"fname":"seek","realm":"sh","name":"ss_methods:seek","classlib":"StringStream","description":"\nSets internal pointer to i. The position will be clamped to [1, buffersize+1]"},"ss_methods:readUntil":{"summary":"\nReads until the given byte and advances the buffer pointer.","ret":"The string of bytes read","class":"function","private":false,"classlib":"StringStream","fname":"readUntil","realm":"sh","param":{"1":"byte","byte":"The byte to read until (in number form)"},"name":"ss_methods:readUntil","description":"\nReads until the given byte and advances the buffer pointer."}},"libraries":{"1":"bit","bit":{"server":true,"tables":[],"client":true,"summary":"\nBit library http://wiki.garrysmod.com/page/Category:bit ","libtbl":"bit_library","fields":[],"class":"library","functions":{"1":"stringstream","stringstream":{"summary":"\nCreates a StringStream object ","class":"function","private":false,"param":{"1":"stream","2":"i","3":"endian","i":"The initial buffer pointer (default 1)","endian":"The endianness of number types. \"big\" or \"little\" (default \"little\")","stream":"A string to set the initial buffer to (default \"\")"},"fname":"stringstream","realm":"sh","description":"\nCreates a StringStream object","name":"bit_library.stringstream","library":"bit"}},"name":"bit","description":"\nBit library http://wiki.garrysmod.com/page/Category:bit"}},"type":"file","doc":[{"summary":"\n \nBit functions \n ","description":"\n \nBit functions \n"},{"server":true,"tables":[],"client":true,"summary":"\nBit library http://wiki.garrysmod.com/page/Category:bit ","libtbl":"bit_library","fields":[],"class":"library","functions":{"1":"stringstream","stringstream":{"summary":"\nCreates a StringStream object ","class":"function","private":false,"param":{"1":"stream","2":"i","3":"endian","i":"The initial buffer pointer (default 1)","endian":"The endianness of number types. \"big\" or \"little\" (default \"little\")","stream":"A string to set the initial buffer to (default \"\")"},"fname":"stringstream","realm":"sh","description":"\nCreates a StringStream object","name":"bit_library.stringstream","library":"bit"}},"name":"bit","description":"\nBit library http://wiki.garrysmod.com/page/Category:bit"},{"methods":{"1":"getBuffer","2":"getString","3":"read","4":"readDouble","5":"readFloat","6":"readInt16","7":"readInt32","8":"readInt8","9":"readString","10":"readUInt16","11":"readUInt32","12":"readUInt8","13":"readUntil","14":"seek","15":"setEndian","16":"size","17":"skip","18":"tell","19":"write","20":"writeDouble","21":"writeFloat","22":"writeInt16","23":"writeInt32","24":"writeInt8","25":"writeString","writeInt32":{"summary":"\nWrites an int to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int32 to write"},"fname":"writeInt32","realm":"sh","name":"ss_methods:writeInt32","classlib":"StringStream","description":"\nWrites an int to the buffer and advances the buffer pointer."},"readUInt32":{"summary":"\nReads an unsigned 32 bit (four byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt32","realm":"sh","param":[],"name":"ss_methods:readUInt32","description":"\nReads an unsigned 32 bit (four byte) integer from the byte stream and advances the buffer pointer."},"readUInt16":{"summary":"\nReads an unsigned 16 bit (two byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint16 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt16","realm":"sh","param":[],"name":"ss_methods:readUInt16","description":"\nReads an unsigned 16 bit (two byte) integer from the byte stream and advances the buffer pointer."},"read":{"summary":"\nReads the specified number of bytes from the buffer and advances the buffer pointer.","ret":"A string containing the bytes","class":"function","private":false,"classlib":"StringStream","fname":"read","realm":"sh","param":{"1":"n","n":"How many bytes to read"},"name":"ss_methods:read","description":"\nReads the specified number of bytes from the buffer and advances the buffer pointer."},"writeFloat":{"summary":"\nWrites a 4 byte IEEE754 float to the byte stream and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"The float to write"},"fname":"writeFloat","realm":"sh","name":"ss_methods:writeFloat","classlib":"StringStream","description":"\nWrites a 4 byte IEEE754 float to the byte stream and advances the buffer pointer."},"readString":{"summary":"\nreturns a null terminated string, reads until \"\\x00\" and advances the buffer pointer.","ret":"The string of bytes read","class":"function","private":false,"classlib":"StringStream","fname":"readString","realm":"sh","param":[],"name":"ss_methods:readString","description":"\nreturns a null terminated string, reads until \"\\x00\" and advances the buffer pointer."},"getString":{"summary":"\nReturns the buffer as a string ","ret":"The buffer as a string","class":"function","private":false,"classlib":"StringStream","fname":"getString","realm":"sh","param":[],"name":"ss_methods:getString","description":"\nReturns the buffer as a string"},"writeDouble":{"summary":"\nWrites a 8 byte IEEE754 double to the byte stream and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"The double to write"},"fname":"writeDouble","realm":"sh","name":"ss_methods:writeDouble","classlib":"StringStream","description":"\nWrites a 8 byte IEEE754 double to the byte stream and advances the buffer pointer."},"readInt8":{"summary":"\nReads a signed 8-bit (one byte) integer from the byte stream and advances the buffer pointer.","ret":"The int8 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt8","realm":"sh","param":[],"name":"ss_methods:readInt8","description":"\nReads a signed 8-bit (one byte) integer from the byte stream and advances the buffer pointer."},"getBuffer":{"summary":"\nReturns the internal buffer ","ret":"The buffer table","class":"function","private":false,"classlib":"StringStream","fname":"getBuffer","realm":"sh","param":[],"name":"ss_methods:getBuffer","description":"\nReturns the internal buffer"},"readInt16":{"summary":"\nReads a signed 16-bit (two byte) integer from the byte stream and advances the buffer pointer.","ret":"The int16 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt16","realm":"sh","param":[],"name":"ss_methods:readInt16","description":"\nReads a signed 16-bit (two byte) integer from the byte stream and advances the buffer pointer."},"setEndian":{"summary":"\nSets the endianness of the string stream ","class":"function","private":false,"param":{"1":"endian","endian":"The endianness of number types. \"big\" or \"little\" (default \"little\")"},"fname":"setEndian","realm":"sh","name":"ss_methods:setEndian","classlib":"StringStream","description":"\nSets the endianness of the string stream"},"readUntil":{"summary":"\nReads until the given byte and advances the buffer pointer.","ret":"The string of bytes read","class":"function","private":false,"classlib":"StringStream","fname":"readUntil","realm":"sh","param":{"1":"byte","byte":"The byte to read until (in number form)"},"name":"ss_methods:readUntil","description":"\nReads until the given byte and advances the buffer pointer."},"readUInt8":{"summary":"\nReads an unsigned 8-bit (one byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint8 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt8","realm":"sh","param":[],"name":"ss_methods:readUInt8","description":"\nReads an unsigned 8-bit (one byte) integer from the byte stream and advances the buffer pointer."},"writeInt16":{"summary":"\nWrites a short to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int16 to write"},"fname":"writeInt16","realm":"sh","name":"ss_methods:writeInt16","classlib":"StringStream","description":"\nWrites a short to the buffer and advances the buffer pointer."},"writeInt8":{"summary":"\nWrites a byte to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int8 to write"},"fname":"writeInt8","realm":"sh","name":"ss_methods:writeInt8","classlib":"StringStream","description":"\nWrites a byte to the buffer and advances the buffer pointer."},"write":{"summary":"\nWrites the given string and advances the buffer pointer.","class":"function","private":false,"param":{"1":"bytes","bytes":"A string of bytes to write"},"fname":"write","realm":"sh","name":"ss_methods:write","classlib":"StringStream","description":"\nWrites the given string and advances the buffer pointer."},"readFloat":{"summary":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer.","ret":"The float32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readFloat","realm":"sh","param":[],"name":"ss_methods:readFloat","description":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer."},"readDouble":{"summary":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer.","ret":"The float32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readDouble","realm":"sh","param":[],"name":"ss_methods:readDouble","description":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer."},"readInt32":{"summary":"\nReads a signed 32-bit (four byte) integer from the byte stream and advances the buffer pointer.","ret":"The int32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt32","realm":"sh","param":[],"name":"ss_methods:readInt32","description":"\nReads a signed 32-bit (four byte) integer from the byte stream and advances the buffer pointer."},"skip":{"summary":"\nMove the internal pointer by amount i ","class":"function","private":false,"param":{"1":"i","i":"The offset"},"fname":"skip","realm":"sh","name":"ss_methods:skip","classlib":"StringStream","description":"\nMove the internal pointer by amount i"},"writeString":{"summary":"\nWrites a string to the buffer putting a null at the end and advances the buffer pointer.","class":"function","private":false,"param":{"1":"string","string":"The string of bytes to write"},"fname":"writeString","realm":"sh","name":"ss_methods:writeString","classlib":"StringStream","description":"\nWrites a string to the buffer putting a null at the end and advances the buffer pointer."},"tell":{"summary":"\nReturns the internal position of the byte reader.","ret":"The buffer position","class":"function","private":false,"classlib":"StringStream","fname":"tell","realm":"sh","param":[],"name":"ss_methods:tell","description":"\nReturns the internal position of the byte reader."},"seek":{"summary":"\nSets internal pointer to i.","class":"function","private":false,"param":{"1":"i","i":"The position"},"fname":"seek","realm":"sh","name":"ss_methods:seek","classlib":"StringStream","description":"\nSets internal pointer to i. The position will be clamped to [1, buffersize+1]"},"size":{"summary":"\nTells the size of the byte stream.","ret":"The buffer size","class":"function","private":false,"classlib":"StringStream","fname":"size","realm":"sh","param":[],"name":"ss_methods:size","description":"\nTells the size of the byte stream."}},"class":"class","fields":[],"summary":"\nStringStream type ","typtbl":"ss_methods","name":"StringStream","description":"\nStringStream type"},{"summary":"\nCreates a StringStream object ","class":"function","private":false,"param":{"1":"stream","2":"i","3":"endian","i":"The initial buffer pointer (default 1)","endian":"The endianness of number types. \"big\" or \"little\" (default \"little\")","stream":"A string to set the initial buffer to (default \"\")"},"fname":"stringstream","realm":"sh","description":"\nCreates a StringStream object","name":"bit_library.stringstream","library":"bit"},{"summary":"\nSets the endianness of the string stream ","class":"function","private":false,"param":{"1":"endian","endian":"The endianness of number types. \"big\" or \"little\" (default \"little\")"},"fname":"setEndian","realm":"sh","name":"ss_methods:setEndian","classlib":"StringStream","description":"\nSets the endianness of the string stream"},{"summary":"\nSets internal pointer to i.","class":"function","private":false,"param":{"1":"i","i":"The position"},"fname":"seek","realm":"sh","name":"ss_methods:seek","classlib":"StringStream","description":"\nSets internal pointer to i. The position will be clamped to [1, buffersize+1]"},{"summary":"\nMove the internal pointer by amount i ","class":"function","private":false,"param":{"1":"i","i":"The offset"},"fname":"skip","realm":"sh","name":"ss_methods:skip","classlib":"StringStream","description":"\nMove the internal pointer by amount i"},{"summary":"\nReturns the internal position of the byte reader.","ret":"The buffer position","class":"function","private":false,"classlib":"StringStream","fname":"tell","realm":"sh","param":[],"name":"ss_methods:tell","description":"\nReturns the internal position of the byte reader."},{"summary":"\nTells the size of the byte stream.","ret":"The buffer size","class":"function","private":false,"classlib":"StringStream","fname":"size","realm":"sh","param":[],"name":"ss_methods:size","description":"\nTells the size of the byte stream."},{"summary":"\nReads the specified number of bytes from the buffer and advances the buffer pointer.","ret":"A string containing the bytes","class":"function","private":false,"classlib":"StringStream","fname":"read","realm":"sh","param":{"1":"n","n":"How many bytes to read"},"name":"ss_methods:read","description":"\nReads the specified number of bytes from the buffer and advances the buffer pointer."},{"summary":"\nReads an unsigned 8-bit (one byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint8 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt8","realm":"sh","param":[],"name":"ss_methods:readUInt8","description":"\nReads an unsigned 8-bit (one byte) integer from the byte stream and advances the buffer pointer."},{"summary":"\nReads an unsigned 16 bit (two byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint16 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt16","realm":"sh","param":[],"name":"ss_methods:readUInt16","description":"\nReads an unsigned 16 bit (two byte) integer from the byte stream and advances the buffer pointer."},{"summary":"\nReads an unsigned 32 bit (four byte) integer from the byte stream and advances the buffer pointer.","ret":"The uint32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readUInt32","realm":"sh","param":[],"name":"ss_methods:readUInt32","description":"\nReads an unsigned 32 bit (four byte) integer from the byte stream and advances the buffer pointer."},{"summary":"\nReads a signed 8-bit (one byte) integer from the byte stream and advances the buffer pointer.","ret":"The int8 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt8","realm":"sh","param":[],"name":"ss_methods:readInt8","description":"\nReads a signed 8-bit (one byte) integer from the byte stream and advances the buffer pointer."},{"summary":"\nReads a signed 16-bit (two byte) integer from the byte stream and advances the buffer pointer.","ret":"The int16 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt16","realm":"sh","param":[],"name":"ss_methods:readInt16","description":"\nReads a signed 16-bit (two byte) integer from the byte stream and advances the buffer pointer."},{"summary":"\nReads a signed 32-bit (four byte) integer from the byte stream and advances the buffer pointer.","ret":"The int32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readInt32","realm":"sh","param":[],"name":"ss_methods:readInt32","description":"\nReads a signed 32-bit (four byte) integer from the byte stream and advances the buffer pointer."},{"summary":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer.","ret":"The float32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readFloat","realm":"sh","param":[],"name":"ss_methods:readFloat","description":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer."},{"summary":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer.","ret":"The float32 at this position","class":"function","private":false,"classlib":"StringStream","fname":"readDouble","realm":"sh","param":[],"name":"ss_methods:readDouble","description":"\nReads a 4 byte IEEE754 float from the byte stream and advances the buffer pointer."},{"summary":"\nReads until the given byte and advances the buffer pointer.","ret":"The string of bytes read","class":"function","private":false,"classlib":"StringStream","fname":"readUntil","realm":"sh","param":{"1":"byte","byte":"The byte to read until (in number form)"},"name":"ss_methods:readUntil","description":"\nReads until the given byte and advances the buffer pointer."},{"summary":"\nreturns a null terminated string, reads until \"\\x00\" and advances the buffer pointer.","ret":"The string of bytes read","class":"function","private":false,"classlib":"StringStream","fname":"readString","realm":"sh","param":[],"name":"ss_methods:readString","description":"\nreturns a null terminated string, reads until \"\\x00\" and advances the buffer pointer."},{"summary":"\nWrites the given string and advances the buffer pointer.","class":"function","private":false,"param":{"1":"bytes","bytes":"A string of bytes to write"},"fname":"write","realm":"sh","name":"ss_methods:write","classlib":"StringStream","description":"\nWrites the given string and advances the buffer pointer."},{"summary":"\nWrites a byte to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int8 to write"},"fname":"writeInt8","realm":"sh","name":"ss_methods:writeInt8","classlib":"StringStream","description":"\nWrites a byte to the buffer and advances the buffer pointer."},{"summary":"\nWrites a short to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int16 to write"},"fname":"writeInt16","realm":"sh","name":"ss_methods:writeInt16","classlib":"StringStream","description":"\nWrites a short to the buffer and advances the buffer pointer."},{"summary":"\nWrites an int to the buffer and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"An int32 to write"},"fname":"writeInt32","realm":"sh","name":"ss_methods:writeInt32","classlib":"StringStream","description":"\nWrites an int to the buffer and advances the buffer pointer."},{"summary":"\nWrites a 4 byte IEEE754 float to the byte stream and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"The float to write"},"fname":"writeFloat","realm":"sh","name":"ss_methods:writeFloat","classlib":"StringStream","description":"\nWrites a 4 byte IEEE754 float to the byte stream and advances the buffer pointer."},{"summary":"\nWrites a 8 byte IEEE754 double to the byte stream and advances the buffer pointer.","class":"function","private":false,"param":{"1":"x","x":"The double to write"},"fname":"writeDouble","realm":"sh","name":"ss_methods:writeDouble","classlib":"StringStream","description":"\nWrites a 8 byte IEEE754 double to the byte stream and advances the buffer pointer."},{"summary":"\nWrites a string to the buffer putting a null at the end and advances the buffer pointer.","class":"function","private":false,"param":{"1":"string","string":"The string of bytes to write"},"fname":"writeString","realm":"sh","name":"ss_methods:writeString","classlib":"StringStream","description":"\nWrites a string to the buffer putting a null at the end and advances the buffer pointer."},{"summary":"\nReturns the buffer as a string ","ret":"The buffer as a string","class":"function","private":false,"classlib":"StringStream","fname":"getString","realm":"sh","param":[],"name":"ss_methods:getString","description":"\nReturns the buffer as a string"},{"summary":"\nReturns the internal buffer ","ret":"The buffer table","class":"function","private":false,"classlib":"StringStream","fname":"getBuffer","realm":"sh","param":[],"name":"ss_methods:getBuffer","description":"\nReturns the internal buffer"}],"name":"libs_sh/bit.lua","description":"\n \nBit functions \n"},"libs_sh/physobj.lua":{"summary":"\n \nPhysObj functions.","tables":[],"functions":{"1":"physobj_methods:addAngleVelocity","2":"physobj_methods:addGameFlags","3":"physobj_methods:applyForceCenter","4":"physobj_methods:applyForceOffset","5":"physobj_methods:applyTorque","6":"physobj_methods:clearGameFlags","7":"physobj_methods:enableDrag","8":"physobj_methods:enableGravity","9":"physobj_methods:enableMotion","10":"physobj_methods:getAABB","11":"physobj_methods:getAngleVelocity","12":"physobj_methods:getAngles","13":"physobj_methods:getDamping","14":"physobj_methods:getEntity","15":"physobj_methods:getInertia","16":"physobj_methods:getMass","17":"physobj_methods:getMassCenter","18":"physobj_methods:getMaterial","19":"physobj_methods:getMatrix","20":"physobj_methods:getMesh","21":"physobj_methods:getMeshConvexes","22":"physobj_methods:getPos","23":"physobj_methods:getVelocity","24":"physobj_methods:getVelocityAtPoint","25":"physobj_methods:hasGameFlags","26":"physobj_methods:isAsleep","27":"physobj_methods:isDragEnabled","28":"physobj_methods:isValid","29":"physobj_methods:localToWorld","30":"physobj_methods:localToWorldVector","31":"physobj_methods:setAngleDragCoefficient","32":"physobj_methods:setAngleVelocity","33":"physobj_methods:setAngles","34":"physobj_methods:setBuoyancyRatio","35":"physobj_methods:setDamping","36":"physobj_methods:setDragCoefficient","37":"physobj_methods:setInertia","38":"physobj_methods:setMass","39":"physobj_methods:setMaterial","40":"physobj_methods:setPos","41":"physobj_methods:setVelocity","42":"physobj_methods:sleep","43":"physobj_methods:wake","44":"physobj_methods:worldToLocal","45":"physobj_methods:worldToLocalVector","physobj_methods:localToWorldVector":{"summary":"\nReturns a normal vector in the reference frame of the world from the local frame of the physicsobject ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"localToWorldVector","realm":"sh","param":{"1":"vec","vec":"The normal vector to transform"},"name":"physobj_methods:localToWorldVector","description":"\nReturns a normal vector in the reference frame of the world from the local frame of the physicsobject"},"physobj_methods:getMaterial":{"server":true,"ret":"The physics material of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the material of the physics object ","fname":"getMaterial","realm":"sh","param":[],"name":"physobj_methods:getMaterial","description":"\nGets the material of the physics object"},"physobj_methods:setBuoyancyRatio":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the buoyancy ratio of a physobject ","fname":"setBuoyancyRatio","realm":"sv","param":{"1":"ratio","ratio":"The buoyancy ratio to use"},"name":"physobj_methods:setBuoyancyRatio","description":"\nSets the buoyancy ratio of a physobject"},"physobj_methods:worldToLocal":{"summary":"\nReturns a vector in the local reference frame of the physicsobject from the world frame ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"worldToLocal","realm":"sh","param":{"1":"vec","vec":"The vector to transform"},"name":"physobj_methods:worldToLocal","description":"\nReturns a vector in the local reference frame of the physicsobject from the world frame"},"physobj_methods:setVelocity":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the velocity of the physics object ","fname":"setVelocity","realm":"sv","param":{"1":"vel","vel":"The velocity vector to set it to"},"name":"physobj_methods:setVelocity","description":"\nSets the velocity of the physics object"},"physobj_methods:getMesh":{"summary":"\nReturns a table of MeshVertex structures where each 3 vertices represent a triangle.","ret":"table of MeshVertex structures","class":"function","private":false,"classlib":"PhysObj","fname":"getMesh","realm":"sh","param":[],"name":"physobj_methods:getMesh","description":"\nReturns a table of MeshVertex structures where each 3 vertices represent a triangle. See: http://wiki.garrysmod.com/page/Structures/MeshVertex"},"physobj_methods:isValid":{"server":true,"ret":"boolean if the physics object is valid","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nChecks if the physics object is valid ","fname":"isValid","realm":"sh","param":[],"name":"physobj_methods:isValid","description":"\nChecks if the physics object is valid"},"physobj_methods:setDragCoefficient":{"summary":"\nSets coefficient of air resistance affecting the bone.","class":"function","private":false,"param":{"1":"coeff","coeff":"Number how much drag affects the bone"},"fname":"setDragCoefficient","realm":"sh","name":"physobj_methods:setDragCoefficient","classlib":"PhysObj","description":"\nSets coefficient of air resistance affecting the bone. Air resistance depends on the cross-section of the object."},"physobj_methods:getDamping":{"summary":"\nReturns Movement damping of the bone.","ret":["Linear damping","Angular damping"],"class":"function","private":false,"classlib":"PhysObj","fname":"getDamping","realm":"sh","param":[],"name":"physobj_methods:getDamping","description":"\nReturns Movement damping of the bone."},"physobj_methods:setAngleVelocity":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the angular velocity of an object ","fname":"setAngleVelocity","realm":"sv","param":{"1":"angvel","angvel":"The local angvel vector to set"},"name":"physobj_methods:setAngleVelocity","description":"\nSets the angular velocity of an object"},"physobj_methods:getAngles":{"server":true,"ret":"Angle angles of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the angles of the physics object ","fname":"getAngles","realm":"sh","param":[],"name":"physobj_methods:getAngles","description":"\nGets the angles of the physics object"},"physobj_methods:getMassCenter":{"server":true,"ret":"Center of mass vector in the physobject's local reference frame.","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the center of mass of the physics object in the local reference frame.","fname":"getMassCenter","realm":"sh","param":[],"name":"physobj_methods:getMassCenter","description":"\nGets the center of mass of the physics object in the local reference frame."},"physobj_methods:setAngleDragCoefficient":{"summary":"\nSets coefficient of air resistance affecting the bone when rotating.","class":"function","private":false,"param":{"1":"coeff","coeff":"Number how much drag affects the bone when rotating"},"fname":"setAngleDragCoefficient","realm":"sh","name":"physobj_methods:setAngleDragCoefficient","classlib":"PhysObj","description":"\nSets coefficient of air resistance affecting the bone when rotating. Air resistance depends on the cross-section of the object."},"physobj_methods:getInertia":{"server":true,"ret":"Vector Inertia of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the inertia of the physics object ","fname":"getInertia","realm":"sh","param":[],"name":"physobj_methods:getInertia","description":"\nGets the inertia of the physics object"},"physobj_methods:applyForceOffset":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys an offset force to a physics object ","fname":"applyForceOffset","realm":"sv","param":{"1":"force","2":"position","position":"The position in world coordinates","force":"The force vector to apply"},"name":"physobj_methods:applyForceOffset","description":"\nApplys an offset force to a physics object"},"physobj_methods:getAngleVelocity":{"server":true,"ret":"Vector angular velocity of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the angular velocity of the physics object ","fname":"getAngleVelocity","realm":"sh","param":[],"name":"physobj_methods:getAngleVelocity","description":"\nGets the angular velocity of the physics object"},"physobj_methods:getMass":{"server":true,"ret":"mass of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the mass of the physics object ","fname":"getMass","realm":"sh","param":[],"name":"physobj_methods:getMass","description":"\nGets the mass of the physics object"},"physobj_methods:getAABB":{"server":true,"ret":["The mins of the AABB","The maxs of the AABB"],"class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the axis aligned bounding box of the physics object ","fname":"getAABB","realm":"sh","param":[],"name":"physobj_methods:getAABB","description":"\nGets the axis aligned bounding box of the physics object"},"physobj_methods:wake":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nMakes a sleeping physobj wakeup ","fname":"wake","realm":"sv","param":[],"name":"physobj_methods:wake","description":"\nMakes a sleeping physobj wakeup"},"physobj_methods:getMeshConvexes":{"summary":"\nReturns a structured table, the physics mesh of the physics object.","ret":"table of MeshVertex structures","class":"function","private":false,"classlib":"PhysObj","fname":"getMeshConvexes","realm":"sh","param":[],"name":"physobj_methods:getMeshConvexes","description":"\nReturns a structured table, the physics mesh of the physics object. See: http://wiki.garrysmod.com/page/Structures/MeshVertex"},"physobj_methods:sleep":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nMakes a physobj go to sleep.","fname":"sleep","realm":"sv","param":[],"name":"physobj_methods:sleep","description":"\nMakes a physobj go to sleep. (like it's frozen but interacting wakes it back up)"},"physobj_methods:isAsleep":{"server":true,"ret":"boolean if the physobj is asleep","class":"function","classlib":"PhysObj","private":false,"summary":"\nReturns whether the physobj is asleep ","fname":"isAsleep","realm":"sv","param":[],"name":"physobj_methods:isAsleep","description":"\nReturns whether the physobj is asleep"},"physobj_methods:applyForceCenter":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a force to the center of the physics object ","fname":"applyForceCenter","realm":"sv","param":{"1":"force","force":"The force vector to apply"},"name":"physobj_methods:applyForceCenter","description":"\nApplys a force to the center of the physics object"},"physobj_methods:clearGameFlags":{"summary":"\nClears game flags from the physics object.","class":"function","private":false,"param":{"1":"flags","flags":"The flags to add. FVPHYSICS enum. Can be:<br> \nFVPHYSICS.DMG_DISSOLVE<br> \nFVPHYSICS.DMG_SLICE<br> \nFVPHYSICS.HEAVY_OBJECT<br> \nFVPHYSICS.NO_IMPACT_DMG<br> \nFVPHYSICS.NO_NPC_IMPACT_DMG<br> \nFVPHYSICS.NO_PLAYER_PICKUP<br>"},"fname":"clearGameFlags","realm":"sh","name":"physobj_methods:clearGameFlags","classlib":"PhysObj","description":"\nClears game flags from the physics object. Some flags cannot be modified"},"physobj_methods:setPos":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the position of the physics object.","fname":"setPos","realm":"sv","param":{"1":"pos","pos":"The position vector to set it to"},"name":"physobj_methods:setPos","description":"\nSets the position of the physics object. Will cause interpolation of the entity in clientside, use entity.setPos to avoid this."},"physobj_methods:setDamping":{"summary":"\nSets the movement damping of the bone.","class":"function","private":false,"param":{"1":"linear","2":"angular","linear":"Number of the linear damping","angular":"Number of the angular damping"},"fname":"setDamping","realm":"sh","name":"physobj_methods:setDamping","classlib":"PhysObj","description":"\nSets the movement damping of the bone. Unlike air drag, it doesn't take into account the cross-section of the object."},"physobj_methods:addGameFlags":{"summary":"\nAdds game flags to the physics object.","class":"function","private":false,"param":{"1":"flags","flags":"The flags to add. FVPHYSICS enum. Can be:<br> \nFVPHYSICS.DMG_DISSOLVE<br> \nFVPHYSICS.DMG_SLICE<br> \nFVPHYSICS.HEAVY_OBJECT<br> \nFVPHYSICS.NO_IMPACT_DMG<br> \nFVPHYSICS.NO_NPC_IMPACT_DMG<br> \nFVPHYSICS.NO_PLAYER_PICKUP<br>"},"fname":"addGameFlags","realm":"sh","name":"physobj_methods:addGameFlags","classlib":"PhysObj","description":"\nAdds game flags to the physics object. Some flags cannot be modified"},"physobj_methods:isDragEnabled":{"summary":"\nCheck if bone is affected by air resistance ","ret":"boolean If bone is affected by drag","class":"function","private":false,"classlib":"PhysObj","fname":"isDragEnabled","realm":"sh","param":[],"name":"physobj_methods:isDragEnabled","description":"\nCheck if bone is affected by air resistance"},"physobj_methods:enableDrag":{"summary":"\nSets the bone drag state ","class":"function","private":false,"param":{"1":"drag","drag":"Bool should the bone have air resistence?"},"fname":"enableDrag","realm":"sh","name":"physobj_methods:enableDrag","classlib":"PhysObj","description":"\nSets the bone drag state"},"physobj_methods:enableGravity":{"summary":"\nSets bone gravity ","class":"function","private":false,"param":{"1":"grav","grav":"Bool should the bone respect gravity?"},"fname":"enableGravity","realm":"sh","name":"physobj_methods:enableGravity","classlib":"PhysObj","description":"\nSets bone gravity"},"physobj_methods:hasGameFlags":{"summary":"\nReturns whether the game flags of the physics object are set.","ret":"boolean If the flags are set","class":"function","private":false,"classlib":"PhysObj","fname":"hasGameFlags","realm":"sh","param":{"1":"flags","flags":"The flags to test. FVPHYSICS enum."},"name":"physobj_methods:hasGameFlags","description":"\nReturns whether the game flags of the physics object are set."},"physobj_methods:localToWorld":{"summary":"\nReturns a vector in the reference frame of the world from the local frame of the physicsobject ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"localToWorld","realm":"sh","param":{"1":"vec","vec":"The vector to transform"},"name":"physobj_methods:localToWorld","description":"\nReturns a vector in the reference frame of the world from the local frame of the physicsobject"},"physobj_methods:worldToLocalVector":{"summary":"\nReturns a normal vector in the local reference frame of the physicsobject from the world frame ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"worldToLocalVector","realm":"sh","param":{"1":"vec","vec":"The normal vector to transform"},"name":"physobj_methods:worldToLocalVector","description":"\nReturns a normal vector in the local reference frame of the physicsobject from the world frame"},"physobj_methods:getVelocity":{"server":true,"ret":"Vector velocity of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the velocity of the physics object ","fname":"getVelocity","realm":"sh","param":[],"name":"physobj_methods:getVelocity","description":"\nGets the velocity of the physics object"},"physobj_methods:enableMotion":{"summary":"\nSets the bone movement state ","class":"function","private":false,"param":{"1":"move","move":"Bool should the bone move?"},"fname":"enableMotion","realm":"sh","name":"physobj_methods:enableMotion","classlib":"PhysObj","description":"\nSets the bone movement state"},"physobj_methods:getVelocityAtPoint":{"server":true,"ret":"Vector Local velocity of the physics object at the point","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the velocity of the physics object at an arbitrary point in its local reference frame \nThis includes velocity at the point induced by rotational velocity ","fname":"getVelocityAtPoint","realm":"sh","param":{"1":"vec","vec":"The point to get velocity of in local reference frame"},"name":"physobj_methods:getVelocityAtPoint","description":"\nGets the velocity of the physics object at an arbitrary point in its local reference frame \nThis includes velocity at the point induced by rotational velocity"},"physobj_methods:setInertia":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the inertia of a physics object ","fname":"setInertia","realm":"sv","param":{"1":"inertia","inertia":"The inertia vector to set it to"},"name":"physobj_methods:setInertia","description":"\nSets the inertia of a physics object"},"physobj_methods:getMatrix":{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nReturns the world transform matrix of the physobj ","fname":"getMatrix","realm":"sh","param":[],"name":"physobj_methods:getMatrix","description":"\nReturns the world transform matrix of the physobj"},"physobj_methods:setAngles":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the angles of the physics object.","fname":"setAngles","realm":"sv","param":{"1":"ang","ang":"The angle to set it to"},"name":"physobj_methods:setAngles","description":"\nSets the angles of the physics object. Will cause interpolation of the entity in clientside, use entity.setAngles to avoid this."},"physobj_methods:addAngleVelocity":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a angular velocity to an object ","fname":"addAngleVelocity","realm":"sv","param":{"1":"angvel","angvel":"The local angvel vector to apply"},"name":"physobj_methods:addAngleVelocity","description":"\nApplys a angular velocity to an object"},"physobj_methods:setMaterial":{"summary":"\nSets the physical material of a physics object ","class":"function","private":false,"param":{"1":"material","material":"The physical material to set it to"},"fname":"setMaterial","realm":"sh","name":"physobj_methods:setMaterial","classlib":"PhysObj","description":"\nSets the physical material of a physics object"},"physobj_methods:getPos":{"server":true,"ret":"Vector position of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the position of the physics object ","fname":"getPos","realm":"sh","param":[],"name":"physobj_methods:getPos","description":"\nGets the position of the physics object"},"physobj_methods:getEntity":{"server":true,"ret":"The entity attached to the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the entity attached to the physics object ","fname":"getEntity","realm":"sh","param":[],"name":"physobj_methods:getEntity","description":"\nGets the entity attached to the physics object"},"physobj_methods:applyTorque":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a torque to a physics object ","fname":"applyTorque","realm":"sv","param":{"1":"torque","torque":"The world torque vector to apply"},"name":"physobj_methods:applyTorque","description":"\nApplys a torque to a physics object"},"physobj_methods:setMass":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the mass of a physics object ","fname":"setMass","realm":"sv","param":{"1":"mass","mass":"The mass to set it to"},"name":"physobj_methods:setMass","description":"\nSets the mass of a physics object"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nPhysObj functions.","param":[],"description":"\n \nPhysObj functions. \n"},{"methods":{"1":"addAngleVelocity","2":"addGameFlags","3":"applyForceCenter","4":"applyForceOffset","5":"applyTorque","6":"clearGameFlags","7":"enableDrag","8":"enableGravity","9":"enableMotion","10":"getAABB","11":"getAngleVelocity","12":"getAngles","13":"getDamping","14":"getEntity","15":"getInertia","16":"getMass","17":"getMassCenter","18":"getMaterial","19":"getMatrix","20":"getMesh","21":"getMeshConvexes","22":"getPos","23":"getVelocity","24":"getVelocityAtPoint","25":"hasGameFlags","26":"isAsleep","27":"isDragEnabled","28":"isValid","29":"localToWorld","30":"localToWorldVector","31":"setAngleDragCoefficient","32":"setAngleVelocity","33":"setAngles","34":"setBuoyancyRatio","35":"setDamping","36":"setDragCoefficient","37":"setInertia","38":"setMass","39":"setMaterial","40":"setPos","41":"setVelocity","42":"sleep","43":"wake","44":"worldToLocal","45":"worldToLocalVector","localToWorld":{"summary":"\nReturns a vector in the reference frame of the world from the local frame of the physicsobject ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"localToWorld","realm":"sh","param":{"1":"vec","vec":"The vector to transform"},"name":"physobj_methods:localToWorld","description":"\nReturns a vector in the reference frame of the world from the local frame of the physicsobject"},"setDamping":{"summary":"\nSets the movement damping of the bone.","class":"function","private":false,"param":{"1":"linear","2":"angular","linear":"Number of the linear damping","angular":"Number of the angular damping"},"fname":"setDamping","realm":"sh","name":"physobj_methods:setDamping","classlib":"PhysObj","description":"\nSets the movement damping of the bone. Unlike air drag, it doesn't take into account the cross-section of the object."},"getMatrix":{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nReturns the world transform matrix of the physobj ","fname":"getMatrix","realm":"sh","param":[],"name":"physobj_methods:getMatrix","description":"\nReturns the world transform matrix of the physobj"},"setAngleVelocity":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the angular velocity of an object ","fname":"setAngleVelocity","realm":"sv","param":{"1":"angvel","angvel":"The local angvel vector to set"},"name":"physobj_methods:setAngleVelocity","description":"\nSets the angular velocity of an object"},"getPos":{"server":true,"ret":"Vector position of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the position of the physics object ","fname":"getPos","realm":"sh","param":[],"name":"physobj_methods:getPos","description":"\nGets the position of the physics object"},"getAngles":{"server":true,"ret":"Angle angles of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the angles of the physics object ","fname":"getAngles","realm":"sh","param":[],"name":"physobj_methods:getAngles","description":"\nGets the angles of the physics object"},"addGameFlags":{"summary":"\nAdds game flags to the physics object.","class":"function","private":false,"param":{"1":"flags","flags":"The flags to add. FVPHYSICS enum. Can be:<br> \nFVPHYSICS.DMG_DISSOLVE<br> \nFVPHYSICS.DMG_SLICE<br> \nFVPHYSICS.HEAVY_OBJECT<br> \nFVPHYSICS.NO_IMPACT_DMG<br> \nFVPHYSICS.NO_NPC_IMPACT_DMG<br> \nFVPHYSICS.NO_PLAYER_PICKUP<br>"},"fname":"addGameFlags","realm":"sh","name":"physobj_methods:addGameFlags","classlib":"PhysObj","description":"\nAdds game flags to the physics object. Some flags cannot be modified"},"enableMotion":{"summary":"\nSets the bone movement state ","class":"function","private":false,"param":{"1":"move","move":"Bool should the bone move?"},"fname":"enableMotion","realm":"sh","name":"physobj_methods:enableMotion","classlib":"PhysObj","description":"\nSets the bone movement state"},"setPos":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the position of the physics object.","fname":"setPos","realm":"sv","param":{"1":"pos","pos":"The position vector to set it to"},"name":"physobj_methods:setPos","description":"\nSets the position of the physics object. Will cause interpolation of the entity in clientside, use entity.setPos to avoid this."},"isDragEnabled":{"summary":"\nCheck if bone is affected by air resistance ","ret":"boolean If bone is affected by drag","class":"function","private":false,"classlib":"PhysObj","fname":"isDragEnabled","realm":"sh","param":[],"name":"physobj_methods:isDragEnabled","description":"\nCheck if bone is affected by air resistance"},"setAngleDragCoefficient":{"summary":"\nSets coefficient of air resistance affecting the bone when rotating.","class":"function","private":false,"param":{"1":"coeff","coeff":"Number how much drag affects the bone when rotating"},"fname":"setAngleDragCoefficient","realm":"sh","name":"physobj_methods:setAngleDragCoefficient","classlib":"PhysObj","description":"\nSets coefficient of air resistance affecting the bone when rotating. Air resistance depends on the cross-section of the object."},"applyTorque":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a torque to a physics object ","fname":"applyTorque","realm":"sv","param":{"1":"torque","torque":"The world torque vector to apply"},"name":"physobj_methods:applyTorque","description":"\nApplys a torque to a physics object"},"getVelocity":{"server":true,"ret":"Vector velocity of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the velocity of the physics object ","fname":"getVelocity","realm":"sh","param":[],"name":"physobj_methods:getVelocity","description":"\nGets the velocity of the physics object"},"worldToLocal":{"summary":"\nReturns a vector in the local reference frame of the physicsobject from the world frame ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"worldToLocal","realm":"sh","param":{"1":"vec","vec":"The vector to transform"},"name":"physobj_methods:worldToLocal","description":"\nReturns a vector in the local reference frame of the physicsobject from the world frame"},"getMassCenter":{"server":true,"ret":"Center of mass vector in the physobject's local reference frame.","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the center of mass of the physics object in the local reference frame.","fname":"getMassCenter","realm":"sh","param":[],"name":"physobj_methods:getMassCenter","description":"\nGets the center of mass of the physics object in the local reference frame."},"isValid":{"server":true,"ret":"boolean if the physics object is valid","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nChecks if the physics object is valid ","fname":"isValid","realm":"sh","param":[],"name":"physobj_methods:isValid","description":"\nChecks if the physics object is valid"},"addAngleVelocity":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a angular velocity to an object ","fname":"addAngleVelocity","realm":"sv","param":{"1":"angvel","angvel":"The local angvel vector to apply"},"name":"physobj_methods:addAngleVelocity","description":"\nApplys a angular velocity to an object"},"worldToLocalVector":{"summary":"\nReturns a normal vector in the local reference frame of the physicsobject from the world frame ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"worldToLocalVector","realm":"sh","param":{"1":"vec","vec":"The normal vector to transform"},"name":"physobj_methods:worldToLocalVector","description":"\nReturns a normal vector in the local reference frame of the physicsobject from the world frame"},"applyForceOffset":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys an offset force to a physics object ","fname":"applyForceOffset","realm":"sv","param":{"1":"force","2":"position","position":"The position in world coordinates","force":"The force vector to apply"},"name":"physobj_methods:applyForceOffset","description":"\nApplys an offset force to a physics object"},"setBuoyancyRatio":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the buoyancy ratio of a physobject ","fname":"setBuoyancyRatio","realm":"sv","param":{"1":"ratio","ratio":"The buoyancy ratio to use"},"name":"physobj_methods:setBuoyancyRatio","description":"\nSets the buoyancy ratio of a physobject"},"setMaterial":{"summary":"\nSets the physical material of a physics object ","class":"function","private":false,"param":{"1":"material","material":"The physical material to set it to"},"fname":"setMaterial","realm":"sh","name":"physobj_methods:setMaterial","classlib":"PhysObj","description":"\nSets the physical material of a physics object"},"setMass":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the mass of a physics object ","fname":"setMass","realm":"sv","param":{"1":"mass","mass":"The mass to set it to"},"name":"physobj_methods:setMass","description":"\nSets the mass of a physics object"},"wake":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nMakes a sleeping physobj wakeup ","fname":"wake","realm":"sv","param":[],"name":"physobj_methods:wake","description":"\nMakes a sleeping physobj wakeup"},"localToWorldVector":{"summary":"\nReturns a normal vector in the reference frame of the world from the local frame of the physicsobject ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"localToWorldVector","realm":"sh","param":{"1":"vec","vec":"The normal vector to transform"},"name":"physobj_methods:localToWorldVector","description":"\nReturns a normal vector in the reference frame of the world from the local frame of the physicsobject"},"sleep":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nMakes a physobj go to sleep.","fname":"sleep","realm":"sv","param":[],"name":"physobj_methods:sleep","description":"\nMakes a physobj go to sleep. (like it's frozen but interacting wakes it back up)"},"clearGameFlags":{"summary":"\nClears game flags from the physics object.","class":"function","private":false,"param":{"1":"flags","flags":"The flags to add. FVPHYSICS enum. Can be:<br> \nFVPHYSICS.DMG_DISSOLVE<br> \nFVPHYSICS.DMG_SLICE<br> \nFVPHYSICS.HEAVY_OBJECT<br> \nFVPHYSICS.NO_IMPACT_DMG<br> \nFVPHYSICS.NO_NPC_IMPACT_DMG<br> \nFVPHYSICS.NO_PLAYER_PICKUP<br>"},"fname":"clearGameFlags","realm":"sh","name":"physobj_methods:clearGameFlags","classlib":"PhysObj","description":"\nClears game flags from the physics object. Some flags cannot be modified"},"applyForceCenter":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a force to the center of the physics object ","fname":"applyForceCenter","realm":"sv","param":{"1":"force","force":"The force vector to apply"},"name":"physobj_methods:applyForceCenter","description":"\nApplys a force to the center of the physics object"},"getVelocityAtPoint":{"server":true,"ret":"Vector Local velocity of the physics object at the point","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the velocity of the physics object at an arbitrary point in its local reference frame \nThis includes velocity at the point induced by rotational velocity ","fname":"getVelocityAtPoint","realm":"sh","param":{"1":"vec","vec":"The point to get velocity of in local reference frame"},"name":"physobj_methods:getVelocityAtPoint","description":"\nGets the velocity of the physics object at an arbitrary point in its local reference frame \nThis includes velocity at the point induced by rotational velocity"},"isAsleep":{"server":true,"ret":"boolean if the physobj is asleep","class":"function","classlib":"PhysObj","private":false,"summary":"\nReturns whether the physobj is asleep ","fname":"isAsleep","realm":"sv","param":[],"name":"physobj_methods:isAsleep","description":"\nReturns whether the physobj is asleep"},"getAngleVelocity":{"server":true,"ret":"Vector angular velocity of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the angular velocity of the physics object ","fname":"getAngleVelocity","realm":"sh","param":[],"name":"physobj_methods:getAngleVelocity","description":"\nGets the angular velocity of the physics object"},"setInertia":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the inertia of a physics object ","fname":"setInertia","realm":"sv","param":{"1":"inertia","inertia":"The inertia vector to set it to"},"name":"physobj_methods:setInertia","description":"\nSets the inertia of a physics object"},"setAngles":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the angles of the physics object.","fname":"setAngles","realm":"sv","param":{"1":"ang","ang":"The angle to set it to"},"name":"physobj_methods:setAngles","description":"\nSets the angles of the physics object. Will cause interpolation of the entity in clientside, use entity.setAngles to avoid this."},"getEntity":{"server":true,"ret":"The entity attached to the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the entity attached to the physics object ","fname":"getEntity","realm":"sh","param":[],"name":"physobj_methods:getEntity","description":"\nGets the entity attached to the physics object"},"setDragCoefficient":{"summary":"\nSets coefficient of air resistance affecting the bone.","class":"function","private":false,"param":{"1":"coeff","coeff":"Number how much drag affects the bone"},"fname":"setDragCoefficient","realm":"sh","name":"physobj_methods:setDragCoefficient","classlib":"PhysObj","description":"\nSets coefficient of air resistance affecting the bone. Air resistance depends on the cross-section of the object."},"getDamping":{"summary":"\nReturns Movement damping of the bone.","ret":["Linear damping","Angular damping"],"class":"function","private":false,"classlib":"PhysObj","fname":"getDamping","realm":"sh","param":[],"name":"physobj_methods:getDamping","description":"\nReturns Movement damping of the bone."},"enableDrag":{"summary":"\nSets the bone drag state ","class":"function","private":false,"param":{"1":"drag","drag":"Bool should the bone have air resistence?"},"fname":"enableDrag","realm":"sh","name":"physobj_methods:enableDrag","classlib":"PhysObj","description":"\nSets the bone drag state"},"enableGravity":{"summary":"\nSets bone gravity ","class":"function","private":false,"param":{"1":"grav","grav":"Bool should the bone respect gravity?"},"fname":"enableGravity","realm":"sh","name":"physobj_methods:enableGravity","classlib":"PhysObj","description":"\nSets bone gravity"},"hasGameFlags":{"summary":"\nReturns whether the game flags of the physics object are set.","ret":"boolean If the flags are set","class":"function","private":false,"classlib":"PhysObj","fname":"hasGameFlags","realm":"sh","param":{"1":"flags","flags":"The flags to test. FVPHYSICS enum."},"name":"physobj_methods:hasGameFlags","description":"\nReturns whether the game flags of the physics object are set."},"getMaterial":{"server":true,"ret":"The physics material of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the material of the physics object ","fname":"getMaterial","realm":"sh","param":[],"name":"physobj_methods:getMaterial","description":"\nGets the material of the physics object"},"getMesh":{"summary":"\nReturns a table of MeshVertex structures where each 3 vertices represent a triangle.","ret":"table of MeshVertex structures","class":"function","private":false,"classlib":"PhysObj","fname":"getMesh","realm":"sh","param":[],"name":"physobj_methods:getMesh","description":"\nReturns a table of MeshVertex structures where each 3 vertices represent a triangle. See: http://wiki.garrysmod.com/page/Structures/MeshVertex"},"getAABB":{"server":true,"ret":["The mins of the AABB","The maxs of the AABB"],"class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the axis aligned bounding box of the physics object ","fname":"getAABB","realm":"sh","param":[],"name":"physobj_methods:getAABB","description":"\nGets the axis aligned bounding box of the physics object"},"getInertia":{"server":true,"ret":"Vector Inertia of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the inertia of the physics object ","fname":"getInertia","realm":"sh","param":[],"name":"physobj_methods:getInertia","description":"\nGets the inertia of the physics object"},"getMeshConvexes":{"summary":"\nReturns a structured table, the physics mesh of the physics object.","ret":"table of MeshVertex structures","class":"function","private":false,"classlib":"PhysObj","fname":"getMeshConvexes","realm":"sh","param":[],"name":"physobj_methods:getMeshConvexes","description":"\nReturns a structured table, the physics mesh of the physics object. See: http://wiki.garrysmod.com/page/Structures/MeshVertex"},"setVelocity":{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the velocity of the physics object ","fname":"setVelocity","realm":"sv","param":{"1":"vel","vel":"The velocity vector to set it to"},"name":"physobj_methods:setVelocity","description":"\nSets the velocity of the physics object"},"getMass":{"server":true,"ret":"mass of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the mass of the physics object ","fname":"getMass","realm":"sh","param":[],"name":"physobj_methods:getMass","description":"\nGets the mass of the physics object"}},"class":"class","client":true,"summary":"\nPhysObj Type ","fields":[],"server":true,"typtbl":"physobj_methods","name":"PhysObj","description":"\nPhysObj Type"},{"server":true,"ret":"boolean if the physics object is valid","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nChecks if the physics object is valid ","fname":"isValid","realm":"sh","param":[],"name":"physobj_methods:isValid","description":"\nChecks if the physics object is valid"},{"server":true,"ret":"The entity attached to the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the entity attached to the physics object ","fname":"getEntity","realm":"sh","param":[],"name":"physobj_methods:getEntity","description":"\nGets the entity attached to the physics object"},{"server":true,"ret":"Vector position of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the position of the physics object ","fname":"getPos","realm":"sh","param":[],"name":"physobj_methods:getPos","description":"\nGets the position of the physics object"},{"server":true,"ret":"The matrix","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nReturns the world transform matrix of the physobj ","fname":"getMatrix","realm":"sh","param":[],"name":"physobj_methods:getMatrix","description":"\nReturns the world transform matrix of the physobj"},{"server":true,"ret":"Angle angles of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the angles of the physics object ","fname":"getAngles","realm":"sh","param":[],"name":"physobj_methods:getAngles","description":"\nGets the angles of the physics object"},{"server":true,"ret":"Vector velocity of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the velocity of the physics object ","fname":"getVelocity","realm":"sh","param":[],"name":"physobj_methods:getVelocity","description":"\nGets the velocity of the physics object"},{"server":true,"ret":["The mins of the AABB","The maxs of the AABB"],"class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the axis aligned bounding box of the physics object ","fname":"getAABB","realm":"sh","param":[],"name":"physobj_methods:getAABB","description":"\nGets the axis aligned bounding box of the physics object"},{"server":true,"ret":"Vector Local velocity of the physics object at the point","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the velocity of the physics object at an arbitrary point in its local reference frame \nThis includes velocity at the point induced by rotational velocity ","fname":"getVelocityAtPoint","realm":"sh","param":{"1":"vec","vec":"The point to get velocity of in local reference frame"},"name":"physobj_methods:getVelocityAtPoint","description":"\nGets the velocity of the physics object at an arbitrary point in its local reference frame \nThis includes velocity at the point induced by rotational velocity"},{"server":true,"ret":"Vector angular velocity of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the angular velocity of the physics object ","fname":"getAngleVelocity","realm":"sh","param":[],"name":"physobj_methods:getAngleVelocity","description":"\nGets the angular velocity of the physics object"},{"server":true,"ret":"mass of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the mass of the physics object ","fname":"getMass","realm":"sh","param":[],"name":"physobj_methods:getMass","description":"\nGets the mass of the physics object"},{"server":true,"ret":"Center of mass vector in the physobject's local reference frame.","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the center of mass of the physics object in the local reference frame.","fname":"getMassCenter","realm":"sh","param":[],"name":"physobj_methods:getMassCenter","description":"\nGets the center of mass of the physics object in the local reference frame."},{"server":true,"ret":"Vector Inertia of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the inertia of the physics object ","fname":"getInertia","realm":"sh","param":[],"name":"physobj_methods:getInertia","description":"\nGets the inertia of the physics object"},{"server":true,"ret":"The physics material of the physics object","class":"function","client":true,"classlib":"PhysObj","private":false,"summary":"\nGets the material of the physics object ","fname":"getMaterial","realm":"sh","param":[],"name":"physobj_methods:getMaterial","description":"\nGets the material of the physics object"},{"summary":"\nReturns a vector in the local reference frame of the physicsobject from the world frame ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"worldToLocal","realm":"sh","param":{"1":"vec","vec":"The vector to transform"},"name":"physobj_methods:worldToLocal","description":"\nReturns a vector in the local reference frame of the physicsobject from the world frame"},{"summary":"\nReturns a vector in the reference frame of the world from the local frame of the physicsobject ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"localToWorld","realm":"sh","param":{"1":"vec","vec":"The vector to transform"},"name":"physobj_methods:localToWorld","description":"\nReturns a vector in the reference frame of the world from the local frame of the physicsobject"},{"summary":"\nReturns a normal vector in the local reference frame of the physicsobject from the world frame ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"worldToLocalVector","realm":"sh","param":{"1":"vec","vec":"The normal vector to transform"},"name":"physobj_methods:worldToLocalVector","description":"\nReturns a normal vector in the local reference frame of the physicsobject from the world frame"},{"summary":"\nReturns a normal vector in the reference frame of the world from the local frame of the physicsobject ","ret":"The transformed vector","class":"function","private":false,"classlib":"PhysObj","fname":"localToWorldVector","realm":"sh","param":{"1":"vec","vec":"The normal vector to transform"},"name":"physobj_methods:localToWorldVector","description":"\nReturns a normal vector in the reference frame of the world from the local frame of the physicsobject"},{"summary":"\nReturns a table of MeshVertex structures where each 3 vertices represent a triangle.","ret":"table of MeshVertex structures","class":"function","private":false,"classlib":"PhysObj","fname":"getMesh","realm":"sh","param":[],"name":"physobj_methods:getMesh","description":"\nReturns a table of MeshVertex structures where each 3 vertices represent a triangle. See: http://wiki.garrysmod.com/page/Structures/MeshVertex"},{"summary":"\nReturns a structured table, the physics mesh of the physics object.","ret":"table of MeshVertex structures","class":"function","private":false,"classlib":"PhysObj","fname":"getMeshConvexes","realm":"sh","param":[],"name":"physobj_methods:getMeshConvexes","description":"\nReturns a structured table, the physics mesh of the physics object. See: http://wiki.garrysmod.com/page/Structures/MeshVertex"},{"summary":"\nSets the physical material of a physics object ","class":"function","private":false,"param":{"1":"material","material":"The physical material to set it to"},"fname":"setMaterial","realm":"sh","name":"physobj_methods:setMaterial","classlib":"PhysObj","description":"\nSets the physical material of a physics object"},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the position of the physics object.","fname":"setPos","realm":"sv","param":{"1":"pos","pos":"The position vector to set it to"},"name":"physobj_methods:setPos","description":"\nSets the position of the physics object. Will cause interpolation of the entity in clientside, use entity.setPos to avoid this."},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the angles of the physics object.","fname":"setAngles","realm":"sv","param":{"1":"ang","ang":"The angle to set it to"},"name":"physobj_methods:setAngles","description":"\nSets the angles of the physics object. Will cause interpolation of the entity in clientside, use entity.setAngles to avoid this."},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the velocity of the physics object ","fname":"setVelocity","realm":"sv","param":{"1":"vel","vel":"The velocity vector to set it to"},"name":"physobj_methods:setVelocity","description":"\nSets the velocity of the physics object"},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the buoyancy ratio of a physobject ","fname":"setBuoyancyRatio","realm":"sv","param":{"1":"ratio","ratio":"The buoyancy ratio to use"},"name":"physobj_methods:setBuoyancyRatio","description":"\nSets the buoyancy ratio of a physobject"},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a force to the center of the physics object ","fname":"applyForceCenter","realm":"sv","param":{"1":"force","force":"The force vector to apply"},"name":"physobj_methods:applyForceCenter","description":"\nApplys a force to the center of the physics object"},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys an offset force to a physics object ","fname":"applyForceOffset","realm":"sv","param":{"1":"force","2":"position","position":"The position in world coordinates","force":"The force vector to apply"},"name":"physobj_methods:applyForceOffset","description":"\nApplys an offset force to a physics object"},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the angular velocity of an object ","fname":"setAngleVelocity","realm":"sv","param":{"1":"angvel","angvel":"The local angvel vector to set"},"name":"physobj_methods:setAngleVelocity","description":"\nSets the angular velocity of an object"},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a angular velocity to an object ","fname":"addAngleVelocity","realm":"sv","param":{"1":"angvel","angvel":"The local angvel vector to apply"},"name":"physobj_methods:addAngleVelocity","description":"\nApplys a angular velocity to an object"},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nApplys a torque to a physics object ","fname":"applyTorque","realm":"sv","param":{"1":"torque","torque":"The world torque vector to apply"},"name":"physobj_methods:applyTorque","description":"\nApplys a torque to a physics object"},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the mass of a physics object ","fname":"setMass","realm":"sv","param":{"1":"mass","mass":"The mass to set it to"},"name":"physobj_methods:setMass","description":"\nSets the mass of a physics object"},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nSets the inertia of a physics object ","fname":"setInertia","realm":"sv","param":{"1":"inertia","inertia":"The inertia vector to set it to"},"name":"physobj_methods:setInertia","description":"\nSets the inertia of a physics object"},{"summary":"\nAdds game flags to the physics object.","class":"function","private":false,"param":{"1":"flags","flags":"The flags to add. FVPHYSICS enum. Can be:<br> \nFVPHYSICS.DMG_DISSOLVE<br> \nFVPHYSICS.DMG_SLICE<br> \nFVPHYSICS.HEAVY_OBJECT<br> \nFVPHYSICS.NO_IMPACT_DMG<br> \nFVPHYSICS.NO_NPC_IMPACT_DMG<br> \nFVPHYSICS.NO_PLAYER_PICKUP<br>"},"fname":"addGameFlags","realm":"sh","name":"physobj_methods:addGameFlags","classlib":"PhysObj","description":"\nAdds game flags to the physics object. Some flags cannot be modified"},{"summary":"\nClears game flags from the physics object.","class":"function","private":false,"param":{"1":"flags","flags":"The flags to add. FVPHYSICS enum. Can be:<br> \nFVPHYSICS.DMG_DISSOLVE<br> \nFVPHYSICS.DMG_SLICE<br> \nFVPHYSICS.HEAVY_OBJECT<br> \nFVPHYSICS.NO_IMPACT_DMG<br> \nFVPHYSICS.NO_NPC_IMPACT_DMG<br> \nFVPHYSICS.NO_PLAYER_PICKUP<br>"},"fname":"clearGameFlags","realm":"sh","name":"physobj_methods:clearGameFlags","classlib":"PhysObj","description":"\nClears game flags from the physics object. Some flags cannot be modified"},{"summary":"\nReturns whether the game flags of the physics object are set.","ret":"boolean If the flags are set","class":"function","private":false,"classlib":"PhysObj","fname":"hasGameFlags","realm":"sh","param":{"1":"flags","flags":"The flags to test. FVPHYSICS enum."},"name":"physobj_methods:hasGameFlags","description":"\nReturns whether the game flags of the physics object are set."},{"summary":"\nSets bone gravity ","class":"function","private":false,"param":{"1":"grav","grav":"Bool should the bone respect gravity?"},"fname":"enableGravity","realm":"sh","name":"physobj_methods:enableGravity","classlib":"PhysObj","description":"\nSets bone gravity"},{"summary":"\nSets the bone drag state ","class":"function","private":false,"param":{"1":"drag","drag":"Bool should the bone have air resistence?"},"fname":"enableDrag","realm":"sh","name":"physobj_methods:enableDrag","classlib":"PhysObj","description":"\nSets the bone drag state"},{"summary":"\nCheck if bone is affected by air resistance ","ret":"boolean If bone is affected by drag","class":"function","private":false,"classlib":"PhysObj","fname":"isDragEnabled","realm":"sh","param":[],"name":"physobj_methods:isDragEnabled","description":"\nCheck if bone is affected by air resistance"},{"summary":"\nSets coefficient of air resistance affecting the bone.","class":"function","private":false,"param":{"1":"coeff","coeff":"Number how much drag affects the bone"},"fname":"setDragCoefficient","realm":"sh","name":"physobj_methods:setDragCoefficient","classlib":"PhysObj","description":"\nSets coefficient of air resistance affecting the bone. Air resistance depends on the cross-section of the object."},{"summary":"\nSets coefficient of air resistance affecting the bone when rotating.","class":"function","private":false,"param":{"1":"coeff","coeff":"Number how much drag affects the bone when rotating"},"fname":"setAngleDragCoefficient","realm":"sh","name":"physobj_methods:setAngleDragCoefficient","classlib":"PhysObj","description":"\nSets coefficient of air resistance affecting the bone when rotating. Air resistance depends on the cross-section of the object."},{"summary":"\nReturns Movement damping of the bone.","ret":["Linear damping","Angular damping"],"class":"function","private":false,"classlib":"PhysObj","fname":"getDamping","realm":"sh","param":[],"name":"physobj_methods:getDamping","description":"\nReturns Movement damping of the bone."},{"summary":"\nSets the movement damping of the bone.","class":"function","private":false,"param":{"1":"linear","2":"angular","linear":"Number of the linear damping","angular":"Number of the angular damping"},"fname":"setDamping","realm":"sh","name":"physobj_methods:setDamping","classlib":"PhysObj","description":"\nSets the movement damping of the bone. Unlike air drag, it doesn't take into account the cross-section of the object."},{"summary":"\nSets the bone movement state ","class":"function","private":false,"param":{"1":"move","move":"Bool should the bone move?"},"fname":"enableMotion","realm":"sh","name":"physobj_methods:enableMotion","classlib":"PhysObj","description":"\nSets the bone movement state"},{"server":true,"ret":"boolean if the physobj is asleep","class":"function","classlib":"PhysObj","private":false,"summary":"\nReturns whether the physobj is asleep ","fname":"isAsleep","realm":"sv","param":[],"name":"physobj_methods:isAsleep","description":"\nReturns whether the physobj is asleep"},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nMakes a physobj go to sleep.","fname":"sleep","realm":"sv","param":[],"name":"physobj_methods:sleep","description":"\nMakes a physobj go to sleep. (like it's frozen but interacting wakes it back up)"},{"server":true,"class":"function","classlib":"PhysObj","private":false,"summary":"\nMakes a sleeping physobj wakeup ","fname":"wake","realm":"sv","param":[],"name":"physobj_methods:wake","description":"\nMakes a sleeping physobj wakeup"}],"name":"libs_sh/physobj.lua","description":"\n \nPhysObj functions. \n"},"libs_sh/holograms.lua":{"summary":"\nLibrary for creating and manipulating physics-less models AKA \"Holograms\".","tables":[],"functions":{"1":"hologram_methods:getScale","2":"hologram_methods:remove","3":"hologram_methods:setAngVel","4":"hologram_methods:setAngles","5":"hologram_methods:setAnimation","6":"hologram_methods:setClip","7":"hologram_methods:setFilterMag","8":"hologram_methods:setFilterMin","9":"hologram_methods:setModel","10":"hologram_methods:setParent","11":"hologram_methods:setPos","12":"hologram_methods:setRenderMatrix","13":"hologram_methods:setScale","14":"hologram_methods:setVel","15":"hologram_methods:suppressEngineLighting","16":"holograms_library.canSpawn","17":"holograms_library.create","18":"holograms_library.hologramsLeft","hologram_methods:setAngVel":{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nSets the hologram's angular velocity.","fname":"setAngVel","realm":"sv","param":{"1":"angvel","angvel":"*Vector* angular velocity."},"name":"hologram_methods:setAngVel","description":"\nSets the hologram's angular velocity."},"hologram_methods:setPos":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram's position.","fname":"setPos","realm":"sh","param":{"1":"vec","vec":"New position"},"name":"hologram_methods:setPos","description":"\nSets the hologram's position."},"hologram_methods:setRenderMatrix":{"summary":"\nSets a hologram entity's rendermatrix ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setRenderMatrix","realm":"cl","param":{"1":"mat","mat":"Starfall matrix to use"},"name":"hologram_methods:setRenderMatrix","description":"\nSets a hologram entity's rendermatrix"},"hologram_methods:setFilterMin":{"summary":"\nSets the texture filtering function when viewing a far texture ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setFilterMin","realm":"cl","param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"name":"hologram_methods:setFilterMin","description":"\nSets the texture filtering function when viewing a far texture"},"hologram_methods:setFilterMag":{"summary":"\nSets the texture filtering function when viewing a close texture ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setFilterMag","realm":"cl","param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"name":"hologram_methods:setFilterMag","description":"\nSets the texture filtering function when viewing a close texture"},"holograms_library.canSpawn":{"summary":"\nChecks if a user can spawn anymore holograms.","ret":"True if user can spawn holograms, False if not.","class":"function","private":false,"library":"holograms","fname":"canSpawn","realm":"sh","param":[],"name":"holograms_library.canSpawn","description":"\nChecks if a user can spawn anymore holograms."},"holograms_library.hologramsLeft":{"summary":"\nChecks how many holograms can be spawned ","ret":"number of holograms able to be spawned","class":"function","private":false,"library":"holograms","fname":"hologramsLeft","realm":"sh","param":[],"name":"holograms_library.hologramsLeft","description":"\nChecks how many holograms can be spawned"},"hologram_methods:setModel":{"summary":"\nSets the model of a hologram ","class":"function","private":false,"param":{"1":"model","model":"string model path"},"fname":"setModel","realm":"sh","name":"hologram_methods:setModel","classlib":"Hologram","description":"\nSets the model of a hologram"},"hologram_methods:setScale":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram scale.","fname":"setScale","realm":"sh","param":{"1":"scale","scale":"Vector new scale"},"name":"hologram_methods:setScale","description":"\nSets the hologram scale. Basically the same as setRenderMatrix() with a scaled matrix"},"hologram_methods:getScale":{"server":true,"ret":"Vector scale","class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nGets the hologram scale.","fname":"getScale","realm":"sh","param":[],"name":"hologram_methods:getScale","description":"\nGets the hologram scale."},"hologram_methods:setAnimation":{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nAnimates a hologram ","fname":"setAnimation","realm":"sv","param":{"1":"animation","2":"frame","3":"rate","animation":"number or string name","rate":"Frame speed. (1 is normal)","frame":"The starting frame number"},"name":"hologram_methods:setAnimation","description":"\nAnimates a hologram"},"hologram_methods:setAngles":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram's angles.","fname":"setAngles","realm":"sh","param":{"1":"ang","ang":"New angles"},"name":"hologram_methods:setAngles","description":"\nSets the hologram's angles."},"hologram_methods:suppressEngineLighting":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSuppress Engine Lighting of a hologram.","fname":"suppressEngineLighting","realm":"sh","param":{"1":"suppress","suppress":"Boolean to represent if shading should be set or not."},"name":"hologram_methods:suppressEngineLighting","description":"\nSuppress Engine Lighting of a hologram. Disabled by default."},"hologram_methods:setParent":{"summary":"\nParents a hologram ","class":"function","private":false,"param":{"1":"ent","2":"attachment","attachment":"Optional attachment ID","ent":"Entity parent (nil to unparent)"},"fname":"setParent","realm":"sh","name":"hologram_methods:setParent","classlib":"Hologram","description":"\nParents a hologram"},"hologram_methods:remove":{"summary":"\nRemoves a hologram ","class":"function","private":false,"param":[],"fname":"remove","realm":"sh","name":"hologram_methods:remove","classlib":"Hologram","description":"\nRemoves a hologram"},"hologram_methods:setVel":{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nSets the hologram linear velocity ","fname":"setVel","realm":"sv","param":{"1":"vel","vel":"New velocity"},"name":"hologram_methods:setVel","description":"\nSets the hologram linear velocity"},"hologram_methods:setClip":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nUpdates a clip plane ","fname":"setClip","realm":"sh","param":{"1":"index","2":"enabled","3":"origin","4":"normal","5":"entity","normal":"The the direction of the clip plane in world coordinates, or local to entity if it is specified","origin":"The center of the clip plane in world coordinates, or local to entity if it is specified","entity":"(Optional) The entity to make coordinates local to, otherwise the world is used","enabled":"Whether the clip is enabled","index":"Whatever number you want the clip to be"},"name":"hologram_methods:setClip","description":"\nUpdates a clip plane"},"holograms_library.create":{"summary":"\nCreates a hologram.","ret":"The hologram object","class":"function","private":false,"library":"holograms","fname":"create","realm":"sh","param":["pos","ang","model","scale"],"name":"holograms_library.create","description":"\nCreates a hologram."}},"libraries":{"1":"holograms","holograms":{"server":true,"tables":[],"client":true,"summary":"\nLibrary for creating and manipulating physics-less models AKA \"Holograms\".","libtbl":"holograms_library","fields":[],"class":"library","functions":{"1":"canSpawn","2":"create","3":"hologramsLeft","canSpawn":{"summary":"\nChecks if a user can spawn anymore holograms.","ret":"True if user can spawn holograms, False if not.","class":"function","private":false,"library":"holograms","fname":"canSpawn","realm":"sh","param":[],"name":"holograms_library.canSpawn","description":"\nChecks if a user can spawn anymore holograms."},"create":{"summary":"\nCreates a hologram.","ret":"The hologram object","class":"function","private":false,"library":"holograms","fname":"create","realm":"sh","param":["pos","ang","model","scale"],"name":"holograms_library.create","description":"\nCreates a hologram."},"hologramsLeft":{"summary":"\nChecks how many holograms can be spawned ","ret":"number of holograms able to be spawned","class":"function","private":false,"library":"holograms","fname":"hologramsLeft","realm":"sh","param":[],"name":"holograms_library.hologramsLeft","description":"\nChecks how many holograms can be spawned"}},"name":"holograms","description":"\nLibrary for creating and manipulating physics-less models AKA \"Holograms\"."}},"type":"file","doc":[{"server":true,"tables":[],"client":true,"summary":"\nLibrary for creating and manipulating physics-less models AKA \"Holograms\".","libtbl":"holograms_library","fields":[],"class":"library","functions":{"1":"canSpawn","2":"create","3":"hologramsLeft","canSpawn":{"summary":"\nChecks if a user can spawn anymore holograms.","ret":"True if user can spawn holograms, False if not.","class":"function","private":false,"library":"holograms","fname":"canSpawn","realm":"sh","param":[],"name":"holograms_library.canSpawn","description":"\nChecks if a user can spawn anymore holograms."},"create":{"summary":"\nCreates a hologram.","ret":"The hologram object","class":"function","private":false,"library":"holograms","fname":"create","realm":"sh","param":["pos","ang","model","scale"],"name":"holograms_library.create","description":"\nCreates a hologram."},"hologramsLeft":{"summary":"\nChecks how many holograms can be spawned ","ret":"number of holograms able to be spawned","class":"function","private":false,"library":"holograms","fname":"hologramsLeft","realm":"sh","param":[],"name":"holograms_library.hologramsLeft","description":"\nChecks how many holograms can be spawned"}},"name":"holograms","description":"\nLibrary for creating and manipulating physics-less models AKA \"Holograms\"."},{"methods":{"1":"getScale","2":"remove","3":"setAngVel","4":"setAngles","5":"setAnimation","6":"setClip","7":"setFilterMag","8":"setFilterMin","9":"setModel","10":"setParent","11":"setPos","12":"setRenderMatrix","13":"setScale","14":"setVel","15":"suppressEngineLighting","setAngVel":{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nSets the hologram's angular velocity.","fname":"setAngVel","realm":"sv","param":{"1":"angvel","angvel":"*Vector* angular velocity."},"name":"hologram_methods:setAngVel","description":"\nSets the hologram's angular velocity."},"setAngles":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram's angles.","fname":"setAngles","realm":"sh","param":{"1":"ang","ang":"New angles"},"name":"hologram_methods:setAngles","description":"\nSets the hologram's angles."},"setVel":{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nSets the hologram linear velocity ","fname":"setVel","realm":"sv","param":{"1":"vel","vel":"New velocity"},"name":"hologram_methods:setVel","description":"\nSets the hologram linear velocity"},"setScale":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram scale.","fname":"setScale","realm":"sh","param":{"1":"scale","scale":"Vector new scale"},"name":"hologram_methods:setScale","description":"\nSets the hologram scale. Basically the same as setRenderMatrix() with a scaled matrix"},"setModel":{"summary":"\nSets the model of a hologram ","class":"function","private":false,"param":{"1":"model","model":"string model path"},"fname":"setModel","realm":"sh","name":"hologram_methods:setModel","classlib":"Hologram","description":"\nSets the model of a hologram"},"getScale":{"server":true,"ret":"Vector scale","class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nGets the hologram scale.","fname":"getScale","realm":"sh","param":[],"name":"hologram_methods:getScale","description":"\nGets the hologram scale."},"setFilterMag":{"summary":"\nSets the texture filtering function when viewing a close texture ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setFilterMag","realm":"cl","param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"name":"hologram_methods:setFilterMag","description":"\nSets the texture filtering function when viewing a close texture"},"setParent":{"summary":"\nParents a hologram ","class":"function","private":false,"param":{"1":"ent","2":"attachment","attachment":"Optional attachment ID","ent":"Entity parent (nil to unparent)"},"fname":"setParent","realm":"sh","name":"hologram_methods:setParent","classlib":"Hologram","description":"\nParents a hologram"},"setClip":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nUpdates a clip plane ","fname":"setClip","realm":"sh","param":{"1":"index","2":"enabled","3":"origin","4":"normal","5":"entity","normal":"The the direction of the clip plane in world coordinates, or local to entity if it is specified","origin":"The center of the clip plane in world coordinates, or local to entity if it is specified","entity":"(Optional) The entity to make coordinates local to, otherwise the world is used","enabled":"Whether the clip is enabled","index":"Whatever number you want the clip to be"},"name":"hologram_methods:setClip","description":"\nUpdates a clip plane"},"remove":{"summary":"\nRemoves a hologram ","class":"function","private":false,"param":[],"fname":"remove","realm":"sh","name":"hologram_methods:remove","classlib":"Hologram","description":"\nRemoves a hologram"},"suppressEngineLighting":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSuppress Engine Lighting of a hologram.","fname":"suppressEngineLighting","realm":"sh","param":{"1":"suppress","suppress":"Boolean to represent if shading should be set or not."},"name":"hologram_methods:suppressEngineLighting","description":"\nSuppress Engine Lighting of a hologram. Disabled by default."},"setRenderMatrix":{"summary":"\nSets a hologram entity's rendermatrix ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setRenderMatrix","realm":"cl","param":{"1":"mat","mat":"Starfall matrix to use"},"name":"hologram_methods:setRenderMatrix","description":"\nSets a hologram entity's rendermatrix"},"setPos":{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram's position.","fname":"setPos","realm":"sh","param":{"1":"vec","vec":"New position"},"name":"hologram_methods:setPos","description":"\nSets the hologram's position."},"setAnimation":{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nAnimates a hologram ","fname":"setAnimation","realm":"sv","param":{"1":"animation","2":"frame","3":"rate","animation":"number or string name","rate":"Frame speed. (1 is normal)","frame":"The starting frame number"},"name":"hologram_methods:setAnimation","description":"\nAnimates a hologram"},"setFilterMin":{"summary":"\nSets the texture filtering function when viewing a far texture ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setFilterMin","realm":"cl","param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"name":"hologram_methods:setFilterMin","description":"\nSets the texture filtering function when viewing a far texture"}},"class":"class","fields":[],"summary":"\nHologram type ","typtbl":"hologram_methods","name":"Hologram","description":"\nHologram type"},{"summary":"\nCreates a hologram.","ret":"The hologram object","class":"function","private":false,"library":"holograms","fname":"create","realm":"sh","param":["pos","ang","model","scale"],"name":"holograms_library.create","description":"\nCreates a hologram."},{"summary":"\nChecks if a user can spawn anymore holograms.","ret":"True if user can spawn holograms, False if not.","class":"function","private":false,"library":"holograms","fname":"canSpawn","realm":"sh","param":[],"name":"holograms_library.canSpawn","description":"\nChecks if a user can spawn anymore holograms."},{"summary":"\nChecks how many holograms can be spawned ","ret":"number of holograms able to be spawned","class":"function","private":false,"library":"holograms","fname":"hologramsLeft","realm":"sh","param":[],"name":"holograms_library.hologramsLeft","description":"\nChecks how many holograms can be spawned"},{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram scale.","fname":"setScale","realm":"sh","param":{"1":"scale","scale":"Vector new scale"},"name":"hologram_methods:setScale","description":"\nSets the hologram scale. Basically the same as setRenderMatrix() with a scaled matrix"},{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSuppress Engine Lighting of a hologram.","fname":"suppressEngineLighting","realm":"sh","param":{"1":"suppress","suppress":"Boolean to represent if shading should be set or not."},"name":"hologram_methods:suppressEngineLighting","description":"\nSuppress Engine Lighting of a hologram. Disabled by default."},{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nSets the hologram linear velocity ","fname":"setVel","realm":"sv","param":{"1":"vel","vel":"New velocity"},"name":"hologram_methods:setVel","description":"\nSets the hologram linear velocity"},{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nSets the hologram's angular velocity.","fname":"setAngVel","realm":"sv","param":{"1":"angvel","angvel":"*Vector* angular velocity."},"name":"hologram_methods:setAngVel","description":"\nSets the hologram's angular velocity."},{"server":true,"class":"function","classlib":"Hologram","private":false,"summary":"\nAnimates a hologram ","fname":"setAnimation","realm":"sv","param":{"1":"animation","2":"frame","3":"rate","animation":"number or string name","rate":"Frame speed. (1 is normal)","frame":"The starting frame number"},"name":"hologram_methods:setAnimation","description":"\nAnimates a hologram"},{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram's position.","fname":"setPos","realm":"sh","param":{"1":"vec","vec":"New position"},"name":"hologram_methods:setPos","description":"\nSets the hologram's position."},{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nSets the hologram's angles.","fname":"setAngles","realm":"sh","param":{"1":"ang","ang":"New angles"},"name":"hologram_methods:setAngles","description":"\nSets the hologram's angles."},{"summary":"\nRemoves a hologram ","class":"function","private":false,"param":[],"fname":"remove","realm":"sh","name":"hologram_methods:remove","classlib":"Hologram","description":"\nRemoves a hologram"},{"summary":"\nSets the texture filtering function when viewing a close texture ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setFilterMag","realm":"cl","param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"name":"hologram_methods:setFilterMag","description":"\nSets the texture filtering function when viewing a close texture"},{"summary":"\nSets the texture filtering function when viewing a far texture ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setFilterMin","realm":"cl","param":{"1":"val","val":"The filter function to use http://wiki.garrysmod.com/page/Enums/TEXFILTER"},"name":"hologram_methods:setFilterMin","description":"\nSets the texture filtering function when viewing a far texture"},{"summary":"\nSets a hologram entity's rendermatrix ","class":"function","client":true,"private":false,"classlib":"Hologram","fname":"setRenderMatrix","realm":"cl","param":{"1":"mat","mat":"Starfall matrix to use"},"name":"hologram_methods:setRenderMatrix","description":"\nSets a hologram entity's rendermatrix"},{"summary":"\nParents a hologram ","class":"function","private":false,"param":{"1":"ent","2":"attachment","attachment":"Optional attachment ID","ent":"Entity parent (nil to unparent)"},"fname":"setParent","realm":"sh","name":"hologram_methods:setParent","classlib":"Hologram","description":"\nParents a hologram"},{"server":true,"class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nUpdates a clip plane ","fname":"setClip","realm":"sh","param":{"1":"index","2":"enabled","3":"origin","4":"normal","5":"entity","normal":"The the direction of the clip plane in world coordinates, or local to entity if it is specified","origin":"The center of the clip plane in world coordinates, or local to entity if it is specified","entity":"(Optional) The entity to make coordinates local to, otherwise the world is used","enabled":"Whether the clip is enabled","index":"Whatever number you want the clip to be"},"name":"hologram_methods:setClip","description":"\nUpdates a clip plane"},{"server":true,"ret":"Vector scale","class":"function","client":true,"classlib":"Hologram","private":false,"summary":"\nGets the hologram scale.","fname":"getScale","realm":"sh","param":[],"name":"hologram_methods:getScale","description":"\nGets the hologram scale."},{"summary":"\nSets the model of a hologram ","class":"function","private":false,"param":{"1":"model","model":"string model path"},"fname":"setModel","realm":"sh","name":"hologram_methods:setModel","classlib":"Hologram","description":"\nSets the model of a hologram"}],"name":"libs_sh/holograms.lua","description":"\nLibrary for creating and manipulating physics-less models AKA \"Holograms\"."},"libs_sh/net.lua":{"summary":"\n \nNetworking library.","tables":[],"functions":{"1":"net_library.cancelStream","2":"net_library.getBitsLeft","3":"net_library.getBytesLeft","4":"net_library.getStreamProgress","5":"net_library.isStreaming","6":"net_library.readAngle","7":"net_library.readBit","8":"net_library.readBool","9":"net_library.readColor","10":"net_library.readData","11":"net_library.readDouble","12":"net_library.readEntity","13":"net_library.readFloat","14":"net_library.readInt","15":"net_library.readMatrix","16":"net_library.readStream","17":"net_library.readString","18":"net_library.readTable","19":"net_library.readType","20":"net_library.readUInt","21":"net_library.readVector","22":"net_library.receive","23":"net_library.send","24":"net_library.start","25":"net_library.writeAngle","26":"net_library.writeBit","27":"net_library.writeBool","28":"net_library.writeColor","29":"net_library.writeData","30":"net_library.writeDouble","31":"net_library.writeEntity","32":"net_library.writeFloat","33":"net_library.writeInt","34":"net_library.writeMatrix","35":"net_library.writeStream","36":"net_library.writeString","37":"net_library.writeTable","38":"net_library.writeType","39":"net_library.writeUInt","40":"net_library.writeVector","net_library.writeStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nStreams a large 20MB string.","fname":"writeStream","realm":"sh","param":{"1":"str","str":"The string to be written"},"name":"net_library.writeStream","description":"\nStreams a large 20MB string."},"net_library.getBytesLeft":{"summary":"\nReturns available bandwidth in bytes ","ret":"number of bytes that can be sent","class":"function","private":false,"library":"net","fname":"getBytesLeft","realm":"sh","param":[],"name":"net_library.getBytesLeft","description":"\nReturns available bandwidth in bytes"},"net_library.readType":{"server":true,"ret":"The object","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read.","fname":"readType","realm":"sh","param":[],"name":"net_library.readType","description":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read. Make sure to pcall it"},"net_library.readStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nReads a large string stream from the net message.","fname":"readStream","realm":"sh","param":{"1":"cb","cb":"Callback to run when the stream is finished. The first parameter in the callback is the data. Will be nil if transfer fails or is cancelled"},"name":"net_library.readStream","description":"\nReads a large string stream from the net message."},"net_library.writeDouble":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a double to the net message ","fname":"writeDouble","realm":"sh","param":{"1":"t","t":"The double to be written"},"name":"net_library.writeDouble","description":"\nWrites a double to the net message"},"net_library.writeAngle":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an angle to the net message ","fname":"writeAngle","realm":"sh","param":{"1":"t","t":"The angle to be written"},"name":"net_library.writeAngle","description":"\nWrites an angle to the net message"},"net_library.writeData":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites string containing null characters to the net message ","fname":"writeData","realm":"sh","param":{"1":"t","2":"n","t":"The string to be written","n":"How much of the string to write"},"name":"net_library.writeData","description":"\nWrites string containing null characters to the net message"},"net_library.readInt":{"server":true,"ret":"The integer that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an integer from the net message ","fname":"readInt","realm":"sh","param":{"1":"n","n":"The amount of bits to read"},"name":"net_library.readInt","description":"\nReads an integer from the net message"},"net_library.readDouble":{"server":true,"ret":"The double that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a double from the net message ","fname":"readDouble","realm":"sh","param":[],"name":"net_library.readDouble","description":"\nReads a double from the net message"},"net_library.start":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nStarts the net message ","fname":"start","realm":"sh","param":{"1":"name","name":"The message name"},"name":"net_library.start","description":"\nStarts the net message"},"net_library.writeBit":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a bit to the net message ","fname":"writeBit","realm":"sh","param":{"1":"t","t":"The bit to be written. (0 for false, 1 (or anything) for true)"},"name":"net_library.writeBit","description":"\nWrites a bit to the net message"},"net_library.readMatrix":{"server":true,"ret":"The matrix that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a matrix from the net message ","fname":"readMatrix","realm":"sh","param":[],"name":"net_library.readMatrix","description":"\nReads a matrix from the net message"},"net_library.readBit":{"server":true,"ret":"The bit that was read. (0 for false, 1 for true)","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a bit from the net message ","fname":"readBit","realm":"sh","param":[],"name":"net_library.readBit","description":"\nReads a bit from the net message"},"net_library.readData":{"server":true,"ret":"The string that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a string from the net message ","fname":"readData","realm":"sh","param":{"1":"n","n":"How many characters are in the data"},"name":"net_library.readData","description":"\nReads a string from the net message"},"net_library.writeTable":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a table to a net message automatically typing it.","fname":"writeTable","realm":"sh","param":{"1":"t","2":"v","v":"The object to write"},"name":"net_library.writeTable","description":"\nWrites a table to a net message automatically typing it."},"net_library.readString":{"server":true,"ret":"The string that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a string from the net message ","fname":"readString","realm":"sh","param":[],"name":"net_library.readString","description":"\nReads a string from the net message"},"net_library.readUInt":{"server":true,"ret":"The unsigned integer that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an unsigned integer from the net message ","fname":"readUInt","realm":"sh","param":{"1":"n","n":"The amount of bits to read"},"name":"net_library.readUInt","description":"\nReads an unsigned integer from the net message"},"net_library.writeMatrix":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an matrix to the net message ","fname":"writeMatrix","realm":"sh","param":{"1":"t","t":"The matrix to be written"},"name":"net_library.writeMatrix","description":"\nWrites an matrix to the net message"},"net_library.writeInt":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an integer to the net message ","fname":"writeInt","realm":"sh","param":{"1":"t","2":"n","t":"The integer to be written","n":"The amount of bits the integer consists of"},"name":"net_library.writeInt","description":"\nWrites an integer to the net message"},"net_library.isStreaming":{"summary":"\nReturns whether or not the library is currently reading data from a stream ","ret":"Boolean","class":"function","private":false,"library":"net","fname":"isStreaming","realm":"sh","param":[],"name":"net_library.isStreaming","description":"\nReturns whether or not the library is currently reading data from a stream"},"net_library.writeEntity":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an entity to the net message ","fname":"writeEntity","realm":"sh","param":{"1":"t","t":"The entity to be written"},"name":"net_library.writeEntity","description":"\nWrites an entity to the net message"},"net_library.readVector":{"server":true,"ret":"The vector that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a vector from the net message ","fname":"readVector","realm":"sh","param":[],"name":"net_library.readVector","description":"\nReads a vector from the net message"},"net_library.writeFloat":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a float to the net message ","fname":"writeFloat","realm":"sh","param":{"1":"t","t":"The float to be written"},"name":"net_library.writeFloat","description":"\nWrites a float to the net message"},"net_library.writeType":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an object to a net message automatically typing it ","fname":"writeType","realm":"sh","param":{"1":"v","v":"The object to write"},"name":"net_library.writeType","description":"\nWrites an object to a net message automatically typing it"},"net_library.readEntity":{"server":true,"ret":"The entity that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a entity from the net message ","fname":"readEntity","realm":"sh","param":[],"name":"net_library.readEntity","description":"\nReads a entity from the net message"},"net_library.writeColor":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an color to the net message ","fname":"writeColor","realm":"sh","param":{"1":"t","t":"The color to be written"},"name":"net_library.writeColor","description":"\nWrites an color to the net message"},"net_library.getBitsLeft":{"summary":"\nReturns available bandwidth in bits ","ret":"number of bits that can be sent","class":"function","private":false,"library":"net","fname":"getBitsLeft","realm":"sh","param":[],"name":"net_library.getBitsLeft","description":"\nReturns available bandwidth in bits"},"net_library.send":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nSend a net message from client->server, or server->client.","fname":"send","realm":"sh","param":{"1":"target","2":"unreliable","unreliable":"Optional choose whether it's more important for the message to actually reach its destination (false) or reach it as fast as possible (true).","target":"Optional target location to send the net message."},"name":"net_library.send","description":"\nSend a net message from client->server, or server->client."},"net_library.readColor":{"server":true,"ret":"The color that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a color from the net message ","fname":"readColor","realm":"sh","param":[],"name":"net_library.readColor","description":"\nReads a color from the net message"},"net_library.receive":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nLike glua net.Receive, adds a callback that is called when a net message with the matching name is received.","fname":"receive","realm":"sh","param":{"1":"name","2":"func","name":"The name of the net message","func":"The callback or nil to remove callback. (len - length of the net message, ply - player that sent it or nil if clientside)"},"name":"net_library.receive","description":"\nLike glua net.Receive, adds a callback that is called when a net message with the matching name is received. If this happens, the net hook won't be called."},"net_library.readTable":{"server":true,"ret":"The object","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read.","fname":"readTable","realm":"sh","param":[],"name":"net_library.readTable","description":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read. Make sure to pcall it"},"net_library.writeBool":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a bool to the net message ","fname":"writeBool","realm":"sh","param":{"1":"t","t":"The bit to be written. (boolean)"},"name":"net_library.writeBool","description":"\nWrites a bool to the net message"},"net_library.readFloat":{"server":true,"ret":"The float that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a float from the net message ","fname":"readFloat","realm":"sh","param":[],"name":"net_library.readFloat","description":"\nReads a float from the net message"},"net_library.cancelStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nCancels a currently running readStream ","fname":"cancelStream","realm":"sh","param":[],"name":"net_library.cancelStream","description":"\nCancels a currently running readStream"},"net_library.writeUInt":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an unsigned integer to the net message ","fname":"writeUInt","realm":"sh","param":{"1":"t","2":"n","t":"The integer to be written","n":"The amount of bits the integer consists of. Should not be greater than 32"},"name":"net_library.writeUInt","description":"\nWrites an unsigned integer to the net message"},"net_library.readBool":{"server":true,"ret":"The boolean that was read.","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a boolean from the net message ","fname":"readBool","realm":"sh","param":[],"name":"net_library.readBool","description":"\nReads a boolean from the net message"},"net_library.writeString":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a string to the net message.","fname":"writeString","realm":"sh","param":{"1":"t","t":"The string to be written"},"name":"net_library.writeString","description":"\nWrites a string to the net message. Null characters will terminate the string."},"net_library.getStreamProgress":{"server":true,"ret":"The progress ratio 0-1","class":"function","client":true,"library":"net","private":false,"summary":"\nReturns the progress of a running readStream ","fname":"getStreamProgress","realm":"sh","param":[],"name":"net_library.getStreamProgress","description":"\nReturns the progress of a running readStream"},"net_library.readAngle":{"server":true,"ret":"The angle that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an angle from the net message ","fname":"readAngle","realm":"sh","param":[],"name":"net_library.readAngle","description":"\nReads an angle from the net message"},"net_library.writeVector":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an vector to the net message.","fname":"writeVector","realm":"sh","param":{"1":"t","t":"The vector to be written"},"name":"net_library.writeVector","description":"\nWrites an vector to the net message. Has significantly lower precision than writeFloat"}},"libraries":{"1":"net","net":{"summary":"\nNet message library.","tables":[],"libtbl":"net_library","fields":[],"class":"library","functions":{"1":"cancelStream","2":"getBitsLeft","3":"getBytesLeft","4":"getStreamProgress","5":"isStreaming","6":"readAngle","7":"readBit","8":"readBool","9":"readColor","10":"readData","11":"readDouble","12":"readEntity","13":"readFloat","14":"readInt","15":"readMatrix","16":"readStream","17":"readString","18":"readTable","19":"readType","20":"readUInt","21":"readVector","22":"receive","23":"send","24":"start","25":"writeAngle","26":"writeBit","27":"writeBool","28":"writeColor","29":"writeData","30":"writeDouble","31":"writeEntity","32":"writeFloat","33":"writeInt","34":"writeMatrix","35":"writeStream","36":"writeString","37":"writeTable","38":"writeType","39":"writeUInt","40":"writeVector","readVector":{"server":true,"ret":"The vector that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a vector from the net message ","fname":"readVector","realm":"sh","param":[],"name":"net_library.readVector","description":"\nReads a vector from the net message"},"writeUInt":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an unsigned integer to the net message ","fname":"writeUInt","realm":"sh","param":{"1":"t","2":"n","t":"The integer to be written","n":"The amount of bits the integer consists of. Should not be greater than 32"},"name":"net_library.writeUInt","description":"\nWrites an unsigned integer to the net message"},"send":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nSend a net message from client->server, or server->client.","fname":"send","realm":"sh","param":{"1":"target","2":"unreliable","unreliable":"Optional choose whether it's more important for the message to actually reach its destination (false) or reach it as fast as possible (true).","target":"Optional target location to send the net message."},"name":"net_library.send","description":"\nSend a net message from client->server, or server->client."},"readInt":{"server":true,"ret":"The integer that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an integer from the net message ","fname":"readInt","realm":"sh","param":{"1":"n","n":"The amount of bits to read"},"name":"net_library.readInt","description":"\nReads an integer from the net message"},"cancelStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nCancels a currently running readStream ","fname":"cancelStream","realm":"sh","param":[],"name":"net_library.cancelStream","description":"\nCancels a currently running readStream"},"readMatrix":{"server":true,"ret":"The matrix that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a matrix from the net message ","fname":"readMatrix","realm":"sh","param":[],"name":"net_library.readMatrix","description":"\nReads a matrix from the net message"},"writeDouble":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a double to the net message ","fname":"writeDouble","realm":"sh","param":{"1":"t","t":"The double to be written"},"name":"net_library.writeDouble","description":"\nWrites a double to the net message"},"readTable":{"server":true,"ret":"The object","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read.","fname":"readTable","realm":"sh","param":[],"name":"net_library.readTable","description":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read. Make sure to pcall it"},"readBool":{"server":true,"ret":"The boolean that was read.","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a boolean from the net message ","fname":"readBool","realm":"sh","param":[],"name":"net_library.readBool","description":"\nReads a boolean from the net message"},"writeData":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites string containing null characters to the net message ","fname":"writeData","realm":"sh","param":{"1":"t","2":"n","t":"The string to be written","n":"How much of the string to write"},"name":"net_library.writeData","description":"\nWrites string containing null characters to the net message"},"readUInt":{"server":true,"ret":"The unsigned integer that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an unsigned integer from the net message ","fname":"readUInt","realm":"sh","param":{"1":"n","n":"The amount of bits to read"},"name":"net_library.readUInt","description":"\nReads an unsigned integer from the net message"},"readData":{"server":true,"ret":"The string that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a string from the net message ","fname":"readData","realm":"sh","param":{"1":"n","n":"How many characters are in the data"},"name":"net_library.readData","description":"\nReads a string from the net message"},"writeTable":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a table to a net message automatically typing it.","fname":"writeTable","realm":"sh","param":{"1":"t","2":"v","v":"The object to write"},"name":"net_library.writeTable","description":"\nWrites a table to a net message automatically typing it."},"getStreamProgress":{"server":true,"ret":"The progress ratio 0-1","class":"function","client":true,"library":"net","private":false,"summary":"\nReturns the progress of a running readStream ","fname":"getStreamProgress","realm":"sh","param":[],"name":"net_library.getStreamProgress","description":"\nReturns the progress of a running readStream"},"readDouble":{"server":true,"ret":"The double that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a double from the net message ","fname":"readDouble","realm":"sh","param":[],"name":"net_library.readDouble","description":"\nReads a double from the net message"},"getBitsLeft":{"summary":"\nReturns available bandwidth in bits ","ret":"number of bits that can be sent","class":"function","private":false,"library":"net","fname":"getBitsLeft","realm":"sh","param":[],"name":"net_library.getBitsLeft","description":"\nReturns available bandwidth in bits"},"writeString":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a string to the net message.","fname":"writeString","realm":"sh","param":{"1":"t","t":"The string to be written"},"name":"net_library.writeString","description":"\nWrites a string to the net message. Null characters will terminate the string."},"readBit":{"server":true,"ret":"The bit that was read. (0 for false, 1 for true)","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a bit from the net message ","fname":"readBit","realm":"sh","param":[],"name":"net_library.readBit","description":"\nReads a bit from the net message"},"writeEntity":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an entity to the net message ","fname":"writeEntity","realm":"sh","param":{"1":"t","t":"The entity to be written"},"name":"net_library.writeEntity","description":"\nWrites an entity to the net message"},"writeInt":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an integer to the net message ","fname":"writeInt","realm":"sh","param":{"1":"t","2":"n","t":"The integer to be written","n":"The amount of bits the integer consists of"},"name":"net_library.writeInt","description":"\nWrites an integer to the net message"},"writeFloat":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a float to the net message ","fname":"writeFloat","realm":"sh","param":{"1":"t","t":"The float to be written"},"name":"net_library.writeFloat","description":"\nWrites a float to the net message"},"writeVector":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an vector to the net message.","fname":"writeVector","realm":"sh","param":{"1":"t","t":"The vector to be written"},"name":"net_library.writeVector","description":"\nWrites an vector to the net message. Has significantly lower precision than writeFloat"},"readType":{"server":true,"ret":"The object","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read.","fname":"readType","realm":"sh","param":[],"name":"net_library.readType","description":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read. Make sure to pcall it"},"start":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nStarts the net message ","fname":"start","realm":"sh","param":{"1":"name","name":"The message name"},"name":"net_library.start","description":"\nStarts the net message"},"readAngle":{"server":true,"ret":"The angle that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an angle from the net message ","fname":"readAngle","realm":"sh","param":[],"name":"net_library.readAngle","description":"\nReads an angle from the net message"},"writeBool":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a bool to the net message ","fname":"writeBool","realm":"sh","param":{"1":"t","t":"The bit to be written. (boolean)"},"name":"net_library.writeBool","description":"\nWrites a bool to the net message"},"readFloat":{"server":true,"ret":"The float that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a float from the net message ","fname":"readFloat","realm":"sh","param":[],"name":"net_library.readFloat","description":"\nReads a float from the net message"},"getBytesLeft":{"summary":"\nReturns available bandwidth in bytes ","ret":"number of bytes that can be sent","class":"function","private":false,"library":"net","fname":"getBytesLeft","realm":"sh","param":[],"name":"net_library.getBytesLeft","description":"\nReturns available bandwidth in bytes"},"receive":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nLike glua net.Receive, adds a callback that is called when a net message with the matching name is received.","fname":"receive","realm":"sh","param":{"1":"name","2":"func","name":"The name of the net message","func":"The callback or nil to remove callback. (len - length of the net message, ply - player that sent it or nil if clientside)"},"name":"net_library.receive","description":"\nLike glua net.Receive, adds a callback that is called when a net message with the matching name is received. If this happens, the net hook won't be called."},"readEntity":{"server":true,"ret":"The entity that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a entity from the net message ","fname":"readEntity","realm":"sh","param":[],"name":"net_library.readEntity","description":"\nReads a entity from the net message"},"readColor":{"server":true,"ret":"The color that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a color from the net message ","fname":"readColor","realm":"sh","param":[],"name":"net_library.readColor","description":"\nReads a color from the net message"},"writeAngle":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an angle to the net message ","fname":"writeAngle","realm":"sh","param":{"1":"t","t":"The angle to be written"},"name":"net_library.writeAngle","description":"\nWrites an angle to the net message"},"writeStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nStreams a large 20MB string.","fname":"writeStream","realm":"sh","param":{"1":"str","str":"The string to be written"},"name":"net_library.writeStream","description":"\nStreams a large 20MB string."},"writeColor":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an color to the net message ","fname":"writeColor","realm":"sh","param":{"1":"t","t":"The color to be written"},"name":"net_library.writeColor","description":"\nWrites an color to the net message"},"writeMatrix":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an matrix to the net message ","fname":"writeMatrix","realm":"sh","param":{"1":"t","t":"The matrix to be written"},"name":"net_library.writeMatrix","description":"\nWrites an matrix to the net message"},"writeBit":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a bit to the net message ","fname":"writeBit","realm":"sh","param":{"1":"t","t":"The bit to be written. (0 for false, 1 (or anything) for true)"},"name":"net_library.writeBit","description":"\nWrites a bit to the net message"},"isStreaming":{"summary":"\nReturns whether or not the library is currently reading data from a stream ","ret":"Boolean","class":"function","private":false,"library":"net","fname":"isStreaming","realm":"sh","param":[],"name":"net_library.isStreaming","description":"\nReturns whether or not the library is currently reading data from a stream"},"writeType":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an object to a net message automatically typing it ","fname":"writeType","realm":"sh","param":{"1":"v","v":"The object to write"},"name":"net_library.writeType","description":"\nWrites an object to a net message automatically typing it"},"readStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nReads a large string stream from the net message.","fname":"readStream","realm":"sh","param":{"1":"cb","cb":"Callback to run when the stream is finished. The first parameter in the callback is the data. Will be nil if transfer fails or is cancelled"},"name":"net_library.readStream","description":"\nReads a large string stream from the net message."},"readString":{"server":true,"ret":"The string that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a string from the net message ","fname":"readString","realm":"sh","param":[],"name":"net_library.readString","description":"\nReads a string from the net message"}},"name":"net","description":"\nNet message library. Used for sending data from the server to the client and back"}},"type":"file","doc":[{"summary":"\n \nNetworking library.","description":"\n \nNetworking library. \n"},{"summary":"\nNet message library.","tables":[],"libtbl":"net_library","fields":[],"class":"library","functions":{"1":"cancelStream","2":"getBitsLeft","3":"getBytesLeft","4":"getStreamProgress","5":"isStreaming","6":"readAngle","7":"readBit","8":"readBool","9":"readColor","10":"readData","11":"readDouble","12":"readEntity","13":"readFloat","14":"readInt","15":"readMatrix","16":"readStream","17":"readString","18":"readTable","19":"readType","20":"readUInt","21":"readVector","22":"receive","23":"send","24":"start","25":"writeAngle","26":"writeBit","27":"writeBool","28":"writeColor","29":"writeData","30":"writeDouble","31":"writeEntity","32":"writeFloat","33":"writeInt","34":"writeMatrix","35":"writeStream","36":"writeString","37":"writeTable","38":"writeType","39":"writeUInt","40":"writeVector","readVector":{"server":true,"ret":"The vector that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a vector from the net message ","fname":"readVector","realm":"sh","param":[],"name":"net_library.readVector","description":"\nReads a vector from the net message"},"writeUInt":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an unsigned integer to the net message ","fname":"writeUInt","realm":"sh","param":{"1":"t","2":"n","t":"The integer to be written","n":"The amount of bits the integer consists of. Should not be greater than 32"},"name":"net_library.writeUInt","description":"\nWrites an unsigned integer to the net message"},"send":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nSend a net message from client->server, or server->client.","fname":"send","realm":"sh","param":{"1":"target","2":"unreliable","unreliable":"Optional choose whether it's more important for the message to actually reach its destination (false) or reach it as fast as possible (true).","target":"Optional target location to send the net message."},"name":"net_library.send","description":"\nSend a net message from client->server, or server->client."},"readInt":{"server":true,"ret":"The integer that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an integer from the net message ","fname":"readInt","realm":"sh","param":{"1":"n","n":"The amount of bits to read"},"name":"net_library.readInt","description":"\nReads an integer from the net message"},"cancelStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nCancels a currently running readStream ","fname":"cancelStream","realm":"sh","param":[],"name":"net_library.cancelStream","description":"\nCancels a currently running readStream"},"readMatrix":{"server":true,"ret":"The matrix that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a matrix from the net message ","fname":"readMatrix","realm":"sh","param":[],"name":"net_library.readMatrix","description":"\nReads a matrix from the net message"},"writeDouble":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a double to the net message ","fname":"writeDouble","realm":"sh","param":{"1":"t","t":"The double to be written"},"name":"net_library.writeDouble","description":"\nWrites a double to the net message"},"readTable":{"server":true,"ret":"The object","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read.","fname":"readTable","realm":"sh","param":[],"name":"net_library.readTable","description":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read. Make sure to pcall it"},"readBool":{"server":true,"ret":"The boolean that was read.","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a boolean from the net message ","fname":"readBool","realm":"sh","param":[],"name":"net_library.readBool","description":"\nReads a boolean from the net message"},"writeData":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites string containing null characters to the net message ","fname":"writeData","realm":"sh","param":{"1":"t","2":"n","t":"The string to be written","n":"How much of the string to write"},"name":"net_library.writeData","description":"\nWrites string containing null characters to the net message"},"readUInt":{"server":true,"ret":"The unsigned integer that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an unsigned integer from the net message ","fname":"readUInt","realm":"sh","param":{"1":"n","n":"The amount of bits to read"},"name":"net_library.readUInt","description":"\nReads an unsigned integer from the net message"},"readData":{"server":true,"ret":"The string that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a string from the net message ","fname":"readData","realm":"sh","param":{"1":"n","n":"How many characters are in the data"},"name":"net_library.readData","description":"\nReads a string from the net message"},"writeTable":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a table to a net message automatically typing it.","fname":"writeTable","realm":"sh","param":{"1":"t","2":"v","v":"The object to write"},"name":"net_library.writeTable","description":"\nWrites a table to a net message automatically typing it."},"getStreamProgress":{"server":true,"ret":"The progress ratio 0-1","class":"function","client":true,"library":"net","private":false,"summary":"\nReturns the progress of a running readStream ","fname":"getStreamProgress","realm":"sh","param":[],"name":"net_library.getStreamProgress","description":"\nReturns the progress of a running readStream"},"readDouble":{"server":true,"ret":"The double that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a double from the net message ","fname":"readDouble","realm":"sh","param":[],"name":"net_library.readDouble","description":"\nReads a double from the net message"},"getBitsLeft":{"summary":"\nReturns available bandwidth in bits ","ret":"number of bits that can be sent","class":"function","private":false,"library":"net","fname":"getBitsLeft","realm":"sh","param":[],"name":"net_library.getBitsLeft","description":"\nReturns available bandwidth in bits"},"writeString":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a string to the net message.","fname":"writeString","realm":"sh","param":{"1":"t","t":"The string to be written"},"name":"net_library.writeString","description":"\nWrites a string to the net message. Null characters will terminate the string."},"readBit":{"server":true,"ret":"The bit that was read. (0 for false, 1 for true)","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a bit from the net message ","fname":"readBit","realm":"sh","param":[],"name":"net_library.readBit","description":"\nReads a bit from the net message"},"writeEntity":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an entity to the net message ","fname":"writeEntity","realm":"sh","param":{"1":"t","t":"The entity to be written"},"name":"net_library.writeEntity","description":"\nWrites an entity to the net message"},"writeInt":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an integer to the net message ","fname":"writeInt","realm":"sh","param":{"1":"t","2":"n","t":"The integer to be written","n":"The amount of bits the integer consists of"},"name":"net_library.writeInt","description":"\nWrites an integer to the net message"},"writeFloat":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a float to the net message ","fname":"writeFloat","realm":"sh","param":{"1":"t","t":"The float to be written"},"name":"net_library.writeFloat","description":"\nWrites a float to the net message"},"writeVector":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an vector to the net message.","fname":"writeVector","realm":"sh","param":{"1":"t","t":"The vector to be written"},"name":"net_library.writeVector","description":"\nWrites an vector to the net message. Has significantly lower precision than writeFloat"},"readType":{"server":true,"ret":"The object","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read.","fname":"readType","realm":"sh","param":[],"name":"net_library.readType","description":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read. Make sure to pcall it"},"start":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nStarts the net message ","fname":"start","realm":"sh","param":{"1":"name","name":"The message name"},"name":"net_library.start","description":"\nStarts the net message"},"readAngle":{"server":true,"ret":"The angle that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an angle from the net message ","fname":"readAngle","realm":"sh","param":[],"name":"net_library.readAngle","description":"\nReads an angle from the net message"},"writeBool":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a bool to the net message ","fname":"writeBool","realm":"sh","param":{"1":"t","t":"The bit to be written. (boolean)"},"name":"net_library.writeBool","description":"\nWrites a bool to the net message"},"readFloat":{"server":true,"ret":"The float that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a float from the net message ","fname":"readFloat","realm":"sh","param":[],"name":"net_library.readFloat","description":"\nReads a float from the net message"},"getBytesLeft":{"summary":"\nReturns available bandwidth in bytes ","ret":"number of bytes that can be sent","class":"function","private":false,"library":"net","fname":"getBytesLeft","realm":"sh","param":[],"name":"net_library.getBytesLeft","description":"\nReturns available bandwidth in bytes"},"receive":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nLike glua net.Receive, adds a callback that is called when a net message with the matching name is received.","fname":"receive","realm":"sh","param":{"1":"name","2":"func","name":"The name of the net message","func":"The callback or nil to remove callback. (len - length of the net message, ply - player that sent it or nil if clientside)"},"name":"net_library.receive","description":"\nLike glua net.Receive, adds a callback that is called when a net message with the matching name is received. If this happens, the net hook won't be called."},"readEntity":{"server":true,"ret":"The entity that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a entity from the net message ","fname":"readEntity","realm":"sh","param":[],"name":"net_library.readEntity","description":"\nReads a entity from the net message"},"readColor":{"server":true,"ret":"The color that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a color from the net message ","fname":"readColor","realm":"sh","param":[],"name":"net_library.readColor","description":"\nReads a color from the net message"},"writeAngle":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an angle to the net message ","fname":"writeAngle","realm":"sh","param":{"1":"t","t":"The angle to be written"},"name":"net_library.writeAngle","description":"\nWrites an angle to the net message"},"writeStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nStreams a large 20MB string.","fname":"writeStream","realm":"sh","param":{"1":"str","str":"The string to be written"},"name":"net_library.writeStream","description":"\nStreams a large 20MB string."},"writeColor":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an color to the net message ","fname":"writeColor","realm":"sh","param":{"1":"t","t":"The color to be written"},"name":"net_library.writeColor","description":"\nWrites an color to the net message"},"writeMatrix":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an matrix to the net message ","fname":"writeMatrix","realm":"sh","param":{"1":"t","t":"The matrix to be written"},"name":"net_library.writeMatrix","description":"\nWrites an matrix to the net message"},"writeBit":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a bit to the net message ","fname":"writeBit","realm":"sh","param":{"1":"t","t":"The bit to be written. (0 for false, 1 (or anything) for true)"},"name":"net_library.writeBit","description":"\nWrites a bit to the net message"},"isStreaming":{"summary":"\nReturns whether or not the library is currently reading data from a stream ","ret":"Boolean","class":"function","private":false,"library":"net","fname":"isStreaming","realm":"sh","param":[],"name":"net_library.isStreaming","description":"\nReturns whether or not the library is currently reading data from a stream"},"writeType":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an object to a net message automatically typing it ","fname":"writeType","realm":"sh","param":{"1":"v","v":"The object to write"},"name":"net_library.writeType","description":"\nWrites an object to a net message automatically typing it"},"readStream":{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nReads a large string stream from the net message.","fname":"readStream","realm":"sh","param":{"1":"cb","cb":"Callback to run when the stream is finished. The first parameter in the callback is the data. Will be nil if transfer fails or is cancelled"},"name":"net_library.readStream","description":"\nReads a large string stream from the net message."},"readString":{"server":true,"ret":"The string that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a string from the net message ","fname":"readString","realm":"sh","param":[],"name":"net_library.readString","description":"\nReads a string from the net message"}},"name":"net","description":"\nNet message library. Used for sending data from the server to the client and back"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nStarts the net message ","fname":"start","realm":"sh","param":{"1":"name","name":"The message name"},"name":"net_library.start","description":"\nStarts the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nSend a net message from client->server, or server->client.","fname":"send","realm":"sh","param":{"1":"target","2":"unreliable","unreliable":"Optional choose whether it's more important for the message to actually reach its destination (false) or reach it as fast as possible (true).","target":"Optional target location to send the net message."},"name":"net_library.send","description":"\nSend a net message from client->server, or server->client."},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an object to a net message automatically typing it ","fname":"writeType","realm":"sh","param":{"1":"v","v":"The object to write"},"name":"net_library.writeType","description":"\nWrites an object to a net message automatically typing it"},{"server":true,"ret":"The object","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read.","fname":"readType","realm":"sh","param":[],"name":"net_library.readType","description":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read. Make sure to pcall it"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a table to a net message automatically typing it.","fname":"writeTable","realm":"sh","param":{"1":"t","2":"v","v":"The object to write"},"name":"net_library.writeTable","description":"\nWrites a table to a net message automatically typing it."},{"server":true,"ret":"The object","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read.","fname":"readTable","realm":"sh","param":[],"name":"net_library.readTable","description":"\nReads an object from a net message automatically typing it \nWill throw an error if invalid type is read. Make sure to pcall it"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a string to the net message.","fname":"writeString","realm":"sh","param":{"1":"t","t":"The string to be written"},"name":"net_library.writeString","description":"\nWrites a string to the net message. Null characters will terminate the string."},{"server":true,"ret":"The string that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a string from the net message ","fname":"readString","realm":"sh","param":[],"name":"net_library.readString","description":"\nReads a string from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites string containing null characters to the net message ","fname":"writeData","realm":"sh","param":{"1":"t","2":"n","t":"The string to be written","n":"How much of the string to write"},"name":"net_library.writeData","description":"\nWrites string containing null characters to the net message"},{"server":true,"ret":"The string that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a string from the net message ","fname":"readData","realm":"sh","param":{"1":"n","n":"How many characters are in the data"},"name":"net_library.readData","description":"\nReads a string from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nStreams a large 20MB string.","fname":"writeStream","realm":"sh","param":{"1":"str","str":"The string to be written"},"name":"net_library.writeStream","description":"\nStreams a large 20MB string."},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nReads a large string stream from the net message.","fname":"readStream","realm":"sh","param":{"1":"cb","cb":"Callback to run when the stream is finished. The first parameter in the callback is the data. Will be nil if transfer fails or is cancelled"},"name":"net_library.readStream","description":"\nReads a large string stream from the net message."},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nCancels a currently running readStream ","fname":"cancelStream","realm":"sh","param":[],"name":"net_library.cancelStream","description":"\nCancels a currently running readStream"},{"server":true,"ret":"The progress ratio 0-1","class":"function","client":true,"library":"net","private":false,"summary":"\nReturns the progress of a running readStream ","fname":"getStreamProgress","realm":"sh","param":[],"name":"net_library.getStreamProgress","description":"\nReturns the progress of a running readStream"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an integer to the net message ","fname":"writeInt","realm":"sh","param":{"1":"t","2":"n","t":"The integer to be written","n":"The amount of bits the integer consists of"},"name":"net_library.writeInt","description":"\nWrites an integer to the net message"},{"server":true,"ret":"The integer that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an integer from the net message ","fname":"readInt","realm":"sh","param":{"1":"n","n":"The amount of bits to read"},"name":"net_library.readInt","description":"\nReads an integer from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an unsigned integer to the net message ","fname":"writeUInt","realm":"sh","param":{"1":"t","2":"n","t":"The integer to be written","n":"The amount of bits the integer consists of. Should not be greater than 32"},"name":"net_library.writeUInt","description":"\nWrites an unsigned integer to the net message"},{"server":true,"ret":"The unsigned integer that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an unsigned integer from the net message ","fname":"readUInt","realm":"sh","param":{"1":"n","n":"The amount of bits to read"},"name":"net_library.readUInt","description":"\nReads an unsigned integer from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a bit to the net message ","fname":"writeBit","realm":"sh","param":{"1":"t","t":"The bit to be written. (0 for false, 1 (or anything) for true)"},"name":"net_library.writeBit","description":"\nWrites a bit to the net message"},{"server":true,"ret":"The bit that was read. (0 for false, 1 for true)","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a bit from the net message ","fname":"readBit","realm":"sh","param":[],"name":"net_library.readBit","description":"\nReads a bit from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a bool to the net message ","fname":"writeBool","realm":"sh","param":{"1":"t","t":"The bit to be written. (boolean)"},"name":"net_library.writeBool","description":"\nWrites a bool to the net message"},{"server":true,"ret":"The boolean that was read.","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a boolean from the net message ","fname":"readBool","realm":"sh","param":[],"name":"net_library.readBool","description":"\nReads a boolean from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a double to the net message ","fname":"writeDouble","realm":"sh","param":{"1":"t","t":"The double to be written"},"name":"net_library.writeDouble","description":"\nWrites a double to the net message"},{"server":true,"ret":"The double that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a double from the net message ","fname":"readDouble","realm":"sh","param":[],"name":"net_library.readDouble","description":"\nReads a double from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites a float to the net message ","fname":"writeFloat","realm":"sh","param":{"1":"t","t":"The float to be written"},"name":"net_library.writeFloat","description":"\nWrites a float to the net message"},{"server":true,"ret":"The float that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a float from the net message ","fname":"readFloat","realm":"sh","param":[],"name":"net_library.readFloat","description":"\nReads a float from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an angle to the net message ","fname":"writeAngle","realm":"sh","param":{"1":"t","t":"The angle to be written"},"name":"net_library.writeAngle","description":"\nWrites an angle to the net message"},{"server":true,"ret":"The angle that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads an angle from the net message ","fname":"readAngle","realm":"sh","param":[],"name":"net_library.readAngle","description":"\nReads an angle from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an vector to the net message.","fname":"writeVector","realm":"sh","param":{"1":"t","t":"The vector to be written"},"name":"net_library.writeVector","description":"\nWrites an vector to the net message. Has significantly lower precision than writeFloat"},{"server":true,"ret":"The vector that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a vector from the net message ","fname":"readVector","realm":"sh","param":[],"name":"net_library.readVector","description":"\nReads a vector from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an matrix to the net message ","fname":"writeMatrix","realm":"sh","param":{"1":"t","t":"The matrix to be written"},"name":"net_library.writeMatrix","description":"\nWrites an matrix to the net message"},{"server":true,"ret":"The matrix that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a matrix from the net message ","fname":"readMatrix","realm":"sh","param":[],"name":"net_library.readMatrix","description":"\nReads a matrix from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an color to the net message ","fname":"writeColor","realm":"sh","param":{"1":"t","t":"The color to be written"},"name":"net_library.writeColor","description":"\nWrites an color to the net message"},{"server":true,"ret":"The color that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a color from the net message ","fname":"readColor","realm":"sh","param":[],"name":"net_library.readColor","description":"\nReads a color from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nWrites an entity to the net message ","fname":"writeEntity","realm":"sh","param":{"1":"t","t":"The entity to be written"},"name":"net_library.writeEntity","description":"\nWrites an entity to the net message"},{"server":true,"ret":"The entity that was read","class":"function","client":true,"library":"net","private":false,"summary":"\nReads a entity from the net message ","fname":"readEntity","realm":"sh","param":[],"name":"net_library.readEntity","description":"\nReads a entity from the net message"},{"server":true,"class":"function","client":true,"library":"net","private":false,"summary":"\nLike glua net.Receive, adds a callback that is called when a net message with the matching name is received.","fname":"receive","realm":"sh","param":{"1":"name","2":"func","name":"The name of the net message","func":"The callback or nil to remove callback. (len - length of the net message, ply - player that sent it or nil if clientside)"},"name":"net_library.receive","description":"\nLike glua net.Receive, adds a callback that is called when a net message with the matching name is received. If this happens, the net hook won't be called."},{"summary":"\nReturns available bandwidth in bytes ","ret":"number of bytes that can be sent","class":"function","private":false,"library":"net","fname":"getBytesLeft","realm":"sh","param":[],"name":"net_library.getBytesLeft","description":"\nReturns available bandwidth in bytes"},{"summary":"\nReturns available bandwidth in bits ","ret":"number of bits that can be sent","class":"function","private":false,"library":"net","fname":"getBitsLeft","realm":"sh","param":[],"name":"net_library.getBitsLeft","description":"\nReturns available bandwidth in bits"},{"summary":"\nReturns whether or not the library is currently reading data from a stream ","ret":"Boolean","class":"function","private":false,"library":"net","fname":"isStreaming","realm":"sh","param":[],"name":"net_library.isStreaming","description":"\nReturns whether or not the library is currently reading data from a stream"},{"summary":"\nCalled when a net message arrives ","classForced":true,"realm":"sh","description":"\nCalled when a net message arrives","class":"hook","name":"net","param":{"1":"name","2":"len","3":"ply","ply":"On server, the player that sent the message. Nil on client.","name":"Name of the arriving net message","len":"Length of the arriving net message in bits"}}],"name":"libs_sh/net.lua","description":"\n \nNetworking library. \n"},"libs_sh/color.lua":{"summary":"\nColor type ","tables":[],"functions":{"1":"SF.DefaultEnvironment.Color","2":"color_metatable.__add","3":"color_metatable.__concat","4":"color_metatable.__div","5":"color_metatable.__eq","6":"color_metatable.__index","7":"color_metatable.__mul","8":"color_metatable.__newindex","9":"color_metatable.__sub","10":"color_metatable.__tostring","11":"color_methods:clone","12":"color_methods:hsvToRGB","13":"color_methods:rgbToHSV","14":"color_methods:set","15":"color_methods:setA","16":"color_methods:setB","17":"color_methods:setG","18":"color_methods:setR","color_metatable.__add":{"summary":"\naddition metamethod ","ret":"Added color.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"lhs","4":"rhs","lhs":"Left side of equation","rhs":"Right side of equation"},"name":"color_metatable.__add","description":"\naddition metamethod"},"SF.DefaultEnvironment.Color":{"summary":"\nCreates a table struct that resembles a Color/ ","classForced":true,"ret":"New color","class":"function","private":false,"param":{"1":"r","2":"g","3":"b","4":"a","r":"- Red","b":"- Blue","a":"- Alpha","g":"- Green"},"realm":"sh","name":"SF.DefaultEnvironment.Color","description":"\nCreates a table struct that resembles a Color/"},"color_metatable.__eq":{"private":false,"param":["a","b"],"realm":"sh","summary":"\n__eq metamethod ","class":"function","name":"color_metatable.__eq","description":"\n__eq metamethod"},"color_methods:rgbToHSV":{"server":true,"ret":"A triplet of numbers representing HSV.","class":"function","client":true,"classlib":"Color","private":false,"summary":"\nConverts the color from RGB to HSV.","fname":"rgbToHSV","realm":"sh","param":[],"name":"color_methods:rgbToHSV","description":"\nConverts the color from RGB to HSV."},"color_metatable.__mul":{"summary":"\nmultiplication metamethod ","ret":"Scaled color.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"lhs","4":"rhs","lhs":"Left side of equation","rhs":"Right side of equation"},"name":"color_metatable.__mul","description":"\nmultiplication metamethod"},"color_metatable.__concat":{"private":false,"param":["..."],"realm":"sh","summary":"\n__concat metamethod ","class":"function","name":"color_metatable.__concat","description":"\n__concat metamethod"},"color_methods:set":{"summary":"\nCopies r,g,b,a from color to another.","ret":"nil","class":"function","private":false,"classlib":"Color","fname":"set","realm":"sh","param":{"1":"b","b":"The color to copy from."},"name":"color_methods:set","description":"\nCopies r,g,b,a from color to another."},"color_metatable.__index":{"private":false,"param":["t","k"],"realm":"sh","summary":"\n__index metamethod ","class":"function","name":"color_metatable.__index","description":"\n__index metamethod"},"color_methods:setB":{"summary":"\nSet's the color's blue and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setB","realm":"sh","param":{"1":"b","b":"The blue"},"name":"color_methods:setB","description":"\nSet's the color's blue and returns it."},"color_methods:setR":{"summary":"\nSet's the color's red channel and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setR","realm":"sh","param":{"1":"r","r":"The red"},"name":"color_methods:setR","description":"\nSet's the color's red channel and returns it."},"color_methods:setG":{"summary":"\nSet's the color's green and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setG","realm":"sh","param":{"1":"g","g":"The green"},"name":"color_methods:setG","description":"\nSet's the color's green and returns it."},"color_methods:setA":{"summary":"\nSet's the color's alpha and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setA","realm":"sh","param":{"1":"a","a":"The alpha"},"name":"color_methods:setA","description":"\nSet's the color's alpha and returns it."},"color_metatable.__newindex":{"private":false,"param":["t","k","v"],"realm":"sh","summary":"\n__newindex metamethod ","class":"function","name":"color_metatable.__newindex","description":"\n__newindex metamethod"},"color_metatable.__tostring":{"private":false,"param":["c"],"realm":"sh","summary":"\n__tostring metamethod ","class":"function","name":"color_metatable.__tostring","description":"\n__tostring metamethod"},"color_methods:hsvToRGB":{"server":true,"ret":"A triplet of numbers representing HSV.","class":"function","client":true,"classlib":"Color","private":false,"summary":"\nConverts the color from HSV to RGB.","fname":"hsvToRGB","realm":"sh","param":[],"name":"color_methods:hsvToRGB","description":"\nConverts the color from HSV to RGB."},"color_metatable.__div":{"summary":"\ndivision metamethod ","ret":"Scaled color.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"rhs","rhs":"Right side of equation"},"name":"color_metatable.__div","description":"\ndivision metamethod"},"color_methods:clone":{"summary":"\nCopies r,g,b,a from color and returns a new color ","ret":"The copy of the color","class":"function","private":false,"classlib":"Color","fname":"clone","realm":"sh","param":[],"name":"color_methods:clone","description":"\nCopies r,g,b,a from color and returns a new color"},"color_metatable.__sub":{"summary":"\nsubtraction metamethod ","ret":"Subtracted color.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"lhs","4":"rhs","lhs":"Left side of equation","rhs":"Right side of equation"},"name":"color_metatable.__sub","description":"\nsubtraction metamethod"}},"libraries":[],"type":"file","doc":[{"methods":{"1":"clone","2":"hsvToRGB","3":"rgbToHSV","4":"set","5":"setA","6":"setB","7":"setG","8":"setR","set":{"summary":"\nCopies r,g,b,a from color to another.","ret":"nil","class":"function","private":false,"classlib":"Color","fname":"set","realm":"sh","param":{"1":"b","b":"The color to copy from."},"name":"color_methods:set","description":"\nCopies r,g,b,a from color to another."},"setG":{"summary":"\nSet's the color's green and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setG","realm":"sh","param":{"1":"g","g":"The green"},"name":"color_methods:setG","description":"\nSet's the color's green and returns it."},"setB":{"summary":"\nSet's the color's blue and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setB","realm":"sh","param":{"1":"b","b":"The blue"},"name":"color_methods:setB","description":"\nSet's the color's blue and returns it."},"clone":{"summary":"\nCopies r,g,b,a from color and returns a new color ","ret":"The copy of the color","class":"function","private":false,"classlib":"Color","fname":"clone","realm":"sh","param":[],"name":"color_methods:clone","description":"\nCopies r,g,b,a from color and returns a new color"},"setR":{"summary":"\nSet's the color's red channel and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setR","realm":"sh","param":{"1":"r","r":"The red"},"name":"color_methods:setR","description":"\nSet's the color's red channel and returns it."},"rgbToHSV":{"server":true,"ret":"A triplet of numbers representing HSV.","class":"function","client":true,"classlib":"Color","private":false,"summary":"\nConverts the color from RGB to HSV.","fname":"rgbToHSV","realm":"sh","param":[],"name":"color_methods:rgbToHSV","description":"\nConverts the color from RGB to HSV."},"hsvToRGB":{"server":true,"ret":"A triplet of numbers representing HSV.","class":"function","client":true,"classlib":"Color","private":false,"summary":"\nConverts the color from HSV to RGB.","fname":"hsvToRGB","realm":"sh","param":[],"name":"color_methods:hsvToRGB","description":"\nConverts the color from HSV to RGB."},"setA":{"summary":"\nSet's the color's alpha and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setA","realm":"sh","param":{"1":"a","a":"The alpha"},"name":"color_methods:setA","description":"\nSet's the color's alpha and returns it."}},"class":"class","client":true,"summary":"\nColor type ","fields":[],"server":true,"typtbl":"color_methods","name":"Color","description":"\nColor type"},{"summary":"\nCreates a table struct that resembles a Color/ ","classForced":true,"ret":"New color","class":"function","private":false,"param":{"1":"r","2":"g","3":"b","4":"a","r":"- Red","b":"- Blue","a":"- Alpha","g":"- Green"},"realm":"sh","name":"SF.DefaultEnvironment.Color","description":"\nCreates a table struct that resembles a Color/"},{"private":false,"param":["t","k","v"],"realm":"sh","summary":"\n__newindex metamethod ","class":"function","name":"color_metatable.__newindex","description":"\n__newindex metamethod"},{"private":false,"param":["t","k"],"realm":"sh","summary":"\n__index metamethod ","class":"function","name":"color_metatable.__index","description":"\n__index metamethod"},{"private":false,"param":["c"],"realm":"sh","summary":"\n__tostring metamethod ","class":"function","name":"color_metatable.__tostring","description":"\n__tostring metamethod"},{"private":false,"param":["..."],"realm":"sh","summary":"\n__concat metamethod ","class":"function","name":"color_metatable.__concat","description":"\n__concat metamethod"},{"private":false,"param":["a","b"],"realm":"sh","summary":"\n__eq metamethod ","class":"function","name":"color_metatable.__eq","description":"\n__eq metamethod"},{"summary":"\naddition metamethod ","ret":"Added color.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"lhs","4":"rhs","lhs":"Left side of equation","rhs":"Right side of equation"},"name":"color_metatable.__add","description":"\naddition metamethod"},{"summary":"\nsubtraction metamethod ","ret":"Subtracted color.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"lhs","4":"rhs","lhs":"Left side of equation","rhs":"Right side of equation"},"name":"color_metatable.__sub","description":"\nsubtraction metamethod"},{"summary":"\nmultiplication metamethod ","ret":"Scaled color.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"lhs","4":"rhs","lhs":"Left side of equation","rhs":"Right side of equation"},"name":"color_metatable.__mul","description":"\nmultiplication metamethod"},{"summary":"\ndivision metamethod ","ret":"Scaled color.","class":"function","private":false,"realm":"sh","param":{"1":"a","2":"b","3":"rhs","rhs":"Right side of equation"},"name":"color_metatable.__div","description":"\ndivision metamethod"},{"server":true,"ret":"A triplet of numbers representing HSV.","class":"function","client":true,"classlib":"Color","private":false,"summary":"\nConverts the color from RGB to HSV.","fname":"rgbToHSV","realm":"sh","param":[],"name":"color_methods:rgbToHSV","description":"\nConverts the color from RGB to HSV."},{"server":true,"ret":"A triplet of numbers representing HSV.","class":"function","client":true,"classlib":"Color","private":false,"summary":"\nConverts the color from HSV to RGB.","fname":"hsvToRGB","realm":"sh","param":[],"name":"color_methods:hsvToRGB","description":"\nConverts the color from HSV to RGB."},{"summary":"\nCopies r,g,b,a from color and returns a new color ","ret":"The copy of the color","class":"function","private":false,"classlib":"Color","fname":"clone","realm":"sh","param":[],"name":"color_methods:clone","description":"\nCopies r,g,b,a from color and returns a new color"},{"summary":"\nCopies r,g,b,a from color to another.","ret":"nil","class":"function","private":false,"classlib":"Color","fname":"set","realm":"sh","param":{"1":"b","b":"The color to copy from."},"name":"color_methods:set","description":"\nCopies r,g,b,a from color to another."},{"summary":"\nSet's the color's red channel and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setR","realm":"sh","param":{"1":"r","r":"The red"},"name":"color_methods:setR","description":"\nSet's the color's red channel and returns it."},{"summary":"\nSet's the color's green and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setG","realm":"sh","param":{"1":"g","g":"The green"},"name":"color_methods:setG","description":"\nSet's the color's green and returns it."},{"summary":"\nSet's the color's blue and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setB","realm":"sh","param":{"1":"b","b":"The blue"},"name":"color_methods:setB","description":"\nSet's the color's blue and returns it."},{"summary":"\nSet's the color's alpha and returns it.","ret":"The modified color","class":"function","private":false,"classlib":"Color","fname":"setA","realm":"sh","param":{"1":"a","a":"The alpha"},"name":"color_methods:setA","description":"\nSet's the color's alpha and returns it."}],"name":"libs_sh/color.lua","description":"\nColor type"},"libs_sh/mesh.lua":{"summary":"\nMesh library.","tables":[],"functions":{"1":"mesh_library.createFromObj","2":"mesh_library.createFromTable","3":"mesh_library.getModelMeshes","4":"mesh_library.parseObj","5":"mesh_library.trianglesLeft","6":"mesh_library.trianglesLeftRender","7":"mesh_methods:destroy","8":"mesh_methods:draw","mesh_library.trianglesLeftRender":{"summary":"\nReturns how many triangles can be rendered ","ret":"Number of triangles that can be rendered","class":"function","client":true,"private":false,"library":"mesh","fname":"trianglesLeftRender","realm":"cl","param":[],"name":"mesh_library.trianglesLeftRender","description":"\nReturns how many triangles can be rendered"},"mesh_library.parseObj":{"summary":"\nParses obj data into a table of vertices, normals, texture coordinates, colors, and tangents ","ret":["The table of vertices that can be passed to mesh.buildFromTriangles","The table of obj data. table.positions can be given to prop.createCustom"],"class":"function","private":false,"library":"mesh","fname":"parseObj","realm":"sh","param":{"1":"obj","2":"threaded","3":"triangulate","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit","obj":"The obj data","triangulate":"Whether to triangulate the faces"},"name":"mesh_library.parseObj","description":"\nParses obj data into a table of vertices, normals, texture coordinates, colors, and tangents"},"mesh_methods:destroy":{"summary":"\nFrees the mesh from memory ","class":"function","client":true,"private":false,"classlib":"Mesh","fname":"destroy","realm":"cl","param":[],"name":"mesh_methods:destroy","description":"\nFrees the mesh from memory"},"mesh_library.getModelMeshes":{"summary":"\nReturns a table of visual meshes of given model or nil if the model is invalid ","ret":"A table of tables with the following format:<br><br>string material - The material of the specific mesh<br>table triangles - A table of MeshVertex structures ready to be fed into IMesh:BuildFromTriangles<br>table verticies - A table of MeshVertex structures representing all the vertexes of the mesh. This table is used internally to generate the \"triangles\" table.<br>Each MeshVertex structure returned also has an extra table of tables field called \"weights\" with the following data:<br><br>number boneID - The bone this vertex is attached to<br>number weight - How \"strong\" this vertex is attached to the bone. A vertex can be attached to multiple bones at once.","class":"function","client":true,"private":false,"library":"mesh","fname":"getModelMeshes","realm":"cl","param":{"1":"model","2":"lod","3":"bodygroupMask","model":"The full path to a model to get the visual meshes of.","lod":"The lod of the model to use.","bodygroupMask":"The bodygroupMask of the model to use."},"name":"mesh_library.getModelMeshes","description":"\nReturns a table of visual meshes of given model or nil if the model is invalid"},"mesh_methods:draw":{"summary":"\nDraws the mesh.","class":"function","client":true,"private":false,"classlib":"Mesh","fname":"draw","realm":"cl","param":[],"name":"mesh_methods:draw","description":"\nDraws the mesh. Must be in a 3D rendering context."},"mesh_library.createFromObj":{"summary":"\nCreates a mesh from an obj file.","ret":"Mesh object","class":"function","client":true,"private":false,"library":"mesh","fname":"createFromObj","realm":"cl","param":{"1":"obj","2":"threaded","3":"triangulate","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit","obj":"The obj file data","triangulate":"Whether to triangulate faces. (Consumes more CPU)"},"name":"mesh_library.createFromObj","description":"\nCreates a mesh from an obj file. Only supports triangular meshes with normals and texture coordinates."},"mesh_library.trianglesLeft":{"summary":"\nReturns how many triangles can be created ","ret":"Number of triangles that can be created","class":"function","client":true,"private":false,"library":"mesh","fname":"trianglesLeft","realm":"cl","param":[],"name":"mesh_library.trianglesLeft","description":"\nReturns how many triangles can be created"},"mesh_library.createFromTable":{"summary":"\nCreates a mesh from vertex data.","ret":"Mesh object","class":"function","client":true,"private":false,"library":"mesh","fname":"createFromTable","realm":"cl","param":{"1":"verteces","2":"threaded","verteces":"Table containing vertex data. http://wiki.garrysmod.com/page/Structures/MeshVertex","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit"},"name":"mesh_library.createFromTable","description":"\nCreates a mesh from vertex data."}},"libraries":{"1":"mesh","mesh":{"server":true,"tables":[],"client":true,"summary":"\nMesh library.","libtbl":"mesh_library","fields":[],"class":"library","functions":{"1":"createFromObj","2":"createFromTable","3":"getModelMeshes","4":"parseObj","5":"trianglesLeft","6":"trianglesLeftRender","createFromObj":{"summary":"\nCreates a mesh from an obj file.","ret":"Mesh object","class":"function","client":true,"private":false,"library":"mesh","fname":"createFromObj","realm":"cl","param":{"1":"obj","2":"threaded","3":"triangulate","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit","obj":"The obj file data","triangulate":"Whether to triangulate faces. (Consumes more CPU)"},"name":"mesh_library.createFromObj","description":"\nCreates a mesh from an obj file. Only supports triangular meshes with normals and texture coordinates."},"getModelMeshes":{"summary":"\nReturns a table of visual meshes of given model or nil if the model is invalid ","ret":"A table of tables with the following format:<br><br>string material - The material of the specific mesh<br>table triangles - A table of MeshVertex structures ready to be fed into IMesh:BuildFromTriangles<br>table verticies - A table of MeshVertex structures representing all the vertexes of the mesh. This table is used internally to generate the \"triangles\" table.<br>Each MeshVertex structure returned also has an extra table of tables field called \"weights\" with the following data:<br><br>number boneID - The bone this vertex is attached to<br>number weight - How \"strong\" this vertex is attached to the bone. A vertex can be attached to multiple bones at once.","class":"function","client":true,"private":false,"library":"mesh","fname":"getModelMeshes","realm":"cl","param":{"1":"model","2":"lod","3":"bodygroupMask","model":"The full path to a model to get the visual meshes of.","lod":"The lod of the model to use.","bodygroupMask":"The bodygroupMask of the model to use."},"name":"mesh_library.getModelMeshes","description":"\nReturns a table of visual meshes of given model or nil if the model is invalid"},"createFromTable":{"summary":"\nCreates a mesh from vertex data.","ret":"Mesh object","class":"function","client":true,"private":false,"library":"mesh","fname":"createFromTable","realm":"cl","param":{"1":"verteces","2":"threaded","verteces":"Table containing vertex data. http://wiki.garrysmod.com/page/Structures/MeshVertex","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit"},"name":"mesh_library.createFromTable","description":"\nCreates a mesh from vertex data."},"parseObj":{"summary":"\nParses obj data into a table of vertices, normals, texture coordinates, colors, and tangents ","ret":["The table of vertices that can be passed to mesh.buildFromTriangles","The table of obj data. table.positions can be given to prop.createCustom"],"class":"function","private":false,"library":"mesh","fname":"parseObj","realm":"sh","param":{"1":"obj","2":"threaded","3":"triangulate","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit","obj":"The obj data","triangulate":"Whether to triangulate the faces"},"name":"mesh_library.parseObj","description":"\nParses obj data into a table of vertices, normals, texture coordinates, colors, and tangents"},"trianglesLeftRender":{"summary":"\nReturns how many triangles can be rendered ","ret":"Number of triangles that can be rendered","class":"function","client":true,"private":false,"library":"mesh","fname":"trianglesLeftRender","realm":"cl","param":[],"name":"mesh_library.trianglesLeftRender","description":"\nReturns how many triangles can be rendered"},"trianglesLeft":{"summary":"\nReturns how many triangles can be created ","ret":"Number of triangles that can be created","class":"function","client":true,"private":false,"library":"mesh","fname":"trianglesLeft","realm":"cl","param":[],"name":"mesh_library.trianglesLeft","description":"\nReturns how many triangles can be created"}},"name":"mesh","description":"\nMesh library."}},"type":"file","doc":[{"server":true,"tables":[],"client":true,"summary":"\nMesh library.","libtbl":"mesh_library","fields":[],"class":"library","functions":{"1":"createFromObj","2":"createFromTable","3":"getModelMeshes","4":"parseObj","5":"trianglesLeft","6":"trianglesLeftRender","createFromObj":{"summary":"\nCreates a mesh from an obj file.","ret":"Mesh object","class":"function","client":true,"private":false,"library":"mesh","fname":"createFromObj","realm":"cl","param":{"1":"obj","2":"threaded","3":"triangulate","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit","obj":"The obj file data","triangulate":"Whether to triangulate faces. (Consumes more CPU)"},"name":"mesh_library.createFromObj","description":"\nCreates a mesh from an obj file. Only supports triangular meshes with normals and texture coordinates."},"getModelMeshes":{"summary":"\nReturns a table of visual meshes of given model or nil if the model is invalid ","ret":"A table of tables with the following format:<br><br>string material - The material of the specific mesh<br>table triangles - A table of MeshVertex structures ready to be fed into IMesh:BuildFromTriangles<br>table verticies - A table of MeshVertex structures representing all the vertexes of the mesh. This table is used internally to generate the \"triangles\" table.<br>Each MeshVertex structure returned also has an extra table of tables field called \"weights\" with the following data:<br><br>number boneID - The bone this vertex is attached to<br>number weight - How \"strong\" this vertex is attached to the bone. A vertex can be attached to multiple bones at once.","class":"function","client":true,"private":false,"library":"mesh","fname":"getModelMeshes","realm":"cl","param":{"1":"model","2":"lod","3":"bodygroupMask","model":"The full path to a model to get the visual meshes of.","lod":"The lod of the model to use.","bodygroupMask":"The bodygroupMask of the model to use."},"name":"mesh_library.getModelMeshes","description":"\nReturns a table of visual meshes of given model or nil if the model is invalid"},"createFromTable":{"summary":"\nCreates a mesh from vertex data.","ret":"Mesh object","class":"function","client":true,"private":false,"library":"mesh","fname":"createFromTable","realm":"cl","param":{"1":"verteces","2":"threaded","verteces":"Table containing vertex data. http://wiki.garrysmod.com/page/Structures/MeshVertex","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit"},"name":"mesh_library.createFromTable","description":"\nCreates a mesh from vertex data."},"parseObj":{"summary":"\nParses obj data into a table of vertices, normals, texture coordinates, colors, and tangents ","ret":["The table of vertices that can be passed to mesh.buildFromTriangles","The table of obj data. table.positions can be given to prop.createCustom"],"class":"function","private":false,"library":"mesh","fname":"parseObj","realm":"sh","param":{"1":"obj","2":"threaded","3":"triangulate","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit","obj":"The obj data","triangulate":"Whether to triangulate the faces"},"name":"mesh_library.parseObj","description":"\nParses obj data into a table of vertices, normals, texture coordinates, colors, and tangents"},"trianglesLeftRender":{"summary":"\nReturns how many triangles can be rendered ","ret":"Number of triangles that can be rendered","class":"function","client":true,"private":false,"library":"mesh","fname":"trianglesLeftRender","realm":"cl","param":[],"name":"mesh_library.trianglesLeftRender","description":"\nReturns how many triangles can be rendered"},"trianglesLeft":{"summary":"\nReturns how many triangles can be created ","ret":"Number of triangles that can be created","class":"function","client":true,"private":false,"library":"mesh","fname":"trianglesLeft","realm":"cl","param":[],"name":"mesh_library.trianglesLeft","description":"\nReturns how many triangles can be created"}},"name":"mesh","description":"\nMesh library."},{"summary":"\nParses obj data into a table of vertices, normals, texture coordinates, colors, and tangents ","ret":["The table of vertices that can be passed to mesh.buildFromTriangles","The table of obj data. table.positions can be given to prop.createCustom"],"class":"function","private":false,"library":"mesh","fname":"parseObj","realm":"sh","param":{"1":"obj","2":"threaded","3":"triangulate","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit","obj":"The obj data","triangulate":"Whether to triangulate the faces"},"name":"mesh_library.parseObj","description":"\nParses obj data into a table of vertices, normals, texture coordinates, colors, and tangents"},{"methods":{"1":"destroy","2":"draw","destroy":{"summary":"\nFrees the mesh from memory ","class":"function","client":true,"private":false,"classlib":"Mesh","fname":"destroy","realm":"cl","param":[],"name":"mesh_methods:destroy","description":"\nFrees the mesh from memory"},"draw":{"summary":"\nDraws the mesh.","class":"function","client":true,"private":false,"classlib":"Mesh","fname":"draw","realm":"cl","param":[],"name":"mesh_methods:draw","description":"\nDraws the mesh. Must be in a 3D rendering context."}},"class":"class","client":true,"fields":[],"summary":"\nMesh type ","typtbl":"mesh_methods","name":"Mesh","description":"\nMesh type"},{"summary":"\nCreates a mesh from vertex data.","ret":"Mesh object","class":"function","client":true,"private":false,"library":"mesh","fname":"createFromTable","realm":"cl","param":{"1":"verteces","2":"threaded","verteces":"Table containing vertex data. http://wiki.garrysmod.com/page/Structures/MeshVertex","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit"},"name":"mesh_library.createFromTable","description":"\nCreates a mesh from vertex data."},{"summary":"\nCreates a mesh from an obj file.","ret":"Mesh object","class":"function","client":true,"private":false,"library":"mesh","fname":"createFromObj","realm":"cl","param":{"1":"obj","2":"threaded","3":"triangulate","threaded":"Optional bool, use threading object that can be used to load the mesh over time to prevent hitting quota limit","obj":"The obj file data","triangulate":"Whether to triangulate faces. (Consumes more CPU)"},"name":"mesh_library.createFromObj","description":"\nCreates a mesh from an obj file. Only supports triangular meshes with normals and texture coordinates."},{"summary":"\nReturns a table of visual meshes of given model or nil if the model is invalid ","ret":"A table of tables with the following format:<br><br>string material - The material of the specific mesh<br>table triangles - A table of MeshVertex structures ready to be fed into IMesh:BuildFromTriangles<br>table verticies - A table of MeshVertex structures representing all the vertexes of the mesh. This table is used internally to generate the \"triangles\" table.<br>Each MeshVertex structure returned also has an extra table of tables field called \"weights\" with the following data:<br><br>number boneID - The bone this vertex is attached to<br>number weight - How \"strong\" this vertex is attached to the bone. A vertex can be attached to multiple bones at once.","class":"function","client":true,"private":false,"library":"mesh","fname":"getModelMeshes","realm":"cl","param":{"1":"model","2":"lod","3":"bodygroupMask","model":"The full path to a model to get the visual meshes of.","lod":"The lod of the model to use.","bodygroupMask":"The bodygroupMask of the model to use."},"name":"mesh_library.getModelMeshes","description":"\nReturns a table of visual meshes of given model or nil if the model is invalid"},{"summary":"\nReturns how many triangles can be created ","ret":"Number of triangles that can be created","class":"function","client":true,"private":false,"library":"mesh","fname":"trianglesLeft","realm":"cl","param":[],"name":"mesh_library.trianglesLeft","description":"\nReturns how many triangles can be created"},{"summary":"\nReturns how many triangles can be rendered ","ret":"Number of triangles that can be rendered","class":"function","client":true,"private":false,"library":"mesh","fname":"trianglesLeftRender","realm":"cl","param":[],"name":"mesh_library.trianglesLeftRender","description":"\nReturns how many triangles can be rendered"},{"summary":"\nDraws the mesh.","class":"function","client":true,"private":false,"classlib":"Mesh","fname":"draw","realm":"cl","param":[],"name":"mesh_methods:draw","description":"\nDraws the mesh. Must be in a 3D rendering context."},{"summary":"\nFrees the mesh from memory ","class":"function","client":true,"private":false,"classlib":"Mesh","fname":"destroy","realm":"cl","param":[],"name":"mesh_methods:destroy","description":"\nFrees the mesh from memory"}],"name":"libs_sh/mesh.lua","description":"\nMesh library."},"permissions/providers_sh/entity.lua":{"summary":"\nProvides permissions for entities based on CPPI if present ","tables":[],"functions":[],"libraries":[],"type":"file","doc":[{"summary":"\nProvides permissions for entities based on CPPI if present ","param":[],"description":"\nProvides permissions for entities based on CPPI if present"}],"name":"permissions/providers_sh/entity.lua","description":"\nProvides permissions for entities based on CPPI if present"},"editor/sfderma.lua":{"summary":"\n \n ","tables":[],"functions":[],"libraries":[],"type":"file","doc":[{"summary":"\n \n ","param":[],"description":"\n \n"},{"summary":"\n \n ","param":[],"description":"\n \n"},{"summary":"\n \n ","param":[],"description":"\n \n"},{"summary":"\n \n ","param":[],"description":"\n \n"}],"name":"editor/sfderma.lua","description":"\n \n"},"libs_sh/vehicles.lua":{"summary":"\n \nVehicle functions.","tables":[],"functions":{"1":"vehicle_metamethods:__tostring","2":"vehicle_methods:ejectDriver","3":"vehicle_methods:getDriver","4":"vehicle_methods:getPassenger","5":"vehicle_methods:killDriver","6":"vehicle_methods:lock","7":"vehicle_methods:stripDriver","8":"vehicle_methods:unlock","vehicle_methods:unlock":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nWill unlock the vehicle.","fname":"unlock","realm":"sv","param":[],"name":"vehicle_methods:unlock","description":"\nWill unlock the vehicle."},"vehicle_methods:ejectDriver":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nEjects the driver of the vehicle ","fname":"ejectDriver","realm":"sv","param":[],"name":"vehicle_methods:ejectDriver","description":"\nEjects the driver of the vehicle"},"vehicle_methods:lock":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nWill lock the vehicle preventing players from entering or exiting the vehicle.","fname":"lock","realm":"sv","param":[],"name":"vehicle_methods:lock","description":"\nWill lock the vehicle preventing players from entering or exiting the vehicle."},"vehicle_methods:killDriver":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nKills the driver of the vehicle ","fname":"killDriver","realm":"sv","param":[],"name":"vehicle_methods:killDriver","description":"\nKills the driver of the vehicle"},"vehicle_methods:getDriver":{"server":true,"ret":"Driver of vehicle","class":"function","classlib":"Vehicle","private":false,"summary":"\nReturns the driver of the vehicle ","fname":"getDriver","realm":"sv","param":[],"name":"vehicle_methods:getDriver","description":"\nReturns the driver of the vehicle"},"vehicle_metamethods:__tostring":{"server":true,"class":"function","client":true,"private":false,"summary":"\nTo string ","realm":"sh","param":[],"name":"vehicle_metamethods:__tostring","description":"\nTo string"},"vehicle_methods:stripDriver":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nStrips weapons of the driver ","fname":"stripDriver","realm":"sv","param":{"1":"class","class":"Optional weapon class to strip. Otherwise all are stripped."},"name":"vehicle_methods:stripDriver","description":"\nStrips weapons of the driver"},"vehicle_methods:getPassenger":{"server":true,"ret":"The passenger or NULL if empty","class":"function","classlib":"Vehicle","private":false,"summary":"\nReturns a passenger of a vehicle ","fname":"getPassenger","realm":"sv","param":{"1":"n","n":"The index of the passenger to get"},"name":"vehicle_methods:getPassenger","description":"\nReturns a passenger of a vehicle"}},"libraries":[],"type":"file","doc":[{"summary":"\n \nVehicle functions.","param":[],"description":"\n \nVehicle functions. \n"},{"methods":{"1":"ejectDriver","2":"getDriver","3":"getPassenger","4":"killDriver","5":"lock","6":"stripDriver","7":"unlock","getDriver":{"server":true,"ret":"Driver of vehicle","class":"function","classlib":"Vehicle","private":false,"summary":"\nReturns the driver of the vehicle ","fname":"getDriver","realm":"sv","param":[],"name":"vehicle_methods:getDriver","description":"\nReturns the driver of the vehicle"},"getPassenger":{"server":true,"ret":"The passenger or NULL if empty","class":"function","classlib":"Vehicle","private":false,"summary":"\nReturns a passenger of a vehicle ","fname":"getPassenger","realm":"sv","param":{"1":"n","n":"The index of the passenger to get"},"name":"vehicle_methods:getPassenger","description":"\nReturns a passenger of a vehicle"},"ejectDriver":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nEjects the driver of the vehicle ","fname":"ejectDriver","realm":"sv","param":[],"name":"vehicle_methods:ejectDriver","description":"\nEjects the driver of the vehicle"},"unlock":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nWill unlock the vehicle.","fname":"unlock","realm":"sv","param":[],"name":"vehicle_methods:unlock","description":"\nWill unlock the vehicle."},"lock":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nWill lock the vehicle preventing players from entering or exiting the vehicle.","fname":"lock","realm":"sv","param":[],"name":"vehicle_methods:lock","description":"\nWill lock the vehicle preventing players from entering or exiting the vehicle."},"killDriver":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nKills the driver of the vehicle ","fname":"killDriver","realm":"sv","param":[],"name":"vehicle_methods:killDriver","description":"\nKills the driver of the vehicle"},"stripDriver":{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nStrips weapons of the driver ","fname":"stripDriver","realm":"sv","param":{"1":"class","class":"Optional weapon class to strip. Otherwise all are stripped."},"name":"vehicle_methods:stripDriver","description":"\nStrips weapons of the driver"}},"class":"class","fields":[],"summary":"\nVehicle type ","typtbl":"vehicle_methods","name":"Vehicle","description":"\nVehicle type"},{"server":true,"class":"function","client":true,"private":false,"summary":"\nTo string ","realm":"sh","param":[],"name":"vehicle_metamethods:__tostring","description":"\nTo string"},{"server":true,"ret":"Driver of vehicle","class":"function","classlib":"Vehicle","private":false,"summary":"\nReturns the driver of the vehicle ","fname":"getDriver","realm":"sv","param":[],"name":"vehicle_methods:getDriver","description":"\nReturns the driver of the vehicle"},{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nEjects the driver of the vehicle ","fname":"ejectDriver","realm":"sv","param":[],"name":"vehicle_methods:ejectDriver","description":"\nEjects the driver of the vehicle"},{"server":true,"ret":"The passenger or NULL if empty","class":"function","classlib":"Vehicle","private":false,"summary":"\nReturns a passenger of a vehicle ","fname":"getPassenger","realm":"sv","param":{"1":"n","n":"The index of the passenger to get"},"name":"vehicle_methods:getPassenger","description":"\nReturns a passenger of a vehicle"},{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nKills the driver of the vehicle ","fname":"killDriver","realm":"sv","param":[],"name":"vehicle_methods:killDriver","description":"\nKills the driver of the vehicle"},{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nStrips weapons of the driver ","fname":"stripDriver","realm":"sv","param":{"1":"class","class":"Optional weapon class to strip. Otherwise all are stripped."},"name":"vehicle_methods:stripDriver","description":"\nStrips weapons of the driver"},{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nWill lock the vehicle preventing players from entering or exiting the vehicle.","fname":"lock","realm":"sv","param":[],"name":"vehicle_methods:lock","description":"\nWill lock the vehicle preventing players from entering or exiting the vehicle."},{"server":true,"class":"function","classlib":"Vehicle","private":false,"summary":"\nWill unlock the vehicle.","fname":"unlock","realm":"sv","param":[],"name":"vehicle_methods:unlock","description":"\nWill unlock the vehicle."}],"name":"libs_sh/vehicles.lua","description":"\n \nVehicle functions. \n"},"libs_sh/find.lua":{"summary":"\n \nFind functions \n ","tables":[],"functions":{"1":"find_library.all","2":"find_library.allPlayers","3":"find_library.byClass","4":"find_library.byModel","5":"find_library.byName","6":"find_library.closest","7":"find_library.inBox","8":"find_library.inCone","9":"find_library.inPVS","10":"find_library.inRay","11":"find_library.inSphere","12":"find_library.sortByClosest","find_library.inSphere":{"summary":"\nFinds entities in a sphere ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inSphere","realm":"sh","param":{"1":"center","2":"radius","3":"filter","filter":"Optional function to filter results","center":"Center of the sphere","radius":"Sphere radius"},"name":"find_library.inSphere","description":"\nFinds entities in a sphere"},"find_library.byModel":{"summary":"\nFinds entities by model ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byModel","realm":"sh","param":{"1":"model","2":"filter","filter":"Optional function to filter results","model":"The model file"},"name":"find_library.byModel","description":"\nFinds entities by model"},"find_library.closest":{"summary":"\nFinds the closest entity to a point ","ret":"The closest entity","class":"function","private":false,"library":"find","fname":"closest","realm":"sh","param":{"1":"ents","2":"pos","pos":"The position","ents":"The array of entities"},"name":"find_library.closest","description":"\nFinds the closest entity to a point"},"find_library.inBox":{"summary":"\nFinds entities in a box ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inBox","realm":"sh","param":{"1":"min","2":"max","3":"filter","max":"Top corner","min":"Bottom corner","filter":"Optional function to filter results"},"name":"find_library.inBox","description":"\nFinds entities in a box"},"find_library.inCone":{"summary":"\nFinds entities in a cone ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inCone","realm":"sh","param":{"1":"pos","2":"dir","3":"distance","4":"radius","5":"filter","filter":"Optional function to filter results","pos":"The cone vertex position","dir":"The direction to project the cone","distance":"The length to project the cone","radius":"The cosine of angle of the cone. 1 makes a 0° cone, 0.707 makes approximately 90°, 0 makes 180°, and so on."},"name":"find_library.inCone","description":"\nFinds entities in a cone"},"find_library.allPlayers":{"summary":"\nFinds all players (including bots) ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"allPlayers","realm":"sh","param":{"1":"filter","filter":"Optional function to filter results"},"name":"find_library.allPlayers","description":"\nFinds all players (including bots)"},"find_library.sortByClosest":{"summary":"\nReturns a sorted array of entities by how close they are to a point ","ret":"A table of the closest entities","class":"function","private":false,"library":"find","fname":"sortByClosest","realm":"sh","param":{"1":"ents","2":"pos","3":"furthest","pos":"The position","ents":"The array of entities","furthest":"Whether to have the further entities first"},"name":"find_library.sortByClosest","description":"\nReturns a sorted array of entities by how close they are to a point"},"find_library.all":{"summary":"\nFinds all entitites ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"all","realm":"sh","param":{"1":"filter","filter":"Optional function to filter results"},"name":"find_library.all","description":"\nFinds all entitites"},"find_library.inPVS":{"server":true,"ret":"An array of found entities","class":"function","library":"find","private":false,"summary":"\nFinds entities that are in the PVS (Potentially Visible Set).","fname":"inPVS","realm":"sv","param":{"1":"pos","2":"filter","filter":"Optional function to filter results","pos":"Vector view point"},"name":"find_library.inPVS","description":"\nFinds entities that are in the PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},"find_library.byClass":{"summary":"\nFinds entities by class name ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byClass","realm":"sh","param":{"1":"class","2":"filter","filter":"Optional function to filter results","class":"The class name"},"name":"find_library.byClass","description":"\nFinds entities by class name"},"find_library.inRay":{"summary":"\nFinds entities in a ray ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inRay","realm":"sh","param":{"1":"startpos","2":"endpos","3":"mins","4":"maxs","5":"filter","filter":"Optional function to filter results","endpos":"The ray end","mins":"If not null, will define a lower bound of the ray's hull","maxs":"If not null, will define a upper bound of the ray's hull","startpos":"The ray start"},"name":"find_library.inRay","description":"\nFinds entities in a ray"},"find_library.byName":{"summary":"\nFinds entities by their targetname ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byName","realm":"sh","param":{"1":"name","2":"filter","name":"The targetname","filter":"Optional function to filter results"},"name":"find_library.byName","description":"\nFinds entities by their targetname"}},"libraries":{"1":"find","find":{"server":true,"tables":[],"client":true,"summary":"\nFind library.","libtbl":"find_library","fields":[],"class":"library","functions":{"1":"all","2":"allPlayers","3":"byClass","4":"byModel","5":"byName","6":"closest","7":"inBox","8":"inCone","9":"inPVS","10":"inRay","11":"inSphere","12":"sortByClosest","byName":{"summary":"\nFinds entities by their targetname ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byName","realm":"sh","param":{"1":"name","2":"filter","name":"The targetname","filter":"Optional function to filter results"},"name":"find_library.byName","description":"\nFinds entities by their targetname"},"inSphere":{"summary":"\nFinds entities in a sphere ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inSphere","realm":"sh","param":{"1":"center","2":"radius","3":"filter","filter":"Optional function to filter results","center":"Center of the sphere","radius":"Sphere radius"},"name":"find_library.inSphere","description":"\nFinds entities in a sphere"},"inRay":{"summary":"\nFinds entities in a ray ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inRay","realm":"sh","param":{"1":"startpos","2":"endpos","3":"mins","4":"maxs","5":"filter","filter":"Optional function to filter results","endpos":"The ray end","mins":"If not null, will define a lower bound of the ray's hull","maxs":"If not null, will define a upper bound of the ray's hull","startpos":"The ray start"},"name":"find_library.inRay","description":"\nFinds entities in a ray"},"inCone":{"summary":"\nFinds entities in a cone ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inCone","realm":"sh","param":{"1":"pos","2":"dir","3":"distance","4":"radius","5":"filter","filter":"Optional function to filter results","pos":"The cone vertex position","dir":"The direction to project the cone","distance":"The length to project the cone","radius":"The cosine of angle of the cone. 1 makes a 0° cone, 0.707 makes approximately 90°, 0 makes 180°, and so on."},"name":"find_library.inCone","description":"\nFinds entities in a cone"},"inPVS":{"server":true,"ret":"An array of found entities","class":"function","library":"find","private":false,"summary":"\nFinds entities that are in the PVS (Potentially Visible Set).","fname":"inPVS","realm":"sv","param":{"1":"pos","2":"filter","filter":"Optional function to filter results","pos":"Vector view point"},"name":"find_library.inPVS","description":"\nFinds entities that are in the PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},"sortByClosest":{"summary":"\nReturns a sorted array of entities by how close they are to a point ","ret":"A table of the closest entities","class":"function","private":false,"library":"find","fname":"sortByClosest","realm":"sh","param":{"1":"ents","2":"pos","3":"furthest","pos":"The position","ents":"The array of entities","furthest":"Whether to have the further entities first"},"name":"find_library.sortByClosest","description":"\nReturns a sorted array of entities by how close they are to a point"},"closest":{"summary":"\nFinds the closest entity to a point ","ret":"The closest entity","class":"function","private":false,"library":"find","fname":"closest","realm":"sh","param":{"1":"ents","2":"pos","pos":"The position","ents":"The array of entities"},"name":"find_library.closest","description":"\nFinds the closest entity to a point"},"all":{"summary":"\nFinds all entitites ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"all","realm":"sh","param":{"1":"filter","filter":"Optional function to filter results"},"name":"find_library.all","description":"\nFinds all entitites"},"byClass":{"summary":"\nFinds entities by class name ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byClass","realm":"sh","param":{"1":"class","2":"filter","filter":"Optional function to filter results","class":"The class name"},"name":"find_library.byClass","description":"\nFinds entities by class name"},"byModel":{"summary":"\nFinds entities by model ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byModel","realm":"sh","param":{"1":"model","2":"filter","filter":"Optional function to filter results","model":"The model file"},"name":"find_library.byModel","description":"\nFinds entities by model"},"allPlayers":{"summary":"\nFinds all players (including bots) ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"allPlayers","realm":"sh","param":{"1":"filter","filter":"Optional function to filter results"},"name":"find_library.allPlayers","description":"\nFinds all players (including bots)"},"inBox":{"summary":"\nFinds entities in a box ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inBox","realm":"sh","param":{"1":"min","2":"max","3":"filter","max":"Top corner","min":"Bottom corner","filter":"Optional function to filter results"},"name":"find_library.inBox","description":"\nFinds entities in a box"}},"name":"find","description":"\nFind library. Finds entities in various shapes."}},"type":"file","doc":[{"summary":"\n \nFind functions \n ","description":"\n \nFind functions \n"},{"server":true,"tables":[],"client":true,"summary":"\nFind library.","libtbl":"find_library","fields":[],"class":"library","functions":{"1":"all","2":"allPlayers","3":"byClass","4":"byModel","5":"byName","6":"closest","7":"inBox","8":"inCone","9":"inPVS","10":"inRay","11":"inSphere","12":"sortByClosest","byName":{"summary":"\nFinds entities by their targetname ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byName","realm":"sh","param":{"1":"name","2":"filter","name":"The targetname","filter":"Optional function to filter results"},"name":"find_library.byName","description":"\nFinds entities by their targetname"},"inSphere":{"summary":"\nFinds entities in a sphere ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inSphere","realm":"sh","param":{"1":"center","2":"radius","3":"filter","filter":"Optional function to filter results","center":"Center of the sphere","radius":"Sphere radius"},"name":"find_library.inSphere","description":"\nFinds entities in a sphere"},"inRay":{"summary":"\nFinds entities in a ray ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inRay","realm":"sh","param":{"1":"startpos","2":"endpos","3":"mins","4":"maxs","5":"filter","filter":"Optional function to filter results","endpos":"The ray end","mins":"If not null, will define a lower bound of the ray's hull","maxs":"If not null, will define a upper bound of the ray's hull","startpos":"The ray start"},"name":"find_library.inRay","description":"\nFinds entities in a ray"},"inCone":{"summary":"\nFinds entities in a cone ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inCone","realm":"sh","param":{"1":"pos","2":"dir","3":"distance","4":"radius","5":"filter","filter":"Optional function to filter results","pos":"The cone vertex position","dir":"The direction to project the cone","distance":"The length to project the cone","radius":"The cosine of angle of the cone. 1 makes a 0° cone, 0.707 makes approximately 90°, 0 makes 180°, and so on."},"name":"find_library.inCone","description":"\nFinds entities in a cone"},"inPVS":{"server":true,"ret":"An array of found entities","class":"function","library":"find","private":false,"summary":"\nFinds entities that are in the PVS (Potentially Visible Set).","fname":"inPVS","realm":"sv","param":{"1":"pos","2":"filter","filter":"Optional function to filter results","pos":"Vector view point"},"name":"find_library.inPVS","description":"\nFinds entities that are in the PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},"sortByClosest":{"summary":"\nReturns a sorted array of entities by how close they are to a point ","ret":"A table of the closest entities","class":"function","private":false,"library":"find","fname":"sortByClosest","realm":"sh","param":{"1":"ents","2":"pos","3":"furthest","pos":"The position","ents":"The array of entities","furthest":"Whether to have the further entities first"},"name":"find_library.sortByClosest","description":"\nReturns a sorted array of entities by how close they are to a point"},"closest":{"summary":"\nFinds the closest entity to a point ","ret":"The closest entity","class":"function","private":false,"library":"find","fname":"closest","realm":"sh","param":{"1":"ents","2":"pos","pos":"The position","ents":"The array of entities"},"name":"find_library.closest","description":"\nFinds the closest entity to a point"},"all":{"summary":"\nFinds all entitites ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"all","realm":"sh","param":{"1":"filter","filter":"Optional function to filter results"},"name":"find_library.all","description":"\nFinds all entitites"},"byClass":{"summary":"\nFinds entities by class name ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byClass","realm":"sh","param":{"1":"class","2":"filter","filter":"Optional function to filter results","class":"The class name"},"name":"find_library.byClass","description":"\nFinds entities by class name"},"byModel":{"summary":"\nFinds entities by model ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byModel","realm":"sh","param":{"1":"model","2":"filter","filter":"Optional function to filter results","model":"The model file"},"name":"find_library.byModel","description":"\nFinds entities by model"},"allPlayers":{"summary":"\nFinds all players (including bots) ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"allPlayers","realm":"sh","param":{"1":"filter","filter":"Optional function to filter results"},"name":"find_library.allPlayers","description":"\nFinds all players (including bots)"},"inBox":{"summary":"\nFinds entities in a box ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inBox","realm":"sh","param":{"1":"min","2":"max","3":"filter","max":"Top corner","min":"Bottom corner","filter":"Optional function to filter results"},"name":"find_library.inBox","description":"\nFinds entities in a box"}},"name":"find","description":"\nFind library. Finds entities in various shapes."},{"summary":"\nFinds entities in a box ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inBox","realm":"sh","param":{"1":"min","2":"max","3":"filter","max":"Top corner","min":"Bottom corner","filter":"Optional function to filter results"},"name":"find_library.inBox","description":"\nFinds entities in a box"},{"summary":"\nFinds entities in a sphere ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inSphere","realm":"sh","param":{"1":"center","2":"radius","3":"filter","filter":"Optional function to filter results","center":"Center of the sphere","radius":"Sphere radius"},"name":"find_library.inSphere","description":"\nFinds entities in a sphere"},{"summary":"\nFinds entities in a cone ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inCone","realm":"sh","param":{"1":"pos","2":"dir","3":"distance","4":"radius","5":"filter","filter":"Optional function to filter results","pos":"The cone vertex position","dir":"The direction to project the cone","distance":"The length to project the cone","radius":"The cosine of angle of the cone. 1 makes a 0° cone, 0.707 makes approximately 90°, 0 makes 180°, and so on."},"name":"find_library.inCone","description":"\nFinds entities in a cone"},{"summary":"\nFinds entities in a ray ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"inRay","realm":"sh","param":{"1":"startpos","2":"endpos","3":"mins","4":"maxs","5":"filter","filter":"Optional function to filter results","endpos":"The ray end","mins":"If not null, will define a lower bound of the ray's hull","maxs":"If not null, will define a upper bound of the ray's hull","startpos":"The ray start"},"name":"find_library.inRay","description":"\nFinds entities in a ray"},{"summary":"\nFinds entities by class name ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byClass","realm":"sh","param":{"1":"class","2":"filter","filter":"Optional function to filter results","class":"The class name"},"name":"find_library.byClass","description":"\nFinds entities by class name"},{"summary":"\nFinds entities by their targetname ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byName","realm":"sh","param":{"1":"name","2":"filter","name":"The targetname","filter":"Optional function to filter results"},"name":"find_library.byName","description":"\nFinds entities by their targetname"},{"summary":"\nFinds entities by model ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"byModel","realm":"sh","param":{"1":"model","2":"filter","filter":"Optional function to filter results","model":"The model file"},"name":"find_library.byModel","description":"\nFinds entities by model"},{"server":true,"ret":"An array of found entities","class":"function","library":"find","private":false,"summary":"\nFinds entities that are in the PVS (Potentially Visible Set).","fname":"inPVS","realm":"sv","param":{"1":"pos","2":"filter","filter":"Optional function to filter results","pos":"Vector view point"},"name":"find_library.inPVS","description":"\nFinds entities that are in the PVS (Potentially Visible Set). See: https://developer.valvesoftware.com/wiki/PVS"},{"summary":"\nFinds all players (including bots) ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"allPlayers","realm":"sh","param":{"1":"filter","filter":"Optional function to filter results"},"name":"find_library.allPlayers","description":"\nFinds all players (including bots)"},{"summary":"\nFinds all entitites ","ret":"An array of found entities","class":"function","private":false,"library":"find","fname":"all","realm":"sh","param":{"1":"filter","filter":"Optional function to filter results"},"name":"find_library.all","description":"\nFinds all entitites"},{"summary":"\nFinds the closest entity to a point ","ret":"The closest entity","class":"function","private":false,"library":"find","fname":"closest","realm":"sh","param":{"1":"ents","2":"pos","pos":"The position","ents":"The array of entities"},"name":"find_library.closest","description":"\nFinds the closest entity to a point"},{"summary":"\nReturns a sorted array of entities by how close they are to a point ","ret":"A table of the closest entities","class":"function","private":false,"library":"find","fname":"sortByClosest","realm":"sh","param":{"1":"ents","2":"pos","3":"furthest","pos":"The position","ents":"The array of entities","furthest":"Whether to have the further entities first"},"name":"find_library.sortByClosest","description":"\nReturns a sorted array of entities by how close they are to a point"}],"name":"libs_sh/find.lua","description":"\n \nFind functions \n"}},"directives":{"1":"author","2":"client","3":"clientmain","4":"include","5":"includedir","6":"model","7":"name","8":"server","server":{"summary":"\nSet the current file to only run on the server.","classForced":true,"class":"directive","usage":"\n--@server \n-- CODE","description":"\nSet the current file to only run on the server. Shared is default","name":"server","param":[]},"clientmain":{"summary":"\nSet the client file to run as main.","classForced":true,"class":"directive","usage":"\n--@clientmain somefile.txt \n-- CODE","description":"\nSet the client file to run as main. Can only be used in the main file.","name":"clientmain","param":[]},"includedir":{"summary":"\nMark a directory to be included in the upload.","classForced":true,"class":"directive","usage":"\n--@includedir lib \n \nrequire( \"lib/someLibraryInLib.txt\" ) \nrequire( \"lib/someOtherLibraryInLib.txt\" ) \n-- CODE","description":"\nMark a directory to be included in the upload. \nThis is optional to include all files in the directory in require() and dofile()","name":"includedir","param":{"1":"path","path":"Path to the directory"}},"client":{"summary":"\nSet the current file to only run on the client.","classForced":true,"class":"directive","usage":"\n--@client \n-- CODE","description":"\nSet the current file to only run on the client. Shared is default","name":"client","param":[]},"include":{"summary":"\nMark a file to be included in the upload.","classForced":true,"class":"directive","usage":"\n--@include lib/someLibrary.txt \n \nrequire( \"lib/someLibrary.txt\" ) \n-- CODE","description":"\nMark a file to be included in the upload. \nThis is required to use the file in require() and dofile()","name":"include","param":{"1":"path","path":"Path to the file"}},"model":{"summary":"\nSet the model of the processor entity.","classForced":true,"class":"directive","usage":"\n--@model models/props_junk/watermelon01.mdl \n-- CODE","description":"\nSet the model of the processor entity.","name":"model","param":{"1":"model","model":"String of the model"}},"name":{"summary":"\nSet the name of the script.","classForced":true,"class":"directive","usage":"\n--@name Awesome script \n-- CODE","description":"\nSet the name of the script. \nThis will become the name of the tab and will show on the overlay of the processor","name":"name","param":{"1":"name","name":"Name of the script"}},"author":{"summary":"\nSet the author of the script.","classForced":true,"class":"directive","usage":"\n--@author TheAuthor \n-- CODE","description":"\nSet the author of the script. \nThis will set the author that will be shown on the overlay of the processor","name":"author","param":{"1":"author","author":"Author of the script"}}},"hooks":{"1":"Dupefinished","2":"EndEntityDriving","3":"EntityFireBullets","4":"EntityRemoved","5":"EntityTakeDamage","6":"FinishChat","7":"GravGunOnDropped","8":"GravGunOnPickedUp","9":"GravGunPunt","10":"KeyPress","11":"KeyRelease","12":"NetworkEntityCreated","13":"OnEntityCreated","14":"OnPhysgunFreeze","15":"OnPhysgunReload","16":"PhysgunDrop","17":"PhysgunPickup","18":"PlayerCanPickupWeapon","19":"PlayerChat","20":"PlayerDeath","21":"PlayerDisconnected","22":"PlayerEnteredVehicle","23":"PlayerHurt","24":"PlayerInitialSpawn","25":"PlayerLeaveVehicle","26":"PlayerNoClip","27":"PlayerSay","28":"PlayerSpawn","29":"PlayerSpray","30":"PlayerSwitchFlashlight","31":"PlayerSwitchWeapon","32":"PlayerUse","33":"PropBreak","34":"Removed","35":"StartChat","36":"StartEntityDriving","37":"calcview","38":"drawhud","39":"hologrammatrix","40":"hudconnected","41":"huddisconnected","42":"hudshoulddraw","43":"input","44":"inputPressed","45":"inputReleased","46":"mouseWheeled","47":"mousemoved","48":"net","49":"permissionrequest","50":"postdrawhud","51":"postdrawopaquerenderables","52":"predrawhud","53":"predrawopaquerenderables","54":"readcell","55":"remote","56":"render","57":"renderoffscreen","58":"starfallUsed","59":"think","60":"tick","61":"writecell","62":"xinputConnected","63":"xinputDisconnected","64":"xinputPressed","65":"xinputReleased","66":"xinputStick","67":"xinputTrigger","PlayerDisconnected":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player disconnects","summary":"\nCalled when a player disconnects ","realm":"sv","name":"PlayerDisconnected","param":{"1":"ply","ply":"Player that disconnected"}},"PlayerEnteredVehicle":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a players enters a vehicle","summary":"\nCalled when a players enters a vehicle ","realm":"sv","name":"PlayerEnteredVehicle","param":{"1":"ply","2":"vehicle","3":"num","vehicle":"Vehicle that was entered","ply":"Player who entered a vehicle","num":"Role"}},"postdrawhud":{"summary":"\nCalled after drawing HUD (2D Context) ","classForced":true,"class":"hook","client":true,"description":"\nCalled after drawing HUD (2D Context)","realm":"cl","name":"postdrawhud","param":[]},"writecell":{"summary":"\nCalled when a high speed device writes to a wired SF chip ","classForced":true,"realm":"sv","description":"\nCalled when a high speed device writes to a wired SF chip","class":"hook","name":"writecell","param":{"1":"address","2":"data","address":"The address written to","data":"The data being written"}},"Dupefinished":{"server":true,"classForced":true,"class":"hook","description":"\nCalled after the starfall chip is duplicated and the duplication is finished.","summary":"\nCalled after the starfall chip is duplicated and the duplication is finished.","realm":"sv","name":"Dupefinished","param":{"1":"entTbl","entTbl":"A table of entities duped with the chip mapped to their previous indices."}},"net":{"summary":"\nCalled when a net message arrives ","classForced":true,"realm":"sh","description":"\nCalled when a net message arrives","class":"hook","name":"net","param":{"1":"name","2":"len","3":"ply","ply":"On server, the player that sent the message. Nil on client.","name":"Name of the arriving net message","len":"Length of the arriving net message in bits"}},"EntityRemoved":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when an entity is removed","summary":"\nCalled when an entity is removed ","realm":"sh","name":"EntityRemoved","param":{"1":"ent","ent":"Entity being removed"}},"hudshoulddraw":{"summary":"\nCalled when a hud element is attempting to be drawn ","classForced":true,"class":"hook","client":true,"description":"\nCalled when a hud element is attempting to be drawn","realm":"cl","name":"hudshoulddraw","param":{"1":"string","string":"The name of the hud element trying to be drawn"}},"xinputTrigger":{"summary":"\nCalled when a trigger on the controller has moved.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a trigger on the controller has moved. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputTrigger","param":{"1":"id","2":"trigger","3":"value","4":"when","when":"The timer.realtime() at which this event occurred.","trigger":"The trigger that was moved. 0 is left","value":"The position of the trigger. 0-255 inclusive","id":"Controller number. Starts at 0"}},"renderoffscreen":{"summary":"\nCalled when a frame is requested to be drawn.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a frame is requested to be drawn. Doesn't require a screen or HUD but only works on rendertargets. (2D Context)","realm":"cl","name":"renderoffscreen","param":[]},"KeyRelease":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player releases a key","summary":"\nCalled when a player releases a key ","realm":"sh","name":"KeyRelease","param":{"1":"ply","2":"key","key":"The key being released","ply":"Player releasing the key"}},"PhysgunPickup":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when an entity gets picked up by a physgun","summary":"\nCalled when an entity gets picked up by a physgun ","realm":"sh","name":"PhysgunPickup","param":{"1":"ply","2":"ent","ent":"Entity being picked up","ply":"Player picking up the entity"}},"StartChat":{"summary":"\nCalled when the local player opens their chat window.","classForced":true,"class":"hook","client":true,"description":"\nCalled when the local player opens their chat window.","realm":"cl","name":"StartChat","param":[]},"FinishChat":{"summary":"\nCalled when the local player closes their chat window.","classForced":true,"class":"hook","client":true,"description":"\nCalled when the local player closes their chat window.","realm":"cl","name":"FinishChat","param":[]},"hologrammatrix":{"summary":"\nCalled before entities are drawn.","classForced":true,"class":"hook","client":true,"description":"\nCalled before entities are drawn. You can't render anything, but you can edit hologram matrices before they are drawn.","realm":"cl","name":"hologrammatrix","param":[]},"Removed":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when the starfall chip is removed","summary":"\nCalled when the starfall chip is removed ","realm":"sv","name":"Removed","param":[]},"xinputPressed":{"summary":"\nCalled when a controller button has been pressed.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a controller button has been pressed. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputPressed","param":{"1":"id","2":"button","3":"when","button":"The button that was pushed. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_","when":"The timer.realtime() at which this event occurred.","id":"Controller number. Starts at 0"}},"input":{"summary":"\nCalled when an input on a wired SF chip is written to ","classForced":true,"realm":"sv","description":"\nCalled when an input on a wired SF chip is written to","class":"hook","name":"input","param":{"1":"input","2":"value","input":"The input name","value":"The value of the input"}},"PlayerHurt":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player gets hurt","summary":"\nCalled when a player gets hurt ","realm":"sh","name":"PlayerHurt","param":{"1":"ply","2":"attacker","3":"newHealth","4":"damageTaken","newHealth":"New health of the player","ply":"Player being hurt","damageTaken":"Amount of damage the player has taken","attacker":"Entity causing damage to the player"}},"xinputDisconnected":{"summary":"\nCalled when a controller has been disconnected.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a controller has been disconnected. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputDisconnected","param":{"1":"id","2":"when","when":"The timer.realtime() at which this event occurred.","id":"Controller number. Starts at 0"}},"PlayerSwitchWeapon":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player switches their weapon","summary":"\nCalled when a player switches their weapon ","realm":"sh","name":"PlayerSwitchWeapon","param":{"1":"ply","2":"oldwep","3":"newweapon","ply":"Player droppig the entity","newweapon":"New weapon","oldwep":"Old weapon"}},"think":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nThink hook. Called each frame on the client and each game tick on the server.","summary":"\nThink hook.","realm":"sh","name":"think","param":[]},"OnPhysgunFreeze":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when an entity is being frozen","summary":"\nCalled when an entity is being frozen ","realm":"sv","name":"OnPhysgunFreeze","param":{"1":"physgun","2":"physobj","3":"ent","4":"ply","ply":"Player freezing the entity","physobj":"PhysObj of the entity","physgun":"Entity of the physgun","ent":"Entity being frozen"}},"EntityFireBullets":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled every time a bullet is fired from an entity","summary":"\nCalled every time a bullet is fired from an entity ","realm":"sh","name":"EntityFireBullets","param":{"1":"ent","2":"data","data":"The bullet data. See http://wiki.garrysmod.com/page/Structures/Bullet","ent":"The entity that fired the bullet"}},"PlayerSwitchFlashlight":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a players turns their flashlight on or off","summary":"\nCalled when a players turns their flashlight on or off ","realm":"sv","name":"PlayerSwitchFlashlight","param":{"1":"ply","2":"state","state":"New flashlight state. True if on.","ply":"Player switching flashlight"}},"OnPhysgunReload":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player reloads his physgun","summary":"\nCalled when a player reloads his physgun ","realm":"sv","name":"OnPhysgunReload","param":{"1":"physgun","2":"ply","physgun":"Entity of the physgun","ply":"Player reloading the physgun"}},"GravGunPunt":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player punts with the gravity gun","summary":"\nCalled when a player punts with the gravity gun ","realm":"sh","name":"GravGunPunt","param":{"1":"ply","2":"ent","ent":"Entity being punted","ply":"Player punting the gravgun"}},"GravGunOnPickedUp":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when an entity is being picked up by a gravity gun","summary":"\nCalled when an entity is being picked up by a gravity gun ","realm":"sv","name":"GravGunOnPickedUp","param":{"1":"ply","2":"ent","ent":"Entity being picked up","ply":"Player picking up an object"}},"hudconnected":{"summary":"\nCalled when the player connects to a HUD component linked to the Starfall Chip ","classForced":true,"class":"hook","client":true,"description":"\nCalled when the player connects to a HUD component linked to the Starfall Chip","realm":"cl","name":"hudconnected","param":[]},"PlayerNoClip":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player toggles noclip","summary":"\nCalled when a player toggles noclip ","realm":"sh","name":"PlayerNoClip","param":{"1":"ply","2":"newState","newState":"New noclip state. True if on.","ply":"Player toggling noclip"}},"StartEntityDriving":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player starts driving an entity","summary":"\nCalled when a player starts driving an entity ","realm":"sh","name":"StartEntityDriving","param":{"1":"ent","2":"ply","ply":"Player that is driving the entity","ent":"Entity being driven"}},"NetworkEntityCreated":{"summary":"\nCalled when a clientside entity gets created or re-created via lag/PVS ","classForced":true,"class":"hook","client":true,"description":"\nCalled when a clientside entity gets created or re-created via lag/PVS","realm":"cl","name":"NetworkEntityCreated","param":{"1":"ent","ent":"New entity"}},"postdrawopaquerenderables":{"summary":"\nCalled after opaque entities are drawn.","classForced":true,"class":"hook","client":true,"description":"\nCalled after opaque entities are drawn. (Only works with HUD) (3D context)","realm":"cl","name":"postdrawopaquerenderables","param":{"1":"boolean","boolean":"isDrawSkybox Whether the current draw is drawing the skybox."}},"starfallUsed":{"summary":"\nCalled when a player uses the screen ","classForced":true,"realm":"cl","description":"\nCalled when a player uses the screen","class":"hook","name":"starfallUsed","param":{"1":"activator","2":"used","used":"The screen or chip entity that was used","activator":"Player who used the screen or chip"}},"render":{"summary":"\nCalled when a frame is requested to be drawn on screen.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a frame is requested to be drawn on screen. (2D/3D Context)","realm":"cl","name":"render","param":[]},"drawhud":{"summary":"\nCalled when a frame is requested to be drawn on hud.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a frame is requested to be drawn on hud. (2D Context)","realm":"cl","name":"drawhud","param":[]},"PhysgunDrop":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when an entity being held by a physgun gets dropped","summary":"\nCalled when an entity being held by a physgun gets dropped ","realm":"sh","name":"PhysgunDrop","param":{"1":"ply","2":"ent","ent":"Entity being dropped","ply":"Player droppig the entity"}},"PlayerInitialSpawn":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player spawns for the first time","summary":"\nCalled when a player spawns for the first time ","realm":"sv","name":"PlayerInitialSpawn","param":{"1":"ply","ply":"Player who spawned"}},"predrawopaquerenderables":{"summary":"\nCalled before opaque entities are drawn.","classForced":true,"class":"hook","client":true,"description":"\nCalled before opaque entities are drawn. (Only works with HUD) (3D context)","realm":"cl","name":"predrawopaquerenderables","param":{"1":"boolean","boolean":"isDrawSkybox Whether the current draw is drawing the skybox."}},"tick":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nTick hook. Called each game tick on both the server and client.","summary":"\nTick hook.","realm":"sh","name":"tick","param":[]},"KeyPress":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player presses a key","summary":"\nCalled when a player presses a key ","realm":"sh","name":"KeyPress","param":{"1":"ply","2":"key","key":"The key being pressed","ply":"Player pressing the key"}},"PropBreak":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when an entity is broken","summary":"\nCalled when an entity is broken ","realm":"sh","name":"PropBreak","param":{"1":"ply","2":"ent","ent":"Entity broken","ply":"Player who broke it"}},"xinputReleased":{"summary":"\nCalled when a controller button has been released.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a controller button has been released. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputReleased","param":{"1":"id","2":"button","3":"when","button":"The button that was released. See https://github.com/mitterdoo/garrysmod-xinput#xinput_gamepad_","when":"The timer.realtime() at which this event occurred.","id":"Controller number. Starts at 0"}},"PlayerLeaveVehicle":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a players leaves a vehicle","summary":"\nCalled when a players leaves a vehicle ","realm":"sv","name":"PlayerLeaveVehicle","param":{"1":"ply","2":"vehicle","vehicle":"Vehicle that was left","ply":"Player who left a vehicle"}},"inputReleased":{"summary":"\nCalled when a button is released ","classForced":true,"class":"hook","client":true,"description":"\nCalled when a button is released","realm":"cl","name":"inputReleased","param":{"1":"button","button":"Number of the button"}},"PlayerSpray":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a players sprays his logo","summary":"\nCalled when a players sprays his logo ","realm":"sv","name":"PlayerSpray","param":{"1":"ply","ply":"Player that sprayed"}},"EntityTakeDamage":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when an entity is damaged","summary":"\nCalled when an entity is damaged ","realm":"sv","name":"EntityTakeDamage","param":{"1":"target","2":"attacker","3":"inflictor","4":"amount","5":"type","6":"position","7":"force","amount":"How much damage","target":"Entity that is hurt","position":"Position of the damage","force":"Force of the damage","type":"Type of the damage","inflictor":"Entity that inflicted the damage","attacker":"Entity that attacked"}},"predrawhud":{"summary":"\nCalled before drawing HUD (2D Context) ","classForced":true,"class":"hook","client":true,"description":"\nCalled before drawing HUD (2D Context)","realm":"cl","name":"predrawhud","param":[]},"PlayerSay":{"server":true,"classForced":true,"ret":"New text. \"\" to stop from displaying. Nil to keep original.","class":"hook","description":"\nCalled when a player sends a chat message","summary":"\nCalled when a player sends a chat message ","realm":"sv","name":"PlayerSay","param":{"1":"ply","2":"text","3":"teamChat","ply":"Player that sent the message","teamChat":"True if team chat","text":"Content of the message"}},"EndEntityDriving":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when a player stops driving an entity","summary":"\nCalled when a player stops driving an entity ","realm":"sh","name":"EndEntityDriving","param":{"1":"ent","2":"ply","ply":"Player that drove the entity","ent":"Entity that had been driven"}},"PlayerCanPickupWeapon":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a wants to pick up a weapon","summary":"\nCalled when a wants to pick up a weapon ","realm":"sv","name":"PlayerCanPickupWeapon","param":{"1":"ply","2":"wep","wep":"Weapon","ply":"Player"}},"readcell":{"server":true,"classForced":true,"ret":"The value read","class":"hook","description":"\nCalled when a high speed device reads from a wired SF chip","summary":"\nCalled when a high speed device reads from a wired SF chip ","realm":"sv","name":"readcell","param":{"1":"address","address":"The address requested"}},"xinputConnected":{"summary":"\nCalled when a controller has been connected.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a controller has been connected. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputConnected","param":{"1":"id","2":"when","when":"The timer.realtime() at which this event occurred.","id":"Controller number. Starts at 0"}},"GravGunOnDropped":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when an entity is being dropped by a gravity gun","summary":"\nCalled when an entity is being dropped by a gravity gun ","realm":"sv","name":"GravGunOnDropped","param":{"1":"ply","2":"ent","ent":"Entity being dropped","ply":"Player dropping the object"}},"inputPressed":{"summary":"\nCalled when a button is pressed ","classForced":true,"class":"hook","client":true,"description":"\nCalled when a button is pressed","realm":"cl","name":"inputPressed","param":{"1":"button","button":"Number of the button"}},"mousemoved":{"summary":"\nCalled when the mouse is moved ","classForced":true,"class":"hook","client":true,"description":"\nCalled when the mouse is moved","realm":"cl","name":"mousemoved","param":{"1":"x","2":"y","y":"Y coordinate moved","x":"X coordinate moved"}},"PlayerSpawn":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player spawns","summary":"\nCalled when a player spawns ","realm":"sv","name":"PlayerSpawn","param":{"1":"ply","ply":"Player who spawned"}},"PlayerDeath":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player dies","summary":"\nCalled when a player dies ","realm":"sv","name":"PlayerDeath","param":{"1":"ply","2":"inflictor","3":"attacker","ply":"Player who died","inflictor":"Entity used to kill the player","attacker":"Entity that killed the player"}},"remote":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nRemote hook. \nThis hook can be called from other instances","summary":"\nRemote hook.","realm":"sh","name":"remote","param":{"1":"sender","2":"owner","3":"...","owner":"The owner of the sender","sender":"The entity that caused the hook to run","...":"The payload that was supplied when calling the hook"}},"calcview":{"summary":"\nCalled when the engine wants to calculate the player's view ","classForced":true,"ret":"table Table containing information for the camera. {origin=camera origin, angles=camera angles, fov=camera fov, znear=znear, zfar=zfar, drawviewer=drawviewer, ortho=ortho table}","class":"hook","client":true,"description":"\nCalled when the engine wants to calculate the player's view","realm":"cl","name":"calcview","param":{"1":"pos","2":"ang","3":"fov","4":"znear","5":"zfar","zfar":"Current far plane of the camera","pos":"Current position of the camera","znear":"Current near plane of the camera","ang":"Current angles of the camera","fov":"Current fov of the camera"}},"PlayerChat":{"summary":"\nCalled when a player's chat message is printed to the chat window ","classForced":true,"class":"hook","client":true,"description":"\nCalled when a player's chat message is printed to the chat window","realm":"cl","name":"PlayerChat","param":{"1":"ply","2":"text","3":"team","4":"isdead","isdead":"Whether the message was send from a dead player","ply":"Player that said the message","team":"Whether the message was team only","text":"The message"}},"xinputStick":{"summary":"\nCalled when a stick on the controller has moved.","classForced":true,"class":"hook","client":true,"description":"\nCalled when a stick on the controller has moved. Client must have XInput Lua binary installed.","realm":"cl","name":"xinputStick","param":{"1":"id","2":"stick","3":"x","4":"y","5":"when","x":"The X coordinate of the trigger. -32768 - 32767 inclusive","id":"Controller number. Starts at 0","y":"The Y coordinate of the trigger. -32768 - 32767 inclusive","when":"The timer.realtime() at which this event occurred.","stick":"The stick that was moved. 0 is left"}},"mouseWheeled":{"summary":"\nCalled when the mouse wheel is rotated ","classForced":true,"class":"hook","client":true,"description":"\nCalled when the mouse wheel is rotated","realm":"cl","name":"mouseWheeled","param":{"1":"delta","delta":"Rotate delta"}},"permissionrequest":{"summary":"\nCalled when local client changed instance permissions ","classForced":true,"class":"hook","client":true,"description":"\nCalled when local client changed instance permissions","realm":"cl","name":"permissionrequest","param":[]},"PlayerUse":{"server":true,"classForced":true,"class":"hook","description":"\nCalled when a player holds their use key and looks at an entity. \nWill continuously run.","summary":"\nCalled when a player holds their use key and looks at an entity.","realm":"sv","name":"PlayerUse","param":{"1":"ply","2":"ent","ent":"Entity being used","ply":"Player using the entity"}},"OnEntityCreated":{"server":true,"classForced":true,"class":"hook","client":true,"description":"\nCalled when an entity gets created","summary":"\nCalled when an entity gets created ","realm":"sh","name":"OnEntityCreated","param":{"1":"ent","ent":"New entity"}},"huddisconnected":{"summary":"\nCalled when the player disconnects from a HUD component linked to the Starfall Chip ","classForced":true,"class":"hook","client":true,"description":"\nCalled when the player disconnects from a HUD component linked to the Starfall Chip","realm":"cl","name":"huddisconnected","param":[]}}}